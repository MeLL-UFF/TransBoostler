Starting experiment 8_twitter_yeast 

Loading pre-trained trees.
Starting experiments for fasttext using euclidean 

Run: 1

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

Results 

CLL : -0.339283 

AUC ROC : 0.818304 

AUC PR : 0.315243 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 1.2862052917480469 

Total Inference Time : 3.6129097938537598 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

Results 

CLL : -0.333965 

AUC ROC : 0.821956 

AUC PR : 0.301183 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 1.4096262454986572 

Total Inference Time : 3.4868998527526855 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

Results 

CLL : -0.340616 

AUC ROC : 0.80319 

AUC PR : 0.27526 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 1.200580358505249 

Total Inference Time : 3.6618781089782715 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

Results 

CLL : -0.334744 

AUC ROC : 0.833538 

AUC PR : 0.356476 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 1.2985668182373047 

Total Inference Time : 3.734254837036133 

Run: 2

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

Results 

CLL : -0.327439 

AUC ROC : 0.821072 

AUC PR : 0.273565 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 1.3934710025787354 

Total Inference Time : 3.687021017074585 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

Results 

CLL : -0.338346 

AUC ROC : 0.821763 

AUC PR : 0.320469 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 1.409374475479126 

Total Inference Time : 3.308227062225342 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

Results 

CLL : -0.3488 

AUC ROC : 0.803228 

AUC PR : 0.295727 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 1.3138625621795654 

Total Inference Time : 3.8060686588287354 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

Results 

CLL : -0.344122 

AUC ROC : 0.832095 

AUC PR : 0.356252 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 1.1850919723510742 

Total Inference Time : 3.7419192790985107 

Run: 3

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

Results 

CLL : -0.336801 

AUC ROC : 0.818217 

AUC PR : 0.273163 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 1.2688162326812744 

Total Inference Time : 3.6690759658813477 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

Results 

CLL : -0.331891 

AUC ROC : 0.821956 

AUC PR : 0.301183 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 1.4931423664093018 

Total Inference Time : 3.4500811100006104 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

Results 

CLL : -0.341733 

AUC ROC : 0.80319 

AUC PR : 0.27526 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 1.2428698539733887 

Total Inference Time : 3.657060146331787 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

Results 

CLL : -0.338787 

AUC ROC : 0.832095 

AUC PR : 0.356252 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 1.188694715499878 

Total Inference Time : 3.822866678237915 

Run: 4

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

Results 

CLL : -0.343886 

AUC ROC : 0.818304 

AUC PR : 0.315243 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 1.2769782543182373 

Total Inference Time : 3.7114856243133545 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

Results 

CLL : -0.342785 

AUC ROC : 0.821996 

AUC PR : 0.320505 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 1.3908236026763916 

Total Inference Time : 3.4733242988586426 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

Results 

CLL : -0.349523 

AUC ROC : 0.803228 

AUC PR : 0.295727 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 1.2408623695373535 

Total Inference Time : 3.7312121391296387 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

Results 

CLL : -0.332682 

AUC ROC : 0.833538 

AUC PR : 0.356476 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 1.2547340393066406 

Total Inference Time : 3.681922435760498 

Starting experiments for fasttext using softcosine 

Run: 1

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

Results 

CLL : -0.335291 

AUC ROC : 0.869367 

AUC PR : 0.026632 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 2.105837106704712 

Total Inference Time : 37.838191986083984 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

Results 

CLL : -0.34755 

AUC ROC : 0.875842 

AUC PR : 0.029853 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 2.255751132965088 

Total Inference Time : 36.32689046859741 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

Results 

CLL : -0.324709 

AUC ROC : 0.863102 

AUC PR : 0.025243 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 2.308661699295044 

Total Inference Time : 36.869812965393066 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

Results 

CLL : -0.341962 

AUC ROC : 0.865603 

AUC PR : 0.025211 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 2.069568395614624 

Total Inference Time : 42.795804262161255 

Run: 2

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

Results 

CLL : -0.322789 

AUC ROC : 0.869367 

AUC PR : 0.026632 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 2.1094067096710205 

Total Inference Time : 40.03991365432739 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

Results 

CLL : -0.338041 

AUC ROC : 0.875847 

AUC PR : 0.029853 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 2.2344961166381836 

Total Inference Time : 35.870346784591675 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

Results 

CLL : -0.342136 

AUC ROC : 0.863098 

AUC PR : 0.025242 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 2.135936975479126 

Total Inference Time : 38.41071939468384 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

Results 

CLL : -0.327569 

AUC ROC : 0.870298 

AUC PR : 0.026532 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 2.0238659381866455 

Total Inference Time : 42.60671305656433 

Run: 3

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

Results 

CLL : -0.338586 

AUC ROC : 0.863511 

AUC PR : 0.025011 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 2.140181541442871 

Total Inference Time : 38.98635697364807 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

Results 

CLL : -0.338029 

AUC ROC : 0.86812 

AUC PR : 0.02742 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 2.1847362518310547 

Total Inference Time : 34.143072843551636 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

Results 

CLL : -0.339919 

AUC ROC : 0.835664 

AUC PR : 0.01933 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 2.1865179538726807 

Total Inference Time : 37.457268476486206 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

Results 

CLL : -0.33866 

AUC ROC : 0.865603 

AUC PR : 0.025211 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 2.0699551105499268 

Total Inference Time : 41.77058172225952 

Run: 4

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

Results 

CLL : -0.334743 

AUC ROC : 0.863511 

AUC PR : 0.025011 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 2.0386385917663574 

Total Inference Time : 38.935298919677734 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

Results 

CLL : -0.330923 

AUC ROC : 0.875847 

AUC PR : 0.029853 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 2.4035558700561523 

Total Inference Time : 35.72111749649048 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

Results 

CLL : -0.348423 

AUC ROC : 0.866834 

AUC PR : 0.026275 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 2.199768304824829 

Total Inference Time : 39.50741362571716 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

Starting experiment 8_twitter_yeast 

Loading pre-trained trees.
Starting experiments for fasttext using euclidean 

Run: 1

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.2362127304077148
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21325097591583891;  // std dev = 7.490, 245.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.19990612095689056;  // std dev = 5.266, 119.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=44 */
%   | | | else return 0.12069876233776725;  // std dev = 5.523, 148.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.10246292414221617;  // std dev = 4.959, 118.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=35 */
%   | | | else return 0.15310360822443278;  // std dev = 5.832, 150.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11652775667038755;  // std dev = 3.651, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | | | else return 0.12316835746534105;  // std dev = 6.661, 198.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09711702485519706;  // std dev = 7.612, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05327212469132621;  // std dev = 7.764, 282.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7404392265463728;  // std dev = 0.041, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2597727231153369;  // std dev = 0.059, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.11025497480597969;  // std dev = 3.835, 62.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=24 */
%   | | | else return 0.0844111366414078;  // std dev = 4.280, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.029388982341878783;  // std dev = 3.888, 114.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=35 */
%   | | | else return 0.05443180606339328;  // std dev = 5.849, 152.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03338834864990518;  // std dev = 7.038, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.019989693002807948;  // std dev = 7.060, 273.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=87 */
Inference time using transfer learning 3.8020780086517334
Parameter learned model CLL:-0.3312 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.49, 158, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.266, 75, 44], 'false,false,false,false': [5.523, 105, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.959, 83, 35], 'false,false,false,false': [5.832, 98, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.651, 40, 20], 'false,false,false,false': [6.661, 131, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.612, 174, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.764, 195, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.041, 0, 35], 'true,false': [0.059, 75, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.835, 38, 24], 'false,false,false,false': [4.28, 53, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.888, 79, 35], 'false,false,false,false': [5.849, 100, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.038, 179, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.06, 186, 87]}]
{'': [nan, 0.22900458142440744], 'false': [nan, 0.2290045814244073], 'false,false': [nan, 0.22900458142440744], 'false,false,false': [nan, 0.2290045814244073]}
{'': [nan, 0.21966923368261507], 'false': [nan, 0.21966923368261465], 'false,false': [nan, 0.21966923368261507], 'false,false,false': [0.23303439022667857, 0.2061267348429509]}
{'': [nan, 0.2192962770065675], 'false': [nan, 0.2192962770065675], 'false,false': [nan, 0.21929627700656787], 'false,false,false': [0.20839527640359812, 0.22674259458905405]}
{'': [nan, 0.22368224263085215], 'false': [nan, 0.22368224263085215], 'false,false': [nan, 0.22368224263085082], 'false,false,false': [0.22222222222222232, 0.22411441780679758]}
{'': [nan, 0.22199768806798542], 'false': [nan, 0.22199768806798542], 'false,false': [nan, 0.22199768806798478], 'false,false,false': [nan, 0.22199768806798478]}
{'': [nan, 0.21377112651751048], 'false': [nan, 0.21377112651751048], 'false,false': [nan, 0.2137711265175106], 'false,false,false': [nan, 0.21377112651751048]}
{'': [0.21708118172628274, 0.23114770009674768], 'false': [nan, 0.23114770009674768], 'false,false': [nan, 0.23114770009674768], 'false,false,false': [0.237252861602497, 0.22618503276939433], 'true': [4.737936701815215e-05, 4.691329443012648e-05], 'true,true': [nan, 4.737936701815215e-05], 'true,true,false': [nan, 4.737936701815215e-05]}
{'': [nan, 0.1856018922274458], 'false': [nan, 0.1856018922274458], 'false,false': [nan, 0.185601892227445], 'false,false,false': [0.13261603078055567, 0.22507251273263476]}
{'': [nan, 0.18623846052369167], 'false': [nan, 0.18623846052369072], 'false,false': [nan, 0.18623846052369072], 'false,false,false': [nan, 0.18623846052369072]}
{'': [nan, 0.1825604475525841], 'false': [nan, 0.1825604475525841], 'false,false': [nan, 0.18256044755258363], 'false,false,false': [nan, 0.18256044755258363]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 10.558236360549927
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( complex(D, E) )
%   | | | then return 0.11740819435877163;  // std dev = 3.220, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | | else return 0.22178529873587596;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.14185106490048766;  // std dev = 5.58e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( interaction(H, A), location(H, I) )
%   | | | then return 0.22596502705353397;  // std dev = 4.498, 87.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=32 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5085942129161641;  // std dev = 0.786, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7478404773770598;  // std dev = 0.951, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.012409950454930506;  // std dev = 3.867, 131.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=20 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.0694754775245635;  // std dev = 3.263, 63.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=15 */
%   | | | else return 0.21550507799021854;  // std dev = 3.764, 64.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=25 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, C) )
%   | | then return 0.5874762590945669;  // std dev = 0.213, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else if ( complex(A, E), complex(D, E) )
%   | | | then return 0.6825409580119057;  // std dev = 0.186, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.3429437921359938;  // std dev = 0.210, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, C) )
%   | | then return -0.15528865084691074;  // std dev = 0.223, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( interaction(F, C), phenotype(F, G) )
%   | | | then return 0.14978466421678233;  // std dev = 5.467, 146.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=51 */
%   | | | else return 0.017084137407349726;  // std dev = 2.569, 42.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   else if ( interaction(A, H), interaction(H, I) )
%   | then if ( interaction(I, I) )
%   | | then return 0.08742571319407463;  // std dev = 0.733, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.15793077780854456;  // std dev = 0.691, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.36018217459862373;  // std dev = 0.987, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4372226570637134;  // std dev = 0.166, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F), interaction(F, E) )
%   | | | then return 0.2396298265937992;  // std dev = 1.210, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.6904635271126873;  // std dev = 0.398, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else return -0.1541967619857283;  // std dev = 0.237, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( interaction(G, A), location(G, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.42524417630549355;  // std dev = 0.892, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.11501488723552222;  // std dev = 4.627, 102.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=32 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.12452646496348052;  // std dev = 0.788, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.04842385083087689;  // std dev = 1.148, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.30952919719944344;  // std dev = 1.49e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.4547938928436021;  // std dev = 0.179, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(A, A) )
%   | | then return -0.10270617941231182;  // std dev = 0.030, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( complex(A, E), interaction(D, A) )
%   | | | then return 0.15796080764278717;  // std dev = 0.845, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.020420375890178262;  // std dev = 1.625, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( complex(F, H) )
%   | | | then return 0.1335717523117664;  // std dev = 1.287, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.3441379642696545;  // std dev = 0.720, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.09736758981251907;  // std dev = 5.285, 163.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=56 */
%   | | | else return -0.04692322668231545;  // std dev = 1.056, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, E), complex(E, F) )
%   | then return -0.011957221502740537;  // std dev = 0.272, 79.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=20 */
%   | else return 0.08847933933182141;  // std dev = 0.412, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   else if ( interaction(G, A), location(G, H) )
%   | then if ( interaction(I, G), location(A, J) )
%   | | then if ( location(A, H), interaction(I, I) )
%   | | | then return 0.14733701170501562;  // std dev = 2.877, 47.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=21 */
%   | | | else return 0.04628750135059867;  // std dev = 3.752, 86.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=28 */
%   | | else if ( complex(G, K) )
%   | | | then return 0.11957724547692102;  // std dev = 0.923, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.2964378483830708;  // std dev = 1.227, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( interaction(L, A), phenotype(L, M) )
%   | | then return -0.10799414478969485;  // std dev = 0.716, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, N) )
%   | | | then return -0.03742423560366285;  // std dev = 0.575, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.026181867275011667;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5094800604404295;  // std dev = 0.159, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.19886963778285024;  // std dev = 0.088, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.32461350761784574;  // std dev = 0.239, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.6757707478681747;  // std dev = 0.424, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.18233602359328802;  // std dev = 0.045, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4302009302143893;  // std dev = 1.190, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return -0.2138274976092732;  // std dev = 0.404, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return -0.08975923207832419;  // std dev = 0.823, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.11022400983307264;  // std dev = 2.804, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1562537213832045;  // std dev = 0.161, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(F, A), complex(D, G) )
%   | | then if ( enzyme(F, H) )
%   | | | then return 0.15030557925695773;  // std dev = 0.796, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.0013910513227365464;  // std dev = 0.884, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.05593163705306488;  // std dev = 0.973, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | | else return -0.16819114858630171;  // std dev = 0.740, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( complex(A, J), interaction(A, K) )
%   | | then if ( complex(K, J) )
%   | | | then return 0.22874903539500566;  // std dev = 0.652, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.03752164979935865;  // std dev = 1.072, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.036977202562301276;  // std dev = 2.722, 70.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=22 */
%   | | | else return -0.009914631764496981;  // std dev = 3.971, 118.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=34 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1833891788123073;  // std dev = 0.045, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F), interaction(G, E) )
%   | | | then return 0.1873802290342732;  // std dev = 1.903, 49.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=33 */
%   | | | else return 0.39898067326739634;  // std dev = 2.588, 51.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=40 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.13313419008826533;  // std dev = 0.359, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | | else return -0.24282176503628375;  // std dev = 0.375, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.08726741182206156;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.1815749929867125;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, A) )
%   | | | then return -0.006568106092393815;  // std dev = 0.383, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.02683193069595291;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then return 0.29013526485819097;  // std dev = 0.110, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | else if ( interaction(A, F), interaction(D, F) )
%   | | | then return 0.3212608504697111;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.4688150512252259;  // std dev = 0.165, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12905594230935835;  // std dev = 0.039, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.17335573849863536;  // std dev = 0.085, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H), complex(A, I) )
%   | | then if ( interaction(H, H) )
%   | | | then return 0.04377737990618739;  // std dev = 0.582, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.10244225793868433;  // std dev = 0.805, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.03377221810592848;  // std dev = 3.476, 97.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=34 */
%   | | | else return 0.14636462122067467;  // std dev = 1.317, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
Inference time using transfer learning 35.793288230895996
Refined model CLL: -0.210339


******************************************
Best model found
******************************************
Results 

CLL : -0.204454 

AUC ROC : 0.990459 

AUC PR : 0.493002 

Precision : 0.291781 

Recall : 0.755319 

F1 : 0.420949 

Total Learning Time : 10.558236360549927 

Total Inference Time : 7.657819747924805 

Total revision time: 21.193431615829468
Best scored revision CLL: -0.210339


Results 

CLL : -0.204454 

AUC ROC : 0.990459 

AUC PR : 0.493002 

Precision : 0.291781 

Recall : 0.755319 

F1 : 0.420949 

Total Learning Time : 21.2030348777771 

Total Inference Time : 7.657819747924805 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.242431402206421
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20950028645086424;  // std dev = 8.213, 296.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.13301197904083328;  // std dev = 6.023, 172.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=52 */
%   | | | else return 0.175057258572637;  // std dev = 5.839, 151.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1657406830214595;  // std dev = 5.137, 115.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=41 */
%   | | | else return 0.13516090244090737;  // std dev = 6.506, 192.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11777608230352174;  // std dev = 4.397, 87.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=29 */
%   | | | else return 0.17055301563231035;  // std dev = 6.782, 194.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09495090213925625;  // std dev = 8.296, 307.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07456776614379118;  // std dev = 8.307, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.726369562809098;  // std dev = 0.055, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.27313590472380267;  // std dev = 0.080, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05612688634919479;  // std dev = 3.930, 70.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=23 */
%   | | | else return 0.049720560347039824;  // std dev = 5.175, 121.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.018609315121190528;  // std dev = 4.199, 132.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=41 */
%   | | | else return 0.023365206136430453;  // std dev = 6.586, 202.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03242221681580789;  // std dev = 7.721, 315.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03370833219070394;  // std dev = 7.656, 309.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=104 */
Inference time using transfer learning 3.4032387733459473
Parameter learned model CLL:-0.334088 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.213, 192, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.023, 120, 52], 'false,false,false,false': [5.839, 99, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.137, 74, 41], 'false,false,false,false': [6.506, 129, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.397, 58, 29], 'false,false,false,false': [6.782, 119, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.296, 203, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.307, 206, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.055, 0, 41], 'true,false': [0.08, 90, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.93, 47, 23], 'false,false,false,false': [5.175, 81, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.199, 91, 41], 'false,false,false,false': [6.586, 139, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.721, 211, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.656, 205, 104]}]
{'': [nan, 0.22790357925493288], 'false': [nan, 0.22790357925493115], 'false,false': [nan, 0.22790357925493288], 'false,false,false': [nan, 0.22790357925493115]}
{'': [nan, 0.21830938665184443], 'false': [nan, 0.2183093866518404], 'false,false': [nan, 0.21830938665184443], 'false,false,false': [0.21092482422931091, 0.22577957107144192]}
{'': [nan, 0.2240346210301246], 'false': [nan, 0.2240346210301246], 'false,false': [nan, 0.22403462103012203], 'false,false,false': [0.22943667033785342, 0.22044872821294492]}
{'': [nan, 0.2330606719882029], 'false': [nan, 0.2330606719882029], 'false,false': [nan, 0.23306067198819946], 'false,false,false': [0.22222222222222213, 0.23705882881111062]}
{'': [nan, 0.22419505357604672], 'false': [nan, 0.22419505357604672], 'false,false': [nan, 0.22419505357604605], 'false,false,false': [nan, 0.22419505357604605]}
{'': [nan, 0.222583345497789], 'false': [nan, 0.222583345497789], 'false,false': [nan, 0.22258334549778888], 'false,false,false': [nan, 0.22258334549778908]}
{'': [0.21488177187944302, 0.2210551656191927], 'false': [nan, 0.2210551656191927], 'false,false': [nan, 0.2210551656191927], 'false,false,false': [0.22061224489795916, 0.22129635953828364], 'true': [7.480169088805918e-05, 7.065941589912386e-05], 'true,true': [nan, 7.480169088805918e-05], 'true,true,false': [nan, 7.480169088805918e-05]}
{'': [nan, 0.18265152318838226], 'false': [nan, 0.18265152318838226], 'false,false': [nan, 0.18265152318838268], 'false,false,false': [0.13354767635447293, 0.21473024642824123]}
{'': [nan, 0.18923997200851994], 'false': [nan, 0.18923997200851972], 'false,false': [nan, 0.18923997200851972], 'false,false,false': [nan, 0.18923997200851972]}
{'': [nan, 0.18971436725326576], 'false': [nan, 0.18971436725326576], 'false,false': [nan, 0.18971436725326507], 'false,false,false': [nan, 0.18971436725326507]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 10.173189640045166
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( complex(E, C), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.14185106490048768;  // std dev = 4.08e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( phenotype(A, G) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( complex(A, H), location(A, I) )
%   | | then if ( interaction(J, A), enzyme(J, K) )
%   | | | then return -0.021851064900487778;  // std dev = 1.625, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | | else return 0.08542166237223957;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.1232091760633673;  // std dev = 4.021, 83.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=22 */
%   | | | else return 0.18542166237223828;  // std dev = 4.921, 110.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=36 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), complex(A, E) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, A) )
%   | | then return 0.7505511758931249;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.8208480094348245;  // std dev = 0.113, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.13778165619872976;  // std dev = 0.056, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, F), complex(A, G) )
%   | | then if ( enzyme(F, H), complex(F, I) )
%   | | | then return -0.003810775986287761;  // std dev = 1.435, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return 0.13907935142829292;  // std dev = 2.834, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | else if ( interaction(J, A), enzyme(A, K) )
%   | | | then return 0.14629443196245054;  // std dev = 3.901, 76.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=24 */
%   | | | else return 0.19640472215861712;  // std dev = 5.344, 127.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=46 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( phenotype(A, F), complex(E, G) )
%   | | then if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.3658957567659044;  // std dev = 0.676, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7058192863315887;  // std dev = 0.107, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.7836440260244278;  // std dev = 0.065, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.17126929834875038;  // std dev = 0.033, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | then return 0.6117920903739493;  // std dev = 0.068, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( complex(A, K), location(A, L) )
%   | | then if ( complex(M, K), interaction(M, A) )
%   | | | then return 0.019058460776377965;  // std dev = 1.917, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | | | else return 0.17551118032789537;  // std dev = 2.305, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | else if ( interaction(A, N), phenotype(N, P) )
%   | | | then return 0.2702357008369995;  // std dev = 2.438, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.1685538811382852;  // std dev = 4.437, 86.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=31 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.5492727052108672;  // std dev = 0.260, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return -0.04882609036662742;  // std dev = 0.301, 127.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=19 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( phenotype(E, G) )
%   | | then if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5929950308537577;  // std dev = 1.524, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.19324320148428098;  // std dev = 0.158, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.0045287580948970745;  // std dev = 0.280, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( enzyme(A, I), location(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.6020584666501929;  // std dev = 0.242, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.141166247670064;  // std dev = 0.080, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.22728446430652627;  // std dev = 2.976, 37.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=17 */
%   | | | else return 0.3230178642244734;  // std dev = 1.437, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B), location(D, E) )
%   | | then return 0.28637874341039804;  // std dev = 0.036, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.3624544185478303;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5115079541480494;  // std dev = 0.143, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, C), phenotype(A, G) )
%   | | then if ( complex(C, H), complex(A, I) )
%   | | | then return 0.042971346572796706;  // std dev = 1.628, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return -0.044812795226254205;  // std dev = 1.846, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | | else if ( interaction(C, C), phenotype(A, J) )
%   | | | then return 0.227099307909199;  // std dev = 1.463, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.07080879799973928;  // std dev = 5.557, 198.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=63 */
%   else if ( phenotype(A, K) )
%   | then return 0.34697352024888345;  // std dev = 0.890, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.10083767393052168;  // std dev = 0.713, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.25129335593387375;  // std dev = 0.080, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1987305812505181;  // std dev = 0.904, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.45983590538979313;  // std dev = 0.318, 66.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=55 */
%   | else return -0.19928641691251317;  // std dev = 0.071, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.29667789048218135;  // std dev = 0.280, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.3884895457152163;  // std dev = 1.021, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.015611235668543626;  // std dev = 3.324, 75.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=20 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return -0.006440350765004814;  // std dev = 0.592, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.3338682630146623;  // std dev = 1.133, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.37798965003524543;  // std dev = 0.167, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else return -0.15889554871622336;  // std dev = 0.060, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.2863157301422726;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5385460446161792;  // std dev = 0.109, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.011609257457858877;  // std dev = 2.788, 86.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=21 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( phenotype(A, J), interaction(A, H) )
%   | | | then return 0.012777157024004962;  // std dev = 0.482, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.1382401364946734;  // std dev = 3.296, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.14107282442165772;  // std dev = 0.892, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.01025429997534693;  // std dev = 1.738, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(C, C), complex(C, E) )
%   | then return -0.03444204611749392;  // std dev = 0.187, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(C, A) )
%   | | | then return 0.37488937729553645;  // std dev = 0.477, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.062403629329292346;  // std dev = 0.657, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(C, A) )
%   | | | then return -0.1534151421356514;  // std dev = 0.270, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0.08173400345662499;  // std dev = 2.364, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.22747443663698258;  // std dev = 0.146, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, H) )
%   | | then return -0.11229973033337595;  // std dev = 0.227, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.012503530978766124;  // std dev = 3.945, 134.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=39 */
%   | | | else return -0.06360088410335356;  // std dev = 1.869, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( location(A, E), location(C, E) )
%   | then return -0.029316175416120492;  // std dev = 0.263, 122.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=37 */
%   | else if ( interaction(C, C), interaction(F, A) )
%   | | then return 0.2901013400980432;  // std dev = 0.583, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, D) )
%   | | | then return -0.07838715137560819;  // std dev = 0.792, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.058596735974275393;  // std dev = 1.009, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   else if ( phenotype(A, G), enzyme(A, H) )
%   | then return -0.003156902644065398;  // std dev = 0.230, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | else if ( location(A, I), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.3900382228616184;  // std dev = 0.334, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1586686610453933;  // std dev = 0.036, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.06399060303142465;  // std dev = 2.667, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | | | else return 0.015145495302244748;  // std dev = 3.180, 61.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=21 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.22259756915131548;  // std dev = 0.123, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( location(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.3450703378746967;  // std dev = 0.370, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.04727095299832608;  // std dev = 1.292, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.11481092490804862;  // std dev = 0.347, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return 0.015831401192723773;  // std dev = 4.342, 167.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=52 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6627639132469964;  // std dev = 0.080, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.28145570195178043;  // std dev = 0.086, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.14105494956628004;  // std dev = 0.803, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.03331303568835393;  // std dev = 1.291, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
Inference time using transfer learning 11.488876342773438
Refined model CLL: -0.220372


******************************************
Best model found
******************************************
Results 

CLL : -0.239537 

AUC ROC : 0.960391 

AUC PR : 0.464205 

Precision : 0.432749 

Recall : 0.558491 

F1 : 0.487644 

Total Learning Time : 10.173189640045166 

Total Inference Time : 7.591673374176025 

Total revision time: 21.052521228790283
Best scored revision CLL: -0.220372


Results 

CLL : -0.239537 

AUC ROC : 0.960391 

AUC PR : 0.464205 

Precision : 0.432749 

Recall : 0.558491 

F1 : 0.487644 

Total Learning Time : 21.062124490737915 

Total Inference Time : 7.591673374176025 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.2046902179718018
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17430013784865322;  // std dev = 7.932, 291.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.18489477962177425;  // std dev = 5.761, 146.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=51 */
%   | | | else return 0.1689130444619569;  // std dev = 5.228, 123.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1615244861541354;  // std dev = 5.340, 125.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=44 */
%   | | | else return 0.13185028614810987;  // std dev = 5.705, 149.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1537558645560835;  // std dev = 4.043, 70.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=26 */
%   | | | else return 0.11116816672199371;  // std dev = 6.682, 204.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10335095596765347;  // std dev = 7.798, 272.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09195382525791689;  // std dev = 7.752, 266.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6995892163732033;  // std dev = 0.994, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | else return -0.2786912255502235;  // std dev = 0.047, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.052059080249214275;  // std dev = 4.122, 78.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=25 */
%   | | | else return 0.049741709303267434;  // std dev = 3.969, 73.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.022740233116327484;  // std dev = 4.343, 139.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=44 */
%   | | | else return 0.04541372156929389;  // std dev = 5.702, 149.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04164717716061331;  // std dev = 7.076, 275.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03159400241801329;  // std dev = 7.078, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
Inference time using transfer learning 3.6266443729400635
Parameter learned model CLL:-0.325577 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.932, 199, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.761, 95, 51], 'false,false,false,false': [5.228, 82, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.34, 81, 44], 'false,false,false,false': [5.705, 101, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.043, 44, 26], 'false,false,false,false': [6.682, 138, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.798, 180, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.752, 174, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.994, 1, 44], 'true,false': [0.047, 70, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.122, 53, 25], 'false,false,false,false': [3.969, 50, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.343, 95, 44], 'false,false,false,false': [5.702, 101, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.076, 183, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.078, 184, 92]}]
{'': [nan, 0.21619961974941368], 'false': [nan, 0.21619961974941343], 'false,false': [nan, 0.21619961974941368], 'false,false,false': [nan, 0.21619961974941343]}
{'': [nan, 0.2250383493871007], 'false': [nan, 0.22503834938709982], 'false,false': [nan, 0.2250383493871007], 'false,false,false': [0.22729405141677517, 0.2222222222222213]}
{'': [nan, 0.2230656628691846], 'false': [nan, 0.2230656628691846], 'false,false': [nan, 0.22306566286918422], 'false,false,false': [0.22814091207481424, 0.21840618898582478]}
{'': [nan, 0.22293888872215376], 'false': [nan, 0.22293888872215376], 'false,false': [nan, 0.2229388887221544], 'false,false,false': [0.23346938775510243, 0.21886212510921021]}
{'': [nan, 0.22355838256293592], 'false': [nan, 0.22355838256293592], 'false,false': [nan, 0.22355838256293661], 'false,false,false': [nan, 0.22355838256293661]}
{'': [nan, 0.22591191772195354], 'false': [nan, 0.22591191772195354], 'false,false': [nan, 0.22591191772195304], 'false,false,false': [nan, 0.22591191772195354]}
{'': [0.23656721105110984, 0.2168265340913425], 'true': [0.021969923305347548, 3.158390541509856e-05], 'false': [nan, 0.2168265340913425], 'false,false': [nan, 0.2168265340913425], 'false,false,false': [0.21778435239973717, 0.2158003377744422], 'true,true': [nan, 0.021969923305347548], 'true,true,false': [nan, 0.021969923305347548]}
{'': [nan, 0.17849759120151049], 'false': [nan, 0.17849759120151049], 'false,false': [nan, 0.17849759120151132], 'false,false,false': [0.13570280779358368, 0.2181721230783923]}
{'': [nan, 0.1820573997712782], 'false': [nan, 0.18205739977127913], 'false,false': [nan, 0.18205739977127913], 'false,false,false': [nan, 0.18205739977127913]}
{'': [nan, 0.18152626129099042], 'false': [nan, 0.18152626129099042], 'false,false': [nan, 0.18152626129098964], 'false,false,false': [nan, 0.18152626129098964]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 6.2439658641815186
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(A, E), interaction(F, F) )
%   | | then return -0.08302753548872309;  // std dev = 0.235, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( interaction(E, E), location(F, G) )
%   | | | then return 0.35814893509951234;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.1367203636709396;  // std dev = 5.304, 140.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=39 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( location(A, I), location(H, I) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2265699877310913;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( enzyme(A, J), interaction(K, A) )
%   | | | then return 0.31968739663797385;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.15444523139580862;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8406777641054398;  // std dev = 4.21e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F) )
%   | | then return 0.7505511758931249;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.40685858799906804;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, G), interaction(H, A) )
%   | | then if ( enzyme(A, I), enzyme(H, I) )
%   | | | then return -0.15386609100444137;  // std dev = 0.035, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.09331221616497412;  // std dev = 3.424, 63.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=16 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.02836378253469381;  // std dev = 1.784, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.18951545720300167;  // std dev = 5.782, 146.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6947883660707359;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.6021856524513391;  // std dev = 0.094, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.4944795674492248;  // std dev = 4.686, 102.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=70 */
%   | | | else return -0.18315569463483272;  // std dev = 0.317, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | | else return 0.0011018265837515347;  // std dev = 0.382, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(E, A) )
%   | then return 0.41333273228391765;  // std dev = 0.023, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.46903456780291286;  // std dev = 0.058, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then if ( complex(F, H), complex(A, H) )
%   | | then if ( interaction(F, F) )
%   | | | then return -0.05940990449447695;  // std dev = 0.769, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.12923242967922757;  // std dev = 0.034, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( complex(F, I) )
%   | | | then return 0.18131028552765507;  // std dev = 1.864, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return -0.1943207698199557;  // std dev = 0.189, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.5319099475087022;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return 0.24117128929735568;  // std dev = 2.321, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | | else return 0.08777864412827992;  // std dev = 5.508, 172.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=52 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), enzyme(F, C) )
%   | | then return 0.4242712707562982;  // std dev = 0.142, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.6933785056499088;  // std dev = 0.029, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.20067394759527207;  // std dev = 0.064, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else if ( interaction(A, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.3321098300675802;  // std dev = 0.026, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( enzyme(G, H) )
%   | | | then return -0.07945828807362534;  // std dev = 1.653, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | | else return 0.05104136735016088;  // std dev = 3.629, 82.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=22 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.40032852493339455;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.16093052448811263;  // std dev = 1.797, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.0649920290358234;  // std dev = 3.562, 76.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=22 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.2518058626885123;  // std dev = 0.021, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.011706886862739584;  // std dev = 0.335, 80.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=17 */
%   else if ( interaction(E, A), complex(A, F) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.3073832879771459;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, E), location(E, H) )
%   | | | then return 0.042995934706218694;  // std dev = 2.507, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | | else return -0.08980368481582683;  // std dev = 1.125, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( complex(I, K) )
%   | | | then return 0.025586479437954963;  // std dev = 1.449, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return -0.0792958049195024;  // std dev = 0.441, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( phenotype(A, L), interaction(A, M) )
%   | | | then return 0.2726702820204516;  // std dev = 1.604, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.08913734863978509;  // std dev = 4.038, 91.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=32 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.48299495363283956;  // std dev = 0.186, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.19458939204979198;  // std dev = 0.055, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( interaction(E, A), enzyme(A, F) )
%   | then if ( phenotype(A, G) )
%   | | then return -0.04750908422133395;  // std dev = 0.309, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.633446191669821;  // std dev = 0.074, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.259237718632998;  // std dev = 0.252, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( phenotype(A, I), interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.4188864578500538;  // std dev = 0.470, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.24484175599380675;  // std dev = 0.246, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.028137924634912114;  // std dev = 1.767, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.10269813775705232;  // std dev = 3.626, 73.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=27 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( enzyme(C, E), interaction(C, C) )
%   | then return 0.346196838681346;  // std dev = 0.641, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( phenotype(A, F), interaction(G, C) )
%   | | then if ( enzyme(A, H) )
%   | | | then return -0.03105113306123825;  // std dev = 0.874, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.19742665174437038;  // std dev = 1.411, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else return 0.020465983352120607;  // std dev = 0.310, 71.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=23 */
%   else if ( interaction(A, I), enzyme(A, J) )
%   | then if ( location(A, K) )
%   | | then return 0.04395459203058572;  // std dev = 0.306, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | else return 0.4214487836296608;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( phenotype(A, L), complex(A, M) )
%   | | then return 0.02424636659421755;  // std dev = 0.272, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else if ( interaction(N, A), phenotype(A, P) )
%   | | | then return -0.09180902934549812;  // std dev = 1.336, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return -0.03056403215241192;  // std dev = 3.861, 115.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=30 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(E, C) )
%   | then return 0.12976245105120415;  // std dev = 0.018, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2080248920823596;  // std dev = 0.093, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then if ( enzyme(A, G) )
%   | | then return 0.09209800433480449;  // std dev = 0.663, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( complex(A, H), location(F, I) )
%   | | | then return -0.06488658120937638;  // std dev = 0.881, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return -0.10953607458190238;  // std dev = 1.379, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( complex(A, L), complex(J, L) )
%   | | | then return -0.07817637840954714;  // std dev = 0.905, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | | else return 0.13703714614731966;  // std dev = 0.880, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(M, A), location(M, N) )
%   | | | then return 0.02199438503078129;  // std dev = 4.113, 140.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=44 */
%   | | | else return 0.06050731730211621;  // std dev = 3.079, 62.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=23 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then return 0.38453112574590864;  // std dev = 0.235, 41.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=39 */
%   | else return -0.20390539991321588;  // std dev = 0.076, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( complex(F, G), phenotype(F, H) )
%   | | then if ( interaction(I, F), phenotype(I, H) )
%   | | | then return 0.1799282558644044;  // std dev = 1.274, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.04036250658861979;  // std dev = 1.582, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else if ( interaction(F, F), interaction(A, E) )
%   | | | then return -0.2504917854890109;  // std dev = 0.659, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.01795127527152034;  // std dev = 2.564, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | else if ( complex(A, J) )
%   | | then return 0.027209777891701637;  // std dev = 0.292, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.18370833801985972;  // std dev = 1.867, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.06303160678584019;  // std dev = 1.608, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
Inference time using transfer learning 20.537216186523438
Refined model CLL: -0.234988


******************************************
Best model found
******************************************
Results 

CLL : -0.24016 

AUC ROC : 0.965562 

AUC PR : 0.21412 

Precision : 0.213793 

Recall : 0.559567 

F1 : 0.309381 

Total Learning Time : 6.2439658641815186 

Total Inference Time : 3.7308781147003174 

Total revision time: 12.877254962921143
Best scored revision CLL: -0.234988


Results 

CLL : -0.24016 

AUC ROC : 0.965562 

AUC PR : 0.21412 

Precision : 0.213793 

Recall : 0.559567 

F1 : 0.309381 

Total Learning Time : 12.886858224868774 

Total Inference Time : 3.7308781147003174 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.1599442958831787
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.185145132818144;  // std dev = 7.608, 263.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.18782582688281713;  // std dev = 5.797, 147.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=52 */
%   | | | else return 0.20771070391055133;  // std dev = 4.615, 91.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14683505205203082;  // std dev = 4.294, 82.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=28 */
%   | | | else return 0.15011464330458718;  // std dev = 6.165, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.16248279570521557;  // std dev = 3.432, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
%   | | | else return 0.1545013345912185;  // std dev = 6.475, 179.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07972190636631363;  // std dev = 7.609, 263.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06464177898420735;  // std dev = 7.609, 263.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6904843684561183;  // std dev = 0.984, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.2750378878018194;  // std dev = 0.008, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.114956292813575;  // std dev = 4.493, 85.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=33 */
%   | | | else return 0.09040121580992314;  // std dev = 3.976, 68.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.026353234646191614;  // std dev = 3.486, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
%   | | | else return 0.04091201293241824;  // std dev = 6.200, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03560848391802807;  // std dev = 7.076, 253.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.022969724903060228;  // std dev = 7.094, 258.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=86 */
Inference time using transfer learning 3.817868947982788
Parameter learned model CLL:-0.352072 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.608, 177, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.797, 95, 52], 'false,false,false,false': [4.615, 57, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.294, 54, 28], 'false,false,false,false': [6.165, 110, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.432, 31, 19], 'false,false,false,false': [6.475, 112, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.609, 177, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.609, 177, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.984, 1, 28], 'true,false': [0.008, 49, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.493, 52, 33], 'false,false,false,false': [3.976, 43, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.486, 60, 28], 'false,false,false,false': [6.2, 114, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.076, 167, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.094, 172, 86]}]
{'': [nan, 0.22006968439618982], 'false': [nan, 0.22006968439618965], 'false,false': [nan, 0.22006968439618982], 'false,false,false': [nan, 0.22006968439618965]}
{'': [nan, 0.23077466280629808], 'false': [nan, 0.23077466280629888], 'false,false': [nan, 0.23077466280629808], 'false,false,false': [0.22860845018279405, 0.23402970655717908]}
{'': [nan, 0.22577953460072428], 'false': [nan, 0.22577953460072428], 'false,false': [nan, 0.22577953460072397], 'false,false,false': [0.2249110722300073, 0.22619989907257457]}
{'': [nan, 0.23455953547066447], 'false': [nan, 0.23455953547066447], 'false,false': [nan, 0.23455953547066433], 'false,false,false': [0.23559999999999984, 0.2342549938110685]}
{'': [nan, 0.2201495653675053], 'false': [nan, 0.2201495653675053], 'false,false': [nan, 0.2201495653675057], 'false,false,false': [nan, 0.2201495653675057]}
{'': [nan, 0.2201167447314966], 'false': [nan, 0.2201167447314966], 'false,false': [nan, 0.22011674473149662], 'false,false,false': [nan, 0.22011674473149742]}
{'': [0.23015521215694867, 0.23542377126073213], 'false': [nan, 0.23542377126073213], 'false,false': [nan, 0.23542377126073213], 'false,false,false': [0.23750865051903125, 0.2324826989619375], 'true': [0.033402302656985315, 1.2784190658740873e-06], 'true,true': [nan, 0.033402302656985315], 'true,true,false': [nan, 0.033402302656985315]}
{'': [nan, 0.1946407095014403], 'false': [nan, 0.1946407095014403], 'false,false': [nan, 0.19464070950144027], 'false,false,false': [0.13806395965671062, 0.2235152139687519]}
{'': [nan, 0.19792283555896675], 'false': [nan, 0.19792283555896656], 'false,false': [nan, 0.19792283555896656], 'false,false,false': [nan, 0.19792283555896656]}
{'': [nan, 0.19506542277835826], 'false': [nan, 0.19506542277835826], 'false,false': [nan, 0.19506542277835795], 'false,false,false': [nan, 0.19506542277835795]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 8.062356948852539
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return -0.1418510649004877;  // std dev = 2.58e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( interaction(A, A), phenotype(A, F) )
%   | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.13592671287729013;  // std dev = 3.801, 72.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.1005731775237548;  // std dev = 2.462, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return 0.19148226843284444;  // std dev = 4.243, 81.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=27 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then return 0.7396918494909324;  // std dev = 0.111, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.8179246583308;  // std dev = 0.156, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( complex(E, F) )
%   | | then return 0.4265769534375769;  // std dev = 0.717, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8078360636211781;  // std dev = 0.103, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.16074804641094503;  // std dev = 0.135, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.056704664792784916;  // std dev = 3.199, 71.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.08412358940707557;  // std dev = 4.754, 128.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=32 */
%   | | | else return 0.22273044542201964;  // std dev = 3.040, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), phenotype(A, E) )
%   | then return 0.5503683812018261;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), enzyme(F, G) )
%   | | then return 0.7049127748519517;  // std dev = 0.015, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.6198171710451312;  // std dev = 0.203, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.13553101352308852;  // std dev = 0.075, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( phenotype(A, J), enzyme(H, K) )
%   | | | then return 0.2919666476532993;  // std dev = 2.044, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.1544673921742126;  // std dev = 4.738, 110.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=38 */
%   | | else if ( phenotype(A, L), interaction(M, A) )
%   | | | then return 0.015529417264119359;  // std dev = 2.465, 47.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=9 */
%   | | | else return 0.13263504946245033;  // std dev = 2.855, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D) )
%   | then return 0.1787158549586272;  // std dev = 0.932, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(C, E), phenotype(E, F) )
%   | | then if ( enzyme(E, G) )
%   | | | then return 0.5048919799962639;  // std dev = 0.105, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4008044193896778;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5552833065646251;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.11493511669325304;  // std dev = 0.061, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( location(A, H), complex(A, I) )
%   | | then if ( location(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.3692049332859196;  // std dev = 2.615, 32.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=19 */
%   | | | else return -0.19194427563657904;  // std dev = 0.175, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.15894740594187498;  // std dev = 4.907, 116.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=44 */
%   | | | else return 0.058602857631777194;  // std dev = 2.137, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), phenotype(E, D) )
%   | then return 0.1106726527187182;  // std dev = 0.392, 75.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=27 */
%   | else if ( enzyme(C, F) )
%   | | then if ( interaction(A, C) )
%   | | | then return -0.0754065802905538;  // std dev = 0.755, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.018444626214522704;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( phenotype(A, D) )
%   | | | then return 0.25802414337382323;  // std dev = 1.033, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.028152381566928432;  // std dev = 3.716, 84.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=23 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.3869227498857079;  // std dev = 0.045, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then return 0.004585182233207179;  // std dev = 0.359, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.2563282900029002;  // std dev = 2.160, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.08720659328171039;  // std dev = 1.615, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.3328551834298308;  // std dev = 0.065, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5081619171686598;  // std dev = 0.190, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A), location(A, F) )
%   | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.34797048709497724;  // std dev = 0.152, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.5127835744334046;  // std dev = 0.892, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.005378851136319995;  // std dev = 5.330, 179.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=44 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( enzyme(A, K) )
%   | | | then return 0.6349738309417557;  // std dev = 0.169, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1250683417543108;  // std dev = 1.912, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.037109307383477785;  // std dev = 1.382, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.1058281372835591;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5183766001544018;  // std dev = 0.198, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.19279646484483387;  // std dev = 0.076, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( interaction(A, E), location(A, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.338882368003607;  // std dev = 0.250, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( interaction(E, H), enzyme(H, I) )
%   | | | then return -0.10019001419846466;  // std dev = 1.968, 52.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=9 */
%   | | | else return -0.003493287451243685;  // std dev = 2.892, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5947107763071153;  // std dev = 1.013, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.23660585074208307;  // std dev = 0.149, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.17148021495671734;  // std dev = 2.155, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.4115277823650015;  // std dev = 0.824, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( location(A, E), location(D, E) )
%   | | then return 0.43210721779228184;  // std dev = 0.247, 57.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=53 */
%   | | else return -0.3055931186193618;  // std dev = 0.229, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.19399986556308613;  // std dev = 0.051, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.2617724234832392;  // std dev = 0.128, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( enzyme(G, H), phenotype(G, I) )
%   | | | then return -0.09549092717909827;  // std dev = 0.913, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.05827250379914668;  // std dev = 1.807, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | else if ( interaction(A, J) )
%   | | then return 0.3423501625033237;  // std dev = 1.055, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.06454663407279775;  // std dev = 1.112, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.16188706777192832;  // std dev = 2.230, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17030625326887494;  // std dev = 0.072, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( phenotype(D, F) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.03134373238398018;  // std dev = 0.993, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.08779080687114973;  // std dev = 1.666, 56.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=10 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return -0.016407866587269976;  // std dev = 0.374, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.22852506430779998;  // std dev = 1.102, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4631079281743158;  // std dev = 0.707, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.19795612591580056;  // std dev = 0.351, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.07060615506093441;  // std dev = 2.232, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | | else return -0.006291200601660828;  // std dev = 3.226, 85.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=24 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then return 0.12352541498201378;  // std dev = 0.036, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( phenotype(C, F) )
%   | | then return 0.27859259180894147;  // std dev = 0.122, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.16822704878533118;  // std dev = 0.129, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.2953590184959344;  // std dev = 0.614, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.20134723418785702;  // std dev = 3.759, 109.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=68 */
%   | | else return -0.18110381160349606;  // std dev = 0.063, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else if ( enzyme(A, I) )
%   | | then return -0.10854393899557896;  // std dev = 0.720, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.09461098185249557;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.09120860649392681;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
Inference time using transfer learning 41.179041147232056
Refined model CLL: -0.214533


******************************************
Best model found
******************************************
Results 

CLL : -0.248308 

AUC ROC : 0.969342 

AUC PR : 0.270486 

Precision : 0.22093 

Recall : 0.671378 

F1 : 0.332458 

Total Learning Time : 8.062356948852539 

Total Inference Time : 5.672253370285034 

Total revision time: 16.661033391952515
Best scored revision CLL: -0.214533


Results 

CLL : -0.248308 

AUC ROC : 0.969342 

AUC PR : 0.270486 

Precision : 0.22093 

Recall : 0.671378 

F1 : 0.332458 

Total Learning Time : 16.670636653900146 

Total Inference Time : 5.672253370285034 

Run: 2

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.199225664138794
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18894741418696473;  // std dev = 7.630, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15010423542871912;  // std dev = 5.484, 139.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=44 */
%   | | | else return 0.1831509687737504;  // std dev = 5.288, 123.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1249699753251375;  // std dev = 4.894, 111.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=35 */
%   | | | else return 0.1805909414310062;  // std dev = 5.715, 140.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.162198179096242;  // std dev = 3.549, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | | | else return 0.10469044157967722;  // std dev = 6.732, 207.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08584905567034651;  // std dev = 7.677, 269.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06920165466849872;  // std dev = 7.679, 270.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7367565158652175;  // std dev = 0.014, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2629402794977659;  // std dev = 0.019, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.07312079049699546;  // std dev = 3.986, 71.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=24 */
%   | | | else return 0.054188985910222164;  // std dev = 4.346, 86.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.016469214758462653;  // std dev = 3.916, 119.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=35 */
%   | | | else return 0.02496766213336528;  // std dev = 6.008, 170.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07471808849589533;  // std dev = 6.830, 240.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.057156211023299104;  // std dev = 6.842, 240.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=87 */
Inference time using transfer learning 3.6494016647338867
Parameter learned model CLL:-0.341355 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.63, 176, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.484, 95, 44], 'false,false,false,false': [5.288, 80, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.894, 76, 35], 'false,false,false,false': [5.715, 88, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.549, 34, 20], 'false,false,false,false': [6.732, 140, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.677, 182, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.679, 183, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.014, 0, 35], 'true,false': [0.019, 67, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.986, 47, 24], 'false,false,false,false': [4.346, 58, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.916, 84, 35], 'false,false,false,false': [6.008, 118, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.83, 153, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.842, 153, 87]}]
{'': [nan, 0.2213708453208816], 'false': [nan, 0.2213708453208816], 'false,false': [nan, 0.2213708453208816], 'false,false,false': [nan, 0.2213708453208816]}
{'': [nan, 0.22179651535458333], 'false': [nan, 0.22179651535458317], 'false,false': [nan, 0.22179651535458333], 'false,false,false': [0.2163449096837639, 0.22737788353493302]}
{'': [nan, 0.22632318495722903], 'false': [nan, 0.22632318495722903], 'false,false': [nan, 0.2263231849572286], 'false,false,false': [0.2157942457479121, 0.23330300293225464]}
{'': [nan, 0.22240516103128888], 'false': [nan, 0.22240516103128888], 'false,false': [nan, 0.22240516103128916], 'false,false,false': [0.23319615912208513, 0.21890588221502347]}
{'': [nan, 0.21910699435140454], 'false': [nan, 0.21910699435140454], 'false,false': [nan, 0.21910699435140343], 'false,false,false': [nan, 0.21910699435140343]}
{'': [nan, 0.2184058111117318], 'false': [nan, 0.2184058111117318], 'false,false': [nan, 0.21840581111173143], 'false,false,false': [nan, 0.21840581111173224]}
{'': [0.22526299583892304, 0.22156040879357208], 'true': [5.502499600140709e-06, 5.615883697602929e-06], 'false': [nan, 0.22156040879357208], 'false,false': [nan, 0.22156040879357208], 'false,false,false': [0.2237651259670695, 0.21957815035154102], 'true,true': [nan, 5.502499600140709e-06], 'true,true,false': [nan, 5.502499600140709e-06]}
{'': [nan, 0.1779728670057989], 'false': [nan, 0.1779728670057989], 'false,false': [nan, 0.17797286700580028], 'false,false,false': [0.128870425673947, 0.21231483680548066]}
{'': [nan, 0.19436028839206818], 'false': [nan, 0.1943602883920681], 'false,false': [nan, 0.1943602883920681], 'false,false,false': [nan, 0.1943602883920681]}
{'': [nan, 0.1950718727978985], 'false': [nan, 0.1950718727978985], 'false,false': [nan, 0.19507187279789834], 'false,false,false': [nan, 0.19507187279789834]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 10.634551763534546
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( enzyme(A, D), interaction(C, F) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.3581489350995123;  // std dev = 2.121, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   else if ( interaction(A, H) )
%   | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.1157246926752699;  // std dev = 0.437, 66.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | else if ( complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.1418510649004877;  // std dev = 2.58e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0.12229987849573772;  // std dev = 0.441, 106.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=28 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then if ( interaction(C, E) )
%   | | then return 0.7451949343206835;  // std dev = 0.115, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.8318935937160176;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.4694734122109544;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.1401228079088929;  // std dev = 0.059, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(F, A), interaction(F, F) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.1601519417094185;  // std dev = 2.075, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return 0.2531816045481942;  // std dev = 2.345, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | else if ( phenotype(A, I), complex(A, J) )
%   | | | then return 0.09868477333665812;  // std dev = 2.956, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return 0.15422240011574612;  // std dev = 5.328, 137.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=44 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( enzyme(C, E), phenotype(C, F) )
%   | then if ( phenotype(A, G) )
%   | | then return 0.07872444043543471;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return -0.05375678208754188;  // std dev = 0.368, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.6148175001325181;  // std dev = 0.181, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(H, A), complex(H, D) )
%   | | | then return -0.00449752471954429;  // std dev = 2.190, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | | | else return 0.14925723377693936;  // std dev = 2.712, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.666702041352114;  // std dev = 0.212, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( phenotype(A, L), complex(J, M) )
%   | | | then return 0.05648023145788134;  // std dev = 2.333, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | | else return 0.14748158646716747;  // std dev = 4.939, 119.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=40 */
%   | | else return 0.5732862208343898;  // std dev = 0.869, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5050868123505892;  // std dev = 0.108, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( phenotype(D, F), interaction(A, G) )
%   | | then if ( interaction(G, D) )
%   | | | then return -0.14834414432868478;  // std dev = 0.059, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.023940217616336874;  // std dev = 1.734, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | else if ( enzyme(A, E), interaction(H, D) )
%   | | | then return -0.12628218642331304;  // std dev = 0.000181, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.10956138229105065;  // std dev = 2.789, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | else if ( interaction(I, A), location(A, J) )
%   | | then if ( complex(I, K), complex(A, K) )
%   | | | then return -0.04858123414694345;  // std dev = 0.994, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.13253860789378122;  // std dev = 5.484, 146.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=50 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.5105668490785709;  // std dev = 0.899, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1630368175746781;  // std dev = 1.364, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), location(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return 0.33714742177391954;  // std dev = 0.151, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.043206265784176336;  // std dev = 0.591, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.49997959649742324;  // std dev = 0.115, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(H, G) )
%   | | | then return 0.5576660986108796;  // std dev = 3.321, 84.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=69 */
%   | | | else return -0.0793815240544041;  // std dev = 1.693, 29.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | | else return -0.20207836015957137;  // std dev = 0.041, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(A, I) )
%   | | | then return -0.09969094555349586;  // std dev = 0.826, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.0734655472439218;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.10531495358968553;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3277793462872753;  // std dev = 0.093, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.5795537195847488;  // std dev = 0.267, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.12620375631932937;  // std dev = 0.771, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.1869296694481288;  // std dev = 0.442, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0.06364548761037708;  // std dev = 5.025, 178.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=55 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( enzyme(A, H) )
%   | | | then return -0.10160759165138934;  // std dev = 0.567, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.12917774119838465;  // std dev = 0.973, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.026854162539833713;  // std dev = 1.416, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.057651553027643826;  // std dev = 1.016, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.48734097875581345;  // std dev = 0.134, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.17335565908844613;  // std dev = 0.050, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( complex(E, G), interaction(E, H) )
%   | | then return -0.09998522151190692;  // std dev = 0.219, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.27273916984273044;  // std dev = 0.223, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.10297138219759014;  // std dev = 1.209, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | else if ( enzyme(A, J), phenotype(A, K) )
%   | | then if ( enzyme(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.6091038997660452;  // std dev = 0.278, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.20897821184912146;  // std dev = 0.029, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( location(A, M), interaction(A, N) )
%   | | | then return 0.016170861978635306;  // std dev = 2.146, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return 0.05383120059760346;  // std dev = 3.608, 82.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=26 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.17868466910720135;  // std dev = 0.218, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.06465085875389226;  // std dev = 0.229, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | else return 0.02084204316158555;  // std dev = 0.327, 107.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=33 */
%   else if ( location(A, G), interaction(H, A) )
%   | then if ( complex(A, I), interaction(A, J) )
%   | | then return -0.0904797093488859;  // std dev = 0.634, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(K, H), enzyme(K, L) )
%   | | | then return 0.13242869078272396;  // std dev = 2.073, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
%   | | | else return 0.04411526384224126;  // std dev = 2.376, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | else if ( interaction(A, M), phenotype(M, N) )
%   | | then if ( complex(A, P), complex(M, P) )
%   | | | then return 0.1418173908584906;  // std dev = 0.696, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3345998535140903;  // std dev = 1.034, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.07576550721851888;  // std dev = 1.012, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then return -0.014564039849202019;  // std dev = 0.262, 82.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=24 */
%   else if ( interaction(A, E), complex(E, F) )
%   | then if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(E, I), interaction(A, I) )
%   | | | then return -0.027342552700714652;  // std dev = 0.808, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.07074956555494968;  // std dev = 0.887, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(J, E), recursion_proteinclass(J, B) )
%   | | | then return 0.5100141449740632;  // std dev = 0.446, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.20371613495610705;  // std dev = 0.074, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(K, A), interaction(K, K) )
%   | | then if ( interaction(A, K) )
%   | | | then return -0.00936554592586786;  // std dev = 0.649, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.14223879883858745;  // std dev = 1.560, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( location(A, L), interaction(A, M) )
%   | | | then return 0.05604738186841524;  // std dev = 1.574, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.0018743417782238036;  // std dev = 3.642, 106.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=30 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, C) )
%   | | then return 0.26720411356316986;  // std dev = 0.114, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return -0.09374602388686015;  // std dev = 0.309, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( interaction(A, E), interaction(C, E) )
%   | | then return -0.08093672769506711;  // std dev = 0.164, 58.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=5 */
%   | | else if ( interaction(F, C) )
%   | | | then return 0.024545159778045136;  // std dev = 4.345, 161.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=51 */
%   | | | else return 0.2046831915782971;  // std dev = 1.122, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( interaction(A, G), complex(G, H) )
%   | then if ( complex(A, H) )
%   | | then return -0.02063884100553059;  // std dev = 0.775, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(G, I) )
%   | | | then return -0.16391592394081098;  // std dev = 0.751, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.10878181560815674;  // std dev = 0.767, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else return -0.18570722230923262;  // std dev = 0.753, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
Inference time using transfer learning 33.730144023895264
Refined model CLL: -0.22137


******************************************
Best model found
******************************************
Results 

CLL : -0.221965 

AUC ROC : 0.985742 

AUC PR : 0.397971 

Precision : 0.397183 

Recall : 0.5 

F1 : 0.4427 

Total Learning Time : 10.634551763534546 

Total Inference Time : 7.178912878036499 

Total revision time: 20.799851894378662
Best scored revision CLL: -0.22137


Results 

CLL : -0.221965 

AUC ROC : 0.985742 

AUC PR : 0.397971 

Precision : 0.397183 

Recall : 0.5 

F1 : 0.4427 

Total Learning Time : 20.809234857559204 

Total Inference Time : 7.178912878036499 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.452897310256958
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18726285915014573;  // std dev = 8.353, 316.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.17366033675585993;  // std dev = 5.859, 153.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=52 */
%   | | | else return 0.1508642264418156;  // std dev = 5.959, 164.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.10431020952926486;  // std dev = 5.376, 139.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=41 */
%   | | | else return 0.16652261688840583;  // std dev = 6.369, 177.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.0875463597440712;  // std dev = 4.519, 98.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=29 */
%   | | | else return 0.10756912583631356;  // std dev = 7.130, 233.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09838601274629707;  // std dev = 8.358, 316.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10176525374698327;  // std dev = 8.223, 297.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7403676501469021;  // std dev = 0.002, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.2596270476777021;  // std dev = 0.002, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.004576371708894669;  // std dev = 4.068, 82.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=23 */
%   | | | else return 0.07644561710458493;  // std dev = 5.108, 115.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.07339892462359311;  // std dev = 4.034, 113.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=41 */
%   | | | else return 0.024677206576654304;  // std dev = 6.602, 205.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03937901661369354;  // std dev = 7.676, 315.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.011897494368743492;  // std dev = 7.798, 335.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=104 */
Inference time using transfer learning 3.4992573261260986
Parameter learned model CLL:-0.325389 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.353, 212, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.859, 101, 52], 'false,false,false,false': [5.959, 112, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.376, 98, 41], 'false,false,false,false': [6.369, 114, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.519, 69, 29], 'false,false,false,false': [7.13, 158, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.358, 212, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.223, 193, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.002, 0, 41], 'true,false': [0.002, 76, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.068, 59, 23], 'false,false,false,false': [5.108, 75, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.034, 72, 41], 'false,false,false,false': [6.602, 142, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.676, 211, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.798, 231, 104]}]
{'': [nan, 0.22079794904662914], 'false': [nan, 0.22079794904662772], 'false,false': [nan, 0.22079794904662914], 'false,false,false': [nan, 0.22079794904662772]}
{'': [nan, 0.22044203843206508], 'false': [nan, 0.2204420384320688], 'false,false': [nan, 0.22044203843206508], 'false,false,false': [0.22435815284719787, 0.21653777513385133]}
{'': [nan, 0.22081563534818602], 'false': [nan, 0.22081563534818602], 'false,false': [nan, 0.22081563534818674], 'false,false,false': [0.20795808893276477, 0.22921032569211114]}
{'': [nan, 0.21536080508082603], 'false': [nan, 0.21536080508082603], 'false,false': [nan, 0.21536080508082578], 'false,false,false': [0.2083506872136606, 0.21819056789998906]}
{'': [nan, 0.2210642389075398], 'false': [nan, 0.2210642389075398], 'false,false': [nan, 0.22106423890754015], 'false,false,false': [nan, 0.22106423890754015]}
{'': [nan, 0.2276782009168382], 'false': [nan, 0.2276782009168382], 'false,false': [nan, 0.22767820091683905], 'false,false,false': [nan, 0.22767820091683827]}
{'': [0.22762566820352645, 0.2176801236262319], 'true': [5.8801880524653115e-08, 5.994544835957446e-08], 'false': [nan, 0.2176801236262319], 'false,false': [nan, 0.2176801236262319], 'false,false,false': [0.20181439619274236, 0.2268431001890369], 'true,true': [nan, 5.8801880524653115e-08], 'true,true,false': [nan, 5.8801880524653115e-08]}
{'': [nan, 0.18876558567974686], 'false': [nan, 0.18876558567974686], 'false,false': [nan, 0.1887655856797461], 'false,false,false': [0.14400540077833954, 0.21259475077671403]}
{'': [nan, 0.18706526729183257], 'false': [nan, 0.18706526729183315], 'false,false': [nan, 0.18706526729183315], 'false,false,false': [nan, 0.18706526729183315]}
{'': [nan, 0.1815102885469846], 'false': [nan, 0.1815102885469846], 'false,false': [nan, 0.1815102885469845], 'false,false,false': [nan, 0.1815102885469845]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 18.506876707077026
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6081489350995123;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( complex(A, E), interaction(A, F) )
%   | then if ( complex(F, G), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.14386322081379807;  // std dev = 2.390, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return -0.0015001877075052647;  // std dev = 2.622, 57.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=8 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.08433941128998856;  // std dev = 3.834, 84.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=19 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.18781926476984065;  // std dev = 4.484, 91.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=30 */
%   | | | else return 0.2643989350995123;  // std dev = 2.778, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( phenotype(C, E), location(A, F) )
%   | then if ( complex(C, G) )
%   | | then if ( phenotype(A, E), enzyme(A, H) )
%   | | | then return 0.3511831531296564;  // std dev = 2.126, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.18547880371859757;  // std dev = 4.864, 111.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=39 */
%   | | else return 0.02282433933868;  // std dev = 0.400, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | else if ( interaction(C, I), recursion_proteinclass(I, B) )
%   | | then return 0.812726889775165;  // std dev = 0.102, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.16581301154397912;  // std dev = 0.029, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.6366650692555097;  // std dev = 0.306, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.7353395955528769;  // std dev = 0.055, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 5.093958869707202E-4;  // std dev = 2.599, 52.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=8 */
%   | | | else return 0.12253872070760317;  // std dev = 4.041, 81.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=23 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, F) )
%   | | | then return 0.6692178036384273;  // std dev = 1.725, 52.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=49 */
%   | | | else return 0.7792021103568012;  // std dev = 1.011, 44.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=43 */
%   | | else if ( interaction(G, D) )
%   | | | then return -0.13939807048997674;  // std dev = 1.242, 41.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=2 */
%   | | | else return 0.8299274776431874;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.17604997522130722;  // std dev = 0.244, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   else if ( enzyme(A, H) )
%   | then if ( phenotype(A, I) )
%   | | then return 0.13358518538814876;  // std dev = 0.681, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.06602453484015791;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then return 0.2962120824785836;  // std dev = 1.143, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.5141698912206297;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then return 0.527769977438112;  // std dev = 0.025, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.4253583802675487;  // std dev = 0.052, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( location(A, E), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.14206629112738245;  // std dev = 0.012, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( location(F, E), phenotype(F, G) )
%   | | | then return 0.05369998749110395;  // std dev = 5.415, 215.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=58 */
%   | | | else return 0.10856029894084215;  // std dev = 2.716, 52.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=18 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7583171268815879;  // std dev = 0.117, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.19725606883062557;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.22118075301513;  // std dev = 1.157, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.11470196104210739;  // std dev = 1.474, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then return 0.39738185577574053;  // std dev = 0.024, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then return -0.005391702588495384;  // std dev = 0.824, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.3415702347453568;  // std dev = 0.050, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, G), complex(G, H) )
%   | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | then return 0.5949458261758037;  // std dev = 0.225, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return -0.07552717453881462;  // std dev = 0.250, 109.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=13 */
%   | else if ( enzyme(A, J), interaction(K, A) )
%   | | then if ( complex(A, L), complex(K, M) )
%   | | | then return 0.23884414098678608;  // std dev = 1.125, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.05692876366028808;  // std dev = 2.681, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | else if ( location(A, N) )
%   | | | then return 0.1669441980136327;  // std dev = 3.593, 78.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=33 */
%   | | | else return 0.07050442703839312;  // std dev = 1.137, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), enzyme(C, E) )
%   | then return 0.017459962151019345;  // std dev = 0.639, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return 0.3024615477405135;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(C, F) )
%   | | | then return 0.4805494501838024;  // std dev = 0.270, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.3555391543170809;  // std dev = 0.173, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.13615909211852298;  // std dev = 0.041, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( complex(A, I), interaction(G, A) )
%   | | | then return 0.12012294111262023;  // std dev = 1.680, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return -0.010474855059901369;  // std dev = 2.932, 90.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=21 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.26090573934678124;  // std dev = 0.110, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.0773996769115894;  // std dev = 4.797, 159.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=53 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then return 0.3920245687240844;  // std dev = 0.222, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | else return 0.5862162308556124;  // std dev = 0.092, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.1870602693046288;  // std dev = 0.063, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( location(A, G), enzyme(A, H) )
%   | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.5138769162248165;  // std dev = 0.204, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else return -0.2185977645885517;  // std dev = 0.096, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.5182584763692321;  // std dev = 0.692, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.19073212490012909;  // std dev = 0.230, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( phenotype(A, M), interaction(A, N) )
%   | | | then return 0.13923997632606652;  // std dev = 1.081, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.05780051279078664;  // std dev = 2.968, 65.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=22 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( complex(A, D) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.17963706391710613;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.005148212817036476;  // std dev = 0.278, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | else return -0.03508238812613206;  // std dev = 0.257, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   else if ( phenotype(A, E), location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(G, E) )
%   | | | then return 0.43235565721340097;  // std dev = 1.320, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   | | | else return -0.17806241453744073;  // std dev = 0.132, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.1792599151061994;  // std dev = 0.196, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.15879291974489199;  // std dev = 0.034, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( complex(A, I), location(A, J) )
%   | | | then return -0.04165630711514392;  // std dev = 1.029, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.03878624615925459;  // std dev = 2.903, 69.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=22 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.17663075984900573;  // std dev = 0.103, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, C), enzyme(A, E) )
%   | | then return -0.12265753897570195;  // std dev = 0.231, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( complex(C, F), phenotype(A, G) )
%   | | | then return 0.04817926442908711;  // std dev = 1.631, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return -0.0393130536448956;  // std dev = 2.390, 80.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=20 */
%   else if ( phenotype(A, H), interaction(I, A) )
%   | then if ( enzyme(A, J) )
%   | | then return -0.02569298284653764;  // std dev = 0.236, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | else return 0.0369865540287691;  // std dev = 0.279, 68.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=27 */
%   | else if ( complex(A, K), enzyme(A, L) )
%   | | then return 0.2310046397531302;  // std dev = 0.638, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( enzyme(A, M), location(A, N) )
%   | | | then return 5.004846309997624E-4;  // std dev = 1.386, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.0744778419487302;  // std dev = 2.300, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.23191606535588236;  // std dev = 0.259, 39.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=33 */
%   | else return -0.08220648618567732;  // std dev = 0.196, 146.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=18 */
%   else if ( enzyme(A, F) )
%   | then if ( enzyme(G, F), complex(G, H) )
%   | | then if ( phenotype(G, I), recursion_proteinclass(G, B) )
%   | | | then return 0.36270871619404765;  // std dev = 0.071, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.07775549226170805;  // std dev = 1.506, 41.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
%   | | else if ( enzyme(J, F), recursion_proteinclass(J, B) )
%   | | | then return 0.46965999699397704;  // std dev = 0.113, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.16552699760808734;  // std dev = 0.087, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( complex(A, K) )
%   | | then return -0.020568965513830993;  // std dev = 0.214, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( location(A, L) )
%   | | | then return 0.07397344067080514;  // std dev = 2.475, 61.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=26 */
%   | | | else return -0.02066266408533687;  // std dev = 1.048, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
Inference time using transfer learning 80.5623242855072
Refined model CLL: -0.19845


******************************************
Best model found
******************************************
Results 

CLL : -0.196859 

AUC ROC : 0.985611 

AUC PR : 0.501507 

Precision : 0.45481 

Recall : 0.588679 

F1 : 0.513158 

Total Learning Time : 18.506876707077026 

Total Inference Time : 19.961607456207275 

Total revision time: 41.922728061676025
Best scored revision CLL: -0.19845


Results 

CLL : -0.196859 

AUC ROC : 0.985611 

AUC PR : 0.501507 

Precision : 0.45481 

Recall : 0.588679 

F1 : 0.513158 

Total Learning Time : 41.93211102485657 

Total Inference Time : 19.961607456207275 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.3805856704711914
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18672036367094097;  // std dev = 7.859, 280.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.171614567406945;  // std dev = 5.812, 151.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=51 */
%   | | | else return 0.1375699267397891;  // std dev = 5.343, 135.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13668421542499207;  // std dev = 5.447, 135.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=44 */
%   | | | else return 0.14956638927119556;  // std dev = 5.634, 142.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.07880689051298388;  // std dev = 4.290, 89.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=26 */
%   | | | else return 0.09995396958104119;  // std dev = 6.742, 212.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09730238907924434;  // std dev = 7.877, 283.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09520659606848464;  // std dev = 7.787, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7386438154460429;  // std dev = 0.008, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2614127403551678;  // std dev = 0.011, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.04744264797728812;  // std dev = 4.134, 79.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=25 */
%   | | | else return 0.05269728221701771;  // std dev = 3.969, 73.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.06578342648059284;  // std dev = 4.201, 124.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=44 */
%   | | | else return 0.08004903743911353;  // std dev = 5.560, 135.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.028258252157518312;  // std dev = 7.131, 287.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.004230492150560696;  // std dev = 7.253, 302.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=92 */
Inference time using transfer learning 3.5614211559295654
Parameter learned model CLL:-0.316311 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.859, 188, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.812, 100, 51], 'false,false,false,false': [5.343, 94, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.447, 91, 44], 'false,false,false,false': [5.634, 94, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.29, 63, 26], 'false,false,false,false': [6.742, 146, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.877, 191, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.787, 178, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.008, 0, 44], 'true,false': [0.011, 88, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.134, 54, 25], 'false,false,false,false': [3.969, 50, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.201, 80, 44], 'false,false,false,false': [5.56, 87, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.131, 195, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.253, 210, 92]}]
{'': [nan, 0.22061224489796044], 'false': [nan, 0.2206122448979601], 'false,false': [nan, 0.22061224489796044], 'false,false,false': [nan, 0.2206122448979601]}
{'': [nan, 0.21820137904054215], 'false': [nan, 0.21820137904054107], 'false,false': [nan, 0.21820137904054215], 'false,false,false': [0.22367440024560523, 0.2114677640603559]}
{'': [nan, 0.22174450515804742], 'false': [nan, 0.22174450515804742], 'false,false': [nan, 0.22174450515804925], 'false,false,false': [0.21976073779910454, 0.22354960281305905]}
{'': [nan, 0.21224711125877202], 'false': [nan, 0.21224711125877202], 'false,false': [nan, 0.21224711125877102], 'false,false,false': [0.20679207170811725, 0.21440497035541692]}
{'': [nan, 0.21924484743069925], 'false': [nan, 0.21924484743069925], 'false,false': [nan, 0.2192448474307003], 'false,false,false': [nan, 0.2192448474307003]}
{'': [nan, 0.2245832702167618], 'false': [nan, 0.2245832702167618], 'false,false': [nan, 0.22458327021676175], 'false,false,false': [nan, 0.22458327021676164]}
{'': [0.22224883657875877, 0.2160728937005009], 'true': [1.4969254476779073e-06, 1.4681384206430534e-06], 'false': [nan, 0.2160728937005009], 'false,false': [nan, 0.2160728937005009], 'false,false,false': [0.2163114885435027, 0.21580033777444135], 'true,true': [nan, 1.4969254476779073e-06], 'true,true,false': [nan, 1.4969254476779073e-06]}
{'': [nan, 0.1875707820880304], 'false': [nan, 0.1875707820880304], 'false,false': [nan, 0.18757078208803152], 'false,false,false': [0.14234561674176854, 0.22901350172477705]}
{'': [nan, 0.1771746818933891], 'false': [nan, 0.1771746818933879], 'false,false': [nan, 0.1771746818933879], 'false,false,false': [nan, 0.1771746818933879]}
{'': [nan, 0.17419328979675175], 'false': [nan, 0.17419328979675175], 'false,false': [nan, 0.1741932897967523], 'false,false,false': [nan, 0.1741932897967523]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 14.17369270324707
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( interaction(D, D) )
%   | | then if ( enzyme(A, E), complex(A, F) )
%   | | | then return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.12433598545922309;  // std dev = 5.211, 139.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=37 */
%   | | | else return 0.2059750220560339;  // std dev = 4.568, 92.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=32 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.7316156329526725;  // std dev = 0.044, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(C, E), location(A, F) )
%   | | then if ( complex(A, G), location(C, F) )
%   | | | then return 0.10289518778141583;  // std dev = 2.200, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.3604141391825542;  // std dev = 2.568, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | else return 0.022791701416572618;  // std dev = 0.372, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   else if ( interaction(H, A), phenotype(H, I) )
%   | then if ( interaction(J, H), enzyme(A, K) )
%   | | then if ( interaction(H, L), recursion_proteinclass(L, B) )
%   | | | then return 0.8423295211310193;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.15767047886898064;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( location(H, M), location(A, M) )
%   | | | then return 0.12485869678685124;  // std dev = 2.392, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return 0.18279780403944434;  // std dev = 2.732, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | else return 0.10318686369373868;  // std dev = 0.435, 122.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=33 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, A) )
%   then if ( interaction(A, C), recursion_proteinclass(C, B) )
%   | then return 0.5848629792927333;  // std dev = 0.145, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.15462328096697334;  // std dev = 0.168, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), phenotype(E, F) )
%   | | then return 0.32701373927190824;  // std dev = 0.841, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.6933164766087587;  // std dev = 0.020, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(G, A), location(G, H) )
%   | | then if ( enzyme(G, I) )
%   | | | then return 0.00211243326545672;  // std dev = 2.190, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | | else return 0.09575692790032642;  // std dev = 5.665, 171.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=48 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.06543818193258043;  // std dev = 1.965, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.18937735448302606;  // std dev = 3.300, 47.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.4780842470319824;  // std dev = 0.082, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.0010265116874653326;  // std dev = 0.387, 85.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=17 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(A, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7196184832750587;  // std dev = 0.168, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.18689202413747175;  // std dev = 0.087, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.006488864117495599;  // std dev = 0.375, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | else if ( enzyme(A, H), location(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.644584603483375;  // std dev = 1.494, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return -0.19329376360120523;  // std dev = 0.163, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.5296581568027254;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1531391693698489;  // std dev = 4.570, 95.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=34 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then return 0.00862448674624656;  // std dev = 0.325, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( phenotype(F, G), complex(F, H) )
%   | | then if ( enzyme(E, I), complex(A, J) )
%   | | | then return 0.3162054782552007;  // std dev = 1.153, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.10232572340751166;  // std dev = 2.729, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | else if ( complex(E, K), complex(A, K) )
%   | | | then return -0.05150401480047418;  // std dev = 1.281, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.04774296573928185;  // std dev = 2.902, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | else if ( interaction(L, A), interaction(L, L) )
%   | | then if ( interaction(L, M), recursion_proteinclass(M, B) )
%   | | | then return 0.7556551574582454;  // std dev = 0.266, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1902157230750773;  // std dev = 0.016, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return 0.1667318823309373;  // std dev = 3.275, 57.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
%   | | | else return 0.09204622530775465;  // std dev = 2.999, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.3296556493184319;  // std dev = 0.132, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5021810010581704;  // std dev = 0.106, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(F, A) )
%   | | | then return 0.23054154622873463;  // std dev = 0.946, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.6376635692130724;  // std dev = 1.460, 32.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   | | else return -0.2120613902810695;  // std dev = 0.436, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( interaction(A, G), interaction(G, A) )
%   | | then if ( complex(G, H) )
%   | | | then return -0.06317866694548908;  // std dev = 0.699, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.16487135159109395;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.13522006437237558;  // std dev = 3.022, 43.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
%   | | | else return 0.06647313163506288;  // std dev = 3.822, 89.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=28 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.3045636806868267;  // std dev = 0.069, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.6466584318337808;  // std dev = 0.316, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.521250887738236;  // std dev = 0.605, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return -0.1852688544024442;  // std dev = 0.064, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.2592272614406074;  // std dev = 0.126, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, A), interaction(A, J) )
%   | | then if ( interaction(K, I), complex(K, L) )
%   | | | then return 0.06721385586233337;  // std dev = 1.388, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.055979858522159615;  // std dev = 1.398, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.13343862263189457;  // std dev = 1.621, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.05695845509269005;  // std dev = 4.162, 95.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=30 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.23622560832634126;  // std dev = 0.062, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(D, F), interaction(F, G) )
%   | | then if ( interaction(H, A), interaction(G, F) )
%   | | | then return -0.008949817762550851;  // std dev = 1.529, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | else return -0.08156962453119423;  // std dev = 2.095, 44.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.15985191518384712;  // std dev = 0.899, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.029596422624564432;  // std dev = 1.751, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | else if ( interaction(A, J), location(A, K) )
%   | | then if ( interaction(J, L), enzyme(L, M) )
%   | | | then return -0.09863269536905772;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.17152211771655404;  // std dev = 2.056, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else if ( phenotype(A, N) )
%   | | | then return -0.011196833824939322;  // std dev = 1.923, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | | else return 0.05574895116646962;  // std dev = 3.653, 77.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=25 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.21239063731668947;  // std dev = 0.060, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.40155253390977275;  // std dev = 0.472, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.576246351632258;  // std dev = 0.183, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.16649476668434277;  // std dev = 0.308, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.18165609222360266;  // std dev = 0.114, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( location(A, J), location(H, J) )
%   | | | then return 0.01837707923856663;  // std dev = 2.183, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return 0.08995426807527898;  // std dev = 1.798, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.03971570627349996;  // std dev = 2.061, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | | else return 0.014692714343378257;  // std dev = 3.536, 69.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=21 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E), interaction(F, D) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.34067379741218323;  // std dev = 0.845, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return 0.01808948649691409;  // std dev = 1.737, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | else if ( interaction(G, A), interaction(G, D) )
%   | | | then return 0.5269364027733622;  // std dev = 0.976, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return 0.17057014827378655;  // std dev = 2.282, 35.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
%   | else if ( complex(A, H), interaction(I, A) )
%   | | then return -0.13717005005512445;  // std dev = 0.279, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return -0.2511519141429529;  // std dev = 0.403, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( interaction(A, A) )
%   | then return -0.038204871694345346;  // std dev = 0.186, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.07974271211274998;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
Inference time using transfer learning 80.57322001457214
Refined model CLL: -0.204007


******************************************
Best model found
******************************************
Results 

CLL : -0.197179 

AUC ROC : 0.983187 

AUC PR : 0.378779 

Precision : 0.308772 

Recall : 0.635379 

F1 : 0.415584 

Total Learning Time : 14.17369270324707 

Total Inference Time : 9.565533638000488 

Total revision time: 26.873542547225952
Best scored revision CLL: -0.204007


Results 

CLL : -0.197179 

AUC ROC : 0.983187 

AUC PR : 0.378779 

Precision : 0.308772 

Recall : 0.635379 

F1 : 0.415584 

Total Learning Time : 26.882925510406494 

Total Inference Time : 9.565533638000488 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.1717827320098877
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19019526714584475;  // std dev = 7.579, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16249819843521804;  // std dev = 5.906, 158.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=52 */
%   | | | else return 0.19897567223404763;  // std dev = 4.644, 93.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.19143134878211737;  // std dev = 4.154, 73.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=28 */
%   | | | else return 0.16746541594922862;  // std dev = 6.091, 161.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11164856012390495;  // std dev = 3.559, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
%   | | | else return 0.12380461675214575;  // std dev = 6.625, 194.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10561484721431479;  // std dev = 7.482, 247.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.056743336596408005;  // std dev = 7.649, 269.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7243456155068729;  // std dev = 0.024, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.27681018094341114;  // std dev = 0.034, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.04113460120069167;  // std dev = 4.767, 106.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=33 */
%   | | | else return 0.07970387474830741;  // std dev = 4.009, 70.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.037841112035193504;  // std dev = 3.385, 84.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
%   | | | else return 0.04264404794909432;  // std dev = 6.246, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07920009502446151;  // std dev = 6.810, 229.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.018696483993975565;  // std dev = 7.060, 261.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=86 */
Inference time using transfer learning 3.6962316036224365
Parameter learned model CLL:-0.353303 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.579, 173, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.906, 106, 52], 'false,false,false,false': [4.644, 59, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.154, 45, 28], 'false,false,false,false': [6.091, 103, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.559, 38, 19], 'false,false,false,false': [6.625, 127, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.482, 161, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.649, 183, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.024, 0, 28], 'true,false': [0.034, 50, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.767, 73, 33], 'false,false,false,false': [4.009, 45, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.385, 56, 28], 'false,false,false,false': [6.246, 119, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.81, 143, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.06, 175, 86]}]
{'': [nan, 0.22179156542090983], 'false': [nan, 0.22179156542090966], 'false,false': [nan, 0.22179156542090983], 'false,false,false': [nan, 0.22179156542090966]}
{'': [nan, 0.22523452008698272], 'false': [nan, 0.22523452008698228], 'false,false': [nan, 0.22523452008698272], 'false,false,false': [0.2207979490466266, 0.23193432766793792]}
{'': [nan, 0.23239430340868972], 'false': [nan, 0.23239430340868972], 'false,false': [nan, 0.2323943034086894], 'false,false,false': [0.23636141144955714, 0.2304163700220997]}
{'': [nan, 0.2253708094446096], 'false': [nan, 0.2253708094446096], 'false,false': [nan, 0.2253708094446098], 'false,false,false': [0.22222222222222196, 0.22626235254863017]}
{'': [nan, 0.2266696127313587], 'false': [nan, 0.2266696127313587], 'false,false': [nan, 0.22666961273135808], 'false,false,false': [nan, 0.22666961273135808]}
{'': [nan, 0.21752499947578782], 'false': [nan, 0.21752499947578782], 'false,false': [nan, 0.21752499947578813], 'false,false,false': [nan, 0.21752499947578785]}
{'': [0.23066644810029457, 0.22079863102179653], 'true': [2.0724432909473884e-05, 2.3412258542467866e-05], 'false': [nan, 0.22079863102179653], 'false,false': [nan, 0.22079863102179653], 'false,false,false': [0.21440014239943056, 0.22959183673469385], 'true,true': [nan, 2.0724432909473884e-05], 'true,true,false': [nan, 2.0724432909473884e-05]}
{'': [nan, 0.19338489060167707], 'false': [nan, 0.19338489060167707], 'false,false': [nan, 0.1933848906016775], 'false,false,false': [0.13643427054893045, 0.2204048792619164]}
{'': [nan, 0.20248655639431548], 'false': [nan, 0.20248655639431645], 'false,false': [nan, 0.20248655639431645], 'false,false,false': [nan, 0.20248655639431645]}
{'': [nan, 0.19097449042783843], 'false': [nan, 0.19097449042783843], 'false,false': [nan, 0.19097449042783865], 'false,false,false': [nan, 0.19097449042783865]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 9.320968866348267
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), complex(G, H) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(F, I), interaction(A, I) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.0664822684328457;  // std dev = 2.814, 48.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | | | else return 0.18150222851268602;  // std dev = 6.045, 167.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=54 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.7350976654140545;  // std dev = 0.117, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.05754984216386435;  // std dev = 0.259, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( phenotype(C, G), location(A, H) )
%   | | | then return 0.18954071046942658;  // std dev = 3.746, 62.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=22 */
%   | | | else return 0.6406974394911358;  // std dev = 0.901, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, I), phenotype(A, J) )
%   | then if ( interaction(K, A), enzyme(I, L) )
%   | | then return 0.5248630859184324;  // std dev = 0.438, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(I, M), complex(M, N) )
%   | | | then return 0.2899789846079287;  // std dev = 1.867, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.1548709440699156;  // std dev = 2.305, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | else if ( interaction(P, A), recursion_proteinclass(P, B) )
%   | | then return 0.7744639907355252;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.08637632568055228;  // std dev = 0.429, 103.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=26 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then return 0.5958189140272173;  // std dev = 0.860, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.7916649406482145;  // std dev = 0.230, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.18368830046147422;  // std dev = 0.158, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(H, I) )
%   | | | then return 0.12688461752742541;  // std dev = 1.517, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.6113988318238052;  // std dev = 2.718, 61.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=52 */
%   | | else return -0.1813753706453463;  // std dev = 0.251, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return 0.5539654785031208;  // std dev = 0.847, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), phenotype(C, E) )
%   | then return 0.30945012988688614;  // std dev = 0.836, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(F, A), interaction(C, F) )
%   | | then return 0.43727186976055604;  // std dev = 0.210, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5820090652484301;  // std dev = 0.142, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, G) )
%   | | then return 0.5066282244188135;  // std dev = 0.108, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.20419206446473526;  // std dev = 0.644, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then if ( interaction(I, A), complex(I, J) )
%   | | | then return -0.11591087120267558;  // std dev = 0.094, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.20967437720925883;  // std dev = 0.107, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.009831628018757305;  // std dev = 2.684, 55.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=12 */
%   | | | else return 0.1100471435019336;  // std dev = 5.155, 158.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=52 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.3733707846416442;  // std dev = 0.116, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.4106102150238618;  // std dev = 0.147, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.30490330269207905;  // std dev = 0.027, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), phenotype(A, H) )
%   | | then return 0.1756576323786753;  // std dev = 0.841, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.4717306211171154;  // std dev = 0.126, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6005952346259074;  // std dev = 1.002, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return -0.17268338788268867;  // std dev = 0.277, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return -0.057746755173608846;  // std dev = 2.037, 42.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=6 */
%   | | | else return 0.06713711103297026;  // std dev = 4.310, 114.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=34 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.3258962716789659;  // std dev = 0.150, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.29040007700043685;  // std dev = 0.069, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.24438452220999665;  // std dev = 0.024, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), interaction(A, H) )
%   | | | then return 0.5693325438640301;  // std dev = 0.810, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | | else return 0.18811329906546778;  // std dev = 3.191, 62.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=30 */
%   | | else return -0.1634302601389597;  // std dev = 0.043, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( enzyme(A, I) )
%   | | then return -0.23812248699364222;  // std dev = 0.284, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.05981769846905176;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.02351563486428158;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.38874906739575865;  // std dev = 0.239, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.17963463112687098;  // std dev = 0.096, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.22631864560613688;  // std dev = 0.130, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(F, G), phenotype(A, H) )
%   | | | then return -0.04678939686357677;  // std dev = 1.604, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | | else return 0.046339803764369004;  // std dev = 1.594, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | else if ( interaction(I, A), phenotype(A, J) )
%   | | then if ( interaction(K, I) )
%   | | | then return 0.0525484420796698;  // std dev = 1.764, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.16280870189988986;  // std dev = 1.422, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( location(A, L) )
%   | | | then return 0.03804060805682718;  // std dev = 2.355, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | | | else return -0.05823317698263865;  // std dev = 1.229, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( recursion_proteinclass(C, B), interaction(E, A) )
%   | then return 0.1694367009016304;  // std dev = 0.037, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( complex(A, D), interaction(F, A) )
%   | | then return -0.07968097839723418;  // std dev = 0.163, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | else return -0.00618235747845772;  // std dev = 0.260, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   else if ( enzyme(A, G), phenotype(A, H) )
%   | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | then return 0.36113204440949315;  // std dev = 0.087, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.14727471426225108;  // std dev = 0.062, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( phenotype(J, L), recursion_proteinclass(K, B) )
%   | | | then return 0.5276904792685575;  // std dev = 0.115, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.019750726365178408;  // std dev = 3.094, 87.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=30 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.01866779870289922;  // std dev = 1.835, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return -0.03924216389223079;  // std dev = 1.653, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( interaction(A, E), interaction(E, F) )
%   | then return -0.020124860290320266;  // std dev = 0.230, 112.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=34 */
%   | else if ( location(D, C), complex(D, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.017707543994656287;  // std dev = 0.925, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.1433087122462798;  // std dev = 1.737, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.20187095177830006;  // std dev = 0.077, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -7.901524426531322E-4;  // std dev = 2.510, 72.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=18 */
%   else if ( enzyme(A, I) )
%   | then return 0.2684239252024549;  // std dev = 0.415, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.25449238377142525;  // std dev = 1.298, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | else return -0.12610109761554225;  // std dev = 0.099, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0.2142725158411909;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), complex(A, D) )
%   | then return 0.14147460402349984;  // std dev = 0.060, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.20200919538420825;  // std dev = 0.049, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A), complex(A, F) )
%   | then if ( complex(E, F), enzyme(A, G) )
%   | | then return 0.05899259099392477;  // std dev = 0.465, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.08775220850408638;  // std dev = 0.701, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return -0.013636584409980656;  // std dev = 1.712, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(A, L), interaction(L, L) )
%   | | | then return -0.05598788563922806;  // std dev = 0.890, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.01936490313630326;  // std dev = 3.181, 95.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=31 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.13771164491121995;  // std dev = 1.203, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.03885355961565054;  // std dev = 1.882, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
Inference time using transfer learning 49.74393653869629
Refined model CLL: -0.211756


******************************************
Best model found
******************************************
Results 

CLL : -0.219946 

AUC ROC : 0.977429 

AUC PR : 0.325838 

Precision : 0.235139 

Recall : 0.628975 

F1 : 0.342308 

Total Learning Time : 9.320968866348267 

Total Inference Time : 6.320651054382324 

Total revision time: 18.42699956893921
Best scored revision CLL: -0.211756


Results 

CLL : -0.219946 

AUC ROC : 0.977429 

AUC PR : 0.325838 

Precision : 0.235139 

Recall : 0.628975 

F1 : 0.342308 

Total Learning Time : 18.43638253211975 

Total Inference Time : 6.320651054382324 

Run: 3

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.2869338989257812
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2047624809162454;  // std dev = 7.540, 251.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1456374241200602;  // std dev = 5.493, 140.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=44 */
%   | | | else return 0.178125903382733;  // std dev = 5.300, 124.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.12320422113024387;  // std dev = 4.895, 111.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=35 */
%   | | | else return 0.13225318031451355;  // std dev = 5.924, 160.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.10274384513542317;  // std dev = 3.708, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | | else return 0.09287853544172447;  // std dev = 6.813, 218.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10091469382987428;  // std dev = 7.632, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07889336379396249;  // std dev = 7.653, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7377135817521036;  // std dev = 0.013, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2620292347025382;  // std dev = 0.018, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.055537690521773826;  // std dev = 4.052, 76.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=24 */
%   | | | else return 0.05162678529955566;  // std dev = 4.369, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.06376861457530503;  // std dev = 3.751, 99.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=35 */
%   | | | else return 0.06584916666938256;  // std dev = 5.858, 153.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04613003756974632;  // std dev = 6.970, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.019761635802794723;  // std dev = 7.053, 274.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=87 */
Inference time using transfer learning 3.5295321941375732
Parameter learned model CLL:-0.328662 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.54, 164, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.493, 96, 44], 'false,false,false,false': [5.3, 81, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.895, 76, 35], 'false,false,false,false': [5.924, 108, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.708, 44, 20], 'false,false,false,false': [6.813, 151, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.632, 176, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.653, 179, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.013, 0, 35], 'true,false': [0.018, 73, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.052, 52, 24], 'false,false,false,false': [4.369, 60, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.751, 64, 35], 'false,false,false,false': [5.858, 101, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.97, 171, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.053, 187, 87]}]
{'': [nan, 0.22647259567308548], 'false': [nan, 0.2264725956730854], 'false,false': [nan, 0.22647259567308548], 'false,false,false': [nan, 0.2264725956730854]}
{'': [nan, 0.22094524793388362], 'false': [nan, 0.22094524793388504], 'false,false': [nan, 0.22094524793388362], 'false,false,false': [0.21551020408163338, 0.22652185223725357]}
{'': [nan, 0.21793007072183182], 'false': [nan, 0.21793007072183182], 'false,false': [nan, 0.21793007072183238], 'false,false,false': [0.21582391784471242, 0.21935767521569463]}
{'': [nan, 0.21336629866559423], 'false': [nan, 0.21336629866559423], 'false,false': [nan, 0.21336629866559426], 'false,false,false': [0.21484375000000042, 0.21291046369242905]}
{'': [nan, 0.221466379675773], 'false': [nan, 0.221466379675773], 'false,false': [nan, 0.22146637967577254], 'false,false,false': [nan, 0.22146637967577254]}
{'': [nan, 0.22015605230060661], 'false': [nan, 0.22015605230060661], 'false,false': [nan, 0.22015605230060686], 'false,false,false': [nan, 0.22015605230060667]}
{'': [0.218941957139115, 0.21654015528887458], 'true': [4.6997073427844176e-06, 4.472615085282972e-06], 'false': [nan, 0.21654015528887458], 'false,false': [nan, 0.21654015528887458], 'false,false,false': [0.21606648199445977, 0.21694214876033138], 'true,true': [nan, 4.6997073427844176e-06], 'true,true,false': [nan, 4.6997073427844176e-06]}
{'': [nan, 0.19201046904919486], 'false': [nan, 0.19201046904919486], 'false,false': [nan, 0.19201046904919455], 'false,false,false': [0.1421355805195544, 0.22428075518530202]}
{'': [nan, 0.18829412546504534], 'false': [nan, 0.18829412546504495], 'false,false': [nan, 0.18829412546504495], 'false,false,false': [nan, 0.18829412546504495]}
{'': [nan, 0.18155814970309], 'false': [nan, 0.18155814970309], 'false,false': [nan, 0.18155814970308995], 'false,false,false': [nan, 0.18155814970308995]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 19.502628564834595
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(D, A), complex(D, E) )
%   | | | then return 0.07689893509951237;  // std dev = 2.339, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | else return 0.23314893509951218;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.15162719596907784;  // std dev = 6.177, 184.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=54 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.050941973991396876;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(E, E), interaction(A, F) )
%   | | | then return 0.6349276005148803;  // std dev = 1.516, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return 0.8224895285328021;  // std dev = 0.287, 63.000 (wgt'ed) examples reached here.  /* #pos=63 */
%   | | else if ( interaction(G, A) )
%   | | | then return -0.15624435103682993;  // std dev = 0.068, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0.6582012851883561;  // std dev = 0.907, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.15826412935103396;  // std dev = 0.157, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   else if ( interaction(A, H), enzyme(H, I) )
%   | then if ( interaction(A, A) )
%   | | then return 0.08578487415644506;  // std dev = 0.732, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.005337675616089564;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(A, J), interaction(J, A) )
%   | | then return 0.06380500980244488;  // std dev = 0.780, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.08867100894942291;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then return 0.6599487623813698;  // std dev = 0.079, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.5737436195006972;  // std dev = 0.054, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, C) )
%   | | then return -0.14664760953369088;  // std dev = 0.052, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.6567120600051451;  // std dev = 0.095, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14286316716917033;  // std dev = 5.176, 168.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=57 */
%   else if ( interaction(A, F), complex(F, G) )
%   | then if ( complex(A, G) )
%   | | then return 0.047503700857214136;  // std dev = 1.092, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(F, H) )
%   | | | then return 0.027481368596235213;  // std dev = 0.776, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.035948516139889655;  // std dev = 0.824, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.14309760941231828;  // std dev = 0.708, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), location(A, D) )
%   | then return 0.41264898695092717;  // std dev = 1.49e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5321374322675486;  // std dev = 0.140, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.09565820172477636;  // std dev = 0.000226, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.1009429654097622;  // std dev = 2.375, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | | else return 0.24786090134555877;  // std dev = 1.767, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.06177802609610186;  // std dev = 3.769, 108.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=31 */
%   | | | else return 0.10525237363911853;  // std dev = 3.167, 65.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=21 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( phenotype(A, E), enzyme(C, F) )
%   | then if ( interaction(G, C), recursion_proteinclass(G, B) )
%   | | then return 0.6047343609059258;  // std dev = 0.255, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.1771949865885585;  // std dev = 0.026, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( phenotype(A, H), complex(A, D) )
%   | | then return -0.039131640881435586;  // std dev = 0.236, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | else if ( complex(A, I), interaction(C, J) )
%   | | | then return 0.10094040883291862;  // std dev = 1.111, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.020815006241576478;  // std dev = 2.345, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | then return 0.34106559900190275;  // std dev = 0.082, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(L, A), interaction(A, L) )
%   | | then return -0.008021710654551857;  // std dev = 0.271, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.19990551707407545;  // std dev = 1.856, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.07915211710785476;  // std dev = 4.401, 132.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=43 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( interaction(E, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.37395460542504644;  // std dev = 0.188, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else if ( interaction(E, D) )
%   | | | then return -0.12243320731257283;  // std dev = 0.793, 54.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=1 */
%   | | | else return 0.042431049518487446;  // std dev = 1.404, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else return 0.19198913034981782;  // std dev = 0.871, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.3689815173565341;  // std dev = 0.126, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( complex(A, H), phenotype(A, I) )
%   | | | then return 0.37832614966249123;  // std dev = 0.680, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.14904092814880124;  // std dev = 1.808, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.4642541804965779;  // std dev = 0.105, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06703770120306173;  // std dev = 4.392, 130.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=42 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.3164021547206861;  // std dev = 0.101, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.3004164746481656;  // std dev = 0.117, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5501780611111552;  // std dev = 0.489, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.18614376791995088;  // std dev = 0.062, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( interaction(G, A), interaction(H, G) )
%   | then if ( location(G, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.1999657867945033;  // std dev = 1.037, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return 0.036372617569612034;  // std dev = 3.862, 121.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=35 */
%   | | else if ( interaction(G, H) )
%   | | | then return -0.0280339217763945;  // std dev = 0.721, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.08127842867983738;  // std dev = 0.743, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else return 0.49678227878041825;  // std dev = 0.746, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.22671486880044256;  // std dev = 0.075, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(D, G), enzyme(D, H) )
%   | | | then return 0.22387032251409938;  // std dev = 0.093, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3866343850074964;  // std dev = 0.223, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(E, D) )
%   | | | then return -0.1077981436815716;  // std dev = 1.212, 52.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=4 */
%   | | | else return 0.003114495884316628;  // std dev = 2.482, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | else if ( phenotype(A, I), interaction(J, A) )
%   | | then if ( interaction(K, J), enzyme(K, L) )
%   | | | then return 0.04881867465771272;  // std dev = 1.905, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return -0.07471105316182367;  // std dev = 1.206, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.030199900777146717;  // std dev = 2.341, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | | | else return 0.07494540766975247;  // std dev = 2.497, 47.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.19584137451048067;  // std dev = 0.066, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.02315976912637904;  // std dev = 0.297, 120.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=31 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(A, F) )
%   | | then return 0.20901796572055356;  // std dev = 0.230, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5490024208975911;  // std dev = 0.111, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.20713071573799646;  // std dev = 0.032, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( phenotype(I, J), enzyme(I, K) )
%   | | | then return 0.18375841232501144;  // std dev = 0.650, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.03130631420144018;  // std dev = 1.767, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( interaction(L, A), complex(A, M) )
%   | | | then return -0.0016773201864051974;  // std dev = 1.256, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return 0.08148364250958554;  // std dev = 2.745, 54.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=21 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(A, C), recursion_proteinclass(D, B) )
%   | then return 0.20926196750995593;  // std dev = 0.082, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( interaction(A, E), interaction(D, A) )
%   | | then return -0.08875764268100098;  // std dev = 0.208, 68.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=7 */
%   | | else if ( interaction(D, A), complex(A, F) )
%   | | | then return -0.03758348773870349;  // std dev = 1.528, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return 0.06527206512291697;  // std dev = 3.896, 116.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=44 */
%   else if ( interaction(A, G), complex(G, H) )
%   | then if ( complex(A, H) )
%   | | then return 0.08955917910380737;  // std dev = 0.556, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.021179458343755793;  // std dev = 0.300, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then return -0.006057241443126124;  // std dev = 0.554, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(K, A), phenotype(A, L) )
%   | | | then return -0.15572790170741577;  // std dev = 0.717, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.1115912676548444;  // std dev = 1.258, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
Inference time using transfer learning 65.71757793426514
Refined model CLL: -0.227924


******************************************
Best model found
******************************************
Results 

CLL : -0.247467 

AUC ROC : 0.978071 

AUC PR : 0.31753 

Precision : 0.164371 

Recall : 0.634752 

F1 : 0.261123 

Total Learning Time : 19.502628564834595 

Total Inference Time : 17.559895992279053 

Total revision time: 40.11956310272217
Best scored revision CLL: -0.227924


Results 

CLL : -0.247467 

AUC ROC : 0.978071 

AUC PR : 0.31753 

Precision : 0.164371 

Recall : 0.634752 

F1 : 0.261123 

Total Learning Time : 40.12920522689819 

Total Inference Time : 17.559895992279053 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.352062702178955
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20597502205603443;  // std dev = 8.236, 299.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16666550689417073;  // std dev = 5.878, 155.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=52 */
%   | | | else return 0.17555249685358107;  // std dev = 5.839, 151.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15072351779955515;  // std dev = 5.183, 119.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=41 */
%   | | | else return 0.11437912322940302;  // std dev = 6.599, 204.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11908589948676192;  // std dev = 4.384, 86.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=29 */
%   | | | else return 0.10783935514297446;  // std dev = 7.132, 233.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12419308851152704;  // std dev = 8.167, 290.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0809112569646704;  // std dev = 8.297, 307.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7217454262568719;  // std dev = 0.001, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.2782553050860985;  // std dev = 0.002, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.09044078384607317;  // std dev = 3.839, 64.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=23 */
%   | | | else return 0.003287544104690926;  // std dev = 5.389, 146.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04866285118856006;  // std dev = 4.043, 117.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=41 */
%   | | | else return 0.0749901852980009;  // std dev = 6.389, 179.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.018797683536339923;  // std dev = 7.756, 330.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.026371023670471987;  // std dev = 7.695, 315.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=104 */
Inference time using transfer learning 3.5093600749969482
Parameter learned model CLL:-0.332124 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.236, 195, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.878, 103, 52], 'false,false,false,false': [5.839, 99, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.183, 78, 41], 'false,false,false,false': [6.599, 141, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.384, 57, 29], 'false,false,false,false': [7.132, 158, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.167, 186, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.297, 203, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.001, 0, 41], 'true,false': [0.002, 79, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.839, 41, 23], 'false,false,false,false': [5.389, 106, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.043, 76, 41], 'false,false,false,false': [6.389, 116, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.756, 226, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.695, 211, 104]}]
{'': [nan, 0.22684310018903814], 'false': [nan, 0.22684310018903653], 'false,false': [nan, 0.22684310018903814], 'false,false,false': [nan, 0.22684310018903653]}
{'': [nan, 0.22435815284719854], 'false': [nan, 0.22435815284719474], 'false,false': [nan, 0.22435815284719854], 'false,false,false': [0.22293444328823978, 0.22577957107144267]}
{'': [nan, 0.21831402913656975], 'false': [nan, 0.21831402913656975], 'false,false': [nan, 0.21831402913656964], 'false,false,false': [0.22576073694057802, 0.21348346335001928]}
{'': [nan, 0.21973390006764199], 'false': [nan, 0.21973390006764199], 'false,false': [nan, 0.21973390006763963], 'false,false,false': [0.22349918875067584, 0.21831003752314201]}
{'': [nan, 0.22997980762972636], 'false': [nan, 0.22997980762972636], 'false,false': [nan, 0.22997980762972556], 'false,false,false': [nan, 0.22997980762972556]}
{'': [nan, 0.22424745240741256], 'false': [nan, 0.22424745240741256], 'false,false': [nan, 0.22424745240741312], 'false,false,false': [nan, 0.22424745240741215]}
{'': [0.22493093092953947, 0.21006401333693983], 'true': [4.646603232264702e-08, 4.632183481796758e-08], 'false': [nan, 0.21006401333693983], 'false,false': [nan, 0.21006401333693983], 'false,false,false': [0.2302246093749995, 0.19891161568774543], 'true,true': [nan, 4.646603232264702e-08], 'true,true,false': [nan, 4.646603232264702e-08]}
{'': [nan, 0.19330834183609674], 'false': [nan, 0.19330834183609674], 'false,false': [nan, 0.19330834183609638], 'false,false,false': [0.13972796143436517, 0.22805618162642852]}
{'': [nan, 0.18227127627220754], 'false': [nan, 0.18227127627220716], 'false,false': [nan, 0.18227127627220716], 'false,false,false': [nan, 0.18227127627220716]}
{'': [nan, 0.1879813084083585], 'false': [nan, 0.1879813084083585], 'false,false': [nan, 0.1879813084083588], 'false,false,false': [nan, 0.1879813084083588]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 19.037943601608276
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.0599033210644246;  // std dev = 4.285, 114.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=23 */
%   | | else if ( interaction(A, J), complex(A, K) )
%   | | | then return 0.06867525088898606;  // std dev = 2.513, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | | | else return 0.1940864350995113;  // std dev = 5.344, 128.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=43 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7289967225966154;  // std dev = 0.061, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E) )
%   | | then return 0.4068585879990681;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7443356231566909;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1498594315822487;  // std dev = 0.002, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( location(A, F), complex(A, G) )
%   | | | then return 0.08287516992962585;  // std dev = 4.140, 96.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=23 */
%   | | | else return 0.16363820606826165;  // std dev = 6.153, 175.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=57 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4697323245343353;  // std dev = 0.318, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( location(A, F), complex(A, E) )
%   | | then if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8124573903984624;  // std dev = 0.094, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.08500291651411232;  // std dev = 1.512, 40.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=3 */
%   | | else if ( interaction(H, A), interaction(H, D) )
%   | | | then return 0.06892858079787903;  // std dev = 2.916, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | | | else return 0.1914363882349086;  // std dev = 2.443, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(I, A) )
%   | | | then return 0.22673154050877878;  // std dev = 1.090, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.4904003348120722;  // std dev = 1.164, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( enzyme(A, K), location(A, L) )
%   | | | then return 0.0811889842804776;  // std dev = 3.448, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return 0.15787017001446682;  // std dev = 4.686, 101.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=35 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C), phenotype(A, D) )
%   then if ( location(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( phenotype(E, G) )
%   | | | then return 0.6513968118008948;  // std dev = 2.294, 64.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=59 */
%   | | | else return -0.2542736508269844;  // std dev = 0.193, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.05138768875748965;  // std dev = 0.332, 30.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | else return -0.19026186396843142;  // std dev = 0.325, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.4577791835333295;  // std dev = 0.081, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1332427248898991;  // std dev = 0.031, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.0941229019906177;  // std dev = 3.881, 78.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=25 */
%   | | else if ( interaction(K, A) )
%   | | | then return -0.00818614481520946;  // std dev = 2.622, 46.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
%   | | | else return -0.15014650023719575;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(A, C), phenotype(A, F) )
%   | | then return 0.3108860596278897;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.13903922393034868;  // std dev = 0.903, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.430509045658008;  // std dev = 0.094, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | then return 0.4896379933552429;  // std dev = 0.306, 27.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=24 */
%   | | else return -0.09199443512924112;  // std dev = 0.276, 101.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=11 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( phenotype(J, L) )
%   | | | then return 0.09886155156215548;  // std dev = 2.929, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return -0.1898785924328556;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( complex(A, M), interaction(N, A) )
%   | | | then return 0.20848849952551682;  // std dev = 1.870, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.10978035301284302;  // std dev = 4.088, 84.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=29 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.2563040599841334;  // std dev = 0.129, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.019268178662868063;  // std dev = 0.321, 90.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=21 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( enzyme(E, F), enzyme(D, F) )
%   | | then if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6751943288146255;  // std dev = 0.124, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1892985643662664;  // std dev = 0.047, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.3621404824583131;  // std dev = 0.204, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.03968094537283911;  // std dev = 5.115, 165.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=47 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6995593802454333;  // std dev = 0.455, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.20255015056347755;  // std dev = 0.124, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.45716186043554546;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4435704261110178;  // std dev = 0.238, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else return -0.1828416547984108;  // std dev = 0.108, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(G, E), enzyme(A, H) )
%   | | then return -0.03722760089766785;  // std dev = 0.292, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.47294560808420816;  // std dev = 1.134, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return -0.19801837589965102;  // std dev = 0.704, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else if ( interaction(A, J) )
%   | | then if ( interaction(J, A), enzyme(A, K) )
%   | | | then return 0.3517001822837158;  // std dev = 0.681, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.01600246961956316;  // std dev = 2.368, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | else if ( location(A, L) )
%   | | | then return 0.08825308537797193;  // std dev = 3.447, 61.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=22 */
%   | | | else return 0.4056750519585641;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( phenotype(C, D), interaction(C, A) )
%   | then return -0.026875155393225693;  // std dev = 0.200, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | else return 0.025331989501589876;  // std dev = 0.263, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B), interaction(A, G) )
%   | | then if ( interaction(F, G) )
%   | | | then return 0.4665430208416757;  // std dev = 0.485, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.01162816784967631;  // std dev = 0.570, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.16917405810431985;  // std dev = 0.160, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.05848817958294149;  // std dev = 4.784, 174.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=61 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.24512408937701338;  // std dev = 1.275, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return -0.1519131246210191;  // std dev = 0.160, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.06590441071989334;  // std dev = 0.355, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.15035989973363784;  // std dev = 0.111, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.18231523522115856;  // std dev = 0.059, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( location(E, G) )
%   | | then if ( enzyme(E, H), location(F, G) )
%   | | | then return -0.023791305265700356;  // std dev = 2.006, 61.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=13 */
%   | | | else return 0.03430099263640985;  // std dev = 2.469, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   | | else return -0.1922939740712688;  // std dev = 0.101, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, I), interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.33788537515747036;  // std dev = 2.259, 36.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=29 */
%   | | | else return -0.1962942897003654;  // std dev = 0.383, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.12862821597478524;  // std dev = 2.115, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.06793963056210324;  // std dev = 2.616, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(A, E), recursion_proteinclass(D, B) )
%   | then return 0.27910082436202743;  // std dev = 0.205, 33.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   | else if ( interaction(A, F), interaction(D, F) )
%   | | then return -0.1104813208691341;  // std dev = 0.190, 88.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=8 */
%   | | else if ( interaction(D, D), complex(D, G) )
%   | | | then return -0.02204394471525588;  // std dev = 2.384, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | | | else return 0.06665674230349797;  // std dev = 3.792, 91.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=36 */
%   else if ( interaction(A, H), complex(H, I) )
%   | then if ( enzyme(H, J) )
%   | | then return 0.06339987852907894;  // std dev = 0.576, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.0150681146737192;  // std dev = 0.273, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.0420838505840045;  // std dev = 1.172, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.1900024224996949;  // std dev = 0.084, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.028540563693730352;  // std dev = 0.986, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
Inference time using transfer learning 59.9030864238739
Refined model CLL: -0.2312


******************************************
Best model found
******************************************
Results 

CLL : -0.239355 

AUC ROC : 0.950315 

AUC PR : 0.266911 

Precision : 0.207792 

Recall : 0.483019 

F1 : 0.290579 

Total Learning Time : 19.037943601608276 

Total Inference Time : 20.559291124343872 

Total revision time: 43.20168209075928
Best scored revision CLL: -0.2312


Results 

CLL : -0.239355 

AUC ROC : 0.950315 

AUC PR : 0.266911 

Precision : 0.207792 

Recall : 0.483019 

F1 : 0.290579 

Total Learning Time : 43.2113242149353 

Total Inference Time : 20.559291124343872 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.2779793739318848
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1764880354455331;  // std dev = 7.919, 289.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1388503319001514;  // std dev = 5.960, 168.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=51 */
%   | | | else return 0.17412187853533556;  // std dev = 5.206, 121.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.22824182421248906;  // std dev = 5.073, 106.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=44 */
%   | | | else return 0.13475578005489883;  // std dev = 5.705, 149.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.09939683643214804;  // std dev = 4.202, 81.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=26 */
%   | | | else return 0.12945845534634592;  // std dev = 6.587, 192.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11137358954824633;  // std dev = 7.742, 264.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0906888896400126;  // std dev = 7.742, 264.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7166714161872593;  // std dev = 0.043, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2840370528145822;  // std dev = 0.064, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06360525013845279;  // std dev = 4.096, 76.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=25 */
%   | | | else return 0.06596083441143344;  // std dev = 3.901, 68.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.11804438233799118;  // std dev = 3.869, 99.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=44 */
%   | | | else return 0.04713989814932109;  // std dev = 5.677, 146.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.009399581360786445;  // std dev = 7.148, 291.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02520262870848286;  // std dev = 7.051, 272.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=92 */
Inference time using transfer learning 3.648761510848999
Parameter learned model CLL:-0.332404 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.919, 197, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.96, 117, 51], 'false,false,false,false': [5.206, 80, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.073, 62, 44], 'false,false,false,false': [5.705, 101, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.202, 55, 26], 'false,false,false,false': [6.587, 126, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.742, 172, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.742, 172, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.043, 0, 44], 'true,false': [0.064, 93, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.096, 51, 25], 'false,false,false,false': [3.901, 45, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.869, 55, 44], 'false,false,false,false': [5.677, 98, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.148, 199, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.051, 180, 92]}]
{'': [nan, 0.21699931753690807], 'false': [nan, 0.21699931753690782], 'false,false': [nan, 0.21699931753690807], 'false,false,false': [nan, 0.21699931753690782]}
{'': [nan, 0.21699931753691026], 'false': [nan, 0.21699931753690624], 'false,false': [nan, 0.21699931753691026], 'false,false,false': [0.21141581632652945, 0.22402841335974413]}
{'': [nan, 0.23066199493310988], 'false': [nan, 0.23066199493310988], 'false,false': [nan, 0.23066199493311046], 'false,false,false': [0.2427405671395327, 0.21843623659537673]}
{'': [nan, 0.22376823764043344], 'false': [nan, 0.22376823764043344], 'false,false': [nan, 0.22376823764043344], 'false,false,false': [0.21795458009449667, 0.22595274337194407]}
{'': [nan, 0.22704086640315377], 'false': [nan, 0.22704086640315377], 'false,false': [nan, 0.2270408664031533], 'false,false,false': [nan, 0.2270408664031533]}
{'': [nan, 0.22701486783598107], 'false': [nan, 0.22701486783598107], 'false,false': [nan, 0.22701486783598004], 'false,false,false': [nan, 0.22701486783598088]}
{'': [0.2183716754910791, 0.2222021053070732], 'false': [nan, 0.2222021053070732], 'false,false': [nan, 0.2222021053070732], 'false,false,false': [0.2207409972299169, 0.2238321799307962], 'true': [4.2750428187203355e-05, 4.396150295663549e-05], 'true,true': [nan, 4.2750428187203355e-05], 'true,true,false': [nan, 4.2750428187203355e-05]}
{'': [nan, 0.1938338052709697], 'false': [nan, 0.1938338052709697], 'false,false': [nan, 0.19383380527097063], 'false,false,false': [0.151173496342188, 0.22072950251296455]}
{'': [nan, 0.17558519350676247], 'false': [nan, 0.17558519350676258], 'false,false': [nan, 0.17558519350676258], 'false,false,false': [nan, 0.17558519350676258]}
{'': [nan, 0.18277751544411538], 'false': [nan, 0.18277751544411538], 'false,false': [nan, 0.18277751544411572], 'false,false,false': [nan, 0.18277751544411572]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 10.853599309921265
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( phenotype(A, E) )
%   | | | then return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.0010060779566550668;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.06867525088898606;  // std dev = 2.513, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | | | else return 0.1826170202058941;  // std dev = 6.419, 188.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=61 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109542;  // std dev = 5.16e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( complex(D, E) )
%   | | then if ( enzyme(A, F), interaction(D, D) )
%   | | | then return 0.506149860216725;  // std dev = 0.823, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.03613233192769305;  // std dev = 1.865, 35.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | else if ( complex(D, G), interaction(H, A) )
%   | | | then return 0.44249976204945957;  // std dev = 1.096, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.11716902339106777;  // std dev = 2.227, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.5631660001050113;  // std dev = 0.926, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.19511759732548642;  // std dev = 3.918, 67.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=24 */
%   | | | else return 0.12174110607940611;  // std dev = 4.857, 115.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=33 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.5892124338118994;  // std dev = 0.057, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( enzyme(A, D), enzyme(C, D) )
%   | | then return -0.1617458179365703;  // std dev = 0.075, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0.08224469510837873;  // std dev = 0.437, 205.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=56 */
%   else if ( complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.750469477502611;  // std dev = 0.124, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.1876597831571759;  // std dev = 0.065, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( enzyme(A, I), enzyme(G, I) )
%   | | | then return 0.16668690604423028;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5456899405076642;  // std dev = 1.480, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.24549500585876963;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.1502569106206744;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.4093060708723084;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.4932327762243647;  // std dev = 0.176, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.7924979755738933;  // std dev = 0.092, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.6786456141364069;  // std dev = 0.344, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.19822483834760715;  // std dev = 0.383, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.06579930447188861;  // std dev = 1.286, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return 0.09622775969541725;  // std dev = 2.378, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.31182411436360125;  // std dev = 1.645, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.18656557129200513;  // std dev = 4.060, 75.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=30 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.357583218441082;  // std dev = 0.073, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( enzyme(C, D) )
%   | | then return -0.11624933561823728;  // std dev = 0.053, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0.14242923037174193;  // std dev = 0.399, 58.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=23 */
%   else if ( complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.6015776137042584;  // std dev = 0.197, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return -0.18635028643595541;  // std dev = 0.042, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7405165965149061;  // std dev = 0.269, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.22809406956602193;  // std dev = 0.044, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(J, A), interaction(A, K) )
%   | | | then return 0.13071222115304498;  // std dev = 1.009, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.016141598647151926;  // std dev = 4.084, 90.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=26 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), complex(A, E) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.24747336847681112;  // std dev = 0.224, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.5589164292863655;  // std dev = 0.754, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else if ( interaction(F, A), interaction(F, D) )
%   | | | then return 0.6186163464588832;  // std dev = 0.789, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return 0.024013877708849312;  // std dev = 2.805, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | else if ( interaction(A, G), complex(A, H) )
%   | | then if ( enzyme(G, I) )
%   | | | then return -0.12894168539831435;  // std dev = 0.187, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.1768536967927559;  // std dev = 0.214, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(J, A) )
%   | | | then return -0.20512910703954365;  // std dev = 0.249, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | | else return -0.2846347333253461;  // std dev = 0.227, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.07289026780449522;  // std dev = 0.305, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.1918375689984538;  // std dev = 0.046, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.4327011513007276;  // std dev = 0.113, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.15236090277649608;  // std dev = 0.038, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.27265264129524575;  // std dev = 0.160, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4229516401464783;  // std dev = 1.425, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.17351066339730445;  // std dev = 0.237, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then return 0.2686267255749435;  // std dev = 0.835, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.20223805069453504;  // std dev = 0.823, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.07975387154087549;  // std dev = 3.179, 60.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=22 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), location(A, E) )
%   | then return 0.15134276808885486;  // std dev = 0.047, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.22064862735444885;  // std dev = 0.116, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), interaction(I, J) )
%   | | | then return 0.21734711754190744;  // std dev = 0.756, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.3999652994639742;  // std dev = 0.444, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.15340188489301304;  // std dev = 0.027, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else if ( location(A, K), interaction(A, L) )
%   | | then if ( complex(A, M), phenotype(A, N) )
%   | | | then return -0.0367242249937615;  // std dev = 0.688, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.030599994306464387;  // std dev = 3.034, 69.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=22 */
%   | | else if ( complex(A, P) )
%   | | | then return 0.029190748257761804;  // std dev = 1.171, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return 0.15385562582558016;  // std dev = 1.743, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.14544052668345533;  // std dev = 0.039, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), enzyme(A, E) )
%   | then if ( phenotype(A, F) )
%   | | then if ( interaction(G, A), interaction(G, D) )
%   | | | then return -0.044991145580407337;  // std dev = 0.424, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.013599838399725029;  // std dev = 1.322, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else if ( complex(D, H), complex(A, H) )
%   | | | then return -0.13757229153053233;  // std dev = 1.008, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return -0.04045217176504011;  // std dev = 1.150, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | else if ( interaction(I, A), phenotype(A, J) )
%   | | then if ( enzyme(I, K) )
%   | | | then return 0.1721280194034527;  // std dev = 0.365, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.02377026463910924;  // std dev = 1.658, 61.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return -0.0014409069735220657;  // std dev = 1.545, 52.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | | | else return 0.0393905561282291;  // std dev = 3.255, 81.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=29 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), location(C, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.19001003728474178;  // std dev = 0.131, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(A, C) )
%   | | | then return -0.08091916271695603;  // std dev = 0.138, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.0017755285675151655;  // std dev = 2.750, 126.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=42 */
%   | else return -0.04823668069160507;  // std dev = 0.227, 71.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=17 */
%   else if ( complex(A, F) )
%   | then return 0.005781890416150144;  // std dev = 0.142, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.6494851316170333;  // std dev = 0.097, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.29685673252813966;  // std dev = 0.109, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.13146116899613128;  // std dev = 0.980, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.013540981381607458;  // std dev = 1.926, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
Inference time using transfer learning 71.36442565917969
Refined model CLL: -0.187295


******************************************
Best model found
******************************************
Results 

CLL : -0.192687 

AUC ROC : 0.988235 

AUC PR : 0.273487 

Precision : 0.211255 

Recall : 0.880866 

F1 : 0.340782 

Total Learning Time : 10.853599309921265 

Total Inference Time : 9.790969610214233 

Total revision time: 23.59554123878479
Best scored revision CLL: -0.187295


Results 

CLL : -0.192687 

AUC ROC : 0.988235 

AUC PR : 0.273487 

Precision : 0.211255 

Recall : 0.880866 

F1 : 0.340782 

Total Learning Time : 23.605183362960815 

Total Inference Time : 9.790969610214233 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.1781408786773682
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1980698837161135;  // std dev = 7.534, 253.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15933199781729457;  // std dev = 5.916, 159.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=52 */
%   | | | else return 0.16562130599339522;  // std dev = 4.761, 102.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15857656169683554;  // std dev = 4.266, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
%   | | | else return 0.13243269810082645;  // std dev = 6.262, 179.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.16313355673815189;  // std dev = 3.432, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
%   | | | else return 0.09796315775343839;  // std dev = 6.792, 215.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10994894586347394;  // std dev = 7.514, 250.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09578132261052087;  // std dev = 7.476, 246.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7178695833566667;  // std dev = 0.029, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2816086867626806;  // std dev = 0.041, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.005056418183716069;  // std dev = 4.899, 121.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=33 */
%   | | | else return 0.06442782868736198;  // std dev = 4.082, 75.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.049561131643579955;  // std dev = 3.339, 78.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=28 */
%   | | | else return 0.03204847529357049;  // std dev = 6.346, 189.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03162893422923743;  // std dev = 7.130, 269.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04011119048341535;  // std dev = 7.058, 254.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=86 */
Inference time using transfer learning 3.983980655670166
Parameter learned model CLL:-0.336354 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.534, 167, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.916, 107, 52], 'false,false,false,false': [4.761, 68, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.266, 52, 28], 'false,false,false,false': [6.262, 121, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.432, 31, 19], 'false,false,false,false': [6.792, 148, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.514, 164, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.476, 160, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.029, 0, 28], 'true,false': [0.041, 52, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.899, 88, 33], 'false,false,false,false': [4.082, 50, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.339, 50, 28], 'false,false,false,false': [6.346, 131, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.13, 183, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.058, 168, 86]}]
{'': [nan, 0.22437469730819184], 'false': [nan, 0.22437469730819165], 'false,false': [nan, 0.22437469730819184], 'false,false,false': [nan, 0.22437469730819165]}
{'': [nan, 0.22093040325303476], 'false': [nan, 0.22093040325303487], 'false,false': [nan, 0.22093040325303476], 'false,false,false': [0.22008623076618783, 0.22222222222222213]}
{'': [nan, 0.2217983008397215], 'false': [nan, 0.2217983008397215], 'false,false': [nan, 0.22179830083972113], 'false,false,false': [0.22747705566816637, 0.21904918966846182]}
{'': [nan, 0.21918548662269227], 'false': [nan, 0.21918548662269227], 'false,false': [nan, 0.21918548662269255], 'false,false,false': [0.2356000000000006, 0.2145668030427822]}
{'': [nan, 0.22581709848117737], 'false': [nan, 0.22581709848117737], 'false,false': [nan, 0.2258170984811776], 'false,false,false': [nan, 0.2258170984811776]}
{'': [nan, 0.22717822155590334], 'false': [nan, 0.22717822155590334], 'false,false': [nan, 0.22717822155590395], 'false,false,false': [nan, 0.22717822155590262]}
{'': [0.22729466346443786, 0.20831569446226475], 'true': [3.072799833457397e-05, 3.266743807197091e-05], 'false': [nan, 0.20831569446226475], 'false,false': [nan, 0.20831569446226475], 'false,false,false': [0.19834710743801653, 0.222222222222222], 'true,true': [nan, 3.072799833457397e-05], 'true,true,false': [nan, 3.072799833457397e-05]}
{'': [nan, 0.1926544136221186], 'false': [nan, 0.1926544136221186], 'false,false': [nan, 0.19265441362211894], 'false,false,false': [0.14297568434230898, 0.21306715059421705]}
{'': [nan, 0.18896364700257984], 'false': [nan, 0.18896364700257928], 'false,false': [nan, 0.18896364700257928], 'false,false,false': [nan, 0.18896364700257928]}
{'': [nan, 0.1961002322047301], 'false': [nan, 0.1961002322047301], 'false,false': [nan, 0.19610023220472986], 'false,false,false': [nan, 0.19610023220472986]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 7.558025360107422
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), enzyme(E, F) )
%   | | then if ( interaction(D, G), interaction(A, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.4414822684328456;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else return 0.8325079094584862;  // std dev = 0.158, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | else return -0.14185106490048763;  // std dev = 8.69e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(K, A), location(A, L) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.08037115732173444;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( complex(A, M), interaction(A, N) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.10472427756526578;  // std dev = 3.683, 73.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=18 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.4368369271659763;  // std dev = 0.787, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.7213112421780791;  // std dev = 0.009, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, E), location(A, F) )
%   | then if ( interaction(E, A), location(E, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.3433108931677667;  // std dev = 1.158, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.14278730709562631;  // std dev = 0.200, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.18587678396540985;  // std dev = 2.891, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | | | else return 0.07032374585287832;  // std dev = 2.969, 59.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=14 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.5121033424570797;  // std dev = 0.736, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.12253484154983119;  // std dev = 3.247, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return 0.26935091020925533;  // std dev = 2.839, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(D, D) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.5658744975731855;  // std dev = 0.062, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.03195325090679916;  // std dev = 0.370, 62.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=13 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.6203370055434342;  // std dev = 0.097, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(A, E), phenotype(C, F) )
%   | | | then return 0.12897441250953662;  // std dev = 3.378, 72.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=23 */
%   | | | else return 0.25757908264317375;  // std dev = 3.080, 45.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=21 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.5570204630978192;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( complex(I, J), complex(A, J) )
%   | | | then return -0.03833772648770943;  // std dev = 0.801, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.09914289474010339;  // std dev = 2.238, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else return 0.004567784396671099;  // std dev = 0.357, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then if ( interaction(A, D) )
%   | | then return 0.4332942959297705;  // std dev = 0.091, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.5184853791722177;  // std dev = 0.204, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.038136498152617125;  // std dev = 0.892, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, A) )
%   | then return -0.1310312973496069;  // std dev = 0.091, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(E, A), complex(A, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.11677529250151958;  // std dev = 2.064, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return -0.02992631807642853;  // std dev = 2.179, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.03904308957208202;  // std dev = 2.470, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | | else return 0.11573815069039911;  // std dev = 4.846, 132.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=44 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3516091248219353;  // std dev = 0.171, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( location(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then if ( interaction(F, F), phenotype(F, G) )
%   | | | then return -0.023849678700336444;  // std dev = 1.162, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return -0.13321417211767111;  // std dev = 0.564, 29.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=1 */
%   | | else if ( recursion_proteinclass(E, B) )
%   | | | then return 0.2948938042094647;  // std dev = 0.807, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.06295229777688179;  // std dev = 5.206, 162.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=48 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7282605792077587;  // std dev = 0.153, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1537087376059368;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.02602472804304599;  // std dev = 1.295, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.25188598897206105;  // std dev = 1.636, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, E) )
%   | | then if ( interaction(F, D), interaction(E, F) )
%   | | | then return 0.2122822113921091;  // std dev = 0.740, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.5220506484182944;  // std dev = 0.375, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.5930001303394439;  // std dev = 0.104, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.16914035850220244;  // std dev = 0.263, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.2806417700245448;  // std dev = 0.053, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(H, J), enzyme(J, K) )
%   | | | then return -0.09075067325676615;  // std dev = 1.510, 27.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | | else return 0.10710691813658091;  // std dev = 1.551, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( complex(A, L), enzyme(A, M) )
%   | | | then return -0.06136251473182137;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.06807642374948313;  // std dev = 3.172, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.20684369880412062;  // std dev = 0.094, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( phenotype(A, F), interaction(A, G) )
%   | | | then return 0.38542711266409824;  // std dev = 0.178, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.6226229404565871;  // std dev = 0.502, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.16948314942845788;  // std dev = 0.078, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.24413676713788282;  // std dev = 0.045, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(K, A), enzyme(A, L) )
%   | | | then return 0.21546595926326875;  // std dev = 0.869, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.05584170348041974;  // std dev = 1.842, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.051804885284202566;  // std dev = 2.643, 71.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=25 */
%   | | | else return 0.15309216944216744;  // std dev = 2.937, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then return -0.015153218528386709;  // std dev = 0.247, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(G, F), interaction(F, G) )
%   | | then if ( interaction(A, G), recursion_proteinclass(F, B) )
%   | | | then return 0.3092435706713577;  // std dev = 0.384, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.028003876076011142;  // std dev = 3.122, 68.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
%   | | else if ( phenotype(F, H), phenotype(E, I) )
%   | | | then return -0.07261433346231988;  // std dev = 1.601, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.04705358355800468;  // std dev = 1.560, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.376673931412689;  // std dev = 1.518, 27.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=22 */
%   | | | else return -0.1819482857516793;  // std dev = 0.257, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(A, L) )
%   | | | then return -0.05310313665499562;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.02570212226333583;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.2884805611850077;  // std dev = 0.184, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.06183268133669867;  // std dev = 0.272, 98.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=20 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.3360829184635275;  // std dev = 0.432, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(G, H), complex(G, I) )
%   | | | then return -0.08123521263642094;  // std dev = 0.259, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.10787208705838874;  // std dev = 1.382, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( complex(J, L), interaction(M, J) )
%   | | | then return 0.09710592566591301;  // std dev = 2.104, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return 0.03837029366971456;  // std dev = 2.317, 50.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return -0.07214706770179082;  // std dev = 1.080, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.04446765280382832;  // std dev = 1.116, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.11988957696507702;  // std dev = 0.053, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.23094669631108097;  // std dev = 0.136, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( complex(A, E), enzyme(A, F) )
%   | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.3213635162108029;  // std dev = 0.114, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.582145385977251;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return -0.20479471459909243;  // std dev = 0.240, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.11957971699672368;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, A) )
%   | | then return -0.10334238718534093;  // std dev = 0.129, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.017684069736266995;  // std dev = 3.246, 131.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=39 */
%   | | | else return 0.04119408999107054;  // std dev = 3.418, 65.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=23 */
Inference time using transfer learning 29.906168937683105
Refined model CLL: -0.219464


******************************************
Best model found
******************************************
Results 

CLL : -0.237222 

AUC ROC : 0.947016 

AUC PR : 0.24751 

Precision : 0.228614 

Recall : 0.547703 

F1 : 0.322581 

Total Learning Time : 7.558025360107422 

Total Inference Time : 3.724869966506958 

Total revision time: 14.077296018600464
Best scored revision CLL: -0.219464


Results 

CLL : -0.237222 

AUC ROC : 0.947016 

AUC PR : 0.24751 

Precision : 0.228614 

Recall : 0.547703 

F1 : 0.322581 

Total Learning Time : 14.08693814277649 

Total Inference Time : 3.724869966506958 

Run: 4

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.213240623474121
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19021000380180236;  // std dev = 7.623, 262.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.14992899070719393;  // std dev = 5.484, 139.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=44 */
%   | | | else return 0.147250841255952;  // std dev = 5.432, 137.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.12986439908614966;  // std dev = 4.885, 110.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=35 */
%   | | | else return 0.1913184471181194;  // std dev = 5.680, 137.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11870892590497101;  // std dev = 3.666, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | | else return 0.11611387488843347;  // std dev = 6.687, 201.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08831211014081153;  // std dev = 7.669, 269.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06930587293068863;  // std dev = 7.686, 271.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7419116107767957;  // std dev = 0.003, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.258090753440908;  // std dev = 0.004, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.03772938557838;  // std dev = 4.076, 78.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=24 */
%   | | | else return 0.08953892914613827;  // std dev = 4.237, 78.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.07023161875213682;  // std dev = 3.746, 98.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=35 */
%   | | | else return 0.028667716959025463;  // std dev = 5.983, 167.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.029630569082543516;  // std dev = 7.083, 270.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04600533468545965;  // std dev = 6.928, 254.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=87 */
Inference time using transfer learning 3.655082941055298
Parameter learned model CLL:-0.331296 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.623, 175, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.484, 95, 44], 'false,false,false,false': [5.432, 94, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.885, 75, 35], 'false,false,false,false': [5.68, 85, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.666, 41, 20], 'false,false,false,false': [6.687, 134, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.669, 182, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.686, 184, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.003, 0, 35], 'true,false': [0.004, 61, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.076, 54, 24], 'false,false,false,false': [4.237, 50, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.746, 63, 35], 'false,false,false,false': [5.983, 115, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.083, 183, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.928, 167, 87]}]
{'': [nan, 0.22179651535458392], 'false': [nan, 0.22179651535458392], 'false,false': [nan, 0.22179651535458392], 'false,false,false': [nan, 0.22179651535458392]}
{'': [nan, 0.2158553875236302], 'false': [nan, 0.21585538752363095], 'false,false': [nan, 0.2158553875236302], 'false,false,false': [0.21634490968376482, 0.2153551068250843]}
{'': [nan, 0.22815618946163038], 'false': [nan, 0.22815618946163038], 'false,false': [nan, 0.22815618946163022], 'false,false,false': [0.2169448957024556, 0.23547607152500893]}
{'': [nan, 0.22196932740587264], 'false': [nan, 0.22196932740587264], 'false,false': [nan, 0.22196932740587164], 'false,false,false': [0.22037086804622402, 0.22245286408049328]}
{'': [nan, 0.21861067483702817], 'false': [nan, 0.21861067483702817], 'false,false': [nan, 0.2186106748370276], 'false,false,false': [nan, 0.2186106748370276]}
{'': [nan, 0.21799288053056015], 'false': [nan, 0.21799288053056015], 'false,false': [nan, 0.21799288053055985], 'false,false,false': [nan, 0.2179928805305604]}
{'': [0.2316636711538128, 0.22223581722747363], 'true': [2.495834855104866e-07, 2.492369352942243e-07], 'false': [nan, 0.22223581722747363], 'false,false': [nan, 0.22223581722747363], 'false,false,false': [0.21301775147929, 0.23011176857330762], 'true,true': [nan, 2.495834855104866e-07], 'true,true,false': [nan, 2.495834855104866e-07]}
{'': [nan, 0.18844231922257923], 'false': [nan, 0.18844231922257923], 'false,false': [nan, 0.18844231922257987], 'false,false,false': [0.14316262487476925, 0.21437476638319797]}
{'': [nan, 0.18579764836480664], 'false': [nan, 0.18579764836480686], 'false,false': [nan, 0.18579764836480686], 'false,false,false': [nan, 0.18579764836480686]}
{'': [nan, 0.18897439244512582], 'false': [nan, 0.18897439244512582], 'false,false': [nan, 0.18897439244512468], 'false,false,false': [nan, 0.18897439244512468]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 17.53770399093628
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, A) )
%   then if ( interaction(A, C), recursion_proteinclass(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.7470378239884012;  // std dev = 0.314, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0.15922420391671763;  // std dev = 6.256, 186.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=56 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.5929786775655459;  // std dev = 0.349, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | else if ( interaction(F, D), interaction(F, A) )
%   | | then return -0.06439775044672019;  // std dev = 0.264, 64.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=5 */
%   | | else return 0.1957359615576354;  // std dev = 0.482, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   else if ( complex(A, G), phenotype(A, H) )
%   | then if ( complex(I, G), recursion_proteinclass(I, B) )
%   | | then return 0.798243797769561;  // std dev = 0.052, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.15991369914092832;  // std dev = 0.121, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.8376404724806319;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1623595275193681;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(L, A), complex(A, M) )
%   | | | then return 0.3285069638336384;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.18768110545411296;  // std dev = 3.893, 68.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=24 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.4814598052473269;  // std dev = 0.314, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | else if ( interaction(C, F), interaction(D, F) )
%   | | then return -0.09737278042384326;  // std dev = 0.164, 32.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=1 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.13715557663597366;  // std dev = 2.643, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return 0.3104134713078916;  // std dev = 1.876, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( complex(A, H) )
%   | then return 0.07860918073352799;  // std dev = 0.387, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.6782452550702369;  // std dev = 1.048, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.18279892944513132;  // std dev = 0.155, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.2649253156467444;  // std dev = 1.747, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.1632012129786647;  // std dev = 2.620, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.6013325684708762;  // std dev = 0.140, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2762279704152514;  // std dev = 0.661, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( enzyme(A, G), interaction(A, H) )
%   | | then if ( complex(E, I), complex(H, J) )
%   | | | then return 0.3523197954229388;  // std dev = 1.416, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.028203634211398897;  // std dev = 1.443, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( interaction(A, K), phenotype(A, L) )
%   | | | then return -0.020691172817613228;  // std dev = 2.078, 45.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=8 */
%   | | | else return 0.06811958115107582;  // std dev = 4.036, 105.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=32 */
%   | else if ( interaction(A, M), interaction(M, M) )
%   | | then return -0.024059885542991846;  // std dev = 0.221, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( complex(A, N), interaction(P, A) )
%   | | | then return 0.006014030090539095;  // std dev = 1.235, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.18730077475267648;  // std dev = 3.483, 55.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=23 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.4461085428135947;  // std dev = 0.083, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(D, F), interaction(G, A) )
%   | | then return -0.059785489751929904;  // std dev = 0.270, 32.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
%   | | else if ( enzyme(D, H) )
%   | | | then return 0.014208889584645154;  // std dev = 0.526, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.19731772978331286;  // std dev = 2.107, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   else if ( phenotype(A, I), enzyme(A, J) )
%   | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | then return 0.6450535451539816;  // std dev = 0.089, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.1918782673273852;  // std dev = 0.081, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.49571155183527427;  // std dev = 0.309, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, M), location(A, N) )
%   | | | then return 0.09370681075058522;  // std dev = 2.851, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | | else return 0.029135295372864148;  // std dev = 4.450, 128.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=34 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.26073050178309487;  // std dev = 0.065, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.025942247714072875;  // std dev = 0.316, 82.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=18 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, D) )
%   | | | then return 0.4283875407929645;  // std dev = 0.098, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.10419568560976872;  // std dev = 0.597, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.6010471586472356;  // std dev = 0.136, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.0382442208920197;  // std dev = 2.702, 62.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=11 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.5227183629156017;  // std dev = 0.175, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, H), interaction(I, A) )
%   | | | then return 0.33142314794632344;  // std dev = 1.371, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.08632562762254249;  // std dev = 4.255, 96.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=33 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5458602956741152;  // std dev = 0.180, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.19937289762221203;  // std dev = 0.073, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.2853430715140291;  // std dev = 0.164, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, H), phenotype(H, F) )
%   | | | then return -0.1585830321820853;  // std dev = 1.216, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 4.900308546666388E-4;  // std dev = 3.195, 75.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=21 */
%   | else if ( enzyme(A, I), location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5909290793122777;  // std dev = 0.413, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.21638328473108215;  // std dev = 0.128, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( location(A, L) )
%   | | | then return 0.0404103393377447;  // std dev = 2.971, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | | else return 0.36655563017289255;  // std dev = 0.654, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.15909704040644446;  // std dev = 0.093, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3513909903816578;  // std dev = 0.190, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(D, G) )
%   | | | then return 0.2607267622055881;  // std dev = 0.097, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.39387250025354376;  // std dev = 0.111, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.09712021205436423;  // std dev = 0.122, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.01831429118712739;  // std dev = 3.208, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14704943064631684;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( location(A, H) )
%   | | | then return 0.05848539087574134;  // std dev = 4.229, 122.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=43 */
%   | | | else return 0.17578821635230768;  // std dev = 0.940, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C) )
%   | then return 0.13911478565366697;  // std dev = 0.084, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.31763090538824845;  // std dev = 0.245, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.45135855785574536;  // std dev = 2.448, 75.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=68 */
%   | | | else return -0.09995333168187566;  // std dev = 1.264, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.08599300456926615;  // std dev = 0.051, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.21803859899706474;  // std dev = 0.698, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then return 0.04050252829507412;  // std dev = 0.866, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.27075627989206297;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.1113939042365018;  // std dev = 0.701, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return 0.3971627240065143;  // std dev = 2.016, 67.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=61 */
%   | | else if ( interaction(A, F), interaction(D, F) )
%   | | | then return 0.2973178367422146;  // std dev = 0.664, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.20620409354409097;  // std dev = 0.670, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( interaction(A, G), interaction(G, A) )
%   | | then return -0.08156227579417513;  // std dev = 0.064, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.17833132438445215;  // std dev = 0.066, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return 0.029466135602541195;  // std dev = 0.501, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then return -0.24100761934214124;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.11988306105220255;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
Inference time using transfer learning 95.454749584198
Refined model CLL: -0.195609


******************************************
Best model found
******************************************
Results 

CLL : -0.180323 

AUC ROC : 0.98803 

AUC PR : 0.330254 

Precision : 0.243304 

Recall : 0.77305 

F1 : 0.370119 

Total Learning Time : 17.53770399093628 

Total Inference Time : 17.433836460113525 

Total revision time: 37.930564880371094
Best scored revision CLL: -0.195609


Results 

CLL : -0.180323 

AUC ROC : 0.98803 

AUC PR : 0.330254 

Precision : 0.243304 

Recall : 0.77305 

F1 : 0.370119 

Total Learning Time : 37.94125247001648 

Total Inference Time : 17.433836460113525 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.4099042415618896
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18622464487869259;  // std dev = 8.359, 317.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1510080559850565;  // std dev = 5.959, 164.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=52 */
%   | | | else return 0.18060155192001587;  // std dev = 5.829, 150.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13601327674601246;  // std dev = 5.259, 126.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=41 */
%   | | | else return 0.14058237145774463;  // std dev = 6.490, 190.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11252542735777415;  // std dev = 4.433, 90.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=29 */
%   | | | else return 0.12095279362453369;  // std dev = 7.064, 224.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09907938728273455;  // std dev = 8.334, 313.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06222627056371293;  // std dev = 8.447, 332.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7391824053314283;  // std dev = 0.021, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.2604199529430465;  // std dev = 0.029, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.1098035613052471;  // std dev = 3.804, 62.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=23 */
%   | | | else return 0.10005778602211667;  // std dev = 5.032, 109.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.09753060358135665;  // std dev = 3.929, 104.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=41 */
%   | | | else return 0.04101084404852604;  // std dev = 6.514, 193.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.029152295176313507;  // std dev = 7.708, 318.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.023649004710810797;  // std dev = 7.709, 316.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=104 */
Inference time using transfer learning 3.5839550495147705
Parameter learned model CLL:-0.333482 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.359, 213, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.959, 112, 52], 'false,false,false,false': [5.829, 98, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.259, 85, 41], 'false,false,false,false': [6.49, 127, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.433, 61, 29], 'false,false,false,false': [7.064, 149, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.334, 209, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.447, 228, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.021, 0, 41], 'true,false': [0.029, 88, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.804, 39, 23], 'false,false,false,false': [5.032, 69, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.929, 63, 41], 'false,false,false,false': [6.514, 130, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.708, 214, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.709, 212, 104]}]
{'': [nan, 0.2204420384320692], 'false': [nan, 0.2204420384320678], 'false,false': [nan, 0.2204420384320692], 'false,false,false': [nan, 0.2204420384320678]}
{'': [nan, 0.22151000040569122], 'false': [nan, 0.22151000040569693], 'false,false': [nan, 0.22151000040569122], 'false,false,false': [0.21653777513384986, 0.22648888888888985]}
{'': [nan, 0.22082214493379887], 'false': [nan, 0.22082214493379887], 'false,false': [nan, 0.22082214493379418], 'false,false,false': [0.21952091722092504, 0.22167674013994926]}
{'': [nan, 0.22154253381062036], 'false': [nan, 0.22154253381062036], 'false,false': [nan, 0.2215425338106228], 'false,false,false': [0.21839506172839526, 0.22278678693447854]}
{'': [nan, 0.22188925099384937], 'false': [nan, 0.22188925099384937], 'false,false': [nan, 0.22188925099385048], 'false,false,false': [nan, 0.22188925099385048]}
{'': [nan, 0.21493478598630308], 'false': [nan, 0.21493478598630308], 'false,false': [nan, 0.21493478598630228], 'false,false,false': [nan, 0.21493478598630356]}
{'': [0.21665177002473668, 0.2327052427621045], 'false': [nan, 0.2327052427621045], 'false,false': [nan, 0.2327052427621045], 'false,false,false': [0.2333506763787723, 0.2323036781415704], 'true': [1.1206223113988721e-05, 9.835048084120986e-06], 'true,true': [nan, 1.1206223113988721e-05], 'true,true,false': [nan, 1.1206223113988721e-05]}
{'': [nan, 0.19555984549120078], 'false': [nan, 0.19555984549120078], 'false,false': [nan, 0.19555984549120103], 'false,false,false': [0.1484241565997417, 0.21984078077381553]}
{'': [nan, 0.18682012559911507], 'false': [nan, 0.18682012559911607], 'false,false': [nan, 0.18682012559911607], 'false,false,false': [nan, 0.18682012559911607]}
{'': [nan, 0.1880682331434095], 'false': [nan, 0.1880682331434095], 'false,false': [nan, 0.18806823314340998], 'false,false,false': [nan, 0.18806823314340998]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 17.258371114730835
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(D, A) )
%   | | then if ( interaction(E, D), enzyme(D, F) )
%   | | | then return 0.12130682983635366;  // std dev = 4.292, 95.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=25 */
%   | | | else return 0.21218620218025855;  // std dev = 6.068, 161.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=57 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(A, E), interaction(A, D) )
%   | | | then return 0.5281778505219545;  // std dev = 1.074, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.7776460928048746;  // std dev = 1.967, 89.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=85 */
%   | | else if ( interaction(F, A) )
%   | | | then return -0.1665163288111787;  // std dev = 0.132, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return 0.7728947531721511;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.1646450191146985;  // std dev = 0.202, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   else if ( interaction(A, G) )
%   | then return 0.230308297381867;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(I, A) )
%   | | | then return 0.008141320347684522;  // std dev = 0.795, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.05253051960408925;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else return 0.08030829738186702;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C), complex(A, D) )
%   then if ( location(E, C), recursion_proteinclass(E, B) )
%   | then if ( complex(E, D) )
%   | | then return 0.6547936845709593;  // std dev = 0.063, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else if ( interaction(E, F), complex(F, D) )
%   | | | then return -0.3485207955162085;  // std dev = 0.168, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.1788847876462506;  // std dev = 0.355, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.14297898980858234;  // std dev = 0.132, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.6009417941813053;  // std dev = 0.144, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( enzyme(A, H), interaction(A, I) )
%   | | then if ( enzyme(I, J) )
%   | | | then return -0.004924972092190373;  // std dev = 1.334, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.15760547164882346;  // std dev = 1.333, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.30898576342456124;  // std dev = 1.644, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.14198544111070815;  // std dev = 4.634, 130.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=44 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.5626388886496091;  // std dev = 0.102, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, D) )
%   | | then return -0.13169711068492126;  // std dev = 0.045, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(F, D), enzyme(F, G) )
%   | | | then return 0.07557400475973941;  // std dev = 1.949, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.1941353326750328;  // std dev = 1.995, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   else if ( interaction(A, H), phenotype(A, I) )
%   | then if ( interaction(H, H) )
%   | | then return 0.08024507416236394;  // std dev = 0.338, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | else return -0.020444320626349297;  // std dev = 0.313, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.429649374714181;  // std dev = 0.069, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.10639845146405892;  // std dev = 2.925, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | | else return 0.051668024638905186;  // std dev = 3.254, 79.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=21 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.36824806745557415;  // std dev = 0.291, 41.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=35 */
%   | else return 0.04386078086519479;  // std dev = 0.344, 207.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=57 */
%   else if ( interaction(A, F), phenotype(F, G) )
%   | then if ( phenotype(A, G) )
%   | | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.5404917708477434;  // std dev = 0.101, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.26057477814110735;  // std dev = 0.234, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.27362310263600975;  // std dev = 1.018, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.684037541360316;  // std dev = 0.255, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.21053198281373078;  // std dev = 0.011, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.01837576418904096;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.04740925374852375;  // std dev = 1.064, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.33411903273618915;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.1559242022482782;  // std dev = 0.811, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.405341646068235;  // std dev = 0.112, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( complex(A, E), interaction(A, F) )
%   | then if ( complex(F, E), interaction(G, A) )
%   | | then return -0.06238980197761127;  // std dev = 0.221, 48.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=7 */
%   | | else return 8.281884495638189E-4;  // std dev = 0.241, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( phenotype(A, I), phenotype(H, I) )
%   | | | then return -0.16209787275702994;  // std dev = 0.125, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.020777671328752873;  // std dev = 2.260, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.11702786597921677;  // std dev = 1.616, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.05118446978102334;  // std dev = 4.681, 155.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=48 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.26916355533477515;  // std dev = 0.059, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(A, F), location(A, G) )
%   | | | then return 0.39859213255455483;  // std dev = 0.295, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.495887598117418;  // std dev = 0.207, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.16414267185581558;  // std dev = 0.078, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( interaction(A, A) )
%   | then return -0.10085917998843373;  // std dev = 0.355, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.44148716055749765;  // std dev = 2.228, 44.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=37 */
%   | | | else return -0.18275414497949888;  // std dev = 0.190, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.11648563221025687;  // std dev = 1.675, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.009273537294809472;  // std dev = 2.848, 60.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=17 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), enzyme(F, D) )
%   | | then return 0.2574416754053966;  // std dev = 0.252, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return -0.08478725326931467;  // std dev = 0.668, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.04799966367144829;  // std dev = 0.240, 73.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=16 */
%   else if ( phenotype(A, G), interaction(H, A) )
%   | then if ( recursion_proteinclass(H, B) )
%   | | then return 0.2644110506983351;  // std dev = 0.098, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(H, I), interaction(J, H) )
%   | | | then return 0.05281055610479183;  // std dev = 2.939, 94.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=32 */
%   | | | else return 0.17560910402217889;  // std dev = 1.050, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.20866189635658547;  // std dev = 0.044, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( location(A, L) )
%   | | | then return 0.005361109637485087;  // std dev = 3.094, 91.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=25 */
%   | | | else return 0.06856504978334066;  // std dev = 1.259, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( interaction(A, A) )
%   | | then return 0.18267023431741664;  // std dev = 0.049, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.02292484575921792;  // std dev = 0.447, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.28662393257318414;  // std dev = 0.102, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( complex(A, E), location(A, F) )
%   | then if ( complex(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.3016188241490962;  // std dev = 0.071, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.13762350773273302;  // std dev = 0.061, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(J, H), phenotype(A, K) )
%   | | | then return 0.03905566465541681;  // std dev = 2.148, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | | else return -0.0381473365201524;  // std dev = 1.763, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.05030354140059044;  // std dev = 2.321, 53.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
%   | | | else return 0.11645482444695648;  // std dev = 2.624, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.23761077120993723;  // std dev = 0.078, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.11888065889954995;  // std dev = 0.041, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( enzyme(A, E), phenotype(A, F) )
%   | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), interaction(H, A) )
%   | | | then return 0.15671927111947986;  // std dev = 0.382, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.4656947745360167;  // std dev = 0.351, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.17346718041820608;  // std dev = 0.055, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.2856273802580574;  // std dev = 0.875, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.18601934312081544;  // std dev = 0.192, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.06133907537258323;  // std dev = 2.300, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
%   | | | else return 0.029812416443277853;  // std dev = 3.183, 76.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=25 */
Inference time using transfer learning 70.80638003349304
Refined model CLL: -0.195184


******************************************
Best model found
******************************************
Results 

CLL : -0.205901 

AUC ROC : 0.992123 

AUC PR : 0.554813 

Precision : 0.327273 

Recall : 0.74717 

F1 : 0.455172 

Total Learning Time : 17.258371114730835 

Total Inference Time : 14.10663390159607 

Total revision time: 34.80824899673462
Best scored revision CLL: -0.195184


Results 

CLL : -0.205901 

AUC ROC : 0.992123 

AUC PR : 0.554813 

Precision : 0.327273 

Recall : 0.74717 

F1 : 0.455172 

Total Learning Time : 34.818936586380005 

Total Inference Time : 14.10663390159607 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.2218539714813232
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20929397326745144;  // std dev = 7.726, 262.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.14748559922969448;  // std dev = 5.903, 161.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=51 */
%   | | | else return 0.17238207956095625;  // std dev = 5.195, 120.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.0842436605638951;  // std dev = 5.640, 159.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=44 */
%   | | | else return 0.1549807635986216;  // std dev = 5.595, 138.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11266651593632616;  // std dev = 4.214, 82.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=26 */
%   | | | else return 0.11926328403038113;  // std dev = 6.627, 197.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1372660255568068;  // std dev = 7.611, 249.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09303840799678886;  // std dev = 7.727, 262.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.731661103675687;  // std dev = 0.020, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.26835545023026913;  // std dev = 0.028, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.012948965779760895;  // std dev = 4.201, 85.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=25 */
%   | | | else return 0.016403697114572808;  // std dev = 4.005, 76.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.045205293391362686;  // std dev = 4.251, 131.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=44 */
%   | | | else return 0.04672178993144253;  // std dev = 5.657, 144.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03218567408922385;  // std dev = 7.093, 279.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.016797335347685627;  // std dev = 7.141, 287.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=92 */
Inference time using transfer learning 3.688768148422241
Parameter learned model CLL:-0.324725 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.726, 170, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.903, 110, 51], 'false,false,false,false': [5.195, 79, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.64, 115, 44], 'false,false,false,false': [5.595, 90, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.214, 56, 26], 'false,false,false,false': [6.627, 131, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.611, 157, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.727, 170, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.02, 0, 44], 'true,false': [0.028, 85, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.201, 60, 25], 'false,false,false,false': [4.005, 53, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.251, 87, 44], 'false,false,false,false': [5.657, 96, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.093, 187, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.141, 195, 92]}]
{'': [nan, 0.22784220033797703], 'false': [nan, 0.22784220033797647], 'false,false': [nan, 0.22784220033797703], 'false,false,false': [nan, 0.22784220033797647]}
{'': [nan, 0.22020997707729367], 'false': [nan, 0.2202099770772901], 'false,false': [nan, 0.22020997707729367], 'false,false,false': [0.2164268353844353, 0.22493055555555622]}
{'': [nan, 0.2137383372648509], 'false': [nan, 0.2137383372648509], 'false,false': [nan, 0.21373833726485064], 'false,false,false': [0.20007222657952303, 0.2268053047970831]}
{'': [nan, 0.22107697743566254], 'false': [nan, 0.22107697743566254], 'false,false': [nan, 0.22107697743566163], 'false,false,false': [0.216537775133848, 0.22295360154643626]}
{'': [nan, 0.23265486297844518], 'false': [nan, 0.23265486297844518], 'false,false': [nan, 0.2326548629784444], 'false,false,false': [nan, 0.2326548629784444]}
{'': [nan, 0.22791014529981782], 'false': [nan, 0.22791014529981782], 'false,false': [nan, 0.2279101452998184], 'false,false,false': [nan, 0.22791014529981773]}
{'': [0.22476282785645899, 0.20923609563424492], 'true': [9.265837334414652e-06, 9.284197465335187e-06], 'false': [nan, 0.20923609563424492], 'false,false': [nan, 0.20923609563424492], 'false,false,false': [0.20761245674740486, 0.21104570637119102], 'true,true': [nan, 9.265837334414652e-06], 'true,true,false': [nan, 9.265837334414652e-06]}
{'': [nan, 0.18209485321958016], 'false': [nan, 0.18209485321958016], 'false,false': [nan, 0.18209485321957908], 'false,false,false': [0.1379454399907038, 0.2222574600090858]}
{'': [nan, 0.1803483466237491], 'false': [nan, 0.18034834662374888], 'false,false': [nan, 0.18034834662374888], 'false,false,false': [nan, 0.18034834662374888]}
{'': [nan, 0.17767819298285611], 'false': [nan, 0.17767819298285611], 'false,false': [nan, 0.17767819298285464], 'false,false,false': [nan, 0.17767819298285464]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 5.99700927734375
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( enzyme(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(D, D), location(D, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.08891816586874296;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( interaction(A, G), complex(A, H) )
%   | | then if ( interaction(G, G), enzyme(G, I) )
%   | | | then return 0.22178529873587596;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.08037115732173453;  // std dev = 2.789, 45.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=10 */
%   | | else if ( phenotype(A, J), complex(A, K) )
%   | | | then return 0.2510060779566552;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.15226658215833483;  // std dev = 5.941, 170.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=50 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, A), enzyme(A, D) )
%   | then return 0.4378340619645058;  // std dev = 0.690, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.8378645530423232;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( enzyme(A, G) )
%   | | then return -0.13986887572703025;  // std dev = 0.059, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(F, F) )
%   | | | then return 0.50525114668519;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.08318705686726115;  // std dev = 1.735, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return -0.13923404404160591;  // std dev = 0.034, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( phenotype(A, H), complex(A, I) )
%   | | | then return 0.23588999457144594;  // std dev = 3.130, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
%   | | | else return 0.13913143030561817;  // std dev = 6.150, 181.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=55 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(D, B), phenotype(D, E) )
%   | then return 0.6261346462578596;  // std dev = 0.145, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(F, D), complex(F, G) )
%   | | then if ( enzyme(F, H), location(D, I) )
%   | | | then return 0.16187672512552445;  // std dev = 1.963, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.03776675651695225;  // std dev = 2.725, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | else if ( interaction(A, J), location(D, K) )
%   | | | then return 0.044178513114458855;  // std dev = 1.441, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return -0.05621511705998678;  // std dev = 1.789, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | then return 0.6203302059055359;  // std dev = 0.065, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | then return 0.6920815594814679;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(N, A), enzyme(N, P) )
%   | | | then return 0.027632935590535136;  // std dev = 1.729, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.11582499855146268;  // std dev = 5.804, 162.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.4207500086133958;  // std dev = 0.031, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5573926791161982;  // std dev = 0.086, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.3662237149079252;  // std dev = 0.808, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(F, E), complex(F, G) )
%   | | | then return 0.061244601256962884;  // std dev = 3.303, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | | else return -0.04372265986674172;  // std dev = 2.054, 39.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=5 */
%   | else if ( enzyme(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), enzyme(J, K) )
%   | | | then return 0.08444093228169511;  // std dev = 1.549, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.36413438540942933;  // std dev = 1.992, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.021256301413400184;  // std dev = 2.121, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.13115433921319525;  // std dev = 4.840, 108.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=36 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), location(A, F) )
%   | | then return 0.34661642618083915;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.30014726583040263;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.5045821260877609;  // std dev = 0.112, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.12490685725423935;  // std dev = 0.029, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, G), location(A, H) )
%   | | then if ( enzyme(G, I), enzyme(A, J) )
%   | | | then return -0.01286968116050815;  // std dev = 2.077, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.08376158001044233;  // std dev = 4.640, 109.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=34 */
%   | | else if ( phenotype(A, K), complex(A, L) )
%   | | | then return 0.24877876779625283;  // std dev = 2.306, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.12040238145075408;  // std dev = 4.265, 82.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=28 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( interaction(E, D) )
%   | then if ( enzyme(A, F), recursion_proteinclass(E, B) )
%   | | then return 0.545681676538239;  // std dev = 0.509, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, G), phenotype(E, C) )
%   | | | then return -0.08732305887590912;  // std dev = 1.266, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.11389188300109261;  // std dev = 3.011, 48.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=19 */
%   | else return 0.7173311253234143;  // std dev = 0.221, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(H, A), phenotype(H, I) )
%   | then if ( complex(H, J), interaction(K, H) )
%   | | then return 0.125502452946288;  // std dev = 0.468, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else return -0.06861734931668888;  // std dev = 0.388, 56.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.2092160870049734;  // std dev = 0.310, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return -0.019148778052118592;  // std dev = 1.968, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | | else return 0.0767346690868272;  // std dev = 4.575, 99.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=32 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5684166046843205;  // std dev = 0.276, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | else return -0.23415202169429739;  // std dev = 0.054, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.37883268305702505;  // std dev = 0.418, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(F, H), phenotype(F, I) )
%   | | | then return 0.09062699082977782;  // std dev = 1.585, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.12483032930630916;  // std dev = 1.245, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.7128884170545877;  // std dev = 0.430, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.24741080770458884;  // std dev = 0.048, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.12657389544295486;  // std dev = 2.503, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return 0.021656197848175265;  // std dev = 3.323, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( location(A, E), location(C, E) )
%   | then return 0.01280705788471753;  // std dev = 0.349, 82.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=24 */
%   | else if ( location(C, F) )
%   | | then if ( complex(C, G) )
%   | | | then return -0.049373353397497155;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.10309965738951088;  // std dev = 1.214, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else return 0.015956271371630713;  // std dev = 0.344, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else if ( location(A, H), enzyme(A, I) )
%   | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | then return 0.5795890814645958;  // std dev = 0.394, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.17862434029602647;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.2480166402294829;  // std dev = 0.096, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.27738171326226047;  // std dev = 0.127, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.021104109272696417;  // std dev = 5.128, 160.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=44 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.12308701820091016;  // std dev = 0.029, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.22695086979636062;  // std dev = 0.112, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.23940366872951765;  // std dev = 0.176, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( complex(A, H), complex(F, H) )
%   | | | then return -0.06494022889973815;  // std dev = 1.520, 30.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | | else return 0.03437041344768119;  // std dev = 3.079, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.02726630725071556;  // std dev = 2.885, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
%   | | | else return 0.09134180054730809;  // std dev = 4.258, 85.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=31 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( recursion_proteinclass(C, B), interaction(D, C) )
%   | then return 0.14202982075677373;  // std dev = 0.049, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( enzyme(C, E), enzyme(A, E) )
%   | | then return -0.13478474891825265;  // std dev = 0.154, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( interaction(F, C), enzyme(F, G) )
%   | | | then return 0.039194208843379014;  // std dev = 3.057, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | | else return -0.02106238136673416;  // std dev = 4.646, 137.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=37 */
%   else if ( enzyme(A, H) )
%   | then return 0.007065118421117964;  // std dev = 0.333, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4405611805098025;  // std dev = 0.925, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.2149926068884281;  // std dev = 0.001, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.15242024595182008;  // std dev = 1.598, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.3986754453234656;  // std dev = 0.812, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
Inference time using transfer learning 12.05593729019165
Refined model CLL: -0.274733


******************************************
Best model found
******************************************
Results 

CLL : -0.275924 

AUC ROC : 0.904086 

AUC PR : 0.158867 

Precision : 0.14978 

Recall : 0.245487 

F1 : 0.186047 

Total Learning Time : 5.99700927734375 

Total Inference Time : 2.521914482116699 

Total revision time: 11.473616600036621
Best scored revision CLL: -0.274733


Results 

CLL : -0.275924 

AUC ROC : 0.904086 

AUC PR : 0.158867 

Precision : 0.14978 

Recall : 0.245487 

F1 : 0.186047 

Total Learning Time : 11.484304189682007 

Total Inference Time : 2.521914482116699 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.2296710014343262
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1754921085312471;  // std dev = 7.662, 271.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15839725168598817;  // std dev = 5.933, 161.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=52 */
%   | | | else return 0.20904225885273445;  // std dev = 4.615, 91.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.16882688942884513;  // std dev = 4.237, 78.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=28 */
%   | | | else return 0.15269218514453697;  // std dev = 6.168, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.07325627563617712;  // std dev = 3.678, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   | | | else return 0.1148509362284627;  // std dev = 6.694, 202.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10008010085054181;  // std dev = 7.564, 257.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09760575543713819;  // std dev = 7.475, 245.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6954131702175136;  // std dev = 0.996, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.26878468683610895;  // std dev = 0.060, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06796658248467324;  // std dev = 4.678, 98.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=33 */
%   | | | else return 0.01878181637458949;  // std dev = 4.190, 84.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.05821663412711868;  // std dev = 3.391, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
%   | | | else return 0.03976521889484874;  // std dev = 6.270, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.030514349891704345;  // std dev = 7.164, 263.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.025930596836601205;  // std dev = 7.130, 265.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=86 */
Inference time using transfer learning 3.765183210372925
Parameter learned model CLL:-0.338453 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.662, 185, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.933, 109, 52], 'false,false,false,false': [4.615, 57, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.237, 50, 28], 'false,false,false,false': [6.168, 111, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.678, 47, 19], 'false,false,false,false': [6.694, 135, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.564, 171, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.475, 159, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.996, 1, 28], 'true,false': [0.06, 55, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.678, 65, 33], 'false,false,false,false': [4.19, 59, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.391, 52, 28], 'false,false,false,false': [6.27, 122, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.164, 177, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.13, 179, 86]}]
{'': [nan, 0.21663648370801125], 'false': [nan, 0.21663648370801117], 'false,false': [nan, 0.21663648370801125], 'false,false,false': [nan, 0.21663648370801117]}
{'': [nan, 0.22480473670950035], 'false': [nan, 0.2248047367094997], 'false,false': [nan, 0.22480473670950035], 'false,false,false': [0.21866440337950135, 0.2340297065571788]}
{'': [nan, 0.22679526389749216], 'false': [nan, 0.22679526389749216], 'false,false': [nan, 0.22679526389749183], 'false,false,false': [0.23019242310287152, 0.22514513520665796]}
{'': [nan, 0.21799762908240028], 'false': [nan, 0.21799762908240028], 'false,false': [nan, 0.2179976290823998], 'false,false,false': [0.20500459136822838, 0.22181680573709966]}
{'': [nan, 0.2226153953415578], 'false': [nan, 0.2226153953415578], 'false,false': [nan, 0.2226153953415578], 'false,false,false': [nan, 0.2226153953415578]}
{'': [nan, 0.22806341125357962], 'false': [nan, 0.22806341125357962], 'false,false': [nan, 0.2280634112535799], 'false,false,false': [nan, 0.2280634112535797]}
{'': [0.2220017579532646, 0.2173444974159398], 'true': [0.03419619149314365, 6.641928653535442e-05], 'false': [nan, 0.2173444974159398], 'false,false': [nan, 0.2173444974159398], 'false,false,false': [0.22334443981674199, 0.20904195011337903], 'true,true': [nan, 0.03419619149314365], 'true,true,false': [nan, 0.03419619149314365]}
{'': [nan, 0.19549007077040148], 'false': [nan, 0.19549007077040148], 'false,false': [nan, 0.1954900707704014], 'false,false,false': [0.14372425982836395, 0.21839234255603637]}
{'': [nan, 0.1951486036608878], 'false': [nan, 0.19514860366088752], 'false,false': [nan, 0.19514860366088752], 'false,false,false': [nan, 0.19514860366088752]}
{'': [nan, 0.19181975895963474], 'false': [nan, 0.19181975895963474], 'false,false': [nan, 0.19181975895963474], 'false,false,false': [nan, 0.19181975895963474]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 6.190359830856323
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then if ( phenotype(D, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.13592671287729013;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( complex(A, F), interaction(A, G) )
%   | | then if ( complex(G, F), interaction(G, G) )
%   | | | then return -0.030739953789376676;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.17957750652808377;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.17662027267912978;  // std dev = 5.838, 157.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=50 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7383538722266948;  // std dev = 0.121, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(H, A), interaction(F, I) )
%   | | | then return -0.030395125068050498;  // std dev = 1.855, 32.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=4 */
%   | | | else return 0.1363451469815087;  // std dev = 2.368, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.1350397535183456;  // std dev = 4.803, 111.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=33 */
%   | | | else return 0.27710222827303777;  // std dev = 3.256, 43.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=19 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5753329353365492;  // std dev = 0.163, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then return -0.1113002299203822;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.5820641463621515;  // std dev = 0.092, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.13599031713296775;  // std dev = 0.032, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.03848624449250116;  // std dev = 3.074, 57.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=12 */
%   | | | else return 0.1434572470225655;  // std dev = 5.880, 155.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( interaction(D, D), phenotype(D, E) )
%   | then return 0.45995842403448156;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( complex(D, F), phenotype(D, G) )
%   | | then if ( interaction(H, D), enzyme(H, I) )
%   | | | then return 0.14508589216917797;  // std dev = 1.506, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.03232707052831872;  // std dev = 2.067, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else if ( interaction(D, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7617643021332237;  // std dev = 0.336, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.2123369169781166;  // std dev = 0.099, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | then return 0.3000121060688206;  // std dev = 0.322, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.4833430013049723;  // std dev = 0.119, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.11965987731462947;  // std dev = 0.034, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0.07599168544150273;  // std dev = 5.542, 152.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=43 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), enzyme(F, C) )
%   | | then return 0.44157674660549584;  // std dev = 0.816, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(E, G) )
%   | | | then return 0.728083262228336;  // std dev = 0.220, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.6428544211845647;  // std dev = 0.442, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.1979431260256589;  // std dev = 0.068, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.35043895893995247;  // std dev = 0.105, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(K, A), location(A, L) )
%   | | | then return -0.07420730713772376;  // std dev = 1.427, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | | else return 0.016887443766125696;  // std dev = 1.967, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | else if ( location(A, M) )
%   | | | then return 0.07496644588036322;  // std dev = 4.780, 115.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=35 */
%   | | | else return 0.42191981418480035;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, A), complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.2645821975390139;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.10386183282438735;  // std dev = 0.019, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F) )
%   | | then return 0.3439052654250503;  // std dev = 0.123, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.27023570779622474;  // std dev = 0.032, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( enzyme(A, G), interaction(H, A) )
%   | | then if ( interaction(I, H), enzyme(I, J) )
%   | | | then return 0.12360489839409929;  // std dev = 1.521, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return -0.007721275645484035;  // std dev = 2.498, 63.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=16 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.017452964006048052;  // std dev = 2.701, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | | else return 0.11697352945340432;  // std dev = 4.620, 98.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=36 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5414333819762626;  // std dev = 0.224, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.1859618665926415;  // std dev = 0.063, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.22325926446164507;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6342126833914845;  // std dev = 0.290, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.22544841899175755;  // std dev = 0.457, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( phenotype(A, I), complex(G, J) )
%   | | | then return 0.03062798614141594;  // std dev = 1.511, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.14531090986180153;  // std dev = 2.745, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return -0.03525853177647935;  // std dev = 1.125, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.054092936492485366;  // std dev = 3.426, 72.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=24 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.16270612933765616;  // std dev = 0.026, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.049160704117770945;  // std dev = 0.264, 42.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=6 */
%   else if ( phenotype(A, D), interaction(A, E) )
%   | then if ( interaction(E, F) )
%   | | then if ( phenotype(E, D), enzyme(F, G) )
%   | | | then return 0.03508301609641569;  // std dev = 0.732, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.1655525893772106;  // std dev = 2.390, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | else return 0.02780332421532723;  // std dev = 1.068, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( phenotype(A, J), complex(A, K) )
%   | | | then return 0.11881278962804247;  // std dev = 1.394, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.02364764453246341;  // std dev = 3.932, 100.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=33 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return -0.06447104556896047;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.16196728977964436;  // std dev = 1.850, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), complex(D, E) )
%   | then return 0.13794603978780506;  // std dev = 0.057, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( phenotype(A, F) )
%   | | then return 0.2155457589312744;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.17481276359997214;  // std dev = 0.025, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.07788132773845931;  // std dev = 0.022, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.4197540622952918;  // std dev = 1.171, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.01224364981100851;  // std dev = 4.361, 132.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=40 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return -0.0707003932516243;  // std dev = 0.624, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.004589372446372836;  // std dev = 3.277, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(A, A), complex(C, E) )
%   | then return -0.08501378436114147;  // std dev = 0.192, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | else if ( interaction(F, A), phenotype(F, D) )
%   | | then if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | | then return 0.41793500304514114;  // std dev = 0.637, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.003908286563652874;  // std dev = 1.297, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( enzyme(C, H) )
%   | | | then return 0.005159298989999421;  // std dev = 2.019, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | | else return 0.06189036229754273;  // std dev = 2.415, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   else if ( phenotype(A, I), enzyme(A, J) )
%   | then return -0.06120841917460459;  // std dev = 0.320, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.18683663279354976;  // std dev = 0.155, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return -0.08917619920165291;  // std dev = 1.209, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | | else return 0.007968995092602373;  // std dev = 3.851, 89.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=27 */
Inference time using transfer learning 11.412762641906738
Refined model CLL: -0.265806


******************************************
Best model found
******************************************
Results 

CLL : -0.257587 

AUC ROC : 0.929653 

AUC PR : 0.222616 

Precision : 0.278161 

Recall : 0.427562 

F1 : 0.337047 

Total Learning Time : 6.190359830856323 

Total Inference Time : 2.6574387550354004 

Total revision time: 11.772799015045166
Best scored revision CLL: -0.265806


Results 

CLL : -0.257587 

AUC ROC : 0.929653 

AUC PR : 0.222616 

Precision : 0.278161 

Recall : 0.427562 

F1 : 0.337047 

Total Learning Time : 11.783486604690552 

Total Inference Time : 2.6574387550354004 

Starting experiments for fasttext using softcosine 

Run: 1

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.212002754211426
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F), location(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14911883476506418;  // std dev = 7.854, 299.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.15093671236584277;  // std dev = 4.837, 109.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=34 */
%   | | | else return 0.14360780801067913;  // std dev = 6.071, 174.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=53 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), location(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G) )
%   | | | then return 0.17291952718709835;  // std dev = 7.319, 234.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=83 */
%   | | | else return 0.12609740334890784;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), location(A, G) )
%   | | | then return 0.11387750855994075;  // std dev = 4.725, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
%   | | | else return 0.1253272120257717;  // std dev = 6.001, 162.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=54 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F), location(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10783420434051068;  // std dev = 7.595, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08835210274908947;  // std dev = 7.594, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4142266638637912;  // std dev = 5.151, 122.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=83 */
%   | else return -0.2661130954418494;  // std dev = 0.005, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   else if ( location(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.008777250759822317;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.07595936419541759;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F) )
%   | | | then return 0.04013698825415356;  // std dev = 6.733, 259.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=83 */
%   | | | else return 5.331915197749411E-4;  // std dev = 1.708, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), location(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03341338737376028;  // std dev = 6.896, 274.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), location(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.018022169359912042;  // std dev = 6.942, 282.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=87 */
Inference time using transfer learning 39.5390739440918
Parameter learned model CLL:-0.316658 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(A, D), recursion_proteinclass(D, B)', 'false,false': 'location(E, A)', 'false,false,false': 'location(A, F), location(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.854, 212, 87]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(A, D), recursion_proteinclass(D, B)', 'false,false': 'location(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.837, 75, 34], 'false,false,false,false': [6.071, 121, 53]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), location(E, F)', 'false,false,false': 'location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.319, 151, 83], 'false,false,false,false': [1.664, 9, 4]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.725, 69, 33], 'false,false,false,false': [6.001, 108, 54]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'location(A, F), location(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.595, 171, 87]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(A, D), location(D, A)', 'false,false': 'location(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.594, 171, 87]}]
['proteinclass(A, B)', {'': 'location(A, C)', 'true': 'location(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'location(E, A), recursion_proteinclass(E, B)', 'false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false': 'location(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [5.151, 39, 83], 'true,false': [0.005, 137, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.866, 3, 1], 'false,false,false,false': [1.414, 6, 3]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'location(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.733, 176, 83], 'false,false,false,false': [1.708, 11, 4]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(D, A), location(A, E)', 'false,false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.896, 187, 87]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(A, D), location(E, A)', 'false,false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.942, 195, 87]}]
{'': [nan, 0.2063064171541713], 'false': [nan, 0.20630641715417114], 'false,false': [nan, 0.2063064171541713], 'false,false,false': [nan, 0.20630641715417114]}
{'': [nan, 0.2129131341382706], 'false': [nan, 0.21291313413827057], 'false,false': [nan, 0.2129131341382706], 'false,false,false': [0.2146283982829738, 0.21181794160390974]}
{'': [nan, 0.22816480736137942], 'false': [nan, 0.22816480736137942], 'false,false': [nan, 0.22816480736137948], 'false,false,false': [0.22889163094454587, 0.21300505638791423]}
{'': [nan, 0.220999748715084], 'false': [nan, 0.220999748715084], 'false,false': [nan, 0.220999748715084], 'false,false,false': [0.21885813148789054, 0.22229752376163375]}
{'': [nan, 0.22359508952862245], 'false': [nan, 0.22359508952862245], 'false,false': [nan, 0.2235950895286226], 'false,false,false': [nan, 0.2235950895286226]}
{'': [nan, 0.2235126495298835], 'false': [nan, 0.2235126495298835], 'false,false': [nan, 0.2235126495298834], 'false,false,false': [nan, 0.22351264952988362]}
{'': [0.21776867835894423, 0.21306799160299775], 'true': [0.21747758251980853, 1.535598662274857e-07], 'true,true': [nan, 0.21747758251980853], 'true,true,false': [nan, 0.21747758251980853], 'false': [nan, 0.21306799160299775], 'false,false': [nan, 0.21306799160299775], 'false,false,false': [0.18750000000000003, 0.22222222222222227]}
{'': [nan, 0.17616215612364886], 'false': [nan, 0.17616215612364886], 'false,false': [nan, 0.17616215612364894], 'false,false,false': [0.17501974686425933, 0.1944051599243897]}
{'': [nan, 0.17356628316969708], 'false': [nan, 0.17356628316969713], 'false,false': [nan, 0.17356628316969713], 'false,false,false': [nan, 0.17356628316969713]}
{'': [nan, 0.1709109181514909], 'false': [nan, 0.1709109181514909], 'false,false': [nan, 0.1709109181514908], 'false,false,false': [nan, 0.1709109181514908]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- location(A, C).;true;true
6;true;location(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 15.551162719726562
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then return 0.8581489350995117;  // std dev = 2.46e-07, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else if ( interaction(A, F) )
%   | | | then return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0.5300239350995126;  // std dev = 3.756, 64.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=43 */
%   | else return -0.14185106490048804;  // std dev = 0.000, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   else if ( interaction(A, A) )
%   | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7298126921219175;  // std dev = 0.108, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, A) )
%   | then return -0.12544463852839136;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, D), location(D, E) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6013669269194043;  // std dev = 1.229, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.03181959775648633;  // std dev = 3.291, 94.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=18 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.20941672751624596;  // std dev = 3.497, 60.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=23 */
%   | | | else return 0.15083026287452145;  // std dev = 3.557, 69.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=22 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.6161403880531234;  // std dev = 0.219, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, D), phenotype(A, E) )
%   | | then return -0.10327820539250662;  // std dev = 0.181, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( location(A, F) )
%   | | | then return 0.15970643669708492;  // std dev = 4.286, 112.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=41 */
%   | | | else return 0.4111913552770254;  // std dev = 0.688, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(G, A), interaction(A, H) )
%   | then return 0.06828949713115717;  // std dev = 0.364, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | else if ( phenotype(A, I), interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7538302371222336;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.17735499813646555;  // std dev = 0.206, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.3789470521585345;  // std dev = 0.632, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1594627808257263;  // std dev = 2.914, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.49041728280982855;  // std dev = 0.094, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( phenotype(E, C), recursion_proteinclass(E, B) )
%   | | then return 0.5487635961390498;  // std dev = 0.262, 38.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   | | else return -0.16516549643554296;  // std dev = 0.051, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( location(A, F), interaction(G, A) )
%   | then if ( interaction(A, H), enzyme(H, I) )
%   | | then return 0.30922036570148664;  // std dev = 0.351, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.2488494337144538;  // std dev = 1.128, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.1381099473536213;  // std dev = 3.913, 82.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | else if ( interaction(L, A), phenotype(L, M) )
%   | | then return -0.11511367243361643;  // std dev = 0.779, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( enzyme(A, N) )
%   | | | then return 0.1712429565145545;  // std dev = 0.739, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.08905786500160834;  // std dev = 1.361, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then return 0.039048368822930626;  // std dev = 0.299, 94.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=29 */
%   else if ( interaction(E, A), enzyme(A, F) )
%   | then if ( interaction(G, E), complex(A, H) )
%   | | then if ( interaction(E, G), phenotype(E, I) )
%   | | | then return 0.42665413203936664;  // std dev = 0.670, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.23695550852063388;  // std dev = 1.181, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( complex(E, J), phenotype(E, K) )
%   | | | then return 0.07524398763554076;  // std dev = 1.569, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.19726607039781838;  // std dev = 1.505, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else if ( interaction(L, A), phenotype(L, M) )
%   | | then if ( location(L, N), location(A, N) )
%   | | | then return 0.0819881925065121;  // std dev = 2.527, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | | | else return 0.0027881093811624267;  // std dev = 1.315, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( phenotype(A, P), interaction(A, Q) )
%   | | | then return 0.038331552198545414;  // std dev = 1.015, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.11938379432398451;  // std dev = 2.753, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.37502618656700487;  // std dev = 0.065, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(C, A) )
%   | | then return -0.1350892222025887;  // std dev = 0.139, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0.05703743049159057;  // std dev = 1.488, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.13386880957064393;  // std dev = 1.836, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.41502670760934857;  // std dev = 0.090, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( enzyme(A, H), interaction(I, A) )
%   | | then if ( complex(I, J), enzyme(I, K) )
%   | | | then return -0.07974837317721173;  // std dev = 0.986, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.04165254619111862;  // std dev = 2.815, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.15053246474640453;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.07325170225583352;  // std dev = 3.879, 100.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=34 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E) )
%   | | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.4701502833414739;  // std dev = 0.761, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return -0.2561103267788244;  // std dev = 0.463, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.1150913362364854;  // std dev = 1.545, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.4080616785064574;  // std dev = 2.292, 47.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=39 */
%   | else return -0.17067465424045325;  // std dev = 0.487, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else if ( interaction(A, A) )
%   | then return -0.05616611349666893;  // std dev = 0.700, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then return -0.07096513201809737;  // std dev = 0.754, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.07686846276337259;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.07686846276337259;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(A, E) )
%   | then return 0.20312231157264216;  // std dev = 0.130, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3935148221623803;  // std dev = 0.197, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( complex(A, H), interaction(I, F) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.2863602633782648;  // std dev = 0.229, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.06299086369866225;  // std dev = 1.924, 69.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=13 */
%   | | else if ( phenotype(F, J) )
%   | | | then return 0.034474430251875784;  // std dev = 2.472, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | | | else return -0.05318252989324816;  // std dev = 1.267, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.23728617154845;  // std dev = 2.425, 46.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=33 */
%   | | | else return -0.1559482598230625;  // std dev = 0.275, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return 0.23825471501597187;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(C, C), enzyme(A, E) )
%   | then if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G) )
%   | | | then return -0.05611006803282177;  // std dev = 0.842, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4824504579898891;  // std dev = 0.084, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.16474067871167974;  // std dev = 0.060, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(C, H), recursion_proteinclass(H, B) )
%   | | then return 0.29854242826906696;  // std dev = 0.257, 52.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   | | else return -0.173702403131741;  // std dev = 0.070, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else if ( interaction(A, I), phenotype(A, J) )
%   | then return 0.036498724313312456;  // std dev = 0.251, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | else if ( complex(A, K) )
%   | | then return 0.018947531664467335;  // std dev = 0.268, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.045729987447049564;  // std dev = 0.483, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.061569320318862135;  // std dev = 3.058, 76.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=22 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(D, D), complex(D, F) )
%   | | then return -0.006983674931475543;  // std dev = 0.314, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.2358464824291756;  // std dev = 0.176, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.028959453993441832;  // std dev = 0.207, 109.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=27 */
%   else if ( interaction(G, A), interaction(H, G) )
%   | then if ( recursion_proteinclass(H, B), interaction(A, G) )
%   | | then return 0.3229878892809826;  // std dev = 0.106, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.15874507897898837;  // std dev = 0.270, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.011308445692832375;  // std dev = 3.284, 97.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=31 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then return -0.04778052928466653;  // std dev = 0.518, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.03230320641701157;  // std dev = 0.363, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.16087584518016101;  // std dev = 1.208, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
Inference time using transfer learning 104.74336957931519
Refined model CLL: -0.198617


******************************************
Best model found
******************************************
Results 

CLL : -0.203557 

AUC ROC : 0.990521 

AUC PR : 0.458622 

Precision : 0.217206 

Recall : 0.904255 

F1 : 0.350275 

Total Learning Time : 15.551162719726562 

Total Inference Time : 12.489487886428833 

Total revision time: 35.80114769935608
Best scored revision CLL: -0.198617


Results 

CLL : -0.203557 

AUC ROC : 0.990521 

AUC PR : 0.458622 

Precision : 0.217206 

Recall : 0.904255 

F1 : 0.350275 

Total Learning Time : 35.843621253967285 

Total Inference Time : 12.489487886428833 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.1979923248291016
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F), location(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21801052679501157;  // std dev = 8.159, 289.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.1467937836975633;  // std dev = 4.746, 104.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=33 */
%   | | | else return 0.2031703019161896;  // std dev = 6.668, 190.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=71 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), location(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G) )
%   | | | then return 0.146945310741001;  // std dev = 7.969, 281.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=97 */
%   | | | else return 0.23852835870338024;  // std dev = 1.985, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), location(A, G) )
%   | | | then return 0.14431601668629057;  // std dev = 4.453, 86.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=31 */
%   | | | else return 0.1172156754937909;  // std dev = 6.918, 212.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=73 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F), location(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08925673635784061;  // std dev = 8.312, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08235490158493886;  // std dev = 8.249, 301.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.39515936745453745;  // std dev = 5.628, 144.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=97 */
%   | else return -0.27821931275224854;  // std dev = 0.033, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   else if ( location(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.037442039779172376;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.01337405467681457;  // std dev = 1.854, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F) )
%   | | | then return 0.06796842849991333;  // std dev = 7.075, 264.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=97 */
%   | | | else return 0.039816085692840175;  // std dev = 2.154, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), location(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.014587778278631622;  // std dev = 7.614, 323.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), location(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06797113335538768;  // std dev = 7.237, 271.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=104 */
Inference time using transfer learning 39.983779430389404
Parameter learned model CLL:-0.3506 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(A, D), recursion_proteinclass(D, B)', 'false,false': 'location(E, A)', 'false,false,false': 'location(A, F), location(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.159, 185, 104]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(A, D), recursion_proteinclass(D, B)', 'false,false': 'location(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.746, 71, 33], 'false,false,false,false': [6.668, 119, 71]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), location(E, F)', 'false,false,false': 'location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.969, 184, 97], 'false,false,false,false': [1.985, 9, 7]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.453, 55, 31], 'false,false,false,false': [6.918, 139, 73]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'location(A, F), location(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.312, 206, 104]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(A, D), location(D, A)', 'false,false': 'location(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.249, 197, 104]}]
['proteinclass(A, B)', {'': 'location(A, C)', 'true': 'location(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'location(E, A), recursion_proteinclass(E, B)', 'false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false': 'location(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [5.628, 47, 97], 'true,false': [0.033, 142, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.225, 6, 2], 'false,false,false,false': [1.854, 11, 5]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'location(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.075, 167, 97], 'false,false,false,false': [2.154, 14, 7]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(D, A), location(A, E)', 'false,false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.614, 219, 104]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(A, D), location(E, A)', 'false,false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.237, 167, 104]}]
{'': [nan, 0.23036122651788407], 'false': [nan, 0.2303612265178835], 'false,false': [nan, 0.23036122651788407], 'false,false,false': [nan, 0.2303612265178835]}
{'': [nan, 0.22860845018279002], 'false': [nan, 0.22860845018279016], 'false,false': [nan, 0.22860845018279002], 'false,false,false': [0.2166235207100593, 0.2340443213296389]}
{'': [nan, 0.22750996134553592], 'false': [nan, 0.22750996134553592], 'false,false': [nan, 0.22750996134553506], 'false,false,false': [0.2259832619904986, 0.24638701350433506]}
{'': [nan, 0.2272943071983251], 'false': [nan, 0.2272943071983251], 'false,false': [nan, 0.2272943071983269], 'false,false,false': [0.23053001622498712, 0.2257697590912152]}
{'': [nan, 0.22287023310097584], 'false': [nan, 0.22287023310097584], 'false,false': [nan, 0.22287023310097728], 'false,false,false': [nan, 0.22287023310097728]}
{'': [nan, 0.22606169438628504], 'false': [nan, 0.22606169438628504], 'false,false': [nan, 0.2260616943862849], 'false,false,false': [nan, 0.22606169438628523]}
{'': [0.2240883310896888, 0.20630300565683546], 'true': [0.21992260619458126, 7.8541740663916e-06], 'true,true': [nan, 0.21992260619458126], 'true,true,false': [nan, 0.21992260619458126], 'false': [nan, 0.20630300565683546], 'false,false': [nan, 0.20630300565683546], 'false,false,false': [0.18750000000000006, 0.21484374999999992]}
{'': [nan, 0.19196684206963377], 'false': [nan, 0.19196684206963377], 'false,false': [nan, 0.1919668420696338], 'false,false,false': [0.18960423079918498, 0.22093408523827657]}
{'': [nan, 0.17946056755683054], 'false': [nan, 0.1794605675568306], 'false,false': [nan, 0.1794605675568306], 'false,false,false': [nan, 0.1794605675568306]}
{'': [nan, 0.19327647093387607], 'false': [nan, 0.19327647093387607], 'false,false': [nan, 0.1932764709338761], 'false,false,false': [nan, 0.1932764709338761]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- location(A, C).;true;true
6;true;location(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 15.941726446151733
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), phenotype(C, E) )
%   | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( phenotype(A, G) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( enzyme(A, H), interaction(A, I) )
%   | | | then return 0.08542166237223964;  // std dev = 2.780, 44.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | | | else return 0.15350758488854235;  // std dev = 7.023, 237.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=70 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E), enzyme(A, F) )
%   | | then return 0.8246145247390113;  // std dev = 0.121, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.5497537739726257;  // std dev = 0.417, 32.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=24 */
%   | else return -0.008114326928507163;  // std dev = 0.352, 122.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=19 */
%   else if ( enzyme(A, G) )
%   | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.8258961093090597;  // std dev = 0.159, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return -0.16158357338528087;  // std dev = 2.36e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.20293835598931298;  // std dev = 4.072, 71.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=26 */
%   | | else if ( location(A, K) )
%   | | | then return 0.03841642661471909;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.23841642661471912;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.6573452001998571;  // std dev = 0.072, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.544802382732458;  // std dev = 0.029, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return -0.14828515101549486;  // std dev = 0.119, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.05100565304285208;  // std dev = 1.744, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return 0.16307523171403174;  // std dev = 2.617, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6024407459971182;  // std dev = 1.166, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.09712287515289719;  // std dev = 5.756, 182.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=51 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.12906811474561058;  // std dev = 1.196, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.5294947398576383;  // std dev = 0.804, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then if ( complex(C, E), complex(A, E) )
%   | | then return 0.4578177478074999;  // std dev = 0.047, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.04594394329303526;  // std dev = 1.010, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.5314519866910088;  // std dev = 0.066, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, G), interaction(H, A) )
%   | | | then return 0.6554861685801447;  // std dev = 2.272, 82.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=77 */
%   | | | else return -0.10761779377821377;  // std dev = 1.827, 46.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=4 */
%   | | else return -0.18310950872882234;  // std dev = 0.330, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | else if ( enzyme(A, I) )
%   | | then return 0.39790090959208985;  // std dev = 0.675, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.11061939428935223;  // std dev = 1.275, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.28767260252282667;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.35609806211030126;  // std dev = 0.157, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, D) )
%   | | | then return 0.5054061250107831;  // std dev = 0.293, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.14442574244004835;  // std dev = 0.876, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(G, A), interaction(G, D) )
%   | | | then return -0.0815175193636425;  // std dev = 1.963, 78.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=7 */
%   | | | else return 0.0455640682747753;  // std dev = 2.110, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.49440515128901713;  // std dev = 1.882, 44.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=39 */
%   | | | else return -0.170275874520131;  // std dev = 0.270, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.059648043065848005;  // std dev = 1.644, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return 0.15009025692139344;  // std dev = 1.919, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then if ( enzyme(E, C) )
%   | | then return 0.3464366765156591;  // std dev = 0.060, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.07805782504104325;  // std dev = 1.031, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return -0.013200788411344009;  // std dev = 0.247, 95.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=20 */
%   else if ( complex(A, F), location(A, G) )
%   | then if ( complex(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.42059170922252564;  // std dev = 0.168, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.15831772497596447;  // std dev = 0.063, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.4100089600495454;  // std dev = 1.401, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return -0.1782640460746611;  // std dev = 0.366, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.13070349135596165;  // std dev = 2.965, 57.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
%   | | | else return 0.333054267499005;  // std dev = 1.006, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), complex(A, F) )
%   | | then if ( recursion_proteinclass(E, B), interaction(A, G) )
%   | | | then return 0.256339916571634;  // std dev = 0.285, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.11197045017213249;  // std dev = 1.969, 52.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=29 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.23614430391052593;  // std dev = 2.824, 66.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=46 */
%   | | | else return 0.480001931922616;  // std dev = 1.123, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | else return -0.14400640781173615;  // std dev = 0.435, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
%   else if ( interaction(J, A), enzyme(J, K) )
%   | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | then return 0.49927628245114697;  // std dev = 0.280, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.24606014209529;  // std dev = 0.045, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, M) )
%   | | then return 0.09186704095650172;  // std dev = 1.113, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.05063973337470701;  // std dev = 0.756, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then return -0.01462985893154194;  // std dev = 0.724, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.225807716377905;  // std dev = 0.065, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( enzyme(E, F), enzyme(A, F) )
%   | | then return -0.1910391749113308;  // std dev = 0.803, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( phenotype(A, G), enzyme(A, H) )
%   | | | then return 0.09454608174697123;  // std dev = 0.256, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.031983016949079734;  // std dev = 1.473, 73.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=16 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( enzyme(A, K), phenotype(A, J) )
%   | | | then return -0.02694997916602882;  // std dev = 1.240, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.15738045318291938;  // std dev = 2.122, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.027739368683279125;  // std dev = 1.748, 54.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=13 */
%   | | | else return 0.04065477019667199;  // std dev = 3.048, 111.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=40 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then return 0.3260730716849653;  // std dev = 0.146, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.14113221714324464;  // std dev = 0.073, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( location(A, H), location(F, H) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.0075656735817194835;  // std dev = 1.540, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return -0.049328425556435726;  // std dev = 3.261, 149.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=38 */
%   | | else if ( location(A, I), enzyme(A, J) )
%   | | | then return 0.11933430976433813;  // std dev = 0.793, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.017116860184691624;  // std dev = 1.796, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | else if ( interaction(A, K), interaction(K, K) )
%   | | then return 0.267944663664122;  // std dev = 0.544, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(L, A), complex(A, M) )
%   | | | then return 0.10743925412463062;  // std dev = 0.887, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.03529154455817926;  // std dev = 1.569, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(D, D), complex(D, E) )
%   | then return -0.0075109944361010685;  // std dev = 0.229, 153.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=48 */
%   | else if ( recursion_proteinclass(D, B), complex(A, F) )
%   | | then return 0.2604207470824095;  // std dev = 0.077, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, G), interaction(D, A) )
%   | | | then return -0.06088337175729833;  // std dev = 0.544, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.045588792979335824;  // std dev = 2.956, 103.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=36 */
%   else if ( complex(A, H) )
%   | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.44583573148401145;  // std dev = 0.319, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.12464961246640341;  // std dev = 0.046, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then return -0.18504276397839498;  // std dev = 0.659, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( location(A, K) )
%   | | | then return -0.08397917259725757;  // std dev = 1.229, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.01752772763524244;  // std dev = 0.841, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
Inference time using transfer learning 73.54507398605347
Refined model CLL: -0.186019


******************************************
Best model found
******************************************
Results 

CLL : -0.20348 

AUC ROC : 0.989022 

AUC PR : 0.45889 

Precision : 0.419831 

Recall : 0.750943 

F1 : 0.538566 

Total Learning Time : 15.941726446151733 

Total Inference Time : 17.707274675369263 

Total revision time: 42.772175788879395
Best scored revision CLL: -0.186019


Results 

CLL : -0.20348 

AUC ROC : 0.989022 

AUC PR : 0.45889 

Precision : 0.419831 

Recall : 0.750943 

F1 : 0.538566 

Total Learning Time : 42.8146493434906 

Total Inference Time : 17.707274675369263 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.086378812789917
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F), location(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15207864755957534;  // std dev = 8.060, 313.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.17489310317116685;  // std dev = 5.022, 113.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=38 */
%   | | | else return 0.1869970141046524;  // std dev = 5.932, 155.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=54 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), location(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G) )
%   | | | then return 0.11833303091640063;  // std dev = 7.859, 291.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=89 */
%   | | | else return 0.14623615554604863;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), location(A, G) )
%   | | | then return 0.1738435473429095;  // std dev = 4.728, 95.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=36 */
%   | | | else return 0.11839453490863322;  // std dev = 6.145, 172.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=56 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F), location(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1043378927964704;  // std dev = 7.823, 275.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08364674725384619;  // std dev = 7.836, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4698780597037662;  // std dev = 4.858, 121.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=89 */
%   | else return -0.2649965106726191;  // std dev = 0.046, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   else if ( location(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.042724754545815;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.06731091102176393;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F) )
%   | | | then return 0.06739884629060719;  // std dev = 6.702, 250.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=89 */
%   | | | else return 0.0776783673753778;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), location(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02087369535776298;  // std dev = 7.070, 284.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), location(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.029242885593171487;  // std dev = 6.955, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
Inference time using transfer learning 38.91503643989563
Parameter learned model CLL:-0.32922 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(A, D), recursion_proteinclass(D, B)', 'false,false': 'location(E, A)', 'false,false,false': 'location(A, F), location(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.06, 221, 92]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(A, D), recursion_proteinclass(D, B)', 'false,false': 'location(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.022, 75, 38], 'false,false,false,false': [5.932, 101, 54]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), location(E, F)', 'false,false,false': 'location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.859, 202, 89], 'false,false,false,false': [1.414, 6, 3]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.728, 59, 36], 'false,false,false,false': [6.145, 116, 56]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'location(A, F), location(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.823, 183, 92]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(A, D), location(D, A)', 'false,false': 'location(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.836, 184, 92]}]
['proteinclass(A, B)', {'': 'location(A, C)', 'true': 'location(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'location(E, A), recursion_proteinclass(E, B)', 'false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false': 'location(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [4.858, 32, 89], 'true,false': [0.046, 125, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.247, 7, 2], 'false,false,false,false': [0.894, 4, 1]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'location(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.702, 161, 89], 'false,false,false,false': [1.414, 6, 3]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(D, A), location(A, E)', 'false,false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.07, 192, 92]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(A, D), location(E, A)', 'false,false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.955, 184, 92]}]
{'': [nan, 0.20753503659320915], 'false': [nan, 0.2075350365932089], 'false,false': [nan, 0.20753503659320915], 'false,false,false': [nan, 0.2075350365932089]}
{'': [nan, 0.2254399643573153], 'false': [nan, 0.22543996435731686], 'false,false': [nan, 0.2254399643573153], 'false,false,false': [0.2231968047615315, 0.22701352757544427]}
{'': [nan, 0.2125812834511999], 'false': [nan, 0.2125812834511999], 'false,false': [nan, 0.21258128345119995], 'false,false,false': [0.21225972920599723, 0.22222297721291337]}
{'': [nan, 0.22586284849626173], 'false': [nan, 0.22586284849626173], 'false,false': [nan, 0.22586284849626162], 'false,false,false': [0.23534626038781278, 0.21953096120592738]}
{'': [nan, 0.2225591682062634], 'false': [nan, 0.2225591682062634], 'false,false': [nan, 0.2225591682062633], 'false,false,false': [nan, 0.2225591682062633]}
{'': [nan, 0.22246977628301906], 'false': [nan, 0.22246977628301906], 'false,false': [nan, 0.22246977628301906], 'false,false,false': [nan, 0.22246977628301973]}
{'': [0.2309272089561937, 0.16839275171856877], 'true': [0.19506026893533632, 1.666406511981222e-05], 'true,true': [nan, 0.19506026893533632], 'true,true,false': [nan, 0.19506026893533632], 'false': [nan, 0.16839275171856877], 'false,false': [nan, 0.16839275171856877], 'false,false,false': [0.17283950617283947, 0.16000000000000003]}
{'': [nan, 0.1811335474331512], 'false': [nan, 0.1811335474331512], 'false,false': [nan, 0.18113354743315122], 'false,false,false': [0.17965696513503984, 0.22204772570720255]}
{'': [nan, 0.175992765504107], 'false': [nan, 0.17599276550410692], 'false,false': [nan, 0.17599276550410692], 'false,false,false': [nan, 0.17599276550410692]}
{'': [nan, 0.17528510166415795], 'false': [nan, 0.17528510166415795], 'false,false': [nan, 0.17528510166415787], 'false,false,false': [nan, 0.17528510166415787]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- location(A, C).;true;true
6;true;location(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 19.02920651435852
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, D), enzyme(C, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( complex(D, F), interaction(C, G) )
%   | | | then return 0.35814893509951234;  // std dev = 2.000, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.11529179224236949;  // std dev = 2.586, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   else if ( enzyme(A, H), interaction(A, I) )
%   | then if ( interaction(I, I), complex(A, J) )
%   | | then return 0.011995088945666036;  // std dev = 0.361, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else return 0.1581489350995123;  // std dev = 0.458, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.12285481745245255;  // std dev = 4.456, 102.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=27 */
%   | | | else return 0.2840748610254383;  // std dev = 3.634, 54.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=23 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7351003752836355;  // std dev = 0.144, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( enzyme(D, F), location(D, E) )
%   | | then if ( phenotype(D, G), complex(D, H) )
%   | | | then return 0.07962983323930159;  // std dev = 1.935, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return -0.15162342896953657;  // std dev = 0.073, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( enzyme(A, I), complex(A, J) )
%   | | | then return 0.2601793165002701;  // std dev = 2.280, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.10144255607488449;  // std dev = 3.892, 76.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=21 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( location(L, M), location(A, M) )
%   | | | then return 0.22609972637654122;  // std dev = 3.691, 59.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=23 */
%   | | | else return 0.12494211624462072;  // std dev = 2.463, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( interaction(N, A), complex(N, P) )
%   | | | then return 0.4866043193231329;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2983189690055485;  // std dev = 2.174, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5515043366012541;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6945700170728674;  // std dev = 0.081, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.6007016636665883;  // std dev = 0.171, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, F), interaction(G, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14906452851517482;  // std dev = 0.123, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.06525226372478933;  // std dev = 3.433, 64.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=16 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.07823207730222917;  // std dev = 3.801, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
%   | | | else return 0.13731339591959504;  // std dev = 4.901, 110.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=36 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(A, A) )
%   | then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | | then return 0.41465522349792927;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.14103323828119382;  // std dev = 0.091, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( complex(E, C), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.45290410932302855;  // std dev = 0.182, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.7613692841728817;  // std dev = 0.491, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.19827266843663915;  // std dev = 0.282, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.46628805573922094;  // std dev = 0.105, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5626701537176962;  // std dev = 2.957, 53.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=42 */
%   | | | else return -0.20816046999608315;  // std dev = 0.251, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else return 0.2696292078427991;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.3129051614882089;  // std dev = 0.013, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.3714378143311263;  // std dev = 0.106, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.3418121605702975;  // std dev = 0.186, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, F), interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4516594198071675;  // std dev = 0.740, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.04660611329339161;  // std dev = 2.814, 90.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=13 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.10654349790892466;  // std dev = 3.212, 63.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
%   | | | else return 0.037298201830682436;  // std dev = 4.352, 121.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=34 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, C) )
%   | then return 0.25224575054947135;  // std dev = 0.018, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2938850141495089;  // std dev = 0.093, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( complex(F, H) )
%   | | | then return -0.09984705597416353;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10768393423506378;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.1642466184183512;  // std dev = 0.023, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(I, A), location(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.4574496413770263;  // std dev = 0.285, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.03439194894076378;  // std dev = 5.083, 182.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=51 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.06774931930447298;  // std dev = 2.284, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | | else return 0.16372985000185453;  // std dev = 2.314, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), complex(E, F) )
%   | | then if ( phenotype(A, G), interaction(E, H) )
%   | | | then return 0.08987302158868149;  // std dev = 1.988, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return 0.28811840939113137;  // std dev = 2.035, 30.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=21 */
%   | | else if ( interaction(I, A), location(I, J) )
%   | | | then return 0.31206776854552387;  // std dev = 3.460, 69.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=48 */
%   | | | else return 0.49954515738880534;  // std dev = 0.928, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(K, A), interaction(A, L) )
%   | | then if ( enzyme(L, M), interaction(N, K) )
%   | | | then return -0.09703663594910013;  // std dev = 0.070, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.16889396469818516;  // std dev = 0.146, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.1974463258028417;  // std dev = 0.018, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( interaction(A, A) )
%   | then return -0.08988096526840401;  // std dev = 0.319, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.07602450393340417;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then if ( interaction(D, E) )
%   | | | then return 0.45229367880886034;  // std dev = 1.224, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.30249630442474873;  // std dev = 0.644, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( interaction(D, F), interaction(G, D) )
%   | | | then return 0.10141749202279544;  // std dev = 1.612, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return 0.4568265440895995;  // std dev = 1.672, 35.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   | else if ( interaction(H, A), interaction(A, I) )
%   | | then if ( enzyme(I, J), interaction(K, H) )
%   | | | then return -0.09729439355304521;  // std dev = 0.086, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.1410654107376659;  // std dev = 0.102, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.1688312108216996;  // std dev = 0.017, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( interaction(A, A) )
%   | then return -0.07755723960600243;  // std dev = 0.321, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.0908436400405512;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, E), location(E, F) )
%   | | | then return 0.15360170615213903;  // std dev = 0.270, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.4025348385192765;  // std dev = 1.262, 60.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=59 */
%   | | else if ( interaction(G, A) )
%   | | | then return -0.32743195013387183;  // std dev = 0.675, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0.16132117526021006;  // std dev = 2.084, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( enzyme(H, I) )
%   | | | then return -0.07282072528958702;  // std dev = 0.032, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.12094586327323784;  // std dev = 0.057, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.14437056531494016;  // std dev = 0.016, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   else if ( interaction(A, A) )
%   | then return -0.04914328265344884;  // std dev = 0.314, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.12073838078616059;  // std dev = 0.400, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then return 0.031242602836562217;  // std dev = 0.202, 73.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=29 */
%   else if ( interaction(E, A), phenotype(A, F) )
%   | then if ( phenotype(E, G), location(E, H) )
%   | | then if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.29123686441541174;  // std dev = 0.223, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1720329440855657;  // std dev = 0.289, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(E, J), recursion_proteinclass(J, B) )
%   | | | then return 0.30731710783717026;  // std dev = 0.241, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.16181925015671125;  // std dev = 0.235, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( enzyme(A, K) )
%   | | then if ( enzyme(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.4064465380244103;  // std dev = 0.591, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.18013970562786097;  // std dev = 0.532, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.030621063973154998;  // std dev = 1.061, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.02115952974728268;  // std dev = 2.431, 88.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=25 */
Inference time using transfer learning 161.02480506896973
Refined model CLL: -0.177459


******************************************
Best model found
******************************************
Results 

CLL : -0.191764 

AUC ROC : 0.986525 

AUC PR : 0.323278 

Precision : 0.223842 

Recall : 0.942238 

F1 : 0.361746 

Total Learning Time : 19.02920651435852 

Total Inference Time : 23.64503812789917 

Total revision time: 50.70272159576416
Best scored revision CLL: -0.177459


Results 

CLL : -0.191764 

AUC ROC : 0.986525 

AUC PR : 0.323278 

Precision : 0.223842 

Recall : 0.942238 

F1 : 0.361746 

Total Learning Time : 50.745195150375366 

Total Inference Time : 23.64503812789917 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.9879474639892578
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F), location(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21060795149295458;  // std dev = 7.462, 244.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.13822285905038106;  // std dev = 4.403, 91.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=28 */
%   | | | else return 0.17170702194630866;  // std dev = 6.182, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), location(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G) )
%   | | | then return 0.11868751358274146;  // std dev = 7.557, 266.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=83 */
%   | | | else return 0.2342899683616231;  // std dev = 1.312, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), location(A, G) )
%   | | | then return 0.0815734174367589;  // std dev = 4.377, 93.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=27 */
%   | | | else return 0.09052057975615578;  // std dev = 6.400, 193.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=59 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F), location(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11693066468987928;  // std dev = 7.505, 249.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06538446181802642;  // std dev = 7.677, 273.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4080918206417244;  // std dev = 5.240, 124.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=83 */
%   | else return -0.26167810387951124;  // std dev = 0.038, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( location(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.7199157044952798;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.11311460982087937;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F) )
%   | | | then return 0.08656338500856674;  // std dev = 6.509, 227.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=83 */
%   | | | else return -0.05147740756427846;  // std dev = 1.489, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), location(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05822865465938455;  // std dev = 6.707, 240.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), location(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.031035109506961894;  // std dev = 6.790, 251.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=86 */
Inference time using transfer learning 41.51513147354126
Parameter learned model CLL:-0.339354 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(A, D), recursion_proteinclass(D, B)', 'false,false': 'location(E, A)', 'false,false,false': 'location(A, F), location(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.462, 158, 86]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(A, D), recursion_proteinclass(D, B)', 'false,false': 'location(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.403, 63, 28], 'false,false,false,false': [6.182, 112, 58]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), location(E, F)', 'false,false,false': 'location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.557, 183, 83], 'false,false,false,false': [1.312, 4, 3]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.377, 66, 27], 'false,false,false,false': [6.4, 134, 59]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'location(A, F), location(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.505, 163, 86]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(A, D), location(D, A)', 'false,false': 'location(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.677, 187, 86]}]
['proteinclass(A, B)', {'': 'location(A, C)', 'true': 'location(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'location(E, A), recursion_proteinclass(E, B)', 'false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false': 'location(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [5.24, 41, 83], 'true,false': [0.038, 110, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'location(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.509, 144, 83], 'false,false,false,false': [1.489, 6, 3]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(D, A), location(A, E)', 'false,false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.707, 154, 86]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(A, D), location(E, A)', 'false,false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.79, 165, 86]}]
{'': [nan, 0.22823165815641042], 'false': [nan, 0.2282316581564102], 'false,false': [nan, 0.22823165815641042], 'false,false,false': [nan, 0.2282316581564102]}
{'': [nan, 0.2209304032530353], 'false': [nan, 0.22093040325303515], 'false,false': [nan, 0.2209304032530353], 'false,false,false': [0.2130177514792897, 0.2247750865051901]}
{'': [nan, 0.21581027344220496], 'false': [nan, 0.21581027344220496], 'false,false': [nan, 0.21581027344220494], 'false,false,false': [0.2146797012554799, 0.24575075379585076]}
{'': [nan, 0.2102234942694285], 'false': [nan, 0.2102234942694285], 'false,false': [nan, 0.21022349426942855], 'false,false,false': [0.2060353798126961, 0.21221557043366254]}
{'': [nan, 0.22622184507630078], 'false': [nan, 0.22622184507630078], 'false,false': [nan, 0.22622184507630086], 'false,false,false': [nan, 0.22622184507630086]}
{'': [nan, 0.21586972327534787], 'false': [nan, 0.21586972327534787], 'false,false': [nan, 0.21586972327534795], 'false,false,false': [nan, 0.2158697232753488]}
{'': [0.22910271925284317, 0.2511399400691737], 'false': [nan, 0.2511399400691737], 'false,false': [nan, 0.2511399400691737], 'false,false,false': [0.0, 0.23999999999999994], 'true': [0.22145107610597162, 1.2920616116687066e-05], 'true,true': [nan, 0.22145107610597162], 'true,true,false': [nan, 0.22145107610597162]}
{'': [nan, 0.18963644652142927], 'false': [nan, 0.18963644652142927], 'false,false': [nan, 0.18963644652142914], 'false,false,false': [0.1866581079752733, 0.24642818643130462]}
{'': [nan, 0.18741038657238993], 'false': [nan, 0.1874103865723899], 'false,false': [nan, 0.1874103865723899], 'false,false,false': [nan, 0.1874103865723899]}
{'': [nan, 0.18367781946947623], 'false': [nan, 0.18367781946947623], 'false,false': [nan, 0.18367781946947623], 'false,false,false': [nan, 0.18367781946947623]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- location(A, C).;true;true
6;true;location(D, C), recursion_proteinclass(D, B).;true;true
6;false;enzyme(A, H).;true;true


Refining candidate
***************************
Model training time 7.955349922180176
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(F, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995121;  // std dev = 4.21e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.15444523139580765;  // std dev = 5.305, 135.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=40 */
%   | | | else return 0.25814893509951126;  // std dev = 3.795, 60.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=24 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( interaction(A, D), enzyme(D, E) )
%   | | then if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.33120680681571046;  // std dev = 1.395, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.07274224987801528;  // std dev = 3.118, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | | else if ( location(A, H), interaction(I, A) )
%   | | | then return 0.17614601160652096;  // std dev = 5.427, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
%   | | | else return 0.33101150688136644;  // std dev = 2.000, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(C, E) )
%   | then if ( interaction(E, E) )
%   | | then return 0.6040447987738249;  // std dev = 0.169, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2122313194048332;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.7045602271117621;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( interaction(I, A), location(A, J) )
%   | | | then return -0.08878018017231112;  // std dev = 1.324, 33.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=2 */
%   | | | else return 0.0748251858147979;  // std dev = 4.356, 98.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=26 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.23879906442355192;  // std dev = 3.011, 37.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | | else return 0.14300424750561505;  // std dev = 3.622, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.41456640429702324;  // std dev = 0.018, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.16751358415830997;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.10376481817054156;  // std dev = 1.05e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F), phenotype(E, F) )
%   | | | then return 0.6516763540431422;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5410445776813206;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.02257491757768366;  // std dev = 3.051, 56.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=12 */
%   | | | else return 0.09751846314959839;  // std dev = 5.944, 164.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=52 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), interaction(E, A) )
%   | then return 0.08277777895543885;  // std dev = 0.840, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.3174083194918941;  // std dev = 0.014, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.4316831209132525;  // std dev = 0.090, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3493884319531557;  // std dev = 0.069, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then if ( complex(A, I) )
%   | | | then return -0.1395003519484675;  // std dev = 0.176, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.01615901861749317;  // std dev = 1.776, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | else if ( interaction(A, J), phenotype(A, K) )
%   | | | then return 0.1016387170376975;  // std dev = 3.409, 54.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=17 */
%   | | | else return 0.042371703197195326;  // std dev = 5.550, 153.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=43 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.25882507450175585;  // std dev = 0.049, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.03730328882902367;  // std dev = 0.351, 50.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=8 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( enzyme(A, E), complex(D, F) )
%   | | then return 0.15311757403343992;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(D, D), interaction(G, A) )
%   | | | then return 0.12388168435300273;  // std dev = 0.910, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.004147797068246625;  // std dev = 2.970, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5309620374761292;  // std dev = 0.858, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.08568245840415217;  // std dev = 3.195, 49.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.010608355403808037;  // std dev = 3.324, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | | else return 0.11327076091748464;  // std dev = 2.781, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(F, A) )
%   | | then if ( complex(A, G), complex(E, H) )
%   | | | then return 0.060113470492611544;  // std dev = 1.662, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.29770029628170147;  // std dev = 2.781, 41.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=26 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return 0.32574659955953666;  // std dev = 1.696, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.5197652323936787;  // std dev = 2.776, 47.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=39 */
%   | else if ( interaction(A, A) )
%   | | then return -0.08554417178349344;  // std dev = 0.019, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.2468043628515953;  // std dev = 0.048, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   else if ( enzyme(A, K) )
%   | then return 0.2375798473729098;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(A, L) )
%   | | then return 0.026438024887398586;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.10689530844593476;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then return 0.5684337496142039;  // std dev = 0.237, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return -0.23089162669476423;  // std dev = 0.067, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.3578436554511906;  // std dev = 0.225, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( phenotype(F, H), interaction(A, F) )
%   | | | then return -0.19667379207891955;  // std dev = 0.836, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.014863958971079935;  // std dev = 4.154, 124.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=33 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( enzyme(I, J), complex(A, K) )
%   | | | then return 0.0237419260337542;  // std dev = 0.875, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.31395671140659337;  // std dev = 1.046, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.011432134654759306;  // std dev = 1.130, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.09290288221080786;  // std dev = 1.229, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.14674057858214024;  // std dev = 0.058, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(F, A), complex(A, D) )
%   | | then return -0.07154833667600263;  // std dev = 0.266, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | else return 0.01804059651210604;  // std dev = 0.336, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   else if ( interaction(G, A), phenotype(G, H) )
%   | then if ( complex(G, I), complex(A, I) )
%   | | then return 0.22367434951421958;  // std dev = 1.058, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(J, G), recursion_proteinclass(J, B) )
%   | | | then return 0.4890475613068995;  // std dev = 0.436, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.01891685211091607;  // std dev = 3.742, 107.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=34 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.3735719144426857;  // std dev = 1.596, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return -0.19063864336116554;  // std dev = 0.124, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.08284766703045147;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1311472110655005;  // std dev = 0.228, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), phenotype(E, G) )
%   | | then if ( interaction(H, F), phenotype(F, I) )
%   | | | then return -0.008108858893953217;  // std dev = 2.585, 69.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=17 */
%   | | | else return 0.10718443598007155;  // std dev = 1.037, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( complex(E, J) )
%   | | | then return 0.31121052148150885;  // std dev = 1.112, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.04654179477580995;  // std dev = 2.237, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | else if ( interaction(A, K), phenotype(K, L) )
%   | | then if ( interaction(K, M), recursion_proteinclass(M, B) )
%   | | | then return 0.24713313117084365;  // std dev = 0.723, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.08008852212007705;  // std dev = 2.638, 72.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=12 */
%   | | else if ( enzyme(A, N) )
%   | | | then return -0.04261814714791956;  // std dev = 1.655, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.07326187192631888;  // std dev = 2.199, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
Inference time using transfer learning 58.597760915756226
Refined model CLL: -0.256691


******************************************
Best model found
******************************************
Results 

CLL : -0.270423 

AUC ROC : 0.922167 

AUC PR : 0.136675 

Precision : 0.124862 

Recall : 0.399293 

F1 : 0.190236 

Total Learning Time : 7.955349922180176 

Total Inference Time : 6.980008840560913 

Total revision time: 22.103038549423218
Best scored revision CLL: -0.256691


Results 

CLL : -0.270423 

AUC ROC : 0.922167 

AUC PR : 0.136675 

Precision : 0.124862 

Recall : 0.399293 

F1 : 0.190236 

Total Learning Time : 22.145512104034424 

Total Inference Time : 6.980008840560913 

Run: 2

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.0076043605804443
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F), location(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21914478572191862;  // std dev = 7.456, 241.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.14414041789118165;  // std dev = 4.827, 108.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=34 */
%   | | | else return 0.1466908725374463;  // std dev = 6.015, 167.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=53 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), location(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G) )
%   | | | then return 0.12329229947006676;  // std dev = 7.537, 263.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=83 */
%   | | | else return 0.1712577145696591;  // std dev = 1.596, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), location(A, G) )
%   | | | then return 0.08808529989979799;  // std dev = 4.806, 110.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=33 */
%   | | | else return 0.11434559055441207;  // std dev = 6.027, 165.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=54 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F), location(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12591023482286204;  // std dev = 7.483, 244.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07939397905354753;  // std dev = 7.619, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.48603190314907607;  // std dev = 4.515, 110.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=83 */
%   | else return -0.26829869605399875;  // std dev = 0.032, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   else if ( location(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.2202712064479839;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.01975705075707478;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F) )
%   | | | then return 0.028433784916407367;  // std dev = 6.633, 263.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=83 */
%   | | | else return 0.07176744579226761;  // std dev = 1.589, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), location(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02337378870713937;  // std dev = 6.842, 271.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), location(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.025958644502986353;  // std dev = 6.818, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
Inference time using transfer learning 39.98347520828247
Parameter learned model CLL:-0.323932 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(A, D), recursion_proteinclass(D, B)', 'false,false': 'location(E, A)', 'false,false,false': 'location(A, F), location(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.456, 154, 87]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(A, D), recursion_proteinclass(D, B)', 'false,false': 'location(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.827, 74, 34], 'false,false,false,false': [6.015, 114, 53]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), location(E, F)', 'false,false,false': 'location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.537, 180, 83], 'false,false,false,false': [1.596, 7, 4]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.806, 77, 33], 'false,false,false,false': [6.027, 111, 54]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'location(A, F), location(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.483, 157, 87]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(A, D), location(D, A)', 'false,false': 'location(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.619, 174, 87]}]
['proteinclass(A, B)', {'': 'location(A, C)', 'true': 'location(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'location(E, A), recursion_proteinclass(E, B)', 'false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false': 'location(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [4.515, 27, 83], 'true,false': [0.032, 131, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [1.449, 7, 3]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'location(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.633, 180, 83], 'false,false,false,false': [1.589, 7, 4]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(D, A), location(A, E)', 'false,false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.842, 184, 87]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(A, D), location(E, A)', 'false,false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.818, 174, 87]}]
{'': [nan, 0.23067784645581269], 'false': [nan, 0.23067784645581232], 'false,false': [nan, 0.23067784645581269], 'false,false,false': [nan, 0.23067784645581232]}
{'': [nan, 0.21627768595041294], 'false': [nan, 0.216277685950413], 'false,false': [nan, 0.21627768595041294], 'false,false,false': [0.21570644718792945, 0.2166445552009755]}
{'': [nan, 0.2167032748639009], 'false': [nan, 0.2167032748639009], 'false,false': [nan, 0.21670327486390095], 'false,false,false': [0.21599519003179132, 0.23142462154815524]}
{'': [nan, 0.21626410674192995], 'false': [nan, 0.21626410674192995], 'false,false': [nan, 0.2162641067419299], 'false,false,false': [0.20999999999999952, 0.22016433675710934]}
{'': [nan, 0.2295022311180764], 'false': [nan, 0.2295022311180764], 'false,false': [nan, 0.22950223111807636], 'false,false,false': [nan, 0.22950223111807636]}
{'': [nan, 0.22243643945208227], 'false': [nan, 0.22243643945208227], 'false,false': [nan, 0.22243643945208233], 'false,false,false': [nan, 0.2224364394520823]}
{'': [0.22577673426504694, 0.2222508231433941], 'true': [0.18534861917715104, 7.774864858277702e-06], 'false': [nan, 0.2222508231433941], 'false,false': [nan, 0.2222508231433941], 'false,false,false': [0.25, 0.20999999999999996], 'true,true': [nan, 0.18534861917715104], 'true,true,false': [nan, 0.18534861917715104]}
{'': [nan, 0.16988018215752948], 'false': [nan, 0.16988018215752948], 'false,false': [nan, 0.1698801821575295], 'false,false,false': [0.16730753847763902, 0.22958733399070888]}
{'': [nan, 0.1727500360761542], 'false': [nan, 0.17275003607615413], 'false,false': [nan, 0.17275003607615413], 'false,false,false': [nan, 0.17275003607615413]}
{'': [nan, 0.17809697253384477], 'false': [nan, 0.17809697253384477], 'false,false': [nan, 0.17809697253384466], 'false,false,false': [nan, 0.17809697253384466]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- location(A, C).;true;true
6;true;location(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 12.473681926727295
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, F), location(F, D) )
%   | | then if ( interaction(F, C), location(A, D) )
%   | | | then return -0.002962176011598821;  // std dev = 2.075, 36.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=5 */
%   | | | else return 0.12064893509951236;  // std dev = 3.935, 80.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=21 */
%   | | else if ( phenotype(A, G), interaction(C, C) )
%   | | | then return 0.08037115732173453;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.2090261280819677;  // std dev = 5.096, 114.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=40 */
%   else if ( interaction(A, H), complex(H, I) )
%   | then if ( enzyme(H, J) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.7612032860970863;  // std dev = 0.054, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, C), phenotype(C, D) )
%   | | then return -0.011875218257366628;  // std dev = 0.358, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | else if ( interaction(C, C), complex(A, E) )
%   | | | then return 0.5941341924064374;  // std dev = 0.868, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.13502350671577215;  // std dev = 4.142, 83.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=25 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.5373269569258906;  // std dev = 0.918, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8428185822887164;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.05675063432163456;  // std dev = 2.650, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.22898459701313834;  // std dev = 4.031, 68.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=27 */
%   | | | else return 0.4867776961941219;  // std dev = 1.170, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5258121442958937;  // std dev = 0.257, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(D, A), phenotype(A, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, G), complex(A, G) )
%   | | | then return 0.8429683921681604;  // std dev = 0.047, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2919700489439508;  // std dev = 1.082, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.15016540022853694;  // std dev = 0.054, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0.05397558684553539;  // std dev = 4.212, 96.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=24 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(J, H), complex(H, K) )
%   | | | then return 0.36080196791484426;  // std dev = 2.527, 27.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=15 */
%   | | | else return 0.09764287418821296;  // std dev = 2.290, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else if ( interaction(A, L), interaction(M, A) )
%   | | | then return 0.02759433853723787;  // std dev = 1.538, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.17825278195473512;  // std dev = 3.391, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4381953542619486;  // std dev = 0.072, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6120354175569481;  // std dev = 0.228, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.14617577273003216;  // std dev = 0.091, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(F, E), interaction(F, F) )
%   | | | then return 0.10789924224506563;  // std dev = 2.241, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return -0.07306131404070693;  // std dev = 1.391, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.769674476606347;  // std dev = 0.281, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return -0.22437100695729756;  // std dev = 0.224, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( location(A, I) )
%   | | | then return 0.08764927867898707;  // std dev = 4.797, 112.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=35 */
%   | | | else return 0.4519305886523372;  // std dev = 0.846, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3741991547895785;  // std dev = 0.090, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.6766041297275429;  // std dev = 0.074, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2874265040837302;  // std dev = 0.703, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(H, E), complex(H, D) )
%   | | | then return -0.07176081710756417;  // std dev = 1.073, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return 0.17808809285760913;  // std dev = 2.841, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | else if ( location(A, I), interaction(J, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1364697855869351;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.09485017272237088;  // std dev = 4.900, 125.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=42 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.030580778364524403;  // std dev = 1.308, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.10319884004375374;  // std dev = 1.626, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), phenotype(F, D) )
%   | | then return 0.4851039282213984;  // std dev = 0.384, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.5650660125061912;  // std dev = 0.140, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6643587015421067;  // std dev = 0.111, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.1775819885834928;  // std dev = 0.198, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then if ( interaction(H, A) )
%   | | then return 0.260644668395166;  // std dev = 0.053, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.4523759441677784;  // std dev = 0.283, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12576287974384054;  // std dev = 0.076, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(I, A), interaction(A, J) )
%   | | | then return 0.03200966211907165;  // std dev = 3.691, 85.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=24 */
%   | | | else return -0.014374894804699143;  // std dev = 4.875, 140.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=37 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E) )
%   | | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.5216521094345146;  // std dev = 1.000, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return -0.20559957895960573;  // std dev = 0.239, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.21005568012114903;  // std dev = 1.544, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return 0.479654054600132;  // std dev = 2.531, 47.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=38 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then return -0.1538044215242571;  // std dev = 0.043, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( phenotype(A, I), enzyme(A, J) )
%   | | | then return -0.16617085676053658;  // std dev = 0.148, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.23743215797478326;  // std dev = 0.348, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( interaction(A, K), enzyme(K, L) )
%   | then return -0.04375148623575026;  // std dev = 0.340, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else return 0.18501005998552056;  // std dev = 0.971, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( enzyme(C, D), interaction(C, E) )
%   | then return -0.004433846126108501;  // std dev = 0.282, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | else if ( complex(A, F) )
%   | | then return 0.025953628903519925;  // std dev = 0.302, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | else if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5285058385033337;  // std dev = 0.391, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.08622919330212213;  // std dev = 2.149, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   else if ( interaction(H, A), location(H, I) )
%   | then if ( location(A, I), complex(H, J) )
%   | | then return -0.04685074453989542;  // std dev = 0.304, 68.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | | else if ( interaction(K, H), interaction(K, K) )
%   | | | then return 0.08087735198002098;  // std dev = 2.155, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | | else return -0.008180477473386256;  // std dev = 2.378, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | else if ( phenotype(A, L) )
%   | | then return -0.1600849785005322;  // std dev = 0.874, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.05832307856652649;  // std dev = 0.727, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1860645694367979;  // std dev = 0.087, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, D) )
%   | | | then return 0.4965744181937058;  // std dev = 0.375, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.054961661301154506;  // std dev = 0.598, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.16522874404767254;  // std dev = 0.477, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.02439813057664905;  // std dev = 1.613, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | else if ( interaction(F, A), phenotype(A, G) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.21675358114803656;  // std dev = 1.108, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.014994021199082806;  // std dev = 2.407, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.045977644918268;  // std dev = 1.731, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return -0.003945865200922332;  // std dev = 3.401, 88.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=26 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, F) )
%   | | then return 0.23821136325492148;  // std dev = 0.237, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | else return 0.43203118410499863;  // std dev = 0.223, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return -0.1813184546174747;  // std dev = 0.080, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( enzyme(A, G), location(A, H) )
%   | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | then return 0.36472781466154564;  // std dev = 0.232, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return -0.1891279422329297;  // std dev = 0.045, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( enzyme(J, L) )
%   | | | then return 0.4819685596135394;  // std dev = 0.377, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.21743087834941646;  // std dev = 1.024, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.07326838224367842;  // std dev = 2.831, 48.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=19 */
%   | | | else return 0.23388209653585224;  // std dev = 0.819, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
Inference time using transfer learning 57.447636127471924
Refined model CLL: -0.232167


******************************************
Best model found
******************************************
Results 

CLL : -0.244625 

AUC ROC : 0.976339 

AUC PR : 0.300518 

Precision : 0.257186 

Recall : 0.602837 

F1 : 0.360551 

Total Learning Time : 12.473681926727295 

Total Inference Time : 9.50703239440918 

Total revision time: 29.826576709747314
Best scored revision CLL: -0.232167


Results 

CLL : -0.244625 

AUC ROC : 0.976339 

AUC PR : 0.300518 

Precision : 0.257186 

Recall : 0.602837 

F1 : 0.360551 

Total Learning Time : 29.852478742599487 

Total Inference Time : 9.50703239440918 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.2781822681427
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F), location(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18935912618231274;  // std dev = 8.340, 314.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.15388869382844608;  // std dev = 4.736, 103.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=33 */
%   | | | else return 0.21115991878196813;  // std dev = 6.647, 188.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=71 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), location(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G) )
%   | | | then return 0.13018311080688122;  // std dev = 8.092, 298.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=97 */
%   | | | else return 0.12271985162323173;  // std dev = 2.185, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), location(A, G) )
%   | | | then return 0.10340386542662372;  // std dev = 4.614, 99.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=31 */
%   | | | else return 0.10551329605330506;  // std dev = 7.022, 225.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=73 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F), location(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09862108799297767;  // std dev = 8.329, 312.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09191722503008758;  // std dev = 8.255, 302.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41734753403178093;  // std dev = 5.504, 141.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=97 */
%   | else return -0.27043403045147457;  // std dev = 0.063, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   else if ( location(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.061539803365683696;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.005026750617090385;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F) )
%   | | | then return 0.06773445740817935;  // std dev = 7.073, 271.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=97 */
%   | | | else return 0.022900638143040285;  // std dev = 2.233, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), location(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.028336307893335532;  // std dev = 7.554, 317.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), location(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01987532752238444;  // std dev = 7.554, 321.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=104 */
Inference time using transfer learning 35.07705473899841
Parameter learned model CLL:-0.330879 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(A, D), recursion_proteinclass(D, B)', 'false,false': 'location(E, A)', 'false,false,false': 'location(A, F), location(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.34, 210, 104]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(A, D), recursion_proteinclass(D, B)', 'false,false': 'location(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.736, 70, 33], 'false,false,false,false': [6.647, 117, 71]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), location(E, F)', 'false,false,false': 'location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [8.092, 201, 97], 'false,false,false,false': [2.185, 15, 7]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.614, 68, 31], 'false,false,false,false': [7.022, 152, 73]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'location(A, F), location(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.329, 208, 104]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(A, D), location(D, A)', 'false,false': 'location(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.255, 198, 104]}]
['proteinclass(A, B)', {'': 'location(A, C)', 'true': 'location(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'location(E, A), recursion_proteinclass(E, B)', 'false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false': 'location(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [5.504, 44, 97], 'true,false': [0.063, 135, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.265, 8, 2], 'false,false,false,false': [1.9, 13, 5]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'location(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.073, 174, 97], 'false,false,false,false': [2.233, 17, 7]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(D, A), location(A, E)', 'false,false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.554, 213, 104]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(A, D), location(E, A)', 'false,false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.554, 217, 104]}]
{'': [nan, 0.22151000040569802], 'false': [nan, 0.22151000040569746], 'false,false': [nan, 0.22151000040569802], 'false,false,false': [nan, 0.22151000040569746]}
{'': [nan, 0.2296619076298115], 'false': [nan, 0.22966190762981115], 'false,false': [nan, 0.2296619076298115], 'false,false,false': [0.2177396550098965, 0.23503282028066927]}
{'': [nan, 0.21956444418432364], 'false': [nan, 0.21956444418432364], 'false,false': [nan, 0.21956444418432267], 'false,false,false': [0.21974758750472984, 0.21703181381613995]}
{'': [nan, 0.21790350034926576], 'false': [nan, 0.21790350034926576], 'false,false': [nan, 0.21790350034926734], 'false,false,false': [0.21508009386797342, 0.21914443957122728]}
{'': [nan, 0.22236489695792555], 'false': [nan, 0.22236489695792555], 'false,false': [nan, 0.2223648969579258], 'false,false,false': [nan, 0.2223648969579258]}
{'': [nan, 0.2256395012633704], 'false': [nan, 0.2256395012633704], 'false,false': [nan, 0.22563950126336937], 'false,false,false': [nan, 0.22563950126337182]}
{'': [0.22796832510818166, 0.1871284569014753], 'true': [0.21482731493580973, 2.9862994249698874e-05], 'true,true': [nan, 0.21482731493580973], 'true,true,false': [nan, 0.21482731493580973], 'false': [nan, 0.1871284569014753], 'false,false': [nan, 0.1871284569014753], 'false,false,false': [0.15999999999999998, 0.2006172839506172]}
{'': [nan, 0.18664545284585052], 'false': [nan, 0.18664545284585052], 'false,false': [nan, 0.18664545284585055], 'false,false,false': [0.18461099907835074, 0.2077712865157697]}
{'': [nan, 0.18003242823999757], 'false': [nan, 0.18003242823999752], 'false,false': [nan, 0.18003242823999752], 'false,false,false': [nan, 0.18003242823999752]}
{'': [nan, 0.17778111113172523], 'false': [nan, 0.17778111113172523], 'false,false': [nan, 0.17778111113172512], 'false,false,false': [nan, 0.17778111113172512]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- location(A, C).;true;true
6;true;location(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 17.206557512283325
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7581489350995123;  // std dev = 1.342, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else return -0.03957833762776041;  // std dev = 2.842, 88.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=9 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( location(A, H) )
%   | | | then return 0.1978925248431031;  // std dev = 5.916, 156.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=53 */
%   | | | else return 0.3126943896449669;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( interaction(A, E), complex(E, C) )
%   | then return 0.07263322999923719;  // std dev = 0.390, 63.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=16 */
%   | else return 0.15903592000573202;  // std dev = 0.456, 66.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=22 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.7326291456446588;  // std dev = 0.023, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(F, A) )
%   | | | then return -0.1547714292107818;  // std dev = 0.115, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.2547425364630513;  // std dev = 1.892, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( phenotype(A, I), location(A, J) )
%   | | then if ( phenotype(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.756879664405544;  // std dev = 1.365, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | | else return -0.1609479614399553;  // std dev = 0.097, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.7717332667978727;  // std dev = 0.105, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1810474053111383;  // std dev = 3.790, 65.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=23 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), enzyme(C, E) )
%   | then return 0.26960464687540653;  // std dev = 0.692, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( complex(A, F) )
%   | | then return 0.7008237266492263;  // std dev = 0.027, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.5887941827838822;  // std dev = 0.114, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, G), location(A, H) )
%   | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.6721929943415039;  // std dev = 0.250, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.7790526502927768;  // std dev = 0.208, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.17291428583317778;  // std dev = 0.222, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1460621133301159;  // std dev = 0.000981, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.7530428644830444;  // std dev = 0.116, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.09010677829972442;  // std dev = 5.739, 194.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=55 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.44824979683200644;  // std dev = 0.266, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( complex(E, D), location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.26394914107591755;  // std dev = 1.615, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return -0.14392380583421585;  // std dev = 0.088, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( enzyme(A, H), enzyme(E, H) )
%   | | | then return -0.06480874722681901;  // std dev = 0.670, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.22089264712047801;  // std dev = 2.012, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | else if ( enzyme(A, I), interaction(A, J) )
%   | | then if ( interaction(J, A) )
%   | | | then return 0.005372299592789083;  // std dev = 0.905, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.0928290282304562;  // std dev = 1.244, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.278422360891609;  // std dev = 2.014, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.0997712728274169;  // std dev = 5.217, 164.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=53 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( complex(F, G), phenotype(E, H) )
%   | | | then return 0.45616171802502964;  // std dev = 0.105, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.05349200225412705;  // std dev = 0.799, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.5405183753463774;  // std dev = 0.206, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | else return -0.16619902072863676;  // std dev = 0.062, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.40593428924372743;  // std dev = 0.050, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.13345529344564297;  // std dev = 0.180, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.0629689102317085;  // std dev = 3.609, 81.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=25 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.19320771975744847;  // std dev = 3.769, 72.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=32 */
%   | | | else return 0.001917908138201066;  // std dev = 1.745, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, A) )
%   | | then return -0.18739446479653246;  // std dev = 0.968, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.3550954155062009;  // std dev = 0.242, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.44669129921050404;  // std dev = 0.112, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, F), location(C, F) )
%   | | | then return -0.05919515949297815;  // std dev = 2.790, 76.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=15 */
%   | | | else return 0.04209156332881046;  // std dev = 2.392, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   else if ( complex(A, G), enzyme(A, H) )
%   | then return 0.18071906424016743;  // std dev = 0.314, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.41940214931737696;  // std dev = 0.102, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.0967925436695791;  // std dev = 3.858, 94.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=34 */
%   | | | else return 0.03188826618489047;  // std dev = 2.447, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E) )
%   | | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.3488222567258244;  // std dev = 1.224, 33.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   | | | else return -0.1711933931181581;  // std dev = 0.125, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.3054365443702803;  // std dev = 2.533, 47.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=36 */
%   | | | else return 0.4315431583188748;  // std dev = 2.405, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   | else if ( interaction(H, A), enzyme(A, I) )
%   | | then return -0.1426750559325656;  // std dev = 0.033, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.2031744883683324;  // std dev = 0.054, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( interaction(J, A), complex(J, K) )
%   | then return 0.21880935488278497;  // std dev = 1.207, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(L, A), interaction(M, L) )
%   | | then return 0.013522294598220503;  // std dev = 0.387, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return -0.004952507406071227;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then if ( location(E, C) )
%   | | then return 0.33499178595289736;  // std dev = 0.167, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | | else return -0.11604287916658591;  // std dev = 0.656, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(D, A) )
%   | | then return -0.15969618764105722;  // std dev = 0.101, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return -0.024227863550585066;  // std dev = 0.297, 68.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   else if ( location(A, F), enzyme(A, G) )
%   | then return -4.5630683960090904E-5;  // std dev = 0.230, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.47819472165783533;  // std dev = 0.900, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return -0.22229211076978161;  // std dev = 0.391, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.001045544525083966;  // std dev = 1.449, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.11314704061608977;  // std dev = 2.515, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.2733653292302206;  // std dev = 0.121, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.13405912178488466;  // std dev = 0.058, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.230891944351223;  // std dev = 0.968, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( interaction(A, F), enzyme(A, G) )
%   | then if ( interaction(F, F) )
%   | | then return -0.12237981485413091;  // std dev = 0.257, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else return -0.053858328892103124;  // std dev = 0.218, 45.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=10 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( enzyme(I, J), interaction(H, I) )
%   | | | then return 0.05233715542258346;  // std dev = 2.573, 74.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=28 */
%   | | | else return -0.026263817967297154;  // std dev = 3.868, 154.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=40 */
%   | | else if ( location(A, K) )
%   | | | then return 0.03036172693229087;  // std dev = 1.374, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.3906238268542985;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0.16879792006235372;  // std dev = 1.665, 33.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=28 */
%   | | | else return 0.39524493563888535;  // std dev = 1.676, 66.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=64 */
%   | | else if ( interaction(A, G), interaction(D, G) )
%   | | | then return 0.37982964050673795;  // std dev = 0.305, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.29582532259997324;  // std dev = 0.793, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return -0.15048032645234555;  // std dev = 0.049, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   else if ( complex(A, H) )
%   | then return 0.1311629897841212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( enzyme(A, I) )
%   | | then return -0.004409511762474727;  // std dev = 1.019, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.17178042227282556;  // std dev = 1.141, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return -0.07470326399330361;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
Inference time using transfer learning 102.09368300437927
Refined model CLL: -0.203638


******************************************
Best model found
******************************************
Results 

CLL : -0.191623 

AUC ROC : 0.990315 

AUC PR : 0.465727 

Precision : 0.318718 

Recall : 0.713208 

F1 : 0.440559 

Total Learning Time : 17.206557512283325 

Total Inference Time : 19.69011378288269 

Total revision time: 47.45313501358032
Best scored revision CLL: -0.203638


Results 

CLL : -0.191623 

AUC ROC : 0.990315 

AUC PR : 0.465727 

Precision : 0.318718 

Recall : 0.713208 

F1 : 0.440559 

Total Learning Time : 47.479037046432495 

Total Inference Time : 19.69011378288269 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.157869338989258
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F), location(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1855510703308279;  // std dev = 7.866, 281.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.19593290782754513;  // std dev = 4.924, 105.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=38 */
%   | | | else return 0.1593293507420623;  // std dev = 6.036, 166.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=54 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), location(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G) )
%   | | | then return 0.1262487641473344;  // std dev = 7.793, 280.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=89 */
%   | | | else return 0.23692248256213833;  // std dev = 1.306, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), location(A, G) )
%   | | | then return 0.10595927025876002;  // std dev = 4.943, 112.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=36 */
%   | | | else return 0.11654574913021282;  // std dev = 6.140, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F), location(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09305633135480684;  // std dev = 7.882, 283.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05630972827537188;  // std dev = 7.998, 301.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3766859674671816;  // std dev = 5.698, 140.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=89 */
%   | else return -0.2587239741681884;  // std dev = 0.031, 159.000 (wgt'ed) examples reached here.  /* #neg=159 */
%   else if ( location(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.1141614120772537;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.028425464497854283;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F) )
%   | | | then return 0.06274404787572242;  // std dev = 6.989, 264.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=89 */
%   | | | else return 0.07453700409729545;  // std dev = 1.377, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), location(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06157306389193733;  // std dev = 7.043, 262.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), location(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.015322307354623102;  // std dev = 7.244, 291.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=92 */
Inference time using transfer learning 36.471548557281494
Parameter learned model CLL:-0.321996 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(A, D), recursion_proteinclass(D, B)', 'false,false': 'location(E, A)', 'false,false,false': 'location(A, F), location(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.866, 189, 92]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(A, D), recursion_proteinclass(D, B)', 'false,false': 'location(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.924, 67, 38], 'false,false,false,false': [6.036, 112, 54]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), location(E, F)', 'false,false,false': 'location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.793, 191, 89], 'false,false,false,false': [1.306, 4, 3]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.943, 76, 36], 'false,false,false,false': [6.14, 115, 56]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'location(A, F), location(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.882, 191, 92]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(A, D), location(D, A)', 'false,false': 'location(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.998, 209, 92]}]
['proteinclass(A, B)', {'': 'location(A, C)', 'true': 'location(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'location(E, A), recursion_proteinclass(E, B)', 'false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false': 'location(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [5.698, 51, 89], 'true,false': [0.031, 159, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'location(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.989, 175, 89], 'false,false,false,false': [1.377, 5, 3]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(D, A), location(A, E)', 'false,false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.043, 170, 92]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(A, D), location(E, A)', 'false,false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.244, 199, 92]}]
{'': [nan, 0.22020997707729253], 'false': [nan, 0.22020997707729228], 'false,false': [nan, 0.22020997707729253], 'false,false,false': [nan, 0.22020997707729228]}
{'': [nan, 0.22423441946596778], 'false': [nan, 0.22423441946596578], 'false,false': [nan, 0.22423441946596778], 'false,false,false': [0.23092970521542064, 0.2194803309624018]}
{'': [nan, 0.21783941761319567], 'false': [nan, 0.21783941761319567], 'false,false': [nan, 0.21783941761319628], 'false,false,false': [0.21689298513543942, 0.24374679287199777]}
{'': [nan, 0.21958240603624754], 'false': [nan, 0.21958240603624754], 'false,false': [nan, 0.2195824060362484], 'false,false,false': [0.2181122448979587, 0.22050096440417002]}
{'': [nan, 0.21950844640998995], 'false': [nan, 0.21950844640998995], 'false,false': [nan, 0.21950844640999], 'false,false,false': [nan, 0.21950844640999]}
{'': [nan, 0.2125328770318431], 'false': [nan, 0.2125328770318431], 'false,false': [nan, 0.21253287703184318], 'false,false,false': [nan, 0.2125328770318441]}
{'': [0.20912440612923008, 0.22168667095591232], 'false': [nan, 0.22168667095591232], 'false,false': [nan, 0.22168667095591232], 'false,false,false': [0.24000000000000005, 0.18749999999999997], 'true': [0.2319222592414571, 5.971427839346553e-06], 'true,true': [nan, 0.2319222592414571], 'true,true,false': [nan, 0.2319222592414571]}
{'': [nan, 0.18653442922112093], 'false': [nan, 0.18653442922112093], 'false,false': [nan, 0.18653442922112096], 'false,false,false': [0.1850028869568427, 0.2369403405322257]}
{'': [nan, 0.18931381737653824], 'false': [nan, 0.18931381737653827], 'false,false': [nan, 0.18931381737653827], 'false,false,false': [nan, 0.18931381737653827]}
{'': [nan, 0.1803368819315688], 'false': [nan, 0.1803368819315688], 'false,false': [nan, 0.1803368819315688], 'false,false,false': [nan, 0.1803368819315688]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- location(A, C).;true;true
6;true;location(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 9.539764881134033
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.09952824544433996;  // std dev = 0.428, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( complex(D, F) )
%   | | then if ( interaction(D, G), complex(G, F) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.24276431971489684;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else return 0.5854216623722396;  // std dev = 0.445, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.858148935099512;  // std dev = 1.03e-07, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return -0.14185106490048768;  // std dev = 3.80e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( interaction(J, A), phenotype(A, K) )
%   | | | then return 0.14847151574467365;  // std dev = 2.527, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.20189893509951234;  // std dev = 3.800, 64.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=22 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then return 0.798385389470217;  // std dev = 0.051, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.7194734122109545;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.14140760715666736;  // std dev = 0.076, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then if ( interaction(H, I), phenotype(I, J) )
%   | | then if ( interaction(H, A) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4235665466095764;  // std dev = 0.725, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7830725107019152;  // std dev = 0.093, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.8122348175830074;  // std dev = 0.104, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.06508584870961251;  // std dev = 4.744, 133.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=31 */
%   | | | else return 0.1941955009835181;  // std dev = 3.967, 73.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=27 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.5595615684873171;  // std dev = 0.072, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.6605755456335322;  // std dev = 0.144, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.32266832375605164;  // std dev = 0.745, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.666234515113256;  // std dev = 0.070, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return -0.15593077971973252;  // std dev = 0.039, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(A, G), phenotype(A, H) )
%   | | | then return 0.03874600972415732;  // std dev = 3.149, 65.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
%   | | | else return 0.12081601582803694;  // std dev = 5.818, 178.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=56 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4607631316028526;  // std dev = 0.059, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( interaction(E, E), enzyme(A, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.04794069971468076;  // std dev = 1.300, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.3798112083816815;  // std dev = 1.314, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( enzyme(E, H) )
%   | | | then return -0.18042011467883626;  // std dev = 0.146, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.015628646577415244;  // std dev = 2.312, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | else if ( phenotype(A, I) )
%   | | then if ( interaction(J, A), interaction(A, K) )
%   | | | then return -0.06275510714242713;  // std dev = 0.711, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.08912603974269229;  // std dev = 3.556, 74.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=23 */
%   | | else if ( enzyme(A, L), complex(A, M) )
%   | | | then return 0.3959855016614037;  // std dev = 0.677, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.16887655086695658;  // std dev = 4.376, 89.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=35 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( complex(D, E), interaction(D, D) )
%   | then if ( phenotype(A, F), complex(A, G) )
%   | | then return 0.21016541363050614;  // std dev = 0.917, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( complex(A, E), enzyme(D, C) )
%   | | | then return -0.06783220554721998;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.08760583966777284;  // std dev = 1.590, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else return 0.005082782315366844;  // std dev = 0.307, 55.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.40473951180321566;  // std dev = 0.102, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5339379970934092;  // std dev = 0.245, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1276749474452709;  // std dev = 2.732, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | else if ( interaction(A, L), interaction(M, A) )
%   | | | then return -0.04820800767864358;  // std dev = 1.417, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.08178808431052204;  // std dev = 4.934, 133.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=42 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( enzyme(A, E), enzyme(C, E) )
%   | then return 0.09493276984433549;  // std dev = 0.366, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.30052264376196325;  // std dev = 0.205, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.013514387908932833;  // std dev = 0.388, 92.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=23 */
%   else if ( interaction(G, A), location(G, H) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.3412819222524078;  // std dev = 0.190, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(A, I), complex(A, J) )
%   | | | then return -0.0016623462941546083;  // std dev = 1.702, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.05901159363410104;  // std dev = 4.393, 105.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=32 */
%   | else if ( location(A, K), interaction(A, L) )
%   | | then if ( phenotype(A, M) )
%   | | | then return 0.051198852403740856;  // std dev = 1.585, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.16529562994999403;  // std dev = 1.641, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else return 0.3789394386997021;  // std dev = 0.665, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( complex(A, F), complex(E, F) )
%   | | | then return 0.24902223630693335;  // std dev = 0.216, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.006182936419726355;  // std dev = 1.139, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.25510142333524044;  // std dev = 3.352, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | | | else return 0.3498593928150259;  // std dev = 3.647, 65.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=42 */
%   | else if ( enzyme(A, H), phenotype(A, I) )
%   | | then return -0.1538619549212996;  // std dev = 0.033, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.14551634525902982;  // std dev = 0.032, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.2426547241023287;  // std dev = 0.391, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( interaction(A, A) )
%   | then return -0.038900349847055836;  // std dev = 0.270, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.054598082605259016;  // std dev = 0.847, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.19590269013422842;  // std dev = 0.039, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.28209481263996455;  // std dev = 0.049, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( function(A, E), function(D, E) )
%   | | then if ( complex(A, F), phenotype(A, G) )
%   | | | then return -0.011451880645409035;  // std dev = 0.674, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.11633572112045941;  // std dev = 0.723, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else return 0.05331677987960486;  // std dev = 0.570, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( interaction(I, J), interaction(J, I) )
%   | | | then return 0.08879637383436388;  // std dev = 3.013, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
%   | | | else return -0.03946799477980096;  // std dev = 2.390, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | else if ( phenotype(A, K), complex(A, L) )
%   | | | then return 0.13644491280641238;  // std dev = 2.118, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return 0.060931195187430724;  // std dev = 3.661, 93.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=32 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, A) )
%   then if ( interaction(A, C), recursion_proteinclass(C, B) )
%   | then return 0.1592716795281579;  // std dev = 0.080, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.14954271631577074;  // std dev = 0.036, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(D, G), interaction(H, D) )
%   | | | then return 0.6469349250193654;  // std dev = 0.240, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.4585616956227863;  // std dev = 1.031, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | else return -0.20497179021956366;  // std dev = 0.049, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.36254237451241605;  // std dev = 0.468, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.08954202085397417;  // std dev = 1.654, 43.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.016084818970924522;  // std dev = 2.184, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | | else return 0.05728889841606502;  // std dev = 3.708, 76.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=27 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( enzyme(A, E), complex(D, F) )
%   | then if ( interaction(G, A), complex(G, C) )
%   | | then return -0.03680879836031517;  // std dev = 0.240, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | else if ( enzyme(D, H), interaction(D, D) )
%   | | | then return 0.09038900965015613;  // std dev = 1.352, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.29228239826016955;  // std dev = 0.539, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.0690675128618264;  // std dev = 0.262, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   else if ( location(A, I) )
%   | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | then if ( interaction(K, A), interaction(K, J) )
%   | | | then return 0.4651765375639802;  // std dev = 1.137, 50.000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | | | else return 0.011946952027082958;  // std dev = 2.645, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | | else return -0.19817596797684886;  // std dev = 0.041, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( interaction(A, A) )
%   | | then return -0.06377284185300516;  // std dev = 0.227, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.08265357852738625;  // std dev = 0.321, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
Inference time using transfer learning 75.48227572441101
Refined model CLL: -0.220161


******************************************
Best model found
******************************************
Results 

CLL : -0.219785 

AUC ROC : 0.9798 

AUC PR : 0.283741 

Precision : 0.189542 

Recall : 0.732852 

F1 : 0.301187 

Total Learning Time : 9.539764881134033 

Total Inference Time : 10.051810026168823 

Total revision time: 27.71104121208191
Best scored revision CLL: -0.220161


Results 

CLL : -0.219785 

AUC ROC : 0.9798 

AUC PR : 0.283741 

Precision : 0.189542 

Recall : 0.732852 

F1 : 0.301187 

Total Learning Time : 27.736943244934082 

Total Inference Time : 10.051810026168823 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.919257402420044
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F), location(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21648226843284532;  // std dev = 7.429, 240.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.18413251751216336;  // std dev = 4.252, 79.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=28 */
%   | | | else return 0.1592475923107843;  // std dev = 6.236, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), location(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G) )
%   | | | then return 0.14345425559682967;  // std dev = 7.409, 245.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=83 */
%   | | | else return 0.17904664000988024;  // std dev = 1.371, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), location(A, G) )
%   | | | then return 0.10759314240211018;  // std dev = 4.256, 82.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=27 */
%   | | | else return 0.175496973450664;  // std dev = 5.983, 150.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=59 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F), location(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10722163127912607;  // std dev = 7.456, 243.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05627472877397669;  // std dev = 7.629, 266.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4378763291505454;  // std dev = 4.858, 116.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=83 */
%   | else return -0.2770261267519133;  // std dev = 0.048, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   else if ( location(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.04043424373755766;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.03777188095795057;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F) )
%   | | | then return 0.0034783577698456174;  // std dev = 6.855, 275.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=83 */
%   | | | else return 0.1393715021301461;  // std dev = 1.314, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), location(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01172146539742568;  // std dev = 6.946, 276.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), location(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04630411871242854;  // std dev = 6.711, 245.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=86 */
Inference time using transfer learning 45.85275673866272
Parameter learned model CLL:-0.3293 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(A, D), recursion_proteinclass(D, B)', 'false,false': 'location(E, A)', 'false,false,false': 'location(A, F), location(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.429, 154, 86]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(A, D), recursion_proteinclass(D, B)', 'false,false': 'location(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.252, 51, 28], 'false,false,false,false': [6.236, 118, 58]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), location(E, F)', 'false,false,false': 'location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.409, 162, 83], 'false,false,false,false': [1.371, 5, 3]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.256, 55, 27], 'false,false,false,false': [5.983, 91, 59]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'location(A, F), location(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.456, 157, 86]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(A, D), location(D, A)', 'false,false': 'location(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.629, 180, 86]}]
['proteinclass(A, B)', {'': 'location(A, C)', 'true': 'location(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'location(E, A), recursion_proteinclass(E, B)', 'false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false': 'location(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [4.858, 33, 83], 'true,false': [0.048, 130, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.816, 2, 1], 'false,false,false,false': [1.225, 6, 2]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'location(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.855, 192, 83], 'false,false,false,false': [1.314, 4, 3]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(D, A), location(A, E)', 'false,false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.946, 190, 86]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(A, D), location(E, A)', 'false,false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.711, 159, 86]}]
{'': [nan, 0.22993055555555644], 'false': [nan, 0.22993055555555622], 'false,false': [nan, 0.22993055555555644], 'false,false,false': [nan, 0.22993055555555622]}
{'': [nan, 0.22351403306420495], 'false': [nan, 0.2235140330642048], 'false,false': [nan, 0.22351403306420495], 'false,false,false': [0.22880948565935083, 0.22094524793388268]}
{'': [nan, 0.22442692177446047], 'false': [nan, 0.22442692177446047], 'false,false': [nan, 0.2244269217744605], 'false,false,false': [0.22404590093660492, 0.23486892458631406]}
{'': [nan, 0.23341703721462745], 'false': [nan, 0.23341703721462745], 'false,false': [nan, 0.23341703721462745], 'false,false,false': [0.22085068411659778, 0.23865691822045473]}
{'': [nan, 0.22878132128665535], 'false': [nan, 0.22878132128665535], 'false,false': [nan, 0.22878132128665535], 'false,false,false': [nan, 0.22878132128665535]}
{'': [nan, 0.21882906012637493], 'false': [nan, 0.21882906012637493], 'false,false': [nan, 0.21882906012637504], 'false,false,false': [nan, 0.21882906012637543]}
{'': [0.22329550529295963, 0.19818282713959234], 'true': [0.20343460743492864, 1.7860443986200254e-05], 'true,true': [nan, 0.20343460743492864], 'true,true,false': [nan, 0.20343460743492864], 'false': [nan, 0.19818282713959234], 'false,false': [nan, 0.19818282713959234], 'false,false,false': [0.22222222222222218, 0.18749999999999992]}
{'': [nan, 0.17322866166976567], 'false': [nan, 0.17322866166976567], 'false,false': [nan, 0.17322866166976564], 'false,false,false': [0.17089898142202442, 0.24674326696124566]}
{'': [nan, 0.1747926598624899], 'false': [nan, 0.17479265986248993], 'false,false': [nan, 0.17479265986248993], 'false,false,false': [nan, 0.17479265986248993]}
{'': [nan, 0.18383323757412975], 'false': [nan, 0.18383323757412975], 'false,false': [nan, 0.18383323757412975], 'false,false,false': [nan, 0.18383323757412975]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- location(A, C).;true;true
6;true;location(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 9.058214664459229
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( complex(C, E), location(A, F) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(A, G), interaction(D, G) )
%   | | | then return -0.05489454316135737;  // std dev = 1.351, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | | else return 0.23314893509951232;  // std dev = 3.354, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   | else if ( recursion_proteinclass(D, B), interaction(H, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.0733388085172339;  // std dev = 0.411, 79.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=17 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then return 0.10814893509951237;  // std dev = 0.433, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else if ( complex(A, L), enzyme(A, M) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.2971733253434148;  // std dev = 3.178, 41.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=18 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7525664218964702;  // std dev = 0.055, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then if ( complex(E, F) )
%   | | | then return -0.13791856232195893;  // std dev = 0.020, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.0033144043930047142;  // std dev = 0.792, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5194734122109544;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.14158560641368856;  // std dev = 0.024, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(H, A), interaction(A, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.534229131923552;  // std dev = 0.798, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.08221696890438483;  // std dev = 3.533, 70.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=17 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.09036566792107766;  // std dev = 2.436, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.19273123658465086;  // std dev = 4.869, 104.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=38 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.5471803772597635;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( complex(C, E) )
%   | | then return 0.6266739787421521;  // std dev = 0.064, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.6823003957126262;  // std dev = 0.116, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.6608645493704774;  // std dev = 0.199, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(G, A), interaction(A, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.13191941432754106;  // std dev = 0.038, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.06028301218981051;  // std dev = 1.327, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( interaction(A, H), enzyme(A, I) )
%   | | | then return 0.2617400336944991;  // std dev = 2.486, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.10048197586834295;  // std dev = 5.859, 168.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=49 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then return 0.06911050878990146;  // std dev = 0.285, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(D, G) )
%   | | | then return 0.24370462146593722;  // std dev = 0.573, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8075819677703499;  // std dev = 0.020, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(H, E), enzyme(H, I) )
%   | | | then return 0.051866960484725236;  // std dev = 3.364, 63.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=16 */
%   | | | else return 0.23769651176019957;  // std dev = 3.029, 41.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=19 */
%   | else if ( interaction(A, J), location(A, K) )
%   | | then if ( interaction(J, L), location(L, K) )
%   | | | then return 0.10702158118884408;  // std dev = 2.727, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return 0.40202691310409244;  // std dev = 1.362, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.010728791140374729;  // std dev = 1.757, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.07927774713991007;  // std dev = 2.356, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.37387579112259295;  // std dev = 0.229, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | | then return 0.4701475193127787;  // std dev = 0.140, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(C, C), enzyme(C, E) )
%   | | | then return -0.09035826394173326;  // std dev = 1.573, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | | else return 0.055244883959806805;  // std dev = 4.332, 107.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=30 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.7417520988193093;  // std dev = 0.116, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.2461166116242476;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.45583588448150336;  // std dev = 0.154, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.2080068520659156;  // std dev = 1.985, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.0876897155181784;  // std dev = 3.506, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.27225999576584226;  // std dev = 0.212, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( complex(D, E), phenotype(D, F) )
%   | | then if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7600845816865447;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.19161458370239065;  // std dev = 0.137, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.014130890754943046;  // std dev = 1.881, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return -0.11272602472458727;  // std dev = 1.545, 29.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( phenotype(A, K), interaction(L, I) )
%   | | | then return 0.00894756468081166;  // std dev = 3.279, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return 0.15785014553051585;  // std dev = 3.567, 58.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=24 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.165994375554491;  // std dev = 1.862, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.02777098613354496;  // std dev = 2.609, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, F) )
%   | | then if ( interaction(F, E), phenotype(A, G) )
%   | | | then return 0.3812264465957611;  // std dev = 1.926, 30.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=23 */
%   | | | else return 0.15007311821041144;  // std dev = 2.695, 46.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | | else if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return 0.31412785135549853;  // std dev = 1.570, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.5576749116329414;  // std dev = 1.841, 34.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=30 */
%   | else if ( interaction(J, A), interaction(A, J) )
%   | | then return -0.12439006261926717;  // std dev = 0.131, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.2513727703864186;  // std dev = 0.043, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( interaction(K, A) )
%   | then if ( interaction(K, K) )
%   | | then return -0.03743997413020067;  // std dev = 0.724, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.015658654380262;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.08412927315004222;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( location(A, E), phenotype(C, F) )
%   | then if ( phenotype(A, F), complex(C, G) )
%   | | then return 0.012854728855385661;  // std dev = 0.350, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( location(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.5561225218828856;  // std dev = 0.427, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.19305683806934715;  // std dev = 0.096, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, I) )
%   | | then if ( interaction(A, J) )
%   | | | then return 0.1293714289655184;  // std dev = 1.032, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.03764372581017961;  // std dev = 0.718, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.060440431116911074;  // std dev = 0.307, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   else if ( phenotype(A, K) )
%   | then return -2.8739394823697466E-4;  // std dev = 0.353, 134.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=40 */
%   | else if ( interaction(L, A), interaction(L, L) )
%   | | then return -0.016380500115751984;  // std dev = 0.270, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | else return 0.10151599580889968;  // std dev = 0.412, 47.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=19 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( interaction(A, E), complex(E, F) )
%   | then return -0.03318355001739687;  // std dev = 0.283, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | then return 0.26165082521459576;  // std dev = 0.315, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.028683109192575752;  // std dev = 0.369, 133.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=43 */
%   else if ( interaction(A, H), enzyme(H, I) )
%   | then if ( location(A, J), location(H, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.23758329195691405;  // std dev = 1.321, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return -0.1842409640954218;  // std dev = 0.078, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.1387369875060148;  // std dev = 0.920, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(A, L), phenotype(L, M) )
%   | | then if ( interaction(N, L), recursion_proteinclass(N, B) )
%   | | | then return 0.6023707356308482;  // std dev = 0.132, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.28002813348733;  // std dev = 0.013, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.41462652933679506;  // std dev = 0.807, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D) )
%   | then return -0.10449759806823429;  // std dev = 0.819, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.18868818737926596;  // std dev = 0.040, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.24677347820111747;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then return 0.346824065122253;  // std dev = 0.160, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2857824619306846;  // std dev = 0.051, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.10973117576857884;  // std dev = 0.127, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.030568159007380153;  // std dev = 2.143, 49.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=10 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return -0.008319261632494477;  // std dev = 2.463, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | | else return 0.03687946277258084;  // std dev = 4.232, 118.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=42 */
Inference time using transfer learning 70.91813778877258
Refined model CLL: -0.274869


******************************************
Best model found
******************************************
Results 

CLL : -0.296663 

AUC ROC : 0.915008 

AUC PR : 0.088779 

Precision : 0.091264 

Recall : 0.413428 

F1 : 0.149521 

Total Learning Time : 9.058214664459229 

Total Inference Time : 7.230588436126709 

Total revision time: 23.482528924942017
Best scored revision CLL: -0.274869


Results 

CLL : -0.296663 

AUC ROC : 0.915008 

AUC PR : 0.088779 

Precision : 0.091264 

Recall : 0.413428 

F1 : 0.149521 

Total Learning Time : 23.50843095779419 

Total Inference Time : 7.230588436126709 

Run: 3

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.0962204933166504
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F), location(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19405627100684802;  // std dev = 7.601, 259.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.18701413133390601;  // std dev = 4.686, 96.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=34 */
%   | | | else return 0.2034768352966099;  // std dev = 5.776, 143.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=53 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), location(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G) )
%   | | | then return 0.15380451361991088;  // std dev = 7.344, 237.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=83 */
%   | | | else return 0.11086632493025661;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), location(A, G) )
%   | | | then return 0.14657376734652372;  // std dev = 4.572, 90.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=33 */
%   | | | else return 0.09907126116216146;  // std dev = 6.054, 168.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=54 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F), location(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08699629479832317;  // std dev = 7.640, 264.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07842825837264807;  // std dev = 7.595, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.43506069893796634;  // std dev = 4.908, 117.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=83 */
%   | else return -0.2743934983777745;  // std dev = 0.034, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   else if ( location(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.010462237169993727;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.03635420720383094;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F) )
%   | | | then return 0.026389647831244076;  // std dev = 6.741, 258.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=83 */
%   | | | else return -0.034021289395514194;  // std dev = 1.753, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), location(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.024168129852770406;  // std dev = 6.891, 274.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), location(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05036540349143628;  // std dev = 6.723, 244.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=87 */
Inference time using transfer learning 39.108774185180664
Parameter learned model CLL:-0.329624 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(A, D), recursion_proteinclass(D, B)', 'false,false': 'location(E, A)', 'false,false,false': 'location(A, F), location(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.601, 172, 87]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(A, D), recursion_proteinclass(D, B)', 'false,false': 'location(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.686, 62, 34], 'false,false,false,false': [5.776, 90, 53]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), location(E, F)', 'false,false,false': 'location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.344, 154, 83], 'false,false,false,false': [1.664, 9, 4]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.572, 57, 33], 'false,false,false,false': [6.054, 114, 54]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'location(A, F), location(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.64, 177, 87]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(A, D), location(D, A)', 'false,false': 'location(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.595, 171, 87]}]
['proteinclass(A, B)', {'': 'location(A, C)', 'true': 'location(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'location(E, A), recursion_proteinclass(E, B)', 'false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false': 'location(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [4.908, 34, 83], 'true,false': [0.034, 125, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.866, 3, 1], 'false,false,false,false': [1.449, 7, 3]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'location(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.741, 175, 83], 'false,false,false,false': [1.753, 13, 4]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(D, A), location(A, E)', 'false,false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.891, 187, 87]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(A, D), location(E, A)', 'false,false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.723, 157, 87]}]
{'': [nan, 0.223073597590973], 'false': [nan, 0.2230735975909727], 'false,false': [nan, 0.223073597590973], 'false,false,false': [nan, 0.2230735975909727]}
{'': [nan, 0.2315085520211487], 'false': [nan, 0.23150855202114803], 'false,false': [nan, 0.2315085520211487], 'false,false,false': [0.2287326388888884, 0.23326324025624687]}
{'': [nan, 0.2269098857993242], 'false': [nan, 0.2269098857993242], 'false,false': [nan, 0.2269098857993244], 'false,false,false': [0.22757427938920205, 0.21304966331440717]}
{'': [nan, 0.2235586577666509], 'false': [nan, 0.2235586577666509], 'false,false': [nan, 0.22355865776665088], 'false,false,false': [0.23222222222222208, 0.21813031551313025]}
{'': [nan, 0.221094644805349], 'false': [nan, 0.221094644805349], 'false,false': [nan, 0.22109464480534904], 'false,false,false': [nan, 0.22109464480534904]}
{'': [nan, 0.22358749353783502], 'false': [nan, 0.22358749353783502], 'false,false': [nan, 0.22358749353783516], 'false,false,false': [nan, 0.22358749353783386]}
{'': [0.22524307692997972, 0.2040187305028178], 'true': [0.20589572862664868, 8.991650972916431e-06], 'true,true': [nan, 0.20589572862664868], 'true,true,false': [nan, 0.20589572862664868], 'false': [nan, 0.2040187305028178], 'false,false': [nan, 0.2040187305028178], 'false,false,false': [0.1875, 0.20999999999999996]}
{'': [nan, 0.17663727848603636], 'false': [nan, 0.17663727848603636], 'false,false': [nan, 0.17663727848603641], 'false,false,false': [0.1761430953812016, 0.1807133568059581]}
{'': [nan, 0.1732940301278824], 'false': [nan, 0.17329403012788233], 'false,false': [nan, 0.17329403012788233], 'false,false,false': [nan, 0.17329403012788233]}
{'': [nan, 0.18524757175005122], 'false': [nan, 0.18524757175005122], 'false,false': [nan, 0.18524757175005116], 'false,false,false': [nan, 0.18524757175005116]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- location(A, C).;true;true
6;true;location(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 12.91428542137146
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( enzyme(A, E), phenotype(A, F) )
%   | | then return 0.274815601766179;  // std dev = 0.493, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else return 0.0803711573217346;  // std dev = 0.416, 81.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=18 */
%   else if ( interaction(G, A), interaction(A, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.19148226843284546;  // std dev = 5.416, 132.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=44 */
%   | | | else return 0.31269438964496676;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.6409493105958851;  // std dev = 0.302, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(E, C), interaction(A, F) )
%   | | | then return 0.8266464210014925;  // std dev = 0.117, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.03915570384276912;  // std dev = 0.888, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.047905750964468655;  // std dev = 0.405, 113.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=24 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.7516253148481159;  // std dev = 0.111, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(H, H), interaction(A, J) )
%   | | | then return 0.053449342221225195;  // std dev = 1.390, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.2511049981523409;  // std dev = 4.460, 82.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=34 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.3213006413169548;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.05031158493211489;  // std dev = 1.964, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.5424357609566891;  // std dev = 0.325, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else if ( interaction(A, C) )
%   | | then return -0.16082844525733211;  // std dev = 0.028, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( complex(A, D), enzyme(A, F) )
%   | | | then return 0.42812170905821567;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.12916142429171765;  // std dev = 4.901, 118.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=38 */
%   else if ( phenotype(A, G), interaction(A, H) )
%   | then return 0.031298199704531945;  // std dev = 0.401, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( phenotype(A, K), complex(A, L) )
%   | | | then return 0.026691448790942835;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.11171622525408652;  // std dev = 2.160, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( complex(A, M), interaction(N, A) )
%   | | | then return 0.4620055439920933;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.12921006069343266;  // std dev = 3.477, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3945358980221111;  // std dev = 0.337, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( location(A, G), location(E, G) )
%   | | | then return 0.6286471957579464;  // std dev = 0.228, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.027712117983764734;  // std dev = 0.761, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, H), interaction(E, H) )
%   | | | then return -0.07192081140779981;  // std dev = 1.238, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | | else return 0.19456982848567436;  // std dev = 3.678, 57.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=22 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.0882410643178847;  // std dev = 1.090, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.07889589222419847;  // std dev = 0.901, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.1515359507467772;  // std dev = 2.310, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.07394593944344026;  // std dev = 4.761, 110.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=33 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.45333093335154256;  // std dev = 0.294, 24.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | else if ( interaction(C, A) )
%   | | then return -0.1623612311754891;  // std dev = 0.170, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( phenotype(A, E), complex(C, F) )
%   | | | then return 0.07300223764026278;  // std dev = 1.688, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.2107124160300113;  // std dev = 1.500, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.4759733454714861;  // std dev = 0.087, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7368730242837097;  // std dev = 0.300, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.23518270602164162;  // std dev = 0.228, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.15890885877479097;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.08143992982472074;  // std dev = 4.542, 97.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=30 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), location(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.2730799347025276;  // std dev = 0.074, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.04114822289456865;  // std dev = 0.666, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.4982979552207703;  // std dev = 0.360, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B), interaction(A, H) )
%   | | then return 0.4385460897158939;  // std dev = 0.236, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else if ( interaction(A, F) )
%   | | | then return -0.14398464729949956;  // std dev = 0.242, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0.030397914781155243;  // std dev = 5.877, 196.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=56 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then return 0.01467425182806903;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.33666988492651423;  // std dev = 1.016, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.09004834667465052;  // std dev = 1.551, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.06723262524959915;  // std dev = 1.077, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0.3282603426909911;  // std dev = 2.068, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | else if ( interaction(F, A), location(F, G) )
%   | | | then return 0.4162125135655588;  // std dev = 3.380, 70.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=53 */
%   | | | else return 0.6424821138603672;  // std dev = 0.490, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then return -0.11505999017371629;  // std dev = 0.159, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.24344226145863285;  // std dev = 0.381, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( interaction(A, I), enzyme(I, J) )
%   | then return 0.2149795678226497;  // std dev = 0.732, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, K), interaction(K, A) )
%   | | then return 0.05745935331896409;  // std dev = 0.456, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.056860670782158174;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.269131698283817;  // std dev = 0.111, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( phenotype(A, F) )
%   | | then if ( interaction(A, G), enzyme(A, H) )
%   | | | then return 0.0930819142232075;  // std dev = 1.153, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.05080639769309084;  // std dev = 2.437, 81.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=17 */
%   | | else if ( interaction(A, I), phenotype(D, J) )
%   | | | then return 0.14852952903118083;  // std dev = 1.501, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return -0.011243715057760095;  // std dev = 2.553, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | else if ( enzyme(A, K) )
%   | | then if ( enzyme(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.5561175299557967;  // std dev = 0.518, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.21545442847290788;  // std dev = 0.397, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(A, M), interaction(N, A) )
%   | | | then return 0.28607776598934276;  // std dev = 1.454, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.12515029001325148;  // std dev = 2.525, 37.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(D, B), complex(D, C) )
%   | then return 0.19196634112603514;  // std dev = 0.125, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( complex(D, F) )
%   | | | then return 0.286100697757126;  // std dev = 0.144, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.017413207635412358;  // std dev = 0.783, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.05239727848233392;  // std dev = 0.307, 86.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=19 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.23606569418394643;  // std dev = 0.110, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( phenotype(I, H), interaction(I, I) )
%   | | | then return 0.08857238106942537;  // std dev = 1.272, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.03270837436443762;  // std dev = 2.306, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.10859925614925556;  // std dev = 0.072, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.07271812966764257;  // std dev = 3.707, 92.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=35 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( phenotype(A, E), enzyme(A, F) )
%   | then if ( interaction(A, G), complex(G, H) )
%   | | then if ( location(A, D) )
%   | | | then return -0.19140482212630142;  // std dev = 0.973, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.07301280733405573;  // std dev = 1.077, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else return 0.007868865498456952;  // std dev = 0.309, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | else if ( interaction(I, C), recursion_proteinclass(I, B) )
%   | | then return 0.17883272501239683;  // std dev = 0.280, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | else if ( enzyme(C, J), enzyme(A, K) )
%   | | | then return 0.16505416671705372;  // std dev = 0.956, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.009551220368469341;  // std dev = 4.538, 168.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=45 */
%   else if ( interaction(A, L), enzyme(L, M) )
%   | then return 0.020343368720447882;  // std dev = 0.464, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( phenotype(A, N) )
%   | | then return 0.2500486077665522;  // std dev = 0.722, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.09010999384365674;  // std dev = 0.898, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
Inference time using transfer learning 58.384639739990234
Refined model CLL: -0.257128


******************************************
Best model found
******************************************
Results 

CLL : -0.289072 

AUC ROC : 0.938141 

AUC PR : 0.168266 

Precision : 0.10459 

Recall : 0.492908 

F1 : 0.172564 

Total Learning Time : 12.91428542137146 

Total Inference Time : 12.239015102386475 

Total revision time: 32.42778539657593
Best scored revision CLL: -0.257128


Results 

CLL : -0.289072 

AUC ROC : 0.938141 

AUC PR : 0.168266 

Precision : 0.10459 

Recall : 0.492908 

F1 : 0.172564 

Total Learning Time : 32.45382642745972 

Total Inference Time : 12.239015102386475 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.23862886428833
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F), location(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17330045025102553;  // std dev = 8.439, 330.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.19055571807251;  // std dev = 4.614, 93.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=33 */
%   | | | else return 0.1599179216371023;  // std dev = 6.927, 219.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=71 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), location(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G) )
%   | | | then return 0.15247482351166483;  // std dev = 7.994, 284.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=97 */
%   | | | else return 0.08016778080476607;  // std dev = 2.263, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), location(A, G) )
%   | | | then return 0.09620498866336112;  // std dev = 4.614, 99.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=31 */
%   | | | else return 0.09436803338558036;  // std dev = 7.124, 239.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=73 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F), location(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10035585029545702;  // std dev = 8.351, 316.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06338295416436578;  // std dev = 8.468, 335.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.361910862023371;  // std dev = 6.055, 156.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=97 */
%   | else return -0.260125013379014;  // std dev = 0.037, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
%   else if ( location(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.24986064743619796;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.04968091480804009;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F) )
%   | | | then return 0.04807727416670172;  // std dev = 7.389, 305.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=97 */
%   | | | else return 0.14447102087463626;  // std dev = 2.032, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), location(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.037086357441121647;  // std dev = 7.716, 324.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), location(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05605547705148036;  // std dev = 7.516, 300.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=104 */
Inference time using transfer learning 35.55301380157471
Parameter learned model CLL:-0.324363 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(A, D), recursion_proteinclass(D, B)', 'false,false': 'location(E, A)', 'false,false,false': 'location(A, F), location(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.439, 226, 104]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(A, D), recursion_proteinclass(D, B)', 'false,false': 'location(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.614, 60, 33], 'false,false,false,false': [6.927, 148, 71]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), location(E, F)', 'false,false,false': 'location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.994, 187, 97], 'false,false,false,false': [2.263, 19, 7]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.614, 68, 31], 'false,false,false,false': [7.124, 166, 73]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'location(A, F), location(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.351, 212, 104]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(A, D), location(D, A)', 'false,false': 'location(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.468, 231, 104]}]
['proteinclass(A, B)', {'': 'location(A, C)', 'true': 'location(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'location(E, A), recursion_proteinclass(E, B)', 'false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false': 'location(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [6.055, 59, 97], 'true,false': [0.037, 153, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.0, 2, 2], 'false,false,false,false': [1.879, 12, 5]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'location(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.389, 208, 97], 'false,false,false,false': [2.032, 10, 7]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(D, A), location(A, E)', 'false,false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.716, 220, 104]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(A, D), location(E, A)', 'false,false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.516, 196, 104]}]
{'': [nan, 0.21583103764922135], 'false': [nan, 0.21583103764922087], 'false,false': [nan, 0.21583103764922135], 'false,false,false': [nan, 0.21583103764922087]}
{'': [nan, 0.22222222222221846], 'false': [nan, 0.22222222222221866], 'false,false': [nan, 0.22222222222221846], 'false,false,false': [0.22892819979188317, 0.21909468109505748]}
{'': [nan, 0.22303771958808372], 'false': [nan, 0.22303771958808372], 'false,false': [nan, 0.22303771958808383], 'false,false,false': [0.22499174915402187, 0.19690389919161794]}
{'': [nan, 0.2131414060607761], 'false': [nan, 0.2131414060607761], 'false,false': [nan, 0.21314140606077747], 'false,false,false': [0.21508009386797206, 0.21233736291758323]}
{'': [nan, 0.2207068913020609], 'false': [nan, 0.2207068913020609], 'false,false': [nan, 0.22070689130206148], 'false,false,false': [nan, 0.22070689130206148]}
{'': [nan, 0.21405847686555374], 'false': [nan, 0.21405847686555374], 'false,false': [nan, 0.21405847686555318], 'false,false,false': [nan, 0.2140584768655532]}
{'': [0.21535883528237007, 0.22186516549426083], 'false': [nan, 0.22186516549426083], 'false,false': [nan, 0.22186516549426083], 'false,false,false': [0.24999999999999997, 0.20761245674740486], 'true': [0.23498157615607412, 8.725318100393435e-06], 'true,true': [nan, 0.23498157615607412], 'true,true,false': [nan, 0.23498157615607412]}
{'': [nan, 0.18283650170927268], 'false': [nan, 0.18283650170927268], 'false,false': [nan, 0.1828365017092728], 'false,false,false': [0.17899394065887103, 0.24297537167148983]}
{'': [nan, 0.18377669171042998], 'false': [nan, 0.1837766917104299], 'false,false': [nan, 0.1837766917104299], 'false,false,false': [nan, 0.1837766917104299]}
{'': [nan, 0.18832254112560573], 'false': [nan, 0.18832254112560573], 'false,false': [nan, 0.18832254112560562], 'false,false,false': [nan, 0.18832254112560562]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- location(A, C).;true;true
6;true;location(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 13.979412317276001
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(C, E) )
%   | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( location(A, F), phenotype(A, G) )
%   | | then if ( location(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.5818331456258287;  // std dev = 3.898, 76.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=55 */
%   | | | else return -0.14185106490048766;  // std dev = 7.88e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return 0.03592671287729014;  // std dev = 2.565, 45.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=8 */
%   | | | else return 0.1658412427918194;  // std dev = 4.076, 78.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=24 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), enzyme(C, E) )
%   | then return 0.5051723247302798;  // std dev = 0.907, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.7194734122109543;  // std dev = 2.98e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.43840745563323064;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8305312088550723;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, H), interaction(I, A) )
%   | | then if ( complex(I, H), interaction(I, I) )
%   | | | then return -0.12704742963989443;  // std dev = 0.020, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.06664801118174975;  // std dev = 3.910, 95.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=22 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.12234405596039208;  // std dev = 5.521, 161.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=47 */
%   | | | else return 0.25310298720061786;  // std dev = 2.384, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C), complex(A, D) )
%   then if ( location(E, C), recursion_proteinclass(E, B) )
%   | then return 0.5151829254306179;  // std dev = 0.382, 50.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=40 */
%   | else return -0.14298411424183588;  // std dev = 0.124, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else if ( phenotype(A, F), interaction(G, A) )
%   | then if ( phenotype(G, H), interaction(I, G) )
%   | | then if ( recursion_proteinclass(I, B), interaction(A, G) )
%   | | | then return 0.5954333330559689;  // std dev = 0.978, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.0826172707243355;  // std dev = 3.780, 85.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=23 */
%   | | else if ( interaction(G, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7292029446209368;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.19591552426356898;  // std dev = 0.098, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( location(A, K), enzyme(A, L) )
%   | | then if ( enzyme(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.7765708580990976;  // std dev = 0.162, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.18282392712281234;  // std dev = 0.111, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0.06829371936506709;  // std dev = 0.421, 77.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=20 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then return -0.09701406396675;  // std dev = 0.336, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.4458385159090828;  // std dev = 0.101, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.013447509392282786;  // std dev = 0.360, 75.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=17 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.5938876484983004;  // std dev = 0.238, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(E, H), phenotype(A, I) )
%   | | | then return 0.22459138385794175;  // std dev = 1.526, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return -0.011765879163273546;  // std dev = 1.676, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.3772955933450059;  // std dev = 0.242, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( interaction(A, K), interaction(L, A) )
%   | | | then return 0.0025926090016558617;  // std dev = 2.683, 52.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=11 */
%   | | | else return 0.10521100867942829;  // std dev = 4.933, 135.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=43 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.37670084618723854;  // std dev = 0.269, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(E, F), complex(A, G) )
%   | | | then return 0.3862114188178898;  // std dev = 1.435, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return 0.6269684355153047;  // std dev = 0.456, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( complex(C, H), complex(A, I) )
%   | | | then return -0.08998270677041549;  // std dev = 2.032, 76.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=8 */
%   | | | else return 0.06198201987382981;  // std dev = 5.485, 180.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=50 */
%   else if ( interaction(A, J), enzyme(J, K) )
%   | then if ( interaction(J, L) )
%   | | then return -0.15599636864333988;  // std dev = 0.268, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return -0.018271737523816722;  // std dev = 0.730, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( phenotype(A, M) )
%   | | then return 0.16290002979434778;  // std dev = 0.790, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.010777609892352344;  // std dev = 0.661, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(A, E), interaction(C, E) )
%   | then return 0.016214507630757977;  // std dev = 0.323, 101.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=32 */
%   | else if ( phenotype(C, F), phenotype(A, G) )
%   | | then return 0.166607631219022;  // std dev = 0.426, 64.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=27 */
%   | | else return 0.07599065649192224;  // std dev = 0.400, 69.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=23 */
%   else if ( location(A, H), interaction(I, A) )
%   | then if ( location(I, H), enzyme(A, J) )
%   | | then return 0.02683992247891716;  // std dev = 0.373, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( interaction(K, I), enzyme(K, L) )
%   | | | then return 0.3571804669846803;  // std dev = 0.942, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.10806820104131257;  // std dev = 1.588, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | else if ( interaction(A, M), enzyme(M, N) )
%   | | then if ( interaction(P, M), recursion_proteinclass(P, B) )
%   | | | then return 0.6398601961070142;  // std dev = 0.233, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.23069906450075295;  // std dev = 0.242, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.011595468561957955;  // std dev = 0.355, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), enzyme(A, F) )
%   | | then if ( interaction(E, A), phenotype(A, G) )
%   | | | then return 0.021681265997531604;  // std dev = 1.230, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.20613650556763646;  // std dev = 1.608, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.13992366817005406;  // std dev = 1.966, 25.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   | | | else return 0.324069010755518;  // std dev = 4.245, 94.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=68 */
%   | else return -0.16946427333740932;  // std dev = 0.477, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   else if ( interaction(J, A), interaction(K, J) )
%   | then if ( interaction(K, A) )
%   | | then return -0.13907618171188746;  // std dev = 0.497, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.06529667539460034;  // std dev = 1.128, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.01558905496198217;  // std dev = 1.242, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else return 0.11317303615152315;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), complex(C, E) )
%   | then return 0.04247388133421981;  // std dev = 0.382, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else return 0.3446813090412856;  // std dev = 0.101, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( complex(A, H), interaction(I, F) )
%   | | then return 0.07328707216628812;  // std dev = 0.292, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | else if ( interaction(J, F), recursion_proteinclass(J, B) )
%   | | | then return 0.192157259601924;  // std dev = 0.915, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.0468987582002677;  // std dev = 3.175, 83.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=19 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.2181826279982318;  // std dev = 3.803, 79.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=50 */
%   | | | else return -0.13509752450392432;  // std dev = 0.404, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.08564618747374227;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.39139825985677085;  // std dev = 0.988, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then return -0.0024254761843973487;  // std dev = 0.294, 158.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=50 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( location(A, G), interaction(H, E) )
%   | | then if ( enzyme(H, I), complex(H, J) )
%   | | | then return 0.052399419884377636;  // std dev = 2.681, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | | | else return 0.12827181991776315;  // std dev = 2.433, 44.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=19 */
%   | | else if ( complex(E, K) )
%   | | | then return 0.07219618683497407;  // std dev = 1.417, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.04932451518130762;  // std dev = 1.353, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else if ( phenotype(A, L) )
%   | | then if ( phenotype(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.39709808992018614;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.2287571348038804;  // std dev = 0.630, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(N, A), complex(N, P) )
%   | | | then return -0.0427668509665052;  // std dev = 0.755, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.32002675491761473;  // std dev = 0.893, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), complex(A, D) )
%   then if ( interaction(A, E), interaction(F, A) )
%   | then return 0.0027205073073411053;  // std dev = 0.271, 79.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=25 */
%   | else return -0.04441064901418827;  // std dev = 0.309, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   else if ( interaction(A, G), phenotype(A, H) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return -0.15983998088879253;  // std dev = 0.910, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( enzyme(G, I), interaction(G, A) )
%   | | | then return -0.09610246649159146;  // std dev = 1.137, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.02525231924175264;  // std dev = 1.673, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.6041745618654762;  // std dev = 0.275, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.21576087267695457;  // std dev = 0.136, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( location(A, M) )
%   | | | then return 0.10451528154985752;  // std dev = 3.390, 85.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=38 */
%   | | | else return 0.0173032076440277;  // std dev = 1.754, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
Inference time using transfer learning 71.99306654930115
Refined model CLL: -0.261616


******************************************
Best model found
******************************************
Results 

CLL : -0.263752 

AUC ROC : 0.944862 

AUC PR : 0.188102 

Precision : 0.087662 

Recall : 0.611321 

F1 : 0.153336 

Total Learning Time : 13.979412317276001 

Total Inference Time : 16.29902672767639 

Total revision time: 39.585336446762085
Best scored revision CLL: -0.261616


Results 

CLL : -0.263752 

AUC ROC : 0.944862 

AUC PR : 0.188102 

Precision : 0.087662 

Recall : 0.611321 

F1 : 0.153336 

Total Learning Time : 39.611377477645874 

Total Inference Time : 16.29902672767639 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.12654972076416
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F), location(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19391535845717534;  // std dev = 7.817, 274.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.1604532874412464;  // std dev = 5.055, 116.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=38 */
%   | | | else return 0.17036708054469468;  // std dev = 5.981, 160.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=54 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), location(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G) )
%   | | | then return 0.15343586887447166;  // std dev = 7.635, 258.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=89 */
%   | | | else return 0.30906942288726624;  // std dev = 1.224, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), location(A, G) )
%   | | | then return 0.08703957440418833;  // std dev = 5.011, 119.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=36 */
%   | | | else return 0.12143926347974149;  // std dev = 6.077, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F), location(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08667228151727946;  // std dev = 7.892, 285.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0472781515057225;  // std dev = 8.029, 307.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41947141506557556;  // std dev = 5.337, 131.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=89 */
%   | else return -0.2597636262560434;  // std dev = 0.046, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( location(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.12626825531411565;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return -0.09499251396689896;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F) )
%   | | | then return 0.04629900696021157;  // std dev = 7.013, 271.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=89 */
%   | | | else return 0.10650053199236917;  // std dev = 1.366, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), location(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0518158247530476;  // std dev = 7.058, 266.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), location(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02171358373529328;  // std dev = 7.154, 285.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=92 */
Inference time using transfer learning 38.45694947242737
Parameter learned model CLL:-0.320914 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(A, D), recursion_proteinclass(D, B)', 'false,false': 'location(E, A)', 'false,false,false': 'location(A, F), location(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.817, 182, 92]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(A, D), recursion_proteinclass(D, B)', 'false,false': 'location(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.055, 78, 38], 'false,false,false,false': [5.981, 106, 54]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), location(E, F)', 'false,false,false': 'location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.635, 169, 89], 'false,false,false,false': [1.224, 3, 3]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.011, 83, 36], 'false,false,false,false': [6.077, 109, 56]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'location(A, F), location(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.892, 193, 92]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(A, D), location(D, A)', 'false,false': 'location(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.029, 215, 92]}]
['proteinclass(A, B)', {'': 'location(A, C)', 'true': 'location(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'location(E, A), recursion_proteinclass(E, B)', 'false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false': 'location(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [5.337, 42, 89], 'true,false': [0.046, 115, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.291, 10, 2], 'false,false,false,false': [0.894, 4, 1]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'location(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.013, 182, 89], 'false,false,false,false': [1.366, 5, 3]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(D, A), location(A, E)', 'false,false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.058, 174, 92]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(A, D), location(E, A)', 'false,false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.154, 193, 92]}]
{'': [nan, 0.2230273323032673], 'false': [nan, 0.22302733230326702], 'false,false': [nan, 0.2230273323032673], 'false,false,false': [nan, 0.22302733230326702]}
{'': [nan, 0.22222222222221982], 'false': [nan, 0.22222222222222157], 'false,false': [nan, 0.22222222222221982], 'false,false,false': [0.22027348394767995, 0.22359375000000106]}
{'': [nan, 0.22699935435189741], 'false': [nan, 0.22699935435189741], 'false,false': [nan, 0.22699935435189822], 'false,false,false': [0.22591990042706078, 0.24974456551103988]}
{'': [nan, 0.21872778110379962], 'false': [nan, 0.21872778110379962], 'false,false': [nan, 0.21872778110379962], 'false,false,false': [0.21100204787797458, 0.22380383800781584]}
{'': [nan, 0.21851548404770094], 'false': [nan, 0.21851548404770094], 'false,false': [nan, 0.21851548404770102], 'false,false,false': [nan, 0.21851548404770102]}
{'': [nan, 0.2099628099988097], 'false': [nan, 0.2099628099988097], 'false,false': [nan, 0.20996280999880948], 'false,false,false': [nan, 0.20996280999880934]}
{'': [0.2306277353357412, 0.14530111990706718], 'true': [0.21739485381280768, 1.8007653945641675e-05], 'true,true': [nan, 0.21739485381280768], 'true,true,false': [nan, 0.21739485381280768], 'false': [nan, 0.14530111990706718], 'false,false': [nan, 0.14530111990706718], 'false,false,false': [0.1388888888888888, 0.16]}
{'': [nan, 0.1830428415580187], 'false': [nan, 0.1830428415580187], 'false,false': [nan, 0.1830428415580187], 'false,false,false': [0.18146094638657076, 0.23310923726504773]}
{'': [nan, 0.18729500072622532], 'false': [nan, 0.18729500072622526], 'false,false': [nan, 0.18729500072622526], 'false,false,false': [nan, 0.18729500072622526]}
{'': [nan, 0.17960061758798163], 'false': [nan, 0.17960061758798163], 'false,false': [nan, 0.17960061758798165], 'false,false,false': [nan, 0.17960061758798165]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- location(A, C).;true;true
6;true;location(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 8.380234241485596
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( enzyme(A, E), phenotype(A, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.04185106490048778;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(K, I), complex(K, J) )
%   | | | then return 0.13314893509951237;  // std dev = 2.824, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return 0.28037115732173457;  // std dev = 3.313, 45.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | | else if ( interaction(A, L), complex(A, M) )
%   | | | then return 0.06403128804068885;  // std dev = 2.358, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | | else return 0.15045662740720436;  // std dev = 5.186, 130.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=38 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8331018587254265;  // std dev = 0.022, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( complex(A, E), interaction(F, A) )
%   | then if ( enzyme(A, G), enzyme(F, G) )
%   | | then return -0.1523049042667298;  // std dev = 0.087, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( location(F, H) )
%   | | | then return 0.11602307053170038;  // std dev = 4.196, 88.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=25 */
%   | | | else return 0.5004641024111646;  // std dev = 0.810, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( phenotype(A, I) )
%   | | then if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.08284134587845521;  // std dev = 1.141, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.2554609617302602;  // std dev = 2.719, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.21194938599667007;  // std dev = 2.941, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return 0.11929576630255956;  // std dev = 3.930, 78.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=22 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.684662705324095;  // std dev = 0.034, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( complex(A, E), interaction(F, A) )
%   | then if ( interaction(G, F), interaction(F, G) )
%   | | then if ( complex(F, E), phenotype(A, H) )
%   | | | then return -0.15267756183585088;  // std dev = 0.124, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.023614882103450863;  // std dev = 2.288, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | else if ( enzyme(F, I), enzyme(A, J) )
%   | | | then return -0.07299883434964037;  // std dev = 0.922, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.09050459067634273;  // std dev = 3.679, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.6892935252089769;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, L), interaction(M, A) )
%   | | | then return 0.36005194720779554;  // std dev = 1.997, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.10943896226749705;  // std dev = 5.165, 129.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=38 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.4626382059066626;  // std dev = 0.053, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1470853841575636;  // std dev = 0.087, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.06616638314419565;  // std dev = 0.435, 206.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=56 */
%   else if ( complex(A, D) )
%   | then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.7292424051415073;  // std dev = 0.135, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.18838179317462164;  // std dev = 0.024, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.7943521561802802;  // std dev = 0.022, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.2046375712015893;  // std dev = 0.037, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.11657249071417776;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.3054651549797157;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.31096172439264674;  // std dev = 1.05e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.3303165136234974;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5950192650903094;  // std dev = 0.148, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.1274569549964189;  // std dev = 0.102, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(A, F), interaction(F, G) )
%   | | then if ( interaction(G, H), enzyme(H, I) )
%   | | | then return 0.024238980093621684;  // std dev = 2.732, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | | | else return 0.10694731663453728;  // std dev = 3.516, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | | else if ( enzyme(A, J), interaction(K, A) )
%   | | | then return 0.08853258459964097;  // std dev = 3.405, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | | else return 0.1559675991807158;  // std dev = 3.944, 72.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=28 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.2485074044914526;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.2618087386596942;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4510683014347777;  // std dev = 0.152, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), enzyme(A, G) )
%   | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.5990777666824508;  // std dev = 0.244, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, F), interaction(F, I) )
%   | | | then return -0.1507399232047883;  // std dev = 0.981, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | | else return 0.05372880240641258;  // std dev = 3.769, 69.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=21 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.37311172355444555;  // std dev = 0.026, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.11372181282938054;  // std dev = 0.031, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.04533887991391028;  // std dev = 5.737, 172.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(F, E) )
%   | | then if ( interaction(E, F), complex(A, G) )
%   | | | then return 0.2156299938271352;  // std dev = 1.802, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | | | else return 0.3712205788894008;  // std dev = 3.488, 61.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=41 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return 0.3345583224135105;  // std dev = 2.017, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | | | else return 0.566653351895139;  // std dev = 1.665, 21.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | else if ( complex(A, J), interaction(A, K) )
%   | | then if ( complex(K, J), interaction(K, A) )
%   | | | then return -0.10967608695349344;  // std dev = 0.127, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.20256930740004706;  // std dev = 0.168, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return -0.20201658142437984;  // std dev = 0.140, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.2619269053355052;  // std dev = 0.244, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else return 0.2414408747002832;  // std dev = 0.733, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.19811757599689314;  // std dev = 0.039, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( complex(A, E) )
%   | | then if ( enzyme(A, F) )
%   | | | then return -0.08349409083163649;  // std dev = 0.697, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.08930620000982721;  // std dev = 0.866, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( location(A, G) )
%   | | | then return -0.1687509530053053;  // std dev = 0.688, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.14229058390880636;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(H, A), interaction(A, I) )
%   | | then if ( phenotype(I, J), interaction(I, K) )
%   | | | then return 0.10552049020120431;  // std dev = 2.128, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return -0.06823265994010083;  // std dev = 1.904, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else if ( complex(A, L), interaction(M, A) )
%   | | | then return 0.03270058594331632;  // std dev = 3.032, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | | else return 0.07873972420813405;  // std dev = 4.367, 117.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=43 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then return -0.018350158061090537;  // std dev = 0.344, 119.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=34 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( complex(A, G), phenotype(A, H) )
%   | | then if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6725924689900519;  // std dev = 0.080, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.23544695150009812;  // std dev = 0.229, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(E, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5608132558601082;  // std dev = 0.568, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.25871884812653173;  // std dev = 0.355, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( interaction(K, A), phenotype(A, L) )
%   | | then if ( interaction(K, M), recursion_proteinclass(M, B) )
%   | | | then return 0.5922021234352899;  // std dev = 0.446, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.24047451266731218;  // std dev = 0.171, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( enzyme(A, N), complex(A, P) )
%   | | | then return -0.022223712277295013;  // std dev = 0.752, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.11646827472370931;  // std dev = 3.035, 55.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=23 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( complex(A, D), interaction(A, E) )
%   | then if ( phenotype(E, C), complex(E, D) )
%   | | then return -0.03806740399953378;  // std dev = 0.237, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else return 0.1829027008110076;  // std dev = 0.366, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else if ( phenotype(F, C), recursion_proteinclass(F, B) )
%   | | then return 0.41195476185610896;  // std dev = 0.238, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | else return -0.21043434417036053;  // std dev = 0.093, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.18748259364475298;  // std dev = 0.071, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, H) )
%   | | then if ( complex(H, I), location(A, J) )
%   | | | then return 0.09506014625070741;  // std dev = 2.466, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | | else return -0.06749749743288153;  // std dev = 1.919, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.017879072784382603;  // std dev = 1.983, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | | else return 0.18065651474140967;  // std dev = 2.082, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
Inference time using transfer learning 51.73343515396118
Refined model CLL: -0.254919


******************************************
Best model found
******************************************
Results 

CLL : -0.244073 

AUC ROC : 0.947948 

AUC PR : 0.190627 

Precision : 0.190225 

Recall : 0.519856 

F1 : 0.27853 

Total Learning Time : 8.380234241485596 

Total Inference Time : 7.880015850067139 

Total revision time: 24.46255087852478
Best scored revision CLL: -0.254919


Results 

CLL : -0.244073 

AUC ROC : 0.947948 

AUC PR : 0.190627 

Precision : 0.190225 

Recall : 0.519856 

F1 : 0.27853 

Total Learning Time : 24.48859190940857 

Total Inference Time : 7.880015850067139 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.138320207595825
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F), location(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18514513281814332;  // std dev = 7.608, 263.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.16741766361751106;  // std dev = 4.320, 84.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
%   | | | else return 0.17932242552227293;  // std dev = 6.162, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), location(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G) )
%   | | | then return 0.1499699194335357;  // std dev = 7.392, 243.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=83 */
%   | | | else return 0.1836827873276874;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), location(A, G) )
%   | | | then return 0.11467671521641967;  // std dev = 4.256, 82.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=27 */
%   | | | else return 0.1126627739224989;  // std dev = 6.290, 179.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=59 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F), location(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07332067714801488;  // std dev = 7.708, 278.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08656007339571684;  // std dev = 7.556, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3878523580329588;  // std dev = 5.361, 127.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=83 */
%   | else return -0.26562075977912875;  // std dev = 0.011, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   else if ( location(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.1040063035446136;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.12697051564596767;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F) )
%   | | | then return 0.07875482415155113;  // std dev = 6.557, 231.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=83 */
%   | | | else return 0.20910786432987516;  // std dev = 1.245, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), location(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03168775739347863;  // std dev = 6.827, 268.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), location(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03247275757256111;  // std dev = 6.826, 255.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=86 */
Inference time using transfer learning 42.21269178390503
Parameter learned model CLL:-0.333257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(A, D), recursion_proteinclass(D, B)', 'false,false': 'location(E, A)', 'false,false,false': 'location(A, F), location(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.608, 177, 86]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(A, D), recursion_proteinclass(D, B)', 'false,false': 'location(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.32, 56, 28], 'false,false,false,false': [6.162, 110, 58]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), location(E, F)', 'false,false,false': 'location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.392, 160, 83], 'false,false,false,false': [1.369, 5, 3]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.256, 55, 27], 'false,false,false,false': [6.29, 120, 59]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'location(A, F), location(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.708, 192, 86]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(A, D), location(D, A)', 'false,false': 'location(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.556, 170, 86]}]
['proteinclass(A, B)', {'': 'location(A, C)', 'true': 'location(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'location(E, A), recursion_proteinclass(E, B)', 'false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false': 'location(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [5.361, 44, 83], 'true,false': [0.011, 143, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.913, 5, 1], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'location(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.557, 148, 83], 'false,false,false,false': [1.245, 3, 3]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(D, A), location(A, E)', 'false,false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.827, 182, 86]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(A, D), location(E, A)', 'false,false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.826, 169, 86]}]
{'': [nan, 0.22006968439618982], 'false': [nan, 0.22006968439618968], 'false,false': [nan, 0.22006968439618982], 'false,false,false': [nan, 0.22006968439618968]}
{'': [nan, 0.2248047367094985], 'false': [nan, 0.22480473670949827], 'false,false': [nan, 0.2248047367094985], 'false,false,false': [0.22222222222222246, 0.22604875283446738]}
{'': [nan, 0.22519869424569902], 'false': [nan, 0.22519869424569902], 'false,false': [nan, 0.2251986942456989], 'false,false,false': [0.22486792034412592, 0.2341456189833468]}
{'': [nan, 0.22096967741702603], 'false': [nan, 0.22096967741702603], 'false,false': [nan, 0.2209696774170261], 'false,false,false': [0.22085068411659786, 0.22102291402829116]}
{'': [nan, 0.21369940983156552], 'false': [nan, 0.21369940983156552], 'false,false': [nan, 0.21369940983156555], 'false,false,false': [nan, 0.21369940983156555]}
{'': [nan, 0.22304727592288673], 'false': [nan, 0.22304727592288673], 'false,false': [nan, 0.22304727592288673], 'false,false,false': [nan, 0.2230472759228862]}
{'': [0.21284236110762075, 0.19807582972536053], 'true': [0.22633229092466634, 8.91495872741226e-07], 'true,true': [nan, 0.22633229092466634], 'true,true,false': [nan, 0.22633229092466634], 'false': [nan, 0.19807582972536053], 'false,false': [nan, 0.19807582972536053], 'false,false,false': [0.13888888888888892, 0.24000000000000005]}
{'': [nan, 0.18834439537102468], 'false': [nan, 0.18834439537102468], 'false,false': [nan, 0.18834439537102468], 'false,false,false': [0.1860952410592438, 0.25837509635626793]}
{'': [nan, 0.17391456241729747], 'false': [nan, 0.17391456241729747], 'false,false': [nan, 0.17391456241729747], 'false,false,false': [nan, 0.17391456241729747]}
{'': [nan, 0.18272821971480643], 'false': [nan, 0.18272821971480643], 'false,false': [nan, 0.18272821971480635], 'false,false,false': [nan, 0.18272821971480635]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- location(A, C).;true;true
6;true;location(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 8.449358224868774
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( location(A, F), interaction(A, G) )
%   | | then if ( interaction(H, A), interaction(G, H) )
%   | | | then return -0.0862955093449322;  // std dev = 1.374, 36.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=2 */
%   | | | else return 0.10814893509951237;  // std dev = 4.664, 116.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=29 */
%   | | else if ( location(A, I) )
%   | | | then return 0.19522758678490423;  // std dev = 4.460, 89.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=30 */
%   | | | else return 0.13087620782678497;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7272428531314968;  // std dev = 0.082, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, F), interaction(F, G) )
%   | | then if ( interaction(G, A), interaction(F, A) )
%   | | | then return -0.13166743038995857;  // std dev = 1.05e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.0996483966299298;  // std dev = 4.568, 111.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=28 */
%   | | else if ( phenotype(A, H), enzyme(A, I) )
%   | | | then return 0.07268433921405608;  // std dev = 2.135, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return 0.24585836818457243;  // std dev = 4.203, 73.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=30 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5634734278890359;  // std dev = 0.106, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, A) )
%   | then return -0.11732979159342173;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(A, D), complex(A, E) )
%   | | then if ( interaction(F, A), location(A, G) )
%   | | | then return 0.11197041544827761;  // std dev = 1.780, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.3741292495891978;  // std dev = 1.645, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.41539747969548474;  // std dev = 0.946, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.12073349816026525;  // std dev = 6.111, 176.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=54 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), phenotype(C, E) )
%   | then return 0.10781078927987242;  // std dev = 0.852, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.4195475928905069;  // std dev = 0.079, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( enzyme(A, F) )
%   | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), complex(H, I) )
%   | | | then return 0.8048319040369464;  // std dev = 0.056, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.7573596344690672;  // std dev = 0.410, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.20006802916788616;  // std dev = 0.060, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( complex(A, J), interaction(K, A) )
%   | | then if ( complex(K, L), phenotype(K, M) )
%   | | | then return 0.021610253823960843;  // std dev = 2.031, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return -0.10523229084210324;  // std dev = 1.113, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( interaction(N, A), enzyme(N, P) )
%   | | | then return 0.25330800713598356;  // std dev = 1.800, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.0832045227271506;  // std dev = 4.498, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( complex(A, E), location(A, F) )
%   | then return 0.0223537589609189;  // std dev = 0.309, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | else if ( interaction(C, G), phenotype(G, H) )
%   | | then return 0.10224875042770408;  // std dev = 0.388, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | else return 0.19258096050337303;  // std dev = 0.386, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( interaction(I, A), location(A, J) )
%   | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | then return 0.5051323018285057;  // std dev = 0.334, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( interaction(A, L), location(L, J) )
%   | | | then return 0.01510310793870354;  // std dev = 2.168, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return 0.10102101619440466;  // std dev = 4.383, 101.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=35 */
%   | else if ( phenotype(A, M) )
%   | | then return 0.504554261293775;  // std dev = 0.864, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, N), phenotype(N, P) )
%   | | | then return 0.10527849654044637;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2704704509484334;  // std dev = 1.002, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D) )
%   | then return 0.36943134726502497;  // std dev = 0.129, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.29691031941224344;  // std dev = 0.094, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, A) )
%   | then return -0.11279198418156475;  // std dev = 0.050, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.6787546428528979;  // std dev = 0.197, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.08627446032757795;  // std dev = 3.570, 72.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=24 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.11422561867343561;  // std dev = 2.379, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | | else return 0.014238189882177205;  // std dev = 4.339, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(F, E) )
%   | | then if ( phenotype(F, G), location(E, H) )
%   | | | then return 0.33492954282986054;  // std dev = 3.371, 69.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=48 */
%   | | | else return 0.12323493116121806;  // std dev = 0.905, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.29763669684725713;  // std dev = 1.643, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.6122592988580953;  // std dev = 0.943, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1009398115955075;  // std dev = 0.040, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( phenotype(A, K), enzyme(A, L) )
%   | | | then return -0.18601187164827016;  // std dev = 0.112, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.24115892037804798;  // std dev = 0.326, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( interaction(A, M) )
%   | then return 0.11805455897185309;  // std dev = 0.982, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.0676667542670089;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.22184852388756862;  // std dev = 0.063, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.04692213841726075;  // std dev = 0.939, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( complex(A, E), interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(H, A), complex(G, I) )
%   | | | then return -0.07852764834496033;  // std dev = 1.338, 35.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | | | else return 0.09504508460950982;  // std dev = 1.675, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else return -0.26578857590423616;  // std dev = 0.831, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( enzyme(A, L), interaction(M, J) )
%   | | | then return 0.07785111944071484;  // std dev = 1.828, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | | else return -0.002034612358879456;  // std dev = 3.832, 111.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=30 */
%   | | else if ( location(A, N) )
%   | | | then return 0.11289674759924823;  // std dev = 2.425, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | | | else return -0.07254346259677527;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.18051331485917088;  // std dev = 0.043, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( complex(A, F), interaction(A, G) )
%   | | then if ( interaction(G, D), phenotype(D, H) )
%   | | | then return -0.12772538828021324;  // std dev = 0.115, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.004330110842094221;  // std dev = 1.417, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( complex(A, I), enzyme(D, J) )
%   | | | then return 0.31289679323097574;  // std dev = 0.971, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.07420229660608832;  // std dev = 2.713, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   | else if ( interaction(A, K), complex(K, L) )
%   | | then if ( enzyme(K, M), interaction(K, N) )
%   | | | then return -0.12921963062923572;  // std dev = 0.646, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.019791351392779943;  // std dev = 2.009, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | else if ( interaction(A, P), phenotype(P, Q) )
%   | | | then return 0.06776638654955473;  // std dev = 2.097, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return -0.017300177572474658;  // std dev = 3.250, 79.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=23 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.28353589415412134;  // std dev = 0.180, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.043942914197844594;  // std dev = 0.339, 161.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=37 */
%   else if ( interaction(A, E), phenotype(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.21266472187314533;  // std dev = 0.659, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.03019356200804922;  // std dev = 1.761, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return -0.08404563154570577;  // std dev = 1.304, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.4865579536858483;  // std dev = 0.873, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.2381754200559507;  // std dev = 0.243, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.09940841182839336;  // std dev = 1.049, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.3299383938599264;  // std dev = 0.617, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
Inference time using transfer learning 51.33592462539673
Refined model CLL: -0.256529


******************************************
Best model found
******************************************
Results 

CLL : -0.267591 

AUC ROC : 0.940215 

AUC PR : 0.133998 

Precision : 0.166139 

Recall : 0.371025 

F1 : 0.229508 

Total Learning Time : 8.449358224868774 

Total Inference Time : 6.256142854690552 

Total revision time: 22.30199694633484
Best scored revision CLL: -0.256529


Results 

CLL : -0.267591 

AUC ROC : 0.940215 

AUC PR : 0.133998 

Precision : 0.166139 

Recall : 0.371025 

F1 : 0.229508 

Total Learning Time : 22.328037977218628 

Total Inference Time : 6.256142854690552 

Run: 4

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.9198024272918701
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F), location(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17800187627598277;  // std dev = 7.692, 272.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.16840384451212478;  // std dev = 4.761, 102.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=34 */
%   | | | else return 0.1468352170611445;  // std dev = 6.040, 170.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=53 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), location(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G) )
%   | | | then return 0.11647226339189386;  // std dev = 7.601, 273.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=83 */
%   | | | else return 0.09885016716515516;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), location(A, G) )
%   | | | then return 0.11554567134992635;  // std dev = 4.725, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
%   | | | else return 0.11151218767685266;  // std dev = 6.078, 171.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=54 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F), location(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12892818469309078;  // std dev = 7.498, 246.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10682562408948586;  // std dev = 7.493, 245.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.36993938341027754;  // std dev = 5.475, 130.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=83 */
%   | else return -0.26861026879608113;  // std dev = 0.027, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else if ( location(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.01747367753658531;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.11173104535511794;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F) )
%   | | | then return 0.058445956277277854;  // std dev = 6.708, 243.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=83 */
%   | | | else return 0.08592800167015029;  // std dev = 1.590, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), location(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.010455098819427085;  // std dev = 7.105, 287.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), location(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.030875001593828943;  // std dev = 6.929, 271.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=87 */
Inference time using transfer learning 40.04248666763306
Parameter learned model CLL:-0.320032 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(A, D), recursion_proteinclass(D, B)', 'false,false': 'location(E, A)', 'false,false,false': 'location(A, F), location(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.692, 185, 87]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(A, D), recursion_proteinclass(D, B)', 'false,false': 'location(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.761, 68, 34], 'false,false,false,false': [6.04, 117, 53]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), location(E, F)', 'false,false,false': 'location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.601, 190, 83], 'false,false,false,false': [1.69, 10, 4]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.725, 69, 33], 'false,false,false,false': [6.078, 117, 54]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'location(A, F), location(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.498, 159, 87]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(A, D), location(D, A)', 'false,false': 'location(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.493, 158, 87]}]
['proteinclass(A, B)', {'': 'location(A, C)', 'true': 'location(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'location(E, A), recursion_proteinclass(E, B)', 'false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false': 'location(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [5.475, 47, 83], 'true,false': [0.027, 124, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.866, 3, 1], 'false,false,false,false': [1.369, 5, 3]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'location(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.708, 160, 83], 'false,false,false,false': [1.59, 7, 4]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(D, A), location(A, E)', 'false,false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.105, 200, 87]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(A, D), location(E, A)', 'false,false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.929, 184, 87]}]
{'': [nan, 0.21754703719723267], 'false': [nan, 0.21754703719723242], 'false,false': [nan, 0.21754703719723267], 'false,false,false': [nan, 0.21754703719723242]}
{'': [nan, 0.21754703719723162], 'false': [nan, 0.217547037197233], 'false,false': [nan, 0.21754703719723162], 'false,false,false': [0.22222222222222263, 0.21456747404844348]}
{'': [nan, 0.21129467795311627], 'false': [nan, 0.21129467795311627], 'false,false': [nan, 0.21129467795311618], 'false,false,false': [0.21165277914414862, 0.20401631466111722]}
{'': [nan, 0.21710200517365866], 'false': [nan, 0.21710200517365866], 'false,false': [nan, 0.2171020051736587], 'false,false,false': [0.2188581314878887, 0.21604841270789876]}
{'': [nan, 0.22854921344828708], 'false': [nan, 0.22854921344828708], 'false,false': [nan, 0.22854921344828716], 'false,false,false': [nan, 0.22854921344828716]}
{'': [nan, 0.22917384333913526], 'false': [nan, 0.22917384333913526], 'false,false': [nan, 0.22917384333913526], 'false,false,false': [nan, 0.22917384333913562]}
{'': [0.21990729136939782, 0.22245974675944916], 'false': [nan, 0.22245974675944916], 'false,false': [nan, 0.22245974675944916], 'false,false,false': [0.18749999999999997, 0.23437500000000003], 'true': [0.23060238423824883, 5.97123810613763e-06], 'true,true': [nan, 0.23060238423824883], 'true,true,false': [nan, 0.23060238423824883]}
{'': [nan, 0.18716158535868455], 'false': [nan, 0.18716158535868455], 'false,false': [nan, 0.18716158535868452], 'false,false,false': [0.18520148893238378, 0.22973934273485244]}
{'': [nan, 0.17591169227084205], 'false': [nan, 0.175911692270842], 'false,false': [nan, 0.175911692270842], 'false,false,false': [nan, 0.175911692270842]}
{'': [nan, 0.17716929093440614], 'false': [nan, 0.17716929093440614], 'false,false': [nan, 0.17716929093440623], 'false,false,false': [nan, 0.17716929093440623]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- location(A, C).;true;true
6;true;location(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 13.309073209762573
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( interaction(D, D) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.13592671287729013;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( complex(D, E) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.13592671287729013;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | else if ( phenotype(A, F), complex(A, G) )
%   | | then if ( complex(H, G), interaction(H, A) )
%   | | | then return -0.05851773156715445;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.15602127552504427;  // std dev = 3.135, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.1710741051675385;  // std dev = 5.622, 147.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=46 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, C) )
%   | | then return 0.7451210275923495;  // std dev = 0.215, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else return 0.3898134617500884;  // std dev = 1.125, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, C) )
%   | | then return -0.15522353550636858;  // std dev = 0.122, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | | then return 0.5033734947761777;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.16072113546117378;  // std dev = 5.874, 160.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=52 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then return 0.16214450163305266;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( enzyme(A, H), interaction(A, I) )
%   | | then return 0.5047422629901209;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.33602244400253944;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.1693557773358728;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then return 0.29902449616288984;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.6667959779379335;  // std dev = 0.125, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.3657065091945211;  // std dev = 0.798, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7014274422758086;  // std dev = 0.107, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, J), interaction(E, J) )
%   | | | then return -0.07844008007356676;  // std dev = 1.245, 29.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | | else return 0.08348802387841732;  // std dev = 4.736, 116.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=32 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.5660407505145615;  // std dev = 2.697, 43.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=33 */
%   | | | else return -0.18667520462425163;  // std dev = 0.163, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return 0.4579111389787303;  // std dev = 0.812, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.5303892070121764;  // std dev = 0.196, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else if ( interaction(D, F), interaction(F, A) )
%   | | then return -0.11813494984656858;  // std dev = 0.145, 38.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=1 */
%   | | else if ( phenotype(A, G), enzyme(A, H) )
%   | | | then return 0.0187963279239328;  // std dev = 1.786, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.201021544959169;  // std dev = 2.708, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.35468831940950685;  // std dev = 0.843, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(K, A), complex(A, L) )
%   | | | then return 0.17270383055365096;  // std dev = 1.922, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.05270540952550109;  // std dev = 4.621, 120.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=32 */
%   | | else if ( enzyme(A, M) )
%   | | | then return -0.06313783409540101;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.017011130811485784;  // std dev = 1.361, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.4230065235535968;  // std dev = 0.193, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else if ( interaction(C, A) )
%   | | then return -0.12562062146307978;  // std dev = 0.173, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0.1264833407464804;  // std dev = 0.435, 59.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
%   else if ( phenotype(A, F) )
%   | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.6339128626125952;  // std dev = 0.246, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else return -0.20637745982731837;  // std dev = 0.052, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else if ( enzyme(A, H), complex(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7229323114395173;  // std dev = 0.139, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.21228373278197243;  // std dev = 0.109, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.33413156471668837;  // std dev = 0.956, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.09460577687082683;  // std dev = 3.429, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, C) )
%   | then return 0.16408111914861326;  // std dev = 0.197, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.5427202195556678;  // std dev = 0.131, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.3287261063280084;  // std dev = 0.132, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, F), location(E, F) )
%   | | | then return 0.030448563346973503;  // std dev = 5.020, 183.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=51 */
%   | | | else return 0.1005895948988196;  // std dev = 2.887, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.6314612957253534;  // std dev = 0.064, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.23391720408523783;  // std dev = 0.187, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( enzyme(A, I) )
%   | | | then return -0.3086024131442483;  // std dev = 0.158, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.03659129426725532;  // std dev = 0.788, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then if ( enzyme(A, F), interaction(A, G) )
%   | | | then return 0.37076279690976216;  // std dev = 1.221, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.2057570697346041;  // std dev = 2.717, 53.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=33 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return 0.16236077253479997;  // std dev = 0.882, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.4665967194904346;  // std dev = 2.678, 43.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=34 */
%   | else return -0.1832937804067873;  // std dev = 0.536, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   else if ( interaction(A, I), interaction(I, A) )
%   | then if ( location(I, J) )
%   | | then return 0.08587292042169932;  // std dev = 0.586, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.017604853898764344;  // std dev = 0.391, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.3120659044593808;  // std dev = 0.819, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.19610403746360816;  // std dev = 0.152, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, F) )
%   | | then return 0.014829855003075156;  // std dev = 0.324, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else return -0.15821526319635476;  // std dev = 0.304, 32.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   else if ( interaction(G, A), enzyme(G, H) )
%   | then if ( interaction(A, I), complex(I, J) )
%   | | then return 0.3896200690669544;  // std dev = 0.725, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( location(A, K), location(G, K) )
%   | | | then return 0.11244902549880961;  // std dev = 1.588, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return -0.023711444316372926;  // std dev = 1.263, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else if ( interaction(A, L), phenotype(L, M) )
%   | | then return -0.02173732426179166;  // std dev = 0.304, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return -0.013191587162583533;  // std dev = 2.935, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | | | else return 0.019822331070618832;  // std dev = 2.919, 68.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( phenotype(A, E), enzyme(A, F) )
%   | then return 0.11934220435012417;  // std dev = 0.304, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( phenotype(A, G), interaction(A, H) )
%   | | then return -0.125771311988235;  // std dev = 0.276, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | else if ( location(A, I), interaction(J, C) )
%   | | | then return -0.0239631468885758;  // std dev = 2.094, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return 0.32582205664590747;  // std dev = 0.556, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | then return 0.25082524515188526;  // std dev = 0.199, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, L), interaction(M, A) )
%   | | then if ( complex(M, L), interaction(N, M) )
%   | | | then return -0.12033566229015989;  // std dev = 0.357, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.02980473187476212;  // std dev = 2.590, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | else if ( interaction(P, A), complex(P, Q) )
%   | | | then return 0.12564714350706377;  // std dev = 2.257, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | else return 0.035987613105400135;  // std dev = 3.046, 77.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=27 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.25541252226693995;  // std dev = 0.181, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else if ( interaction(A, E), interaction(E, F) )
%   | | then return -0.08800185271979656;  // std dev = 0.254, 65.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=8 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.10887788969772104;  // std dev = 2.400, 44.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=18 */
%   | | | else return 0.007748274243576424;  // std dev = 3.897, 104.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   else if ( interaction(A, H), enzyme(H, I) )
%   | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | then return 0.18474989973256503;  // std dev = 0.436, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.23022256260501578;  // std dev = 0.240, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, K), complex(K, L) )
%   | | then if ( complex(A, L) )
%   | | | then return -0.1593860797912011;  // std dev = 0.708, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.14690106323238944;  // std dev = 0.817, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.09007026500340666;  // std dev = 0.568, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
Inference time using transfer learning 58.75822591781616
Refined model CLL: -0.25676


******************************************
Best model found
******************************************
Results 

CLL : -0.269226 

AUC ROC : 0.943444 

AUC PR : 0.167894 

Precision : 0.107269 

Recall : 0.539007 

F1 : 0.178929 

Total Learning Time : 13.309073209762573 

Total Inference Time : 10.840174198150635 

Total revision time: 32.09638214111328
Best scored revision CLL: -0.25676


Results 

CLL : -0.269226 

AUC ROC : 0.943444 

AUC PR : 0.167894 

Precision : 0.107269 

Recall : 0.539007 

F1 : 0.178929 

Total Learning Time : 32.1225368976593 

Total Inference Time : 10.840174198150635 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.461256265640259
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F), location(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16859669629354027;  // std dev = 8.468, 335.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.1506475009236478;  // std dev = 4.757, 105.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=33 */
%   | | | else return 0.1777079404840845;  // std dev = 6.838, 208.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=71 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), location(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G) )
%   | | | then return 0.12682592089399838;  // std dev = 8.152, 308.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=97 */
%   | | | else return 0.13024657913105564;  // std dev = 2.184, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), location(A, G) )
%   | | | then return 0.17282015366551537;  // std dev = 4.391, 82.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=31 */
%   | | | else return 0.15907551329441103;  // std dev = 6.789, 198.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=73 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F), location(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10908072161627046;  // std dev = 8.250, 301.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07242397537191374;  // std dev = 8.352, 316.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4583886109665752;  // std dev = 5.126, 133.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=97 */
%   | else return -0.27101394164812026;  // std dev = 0.014, 158.000 (wgt'ed) examples reached here.  /* #neg=158 */
%   else if ( location(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.1330062568111173;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.08481989026820229;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F) )
%   | | | then return 0.04404781656213667;  // std dev = 7.146, 287.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=97 */
%   | | | else return 0.001669482351674893;  // std dev = 2.225, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), location(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.037187486648349456;  // std dev = 7.450, 305.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), location(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.015417831806074889;  // std dev = 7.542, 318.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=104 */
Inference time using transfer learning 38.80964922904968
Parameter learned model CLL:-0.331541 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(A, D), recursion_proteinclass(D, B)', 'false,false': 'location(E, A)', 'false,false,false': 'location(A, F), location(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.468, 231, 104]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(A, D), recursion_proteinclass(D, B)', 'false,false': 'location(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.757, 72, 33], 'false,false,false,false': [6.838, 137, 71]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), location(E, F)', 'false,false,false': 'location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [8.152, 211, 97], 'false,false,false,false': [2.184, 15, 7]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.391, 51, 31], 'false,false,false,false': [6.789, 125, 73]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'location(A, F), location(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.25, 197, 104]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(A, D), location(D, A)', 'false,false': 'location(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.352, 212, 104]}]
['proteinclass(A, B)', {'': 'location(A, C)', 'true': 'location(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'location(E, A), recursion_proteinclass(E, B)', 'false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false': 'location(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [5.126, 36, 97], 'true,false': [0.014, 158, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.793, 9, 5]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'location(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.146, 190, 97], 'false,false,false,false': [2.225, 17, 7]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(D, A), location(A, E)', 'false,false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.45, 201, 104]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(A, D), location(E, A)', 'false,false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.542, 214, 104]}]
{'': [nan, 0.2140699487636463], 'false': [nan, 0.21406994876364582], 'false,false': [nan, 0.2140699487636463], 'false,false,false': [nan, 0.21406994876364582]}
{'': [nan, 0.221866100501175], 'false': [nan, 0.22186610050117545], 'false,false': [nan, 0.221866100501175], 'false,false,false': [0.21551020408163166, 0.22482895710059367]}
{'': [nan, 0.21581674790943992], 'false': [nan, 0.21581674790943992], 'false,false': [nan, 0.21581674790943992], 'false,false,false': [0.21574989490268, 0.21674176916148868]}
{'': [nan, 0.23349143914686005], 'false': [nan, 0.23349143914686005], 'false,false': [nan, 0.2334914391468612], 'false,false,false': [0.23512790005948883, 0.23275838776249116]}
{'': [nan, 0.22609992521004918], 'false': [nan, 0.22609992521004918], 'false,false': [nan, 0.22609992521004843], 'false,false,false': [nan, 0.22609992521004843]}
{'': [nan, 0.22076406713234878], 'false': [nan, 0.22076406713234878], 'false,false': [nan, 0.22076406713234936], 'false,false,false': [nan, 0.2207640671323481]}
{'': [0.2223378596251398, 0.23278106201072346], 'false': [nan, 0.23278106201072346], 'false,false': [nan, 0.23278106201072346], 'false,false,false': [0.23999999999999994, 0.22959183673469385], 'true': [0.19759957106858062, 1.260161358497705e-06], 'true,true': [nan, 0.19759957106858062], 'true,true,false': [nan, 0.19759957106858062]}
{'': [nan, 0.18022215179290743], 'false': [nan, 0.18022215179290743], 'false,false': [nan, 0.18022215179290743], 'false,false,false': [0.1779120188036705, 0.20619016105693652]}
{'': [nan, 0.18199932094084764], 'false': [nan, 0.18199932094084753], 'false,false': [nan, 0.18199932094084753], 'false,false,false': [nan, 0.18199932094084753]}
{'': [nan, 0.17887799470403346], 'false': [nan, 0.17887799470403346], 'false,false': [nan, 0.17887799470403362], 'false,false,false': [nan, 0.17887799470403362]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- location(A, C).;true;true
6;true;location(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 22.678448915481567
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(D, E), phenotype(D, F) )
%   | | then return 0.13087620782678508;  // std dev = 0.445, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(H, A), enzyme(H, I) )
%   | then return 0.13158643509951087;  // std dev = 0.446, 128.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=35 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.14075763075168507;  // std dev = 5.289, 138.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=39 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then return 0.8129513069589355;  // std dev = 0.210, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.16775678489551143;  // std dev = 0.153, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( phenotype(F, G), phenotype(A, G) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.8217429837511315;  // std dev = 0.113, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6824031157509212;  // std dev = 1.462, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return -0.038516186523866916;  // std dev = 3.097, 89.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=11 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.16659508455760044;  // std dev = 4.562, 94.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=31 */
%   | | | else return 0.07491768316594395;  // std dev = 3.015, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then return 0.1014230532647608;  // std dev = 0.391, 86.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=27 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(G, E), interaction(G, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.18176901218806793;  // std dev = 1.278, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.34813371377982;  // std dev = 2.207, 23.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6998682548361711;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.11711007209336484;  // std dev = 3.053, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7543489663971079;  // std dev = 0.125, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.16970054171715684;  // std dev = 0.075, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.10404020411895948;  // std dev = 2.836, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | | else return 0.18735175809927918;  // std dev = 3.808, 65.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=24 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, F), interaction(F, D) )
%   | | | then return 0.4781974928681297;  // std dev = 1.963, 37.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=31 */
%   | | | else return 0.6793327754683874;  // std dev = 1.997, 65.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=61 */
%   | | else if ( interaction(G, A) )
%   | | | then return -0.20522925205070747;  // std dev = 0.302, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0.33332508977877306;  // std dev = 1.210, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( complex(A, H), interaction(I, A) )
%   | | then return -0.1739280793112029;  // std dev = 0.187, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return -0.19898181756118585;  // std dev = 0.035, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( interaction(J, A), complex(J, K) )
%   | then return 0.5243372259809362;  // std dev = 0.843, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, L) )
%   | | then return 0.06912148641641214;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.24259748641860998;  // std dev = 0.495, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.3777198583285202;  // std dev = 0.298, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.38705404529917625;  // std dev = 0.285, 30.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=25 */
%   | | else return -0.0837018851849947;  // std dev = 0.236, 127.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=13 */
%   else if ( interaction(G, A), interaction(H, G) )
%   | then if ( interaction(A, I) )
%   | | then return 0.2684822504291067;  // std dev = 1.003, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( recursion_proteinclass(G, B) )
%   | | | then return 0.623456020149475;  // std dev = 0.288, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.0826878405512093;  // std dev = 4.245, 126.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=42 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.6225900852307041;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.19079253696879453;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.0032968462057728445;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), complex(A, D) )
%   then if ( location(E, C), recursion_proteinclass(E, B) )
%   | then if ( complex(E, D) )
%   | | then return 0.4698304020845082;  // std dev = 0.130, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return -0.193483909150136;  // std dev = 0.090, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return -0.15077334582548954;  // std dev = 0.022, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then if ( phenotype(F, G) )
%   | | then return -0.004140020446092022;  // std dev = 0.283, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else return 0.04676852819380525;  // std dev = 0.299, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | else if ( phenotype(A, H), location(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.5521185925719491;  // std dev = 0.903, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | | else return -0.18149423555669195;  // std dev = 0.197, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return -0.030812905724323356;  // std dev = 1.387, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.07594663367379748;  // std dev = 3.227, 69.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=24 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( interaction(E, G), interaction(G, E) )
%   | | | then return 0.24788902039538663;  // std dev = 0.934, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return 0.09672816902118946;  // std dev = 1.415, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | else if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return 0.17300350428332026;  // std dev = 1.258, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | | | else return 0.2760133587287758;  // std dev = 3.125, 87.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=61 */
%   | else return -0.15164827606144385;  // std dev = 0.043, 166.000 (wgt'ed) examples reached here.  /* #neg=166 */
%   else if ( interaction(A, J) )
%   | then return 0.405721618364786;  // std dev = 0.782, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( interaction(K, M), recursion_proteinclass(M, B) )
%   | | | then return 0.6049189636531199;  // std dev = 0.114, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.29417615263938535;  // std dev = 0.073, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.04725381688024498;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(A, A) )
%   | | then return 0.20816585228131204;  // std dev = 0.065, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.1870783899984338;  // std dev = 0.771, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.3584476995970045;  // std dev = 0.114, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), interaction(G, A) )
%   | | | then return 0.2941393273398526;  // std dev = 2.686, 88.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=76 */
%   | | | else return -0.1621458539138735;  // std dev = 1.491, 46.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=5 */
%   | | else return -0.1337983843035237;  // std dev = 0.035, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( complex(H, J) )
%   | | | then return -0.07004354072404487;  // std dev = 1.208, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.1634490065237217;  // std dev = 0.917, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else return 0.08618596688811116;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.18745630590110834;  // std dev = 0.043, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then return -0.10270445632046929;  // std dev = 0.055, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.02957677961344332;  // std dev = 0.202, 70.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=21 */
%   else if ( enzyme(A, D), complex(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.2803716499327673;  // std dev = 0.081, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.12343011009359722;  // std dev = 0.072, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( interaction(G, I), complex(I, H) )
%   | | | then return 0.06081866838193211;  // std dev = 1.292, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.16964242812487448;  // std dev = 1.316, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.03968144146535798;  // std dev = 2.978, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
%   | | | else return -0.03230278890668951;  // std dev = 1.432, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.16651795295849597;  // std dev = 0.037, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.28909321200484533;  // std dev = 0.097, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(G, E), interaction(E, G) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return -0.055406963417446456;  // std dev = 1.103, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.04217064474225697;  // std dev = 1.469, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | else if ( interaction(I, E), interaction(I, I) )
%   | | | then return -0.21888740509517862;  // std dev = 0.075, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07038359363490967;  // std dev = 1.870, 65.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=10 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.21784350032694463;  // std dev = 0.193, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 2.6405425852907153E-5;  // std dev = 2.687, 128.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=35 */
%   | | | else return 0.015226950272488526;  // std dev = 1.840, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
Inference time using transfer learning 128.79069471359253
Refined model CLL: -0.183222


******************************************
Best model found
******************************************
Results 

CLL : -0.171561 

AUC ROC : 0.992214 

AUC PR : 0.56721 

Precision : 0.37415 

Recall : 0.830189 

F1 : 0.515826 

Total Learning Time : 22.678448915481567 

Total Inference Time : 29.84919548034668 

Total revision time: 61.91316771507263
Best scored revision CLL: -0.183222


Results 

CLL : -0.171561 

AUC ROC : 0.992214 

AUC PR : 0.56721 

Precision : 0.37415 

Recall : 0.830189 

F1 : 0.515826 

Total Learning Time : 61.93932247161865 

Total Inference Time : 29.84919548034668 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.3238790035247803
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F), location(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1855510703308279;  // std dev = 7.866, 281.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.22986147925611655;  // std dev = 4.791, 96.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=38 */
%   | | | else return 0.17365078743221923;  // std dev = 5.972, 159.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=54 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), location(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G) )
%   | | | then return 0.14717510437375098;  // std dev = 7.653, 260.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=89 */
%   | | | else return 0.17804605323527625;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), location(A, G) )
%   | | | then return 0.13874963812482977;  // std dev = 4.786, 99.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=36 */
%   | | | else return 0.1003478132855612;  // std dev = 6.189, 177.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=56 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F), location(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10833318373114548;  // std dev = 7.739, 265.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06991969631867598;  // std dev = 7.850, 279.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.34406123464898997;  // std dev = 5.837, 144.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=89 */
%   | else return -0.27382827959371414;  // std dev = 0.108, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   else if ( location(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.21665731225160187;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.07206883309009596;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F) )
%   | | | then return 0.08059959329895948;  // std dev = 6.805, 244.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=89 */
%   | | | else return 0.019858654476197612;  // std dev = 1.434, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), location(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.028188315329454608;  // std dev = 7.142, 283.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), location(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.010215040713226228;  // std dev = 7.207, 295.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=92 */
Inference time using transfer learning 37.219558000564575
Parameter learned model CLL:-0.330626 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(A, D), recursion_proteinclass(D, B)', 'false,false': 'location(E, A)', 'false,false,false': 'location(A, F), location(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.866, 189, 92]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(A, D), recursion_proteinclass(D, B)', 'false,false': 'location(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.791, 58, 38], 'false,false,false,false': [5.972, 105, 54]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), location(E, F)', 'false,false,false': 'location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.653, 171, 89], 'false,false,false,false': [1.369, 5, 3]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.786, 63, 36], 'false,false,false,false': [6.189, 121, 56]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'location(A, F), location(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.739, 173, 92]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(A, D), location(D, A)', 'false,false': 'location(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.85, 187, 92]}]
['proteinclass(A, B)', {'': 'location(A, C)', 'true': 'location(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'location(E, A), recursion_proteinclass(E, B)', 'false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false': 'location(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [5.837, 55, 89], 'true,false': [0.108, 135, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.0, 2, 2], 'false,false,false,false': [0.894, 4, 1]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'location(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.805, 155, 89], 'false,false,false,false': [1.434, 6, 3]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(D, A), location(A, E)', 'false,false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.142, 191, 92]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(A, D), location(E, A)', 'false,false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.207, 203, 92]}]
{'': [nan, 0.22020997707729253], 'false': [nan, 0.2202099770772923], 'false,false': [nan, 0.22020997707729253], 'false,false,false': [nan, 0.2202099770772923]}
{'': [nan, 0.23061899269511896], 'false': [nan, 0.2306189926951168], 'false,false': [nan, 0.23061899269511896], 'false,false,false': [0.2391493055555567, 0.2242791028835864]}
{'': [nan, 0.22553404397421326], 'false': [nan, 0.22553404397421326], 'false,false': [nan, 0.22553404397421378], 'false,false,false': [0.22524151234467718, 0.23411675467393417]}
{'': [nan, 0.22212145147704246], 'false': [nan, 0.22212145147704246], 'false,false': [nan, 0.22212145147704254], 'false,false,false': [0.23140495867768654, 0.21640001281545038]}
{'': [nan, 0.22600242485035257], 'false': [nan, 0.22600242485035257], 'false,false': [nan, 0.22600242485035257], 'false,false,false': [nan, 0.22600242485035257]}
{'': [nan, 0.22088034645696097], 'false': [nan, 0.22088034645696097], 'false,false': [nan, 0.22088034645696092], 'false,false,false': [nan, 0.22088034645696136]}
{'': [0.21750342702097697, 0.22058340419848765], 'false': [nan, 0.22058340419848765], 'false,false': [nan, 0.22058340419848765], 'false,false,false': [0.25, 0.15999999999999998], 'true': [0.23659593902834886, 8.649284825401451e-05], 'true,true': [nan, 0.23659593902834886], 'true,true,false': [nan, 0.23659593902834886]}
{'': [nan, 0.19128506943107015], 'false': [nan, 0.19128506943107015], 'false,false': [nan, 0.19128506943107024], 'false,false,false': [0.18978554317287882, 0.2283806764531669]}
{'': [nan, 0.18022921901895791], 'false': [nan, 0.18022921901895794], 'false,false': [nan, 0.18022921901895794], 'false,false,false': [nan, 0.18022921901895794]}
{'': [nan, 0.17605794243256526], 'false': [nan, 0.17605794243256526], 'false,false': [nan, 0.17605794243256526], 'false,false,false': [nan, 0.17605794243256526]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- location(A, C).;true;true
6;true;location(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 9.590720176696777
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.14185106490048766;  // std dev = 6.32e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( interaction(A, F), interaction(F, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(F, G) )
%   | | | then return 0.16249676118646889;  // std dev = 2.207, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( enzyme(A, H), location(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.1418510649004877;  // std dev = 2.79e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14386322081379796;  // std dev = 4.928, 119.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=34 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.7538292172177954;  // std dev = 0.054, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( phenotype(A, D), interaction(A, A) )
%   | | then return -0.14412486109619127;  // std dev = 0.053, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | | then return 0.7380828480281134;  // std dev = 0.936, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | | | else return -0.1379858259536073;  // std dev = 0.118, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( enzyme(A, F), location(A, G) )
%   | then if ( enzyme(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.7016623629614719;  // std dev = 0.191, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return -0.13478474981229127;  // std dev = 0.092, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(J, A), interaction(A, K) )
%   | | | then return -0.0199806105844267;  // std dev = 1.307, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.13999048319118101;  // std dev = 4.328, 89.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=28 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(A, F) )
%   | | then return 0.3546030791399508;  // std dev = 0.889, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.5663061607857099;  // std dev = 0.159, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.11693103793579886;  // std dev = 0.135, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( interaction(G, A), phenotype(G, H) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.44560107415095895;  // std dev = 0.837, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(I, G), phenotype(A, J) )
%   | | | then return 0.01380507293284334;  // std dev = 1.337, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | | else return 0.11822228287809856;  // std dev = 2.907, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.4628266687923926;  // std dev = 3.235, 61.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=43 */
%   | | | else return -0.17697598724022945;  // std dev = 0.375, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return 0.3199703019462189;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(C, C) )
%   | then return 0.12049024655244008;  // std dev = 0.828, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.3962850677511663;  // std dev = 0.197, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( complex(A, G) )
%   | | then return -0.06675182609268639;  // std dev = 0.217, 42.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=4 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.013414856486114185;  // std dev = 0.646, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.1972725999184586;  // std dev = 1.085, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.25035631472645065;  // std dev = 0.430, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6374582063422174;  // std dev = 0.122, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.06697886492906228;  // std dev = 3.844, 130.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=37 */
%   | | | else return 0.11947565484866064;  // std dev = 3.509, 74.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=27 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(A, D), location(C, E) )
%   | then return 0.0552771526584516;  // std dev = 0.296, 79.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=26 */
%   | else return 0.0955185038074376;  // std dev = 0.351, 129.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=44 */
%   else if ( interaction(A, F), complex(F, G) )
%   | then if ( location(A, H) )
%   | | then if ( interaction(F, I), enzyme(I, J) )
%   | | | then return 0.016761756755558625;  // std dev = 1.406, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.13756266463755032;  // std dev = 1.832, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | else return -0.0541309545593068;  // std dev = 0.400, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( phenotype(A, K) )
%   | | then if ( phenotype(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.3976898485973163;  // std dev = 1.181, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.2285774373933959;  // std dev = 0.160, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.02950477750048001;  // std dev = 0.703, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.004533419566455046;  // std dev = 0.839, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.355808255605776;  // std dev = 0.116, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.4452213247099655;  // std dev = 0.162, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.12701168977685726;  // std dev = 0.083, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( location(A, E) )
%   | | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.3168245469426876;  // std dev = 3.808, 110.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=76 */
%   | | | else return -0.1606912886163782;  // std dev = 0.466, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | | else return -0.06218953939760647;  // std dev = 0.386, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), enzyme(A, F) )
%   | | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.3021988037155594;  // std dev = 0.128, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.12006967518337855;  // std dev = 1.819, 39.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=22 */
%   | | else if ( interaction(H, A), phenotype(A, I) )
%   | | | then return 0.1456256715029396;  // std dev = 1.656, 24.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | | else return 0.30169271810082626;  // std dev = 3.077, 61.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=45 */
%   | else if ( enzyme(A, J) )
%   | | then return -0.10425527921509646;  // std dev = 0.099, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return -0.15509413484819762;  // std dev = 0.273, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else return 3.6434381070658703E-4;  // std dev = 0.386, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2552249869686281;  // std dev = 0.050, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(D, D), enzyme(A, F) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return -0.07870822662409564;  // std dev = 0.716, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.11402298072432263;  // std dev = 0.990, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( complex(D, I) )
%   | | | then return -0.07075173350229078;  // std dev = 1.987, 67.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=13 */
%   | | | else return 0.02146755894866959;  // std dev = 1.598, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | else if ( interaction(J, A) )
%   | | then if ( phenotype(J, K), location(J, L) )
%   | | | then return 0.05356595656286859;  // std dev = 2.089, 63.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
%   | | | else return -0.016886697519440337;  // std dev = 2.460, 73.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=18 */
%   | | else if ( location(A, M) )
%   | | | then return 0.05971073982226082;  // std dev = 1.461, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.2672158385335039;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2103400844493633;  // std dev = 0.035, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), interaction(E, E) )
%   | | then if ( enzyme(E, F), complex(E, G) )
%   | | | then return 0.06969289538365486;  // std dev = 0.649, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.058124264597231155;  // std dev = 1.816, 60.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | | else if ( phenotype(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.38528062787942;  // std dev = 0.433, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.13363174430138886;  // std dev = 0.316, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(K, A), interaction(I, I) )
%   | | | then return 0.09871391979764042;  // std dev = 0.761, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.08038506613023717;  // std dev = 1.391, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.009808393835940449;  // std dev = 1.876, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | | else return 0.10203041088300989;  // std dev = 2.783, 66.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=26 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( complex(C, E), interaction(C, C) )
%   | then return 0.029745644303363027;  // std dev = 0.243, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | else return -0.04572684700898356;  // std dev = 0.208, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   else if ( enzyme(A, F), location(A, G) )
%   | then if ( enzyme(H, F), recursion_proteinclass(H, B) )
%   | | then if ( location(H, G), interaction(I, A) )
%   | | | then return 0.25463382680336527;  // std dev = 0.769, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return -0.07499967729161834;  // std dev = 0.757, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.1441274471672224;  // std dev = 0.071, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.31645410920334077;  // std dev = 0.321, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07392318338848808;  // std dev = 1.904, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | else if ( interaction(M, A) )
%   | | | then return 0.031101059116374095;  // std dev = 2.832, 89.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=30 */
%   | | | else return -0.039566940646871905;  // std dev = 1.394, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
Inference time using transfer learning 68.29134011268616
Refined model CLL: -0.189537


******************************************
Best model found
******************************************
Results 

CLL : -0.194287 

AUC ROC : 0.984964 

AUC PR : 0.360798 

Precision : 0.232759 

Recall : 0.779783 

F1 : 0.358506 

Total Learning Time : 9.590720176696777 

Total Inference Time : 10.079386949539185 

Total revision time: 27.919739484786987
Best scored revision CLL: -0.189537


Results 

CLL : -0.194287 

AUC ROC : 0.984964 

AUC PR : 0.360798 

Precision : 0.232759 

Recall : 0.779783 

F1 : 0.358506 

Total Learning Time : 27.945894241333008 

Total Inference Time : 10.079386949539185 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.0394723415374756
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F), location(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21949347291463797;  // std dev = 7.411, 238.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.1303515114202664;  // std dev = 4.424, 93.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=28 */
%   | | | else return 0.13615454948137048;  // std dev = 6.340, 189.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=58 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), location(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G) )
%   | | | then return 0.12744039846867034;  // std dev = 7.524, 261.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=83 */
%   | | | else return 0.18468680952866554;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), location(A, G) )
%   | | | then return 0.1646329935370795;  // std dev = 4.108, 72.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=27 */
%   | | | else return 0.13940197387398554;  // std dev = 6.187, 168.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=59 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F), location(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08499786392937131;  // std dev = 7.637, 267.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07296877453118697;  // std dev = 7.616, 264.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.40844376704220325;  // std dev = 5.195, 123.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=83 */
%   | else return -0.2662330064921019;  // std dev = 0.019, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   else if ( location(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.22474054451449746;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.12358137815192446;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F) )
%   | | | then return 0.07087591052666824;  // std dev = 6.557, 235.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=83 */
%   | | | else return 0.02015866086267866;  // std dev = 1.424, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(D, A), location(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03139067326158526;  // std dev = 6.865, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( location(A, D), location(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03901431176458766;  // std dev = 6.770, 248.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=86 */
Inference time using transfer learning 41.74550175666809
Parameter learned model CLL:-0.33453 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(A, D), recursion_proteinclass(D, B)', 'false,false': 'location(E, A)', 'false,false,false': 'location(A, F), location(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.411, 152, 86]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(A, D), recursion_proteinclass(D, B)', 'false,false': 'location(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.424, 65, 28], 'false,false,false,false': [6.34, 131, 58]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), location(E, F)', 'false,false,false': 'location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.524, 178, 83], 'false,false,false,false': [1.369, 5, 3]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), location(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.108, 45, 27], 'false,false,false,false': [6.187, 109, 59]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'location(A, F), location(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.637, 181, 86]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(A, D), location(D, A)', 'false,false': 'location(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.616, 178, 86]}]
['proteinclass(A, B)', {'': 'location(A, C)', 'true': 'location(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'location(E, A), recursion_proteinclass(E, B)', 'false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false': 'location(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [5.195, 40, 83], 'true,false': [0.019, 126, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'location(C, A), recursion_proteinclass(C, B)', 'false': 'location(D, A)', 'false,false': 'location(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'location(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.557, 152, 83], 'false,false,false,false': [1.424, 6, 3]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(D, A), location(A, E)', 'false,false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.865, 173, 86]}]
['proteinclass(A, B)', {'': 'location(A, C), recursion_proteinclass(C, B)', 'false': 'location(A, D), location(E, A)', 'false,false': 'location(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'location(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.77, 162, 86]}]
{'': [nan, 0.23077466280629988], 'false': [nan, 0.2307746628062996], 'false,false': [nan, 0.23077466280629988], 'false,false,false': [nan, 0.2307746628062996]}
{'': [nan, 0.21196116895528289], 'false': [nan, 0.21196116895528208], 'false,false': [nan, 0.21196116895528289], 'false,false,false': [0.21042895132385317, 0.2127040116458086]}
{'': [nan, 0.21747938131445396], 'false': [nan, 0.21747938131445396], 'false,false': [nan, 0.2174793813144539], 'false,false,false': [0.21687003881014122, 0.234179490695409]}
{'': [nan, 0.2299381067529968], 'false': [nan, 0.2299381067529968], 'false,false': [nan, 0.22993810675299683], 'false,false,false': [0.234375000000001, 0.2278455997697385]}
{'': [nan, 0.21844849268487831], 'false': [nan, 0.21844849268487831], 'false,false': [nan, 0.21844849268487823], 'false,false,false': [nan, 0.21844849268487823]}
{'': [nan, 0.21972538218937002], 'false': [nan, 0.21972538218937002], 'false,false': [nan, 0.21972538218937004], 'false,false,false': [nan, 0.2197253821893712]}
{'': [0.22218458900236288, 0.2449455463141165], 'false': [nan, 0.2449455463141165], 'false,false': [nan, 0.2449455463141165], 'false,false,false': [0.25, 0.24000000000000005], 'true': [0.21944876701092975, 2.9988976844947277e-06], 'true,true': [nan, 0.21944876701092975], 'true,true,false': [nan, 0.21944876701092975]}
{'': [nan, 0.18459747811633456], 'false': [nan, 0.18459747811633456], 'false,false': [nan, 0.18459747811633465], 'false,false,false': [0.18294158131133972, 0.22535742184989443]}
{'': [nan, 0.18197773951631296], 'false': [nan, 0.18197773951631302], 'false,false': [nan, 0.18197773951631302], 'false,false,false': [nan, 0.18197773951631302]}
{'': [nan, 0.18480271894126193], 'false': [nan, 0.18480271894126193], 'false,false': [nan, 0.1848027189412619], 'false,false,false': [nan, 0.1848027189412619]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- location(A, C).;true;true
6;true;location(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 8.567253351211548
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, A) )
%   | then return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( interaction(D, A), enzyme(D, E) )
%   | | then if ( interaction(F, D), enzyme(F, G) )
%   | | | then return 0.058148935099512286;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.12644161802634157;  // std dev = 2.837, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.12285481745245355;  // std dev = 2.572, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.2414822684328449;  // std dev = 5.326, 120.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=46 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109542;  // std dev = 5.96e-08, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( interaction(A, D), phenotype(D, E) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6120807494551005;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.04291815022504452;  // std dev = 4.177, 106.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=22 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.8302369496741879;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.13284095362259288;  // std dev = 5.081, 122.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=37 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), enzyme(E, F) )
%   | then if ( complex(C, G) )
%   | | then return 0.060694357758707226;  // std dev = 0.376, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else return 0.12130941955898719;  // std dev = 0.394, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | else if ( interaction(C, H), complex(H, I) )
%   | | then return -0.004604440716884424;  // std dev = 0.356, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.1700812106199133;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.04575702832023271;  // std dev = 1.649, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | then return 0.5950535873912014;  // std dev = 0.056, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, A) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( location(A, L) )
%   | | | then return 0.10431137819883993;  // std dev = 5.873, 169.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=50 */
%   | | | else return 0.24898664115915897;  // std dev = 1.311, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.44701157736269426;  // std dev = 0.055, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.6394991240655067;  // std dev = 0.280, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( enzyme(A, F), phenotype(A, G) )
%   | | then return 0.1302305689660986;  // std dev = 0.901, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.10847731287153156;  // std dev = 0.044, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.021674059937194068;  // std dev = 1.420, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | else if ( interaction(A, H), enzyme(A, I) )
%   | | then if ( complex(A, J), location(A, K) )
%   | | | then return 0.4910461683886906;  // std dev = 1.141, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.1203536175165643;  // std dev = 2.179, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.06855766445096349;  // std dev = 4.543, 106.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=29 */
%   | | | else return 0.12232506168379277;  // std dev = 3.941, 77.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=26 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( phenotype(D, E) )
%   | | then return 0.30582999643320385;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3872323695862639;  // std dev = 0.094, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5061223254097976;  // std dev = 0.020, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.49336642656335544;  // std dev = 0.315, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( enzyme(A, I), phenotype(G, J) )
%   | | | then return 0.1867522457561985;  // std dev = 2.135, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return -0.043385873482372606;  // std dev = 2.501, 55.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=8 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.2684626242056143;  // std dev = 2.517, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | | else return 0.08456219462031145;  // std dev = 4.923, 115.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=35 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.31415807546435076;  // std dev = 0.100, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(F, A), interaction(D, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return -0.011091313896359;  // std dev = 0.941, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return -0.15495803890448515;  // std dev = 0.944, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.48838656328132196;  // std dev = 0.916, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.02280856133527719;  // std dev = 4.237, 95.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=26 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6705867431634088;  // std dev = 1.336, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return -0.2344940863270519;  // std dev = 0.079, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.7561936359428403;  // std dev = 0.036, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.15362583677181677;  // std dev = 2.184, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( complex(E, F) )
%   | | | then return 0.25801374443522723;  // std dev = 0.545, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.13864881205199256;  // std dev = 1.038, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( interaction(A, G), phenotype(A, H) )
%   | | | then return 0.474463752897003;  // std dev = 2.123, 28.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=22 */
%   | | | else return 0.3058969149948962;  // std dev = 3.678, 71.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=47 */
%   | else if ( enzyme(A, I) )
%   | | then return -0.2667016892859528;  // std dev = 0.076, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return -0.15754615829315322;  // std dev = 0.296, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.2342809184178921;  // std dev = 0.594, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( enzyme(A, L) )
%   | then return -0.19934600728490842;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.04373551211140031;  // std dev = 0.427, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( phenotype(C, E), enzyme(C, F) )
%   | then return 0.05227641232122698;  // std dev = 0.344, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | else return -0.03707301516208702;  // std dev = 0.331, 166.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=44 */
%   else if ( interaction(A, G), interaction(G, H) )
%   | then if ( recursion_proteinclass(H, B) )
%   | | then return 0.2908827883717533;  // std dev = 0.284, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(H, I), complex(H, J) )
%   | | | then return -0.13585309143973906;  // std dev = 0.450, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.06811542951987712;  // std dev = 2.502, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | else if ( interaction(K, A), location(A, L) )
%   | | then if ( phenotype(K, M) )
%   | | | then return 0.024321258524147325;  // std dev = 1.840, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return 0.0953452413768164;  // std dev = 0.805, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( complex(A, N) )
%   | | | then return -0.055088586943329784;  // std dev = 0.764, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.09451781411077839;  // std dev = 1.497, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.21362751363050675;  // std dev = 0.072, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.16290863407969566;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( enzyme(E, G), interaction(A, H) )
%   | | then if ( enzyme(A, I), complex(H, J) )
%   | | | then return 0.029267336998284644;  // std dev = 1.099, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.18525769144950757;  // std dev = 0.207, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.05200826304375828;  // std dev = 2.023, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return -0.031614624652072494;  // std dev = 2.881, 67.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=16 */
%   | else if ( location(A, M) )
%   | | then if ( location(N, M), recursion_proteinclass(N, B) )
%   | | | then return 0.3089642200846001;  // std dev = 3.171, 59.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=42 */
%   | | | else return -0.18615131608752272;  // std dev = 0.315, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return -0.10783729615555487;  // std dev = 0.392, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.2340191173123865;  // std dev = 0.225, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | else if ( interaction(C, F), enzyme(F, G) )
%   | | then return -0.12975488571107663;  // std dev = 0.267, 55.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=9 */
%   | | else return -0.016646313995075487;  // std dev = 0.348, 52.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=11 */
%   else if ( interaction(H, A), interaction(H, H) )
%   | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then return 0.5790762476448874;  // std dev = 0.072, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.32160322376073963;  // std dev = 0.113, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( phenotype(A, J), enzyme(A, K) )
%   | | then if ( enzyme(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.47778617605446766;  // std dev = 0.353, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.21587891904236717;  // std dev = 0.467, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( complex(A, M), enzyme(A, N) )
%   | | | then return 0.3079415684679554;  // std dev = 0.622, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.06252422991018892;  // std dev = 3.319, 79.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=31 */
Inference time using transfer learning 65.17310214042664
Refined model CLL: -0.244584


******************************************
Best model found
******************************************
Results 

CLL : -0.275483 

AUC ROC : 0.926294 

AUC PR : 0.12297 

Precision : 0.122661 

Recall : 0.416961 

F1 : 0.189558 

Total Learning Time : 8.567253351211548 

Total Inference Time : 8.467123031616211 

Total revision time: 24.194665670394897
Best scored revision CLL: -0.244584


Results 

CLL : -0.275483 

AUC ROC : 0.926294 

AUC PR : 0.12297 

Precision : 0.122661 

Recall : 0.416961 

F1 : 0.189558 

Total Learning Time : 24.220820426940918 

Total Inference Time : 8.467123031616211 

Starting experiments for fasttext using wmd 

Run: 1

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.26788330078125
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2006686201388824;  // std dev = 7.563, 254.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1213985997122452;  // std dev = 5.591, 152.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=44 */
%   | | | else return 0.19944628302308637;  // std dev = 5.215, 117.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.11767983165578927;  // std dev = 4.924, 113.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=35 */
%   | | | else return 0.12044589092542841;  // std dev = 5.981, 166.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.14062839160492036;  // std dev = 3.620, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   | | | else return 0.09986914127471629;  // std dev = 6.788, 214.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10135789893338377;  // std dev = 7.629, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06452863220535207;  // std dev = 7.736, 278.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7384013664526243;  // std dev = 0.021, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2618561910458383;  // std dev = 0.027, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.0965336677753859;  // std dev = 3.956, 69.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=24 */
%   | | | else return 0.06315216834541931;  // std dev = 4.333, 85.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04055408940640531;  // std dev = 3.841, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
%   | | | else return 0.029943222446963243;  // std dev = 6.011, 171.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08289978575227082;  // std dev = 6.802, 234.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05127431011133;  // std dev = 6.863, 246.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=87 */
Inference time using transfer learning 3.6381587982177734
Parameter learned model CLL:-0.33885 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.563, 167, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.591, 108, 44], 'false,false,false,false': [5.215, 74, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.924, 78, 35], 'false,false,false,false': [5.981, 114, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.62, 38, 20], 'false,false,false,false': [6.788, 147, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.629, 176, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.736, 191, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.021, 0, 35], 'true,false': [0.027, 56, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.956, 45, 24], 'false,false,false,false': [4.333, 57, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.841, 73, 35], 'false,false,false,false': [6.011, 119, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.802, 147, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.863, 159, 87]}]
{'': [nan, 0.2251999503999017], 'false': [nan, 0.22519995039990162], 'false,false': [nan, 0.2251999503999017], 'false,false,false': [nan, 0.22519995039990162]}
{'': [nan, 0.21881952985724462], 'false': [nan, 0.218819529857244], 'false,false': [nan, 0.21881952985724462], 'false,false,false': [0.20567867036011112, 0.23244941193659188]}
{'': [nan, 0.21511676842325975], 'false': [nan, 0.21511676842325975], 'false,false': [nan, 0.21511676842325983], 'false,false,false': [0.21453645182871237, 0.21550870438743522]}
{'': [nan, 0.2178480386667887], 'false': [nan, 0.2178480386667887], 'false,false': [nan, 0.2178480386667896], 'false,false,false': [0.2259215219976221, 0.2153056470149573]}
{'': [nan, 0.22128822802662193], 'false': [nan, 0.22128822802662193], 'false,false': [nan, 0.2212882280266228], 'false,false,false': [nan, 0.2212882280266228]}
{'': [nan, 0.21529376046322402], 'false': [nan, 0.21529376046322402], 'false,false': [nan, 0.21529376046322327], 'false,false,false': [nan, 0.21529376046322438]}
{'': [0.23682118589496673, 0.2238382006415086], 'true': [1.2736486082332022e-05, 1.2935493677717386e-05], 'false': [nan, 0.2238382006415086], 'false,false': [nan, 0.2238382006415086], 'false,false,false': [0.22684310018903606, 0.2208996539792382], 'true,true': [nan, 1.2736486082332022e-05], 'true,true,false': [nan, 1.2736486082332022e-05]}
{'': [nan, 0.1824203261647922], 'false': [nan, 0.1824203261647922], 'false,false': [nan, 0.18242032616479287], 'false,false,false': [0.1365907538438748, 0.21132173579114538]}
{'': [nan, 0.1977438509405381], 'false': [nan, 0.197743850940538], 'false,false': [nan, 0.197743850940538], 'false,false,false': [nan, 0.197743850940538]}
{'': [nan, 0.19147303917431344], 'false': [nan, 0.19147303917431344], 'false,false': [nan, 0.19147303917431407], 'false,false,false': [nan, 0.19147303917431407]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 10.586063385009766
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(F, A), interaction(D, D) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.10814893509951236;  // std dev = 1.936, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.15814893509951236;  // std dev = 3.240, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( enzyme(A, H), complex(A, I) )
%   | | | then return 0.0803711573217346;  // std dev = 2.494, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return 0.15741900809221207;  // std dev = 5.360, 137.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=41 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then return 0.052566277785936213;  // std dev = 0.366, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( complex(D, F), enzyme(D, G) )
%   | | then return 0.42235950064987093;  // std dev = 1.054, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, H), interaction(H, D) )
%   | | | then return 0.3773485728495517;  // std dev = 1.237, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.1849694758305506;  // std dev = 3.621, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   else if ( phenotype(A, I), interaction(J, A) )
%   | then if ( recursion_proteinclass(J, B) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.1370085319292238;  // std dev = 3.671, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then return 0.061497955732967596;  // std dev = 0.400, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | else return 0.12939716313834637;  // std dev = 0.454, 79.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=23 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5791302682280531;  // std dev = 0.278, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(A, F), interaction(G, D) )
%   | | then if ( phenotype(D, H), interaction(G, F) )
%   | | | then return 0.1322334283109793;  // std dev = 2.532, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return -0.03845887939133324;  // std dev = 2.408, 47.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=7 */
%   | | else if ( complex(A, I), enzyme(A, J) )
%   | | | then return 0.22928744095160122;  // std dev = 1.806, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.13465394735835526;  // std dev = 3.430, 55.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
%   | else if ( phenotype(A, K), interaction(A, L) )
%   | | then if ( phenotype(L, M), enzyme(A, N) )
%   | | | then return 0.4959211876999698;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.315047313501113;  // std dev = 1.730, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( interaction(P, A) )
%   | | | then return 0.2223383909560509;  // std dev = 3.846, 63.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=26 */
%   | | | else return -0.06946429862321861;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then return 0.13274440294605244;  // std dev = 0.683, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.5508873136558239;  // std dev = 0.106, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.4320904623981842;  // std dev = 0.890, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, H), interaction(H, E) )
%   | | | then return -0.18840002569890163;  // std dev = 0.142, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.03307166650261238;  // std dev = 3.304, 59.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7740025491806104;  // std dev = 0.110, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 3.1463349360210627E-4;  // std dev = 2.873, 56.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
%   | | else if ( location(A, L), interaction(M, A) )
%   | | | then return 0.12241285354854163;  // std dev = 5.081, 118.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=40 */
%   | | | else return 0.28336197598004115;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.33182939852072585;  // std dev = 0.285, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, D), location(D, E) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( complex(D, H), phenotype(A, I) )
%   | | | then return 0.19367786557033512;  // std dev = 2.337, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.014260597854273036;  // std dev = 2.974, 56.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return -0.16532616894231997;  // std dev = 0.051, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.04033095922653588;  // std dev = 2.350, 36.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | else if ( interaction(L, A), enzyme(L, M) )
%   | | then if ( interaction(L, N), recursion_proteinclass(N, B) )
%   | | | then return 0.7429452029474402;  // std dev = 0.228, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.23321112736431393;  // std dev = 0.127, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( phenotype(A, P), enzyme(A, Q) )
%   | | | then return 0.03643627905109476;  // std dev = 2.085, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.12362471249555644;  // std dev = 4.372, 85.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=31 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then return 0.09822929947530762;  // std dev = 0.408, 67.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=25 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( phenotype(E, F), phenotype(A, F) )
%   | | then if ( complex(A, G), interaction(D, E) )
%   | | | then return 0.01327296884740351;  // std dev = 1.868, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.16896027244718279;  // std dev = 1.874, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.3746136863536618;  // std dev = 0.184, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.003056417161324123;  // std dev = 5.046, 147.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=37 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7004342563293263;  // std dev = 0.211, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.22818728796748575;  // std dev = 0.128, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.0716420406686652;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.27182751461343435;  // std dev = 1.229, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.2842496455696244;  // std dev = 0.144, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.6553904763195647;  // std dev = 0.119, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else return -0.2371057530831263;  // std dev = 0.052, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( interaction(A, F), location(F, G) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.32417888992314436;  // std dev = 0.194, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6714066871731508;  // std dev = 0.306, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.037184682978471356;  // std dev = 2.686, 53.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=10 */
%   | else if ( interaction(I, A), location(I, J) )
%   | | then if ( interaction(I, I), location(A, J) )
%   | | | then return -0.007969232415651192;  // std dev = 1.405, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.1695338486498208;  // std dev = 3.617, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | | else return 0.38304056557923577;  // std dev = 0.832, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), enzyme(F, G) )
%   | | then if ( recursion_proteinclass(F, B), location(F, C) )
%   | | | then return 0.283552252379667;  // std dev = 0.189, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5501945523414261;  // std dev = 0.274, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.6584941477337246;  // std dev = 0.117, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return -0.21819929192437154;  // std dev = 0.056, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then if ( interaction(H, I) )
%   | | then return 0.24129139045090156;  // std dev = 0.103, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.06395431412325092;  // std dev = 0.814, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.13826559039300448;  // std dev = 0.067, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.003445303782860429;  // std dev = 4.777, 145.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=43 */
%   | | | else return -0.07135971563193842;  // std dev = 1.520, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( recursion_proteinclass(D, B), phenotype(D, E) )
%   | then return 0.2152233251615639;  // std dev = 0.085, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( phenotype(D, C), interaction(D, A) )
%   | | then return -0.0945675071208881;  // std dev = 0.230, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.3999241243485582;  // std dev = 0.111, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.051164813258115324;  // std dev = 2.288, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.22263152193180713;  // std dev = 0.118, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4352778761280982;  // std dev = 0.271, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.003533164892723754;  // std dev = 2.048, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.008952622187719465;  // std dev = 3.240, 81.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=24 */
%   | | | else return -0.023945329497078106;  // std dev = 3.522, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1841966306660752;  // std dev = 0.064, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.48719247903290425;  // std dev = 1.177, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | | | else return 0.08359175260855711;  // std dev = 0.663, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, G), location(G, H) )
%   | | | then return -0.1649338685224949;  // std dev = 0.334, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return -0.2571162846138865;  // std dev = 0.379, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( complex(I, K), interaction(L, A) )
%   | | | then return 0.022883354457509195;  // std dev = 0.727, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.07743251375908541;  // std dev = 0.999, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( complex(A, M), enzyme(A, N) )
%   | | | then return -0.021760424056361766;  // std dev = 0.904, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.08763159460154231;  // std dev = 3.961, 87.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=32 */
Inference time using transfer learning 13.323911190032959
Refined model CLL: -0.241844


******************************************
Best model found
******************************************
Results 

CLL : -0.235521 

AUC ROC : 0.952886 

AUC PR : 0.261443 

Precision : 0.266881 

Recall : 0.588652 

F1 : 0.367257 

Total Learning Time : 10.586063385009766 

Total Inference Time : 4.6885435581207275 

Total revision time: 18.21135377883911
Best scored revision CLL: -0.241844


Results 

CLL : -0.235521 

AUC ROC : 0.952886 

AUC PR : 0.261443 

Precision : 0.266881 

Recall : 0.588652 

F1 : 0.367257 

Total Learning Time : 18.228737115859985 

Total Inference Time : 4.6885435581207275 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.4840364456176758
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17140194714770554;  // std dev = 8.451, 332.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.20740606697784245;  // std dev = 5.717, 140.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=52 */
%   | | | else return 0.19708860666038208;  // std dev = 5.764, 144.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1314079515600043;  // std dev = 5.259, 126.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=41 */
%   | | | else return 0.15656353136594295;  // std dev = 6.399, 180.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.10279195118270955;  // std dev = 4.445, 91.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=29 */
%   | | | else return 0.12895682882685278;  // std dev = 6.997, 216.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07773367238577521;  // std dev = 8.432, 328.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06557122388365007;  // std dev = 8.416, 326.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7386640590048733;  // std dev = 0.009, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.26121439145992786;  // std dev = 0.012, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.08340129602902126;  // std dev = 3.855, 65.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=23 */
%   | | | else return 0.03927830263132499;  // std dev = 5.262, 130.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.08264845574279078;  // std dev = 3.988, 109.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=41 */
%   | | | else return 0.04275663950268883;  // std dev = 6.532, 195.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03670537320934484;  // std dev = 7.685, 315.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.027443066561114605;  // std dev = 7.682, 318.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=104 */
Inference time using transfer learning 3.4309499263763428
Parameter learned model CLL:-0.33104 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.451, 228, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.717, 88, 52], 'false,false,false,false': [5.764, 92, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.259, 85, 41], 'false,false,false,false': [6.399, 117, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.445, 62, 29], 'false,false,false,false': [6.997, 141, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.432, 224, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.416, 222, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.009, 0, 41], 'true,false': [0.012, 83, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.855, 42, 23], 'false,false,false,false': [5.262, 90, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.988, 68, 41], 'false,false,false,false': [6.532, 132, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.685, 211, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.682, 214, 104]}]
{'': [nan, 0.21512556249092943], 'false': [nan, 0.21512556249092823], 'false,false': [nan, 0.21512556249092943], 'false,false,false': [nan, 0.21512556249092823]}
{'': [nan, 0.23209680618924836], 'false': [nan, 0.23209680618924786], 'false,false': [nan, 0.23209680618924836], 'false,false,false': [0.23346938775510248, 0.2307098765432104]}
{'': [nan, 0.22435522276866288], 'false': [nan, 0.22435522276866288], 'false,false': [nan, 0.22435522276866116], 'false,false,false': [0.21950494154594005, 0.2274898536029418]}
{'': [nan, 0.22397522567702857], 'false': [nan, 0.22397522567702857], 'false,false': [nan, 0.22397522567702574], 'false,false,false': [0.21712353580485336, 0.22665888996401812]}
{'': [nan, 0.21673873169462007], 'false': [nan, 0.21673873169462007], 'false,false': [nan, 0.2167387316946199], 'false,false,false': [nan, 0.2167387316946199]}
{'': [nan, 0.2172473497284078], 'false': [nan, 0.2172473497284078], 'false,false': [nan, 0.2172473497284064], 'false,false,false': [nan, 0.2172473497284085]}
{'': [0.2212669696521104, 0.21865748285908881], 'true': [1.9434550335868765e-06, 1.7742620586444323e-06], 'false': [nan, 0.21865748285908881], 'false,false': [nan, 0.21865748285908881], 'false,false,false': [0.22863905325443812, 0.2130177514792892], 'true,true': [nan, 1.9434550335868765e-06], 'true,true,false': [nan, 1.9434550335868765e-06]}
{'': [nan, 0.19301757736755878], 'false': [nan, 0.19301757736755878], 'false,false': [nan, 0.1930175773675582], 'false,false,false': [0.14588537212702615, 0.21879268633774893]}
{'': [nan, 0.18747388443757412], 'false': [nan, 0.18747388443757376], 'false,false': [nan, 0.18747388443757376], 'false,false,false': [nan, 0.18747388443757376]}
{'': [nan, 0.18557404059144006], 'false': [nan, 0.18557404059144006], 'false,false': [nan, 0.18557404059144114], 'false,false,false': [nan, 0.18557404059144114]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 10.52084994316101
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( phenotype(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(A, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.1081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.09577269747574936;  // std dev = 4.278, 101.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=24 */
%   | | | else return 0.17633075328133166;  // std dev = 6.179, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.7319728147734343;  // std dev = 0.119, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.0656029148119747;  // std dev = 0.406, 125.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=28 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.5563437598039527;  // std dev = 0.419, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( interaction(A, F) )
%   | | | then return -0.16393554970664767;  // std dev = 0.009, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.17122826089203533;  // std dev = 3.700, 64.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=22 */
%   | else if ( phenotype(A, I), location(A, J) )
%   | | then if ( phenotype(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.836379091983537;  // std dev = 0.014, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.1638905454286091;  // std dev = 0.018, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.22418943122384105;  // std dev = 2.925, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | | else return 0.3932639513131952;  // std dev = 1.266, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then return 0.3999187727729885;  // std dev = 0.930, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.6729535733375176;  // std dev = 0.055, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( complex(A, F), phenotype(A, G) )
%   | then if ( complex(H, F), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), complex(I, F) )
%   | | | then return 0.7351676848997547;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.8271130620506526;  // std dev = 0.128, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.15956156131040333;  // std dev = 0.056, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.6316129360949276;  // std dev = 1.273, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.06602378954230961;  // std dev = 5.336, 166.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=43 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.20195820726112568;  // std dev = 1.356, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 6.989318062874902E-4;  // std dev = 2.320, 41.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.41554681864662;  // std dev = 0.261, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( enzyme(A, F), enzyme(D, G) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.3247462118198547;  // std dev = 0.542, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.051990231659778646;  // std dev = 1.738, 34.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.5163972606384493;  // std dev = 0.282, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.03258832765482987;  // std dev = 3.790, 112.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=26 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.672687398014764;  // std dev = 1.466, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return -0.20156660182508687;  // std dev = 0.165, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.1538770907236088;  // std dev = 4.051, 86.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=31 */
%   | | | else return 0.08246576401346412;  // std dev = 1.380, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(C, A) )
%   | | then return 0.5772182711269949;  // std dev = 0.150, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0.11289160049673959;  // std dev = 0.445, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return -0.07123886613317178;  // std dev = 0.263, 118.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=16 */
%   else if ( location(A, F), interaction(G, A) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.32997259034881193;  // std dev = 0.345, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( interaction(G, G), complex(A, I) )
%   | | | then return -0.1848167162193867;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.09634363417160004;  // std dev = 5.048, 143.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=48 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(K, A) )
%   | | | then return 0.02728585992350055;  // std dev = 0.482, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2648720867514656;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.4386314335043112;  // std dev = 0.646, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, A) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.21182623122956679;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.11857576055336219;  // std dev = 0.041, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( enzyme(A, E), phenotype(A, F) )
%   | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, G), interaction(H, H) )
%   | | | then return 0.40925446931836507;  // std dev = 0.850, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.6172331196308651;  // std dev = 0.380, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.18144456868926365;  // std dev = 0.063, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else if ( enzyme(A, I), location(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.6224319857790683;  // std dev = 0.486, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.19295849594965012;  // std dev = 0.149, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.10996679243480395;  // std dev = 3.141, 73.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=27 */
%   | | | else return 0.048548768479327424;  // std dev = 4.329, 134.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(F, A) )
%   | | | then return 0.04406463194674801;  // std dev = 0.603, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.37723839843948176;  // std dev = 0.162, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.5093773092710668;  // std dev = 0.130, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else return -0.16130786407048567;  // std dev = 0.073, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else if ( phenotype(A, G) )
%   | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.5271600918900633;  // std dev = 0.169, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | else return -0.19495874141869513;  // std dev = 0.069, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.3352432390988143;  // std dev = 0.144, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return -0.08681600735073153;  // std dev = 1.826, 37.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=6 */
%   | | | else return 0.02199835464930664;  // std dev = 3.128, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( complex(A, D) )
%   | then return 0.03808013621604882;  // std dev = 0.229, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | else return -0.05894597107342321;  // std dev = 0.245, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(G, E), interaction(G, G) )
%   | | then if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.46308135005894935;  // std dev = 0.336, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.2017901292084353;  // std dev = 0.349, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.09161144508614817;  // std dev = 0.995, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.020623011050338102;  // std dev = 2.021, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.3031610134843933;  // std dev = 0.093, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, L), phenotype(A, M) )
%   | | | then return -4.3528274118365053E-4;  // std dev = 1.483, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return 0.07710419671044122;  // std dev = 3.696, 97.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=35 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.20829008355294604;  // std dev = 0.271, 33.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=28 */
%   | else if ( interaction(A, C) )
%   | | then return -0.12293869979530049;  // std dev = 0.150, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( phenotype(A, F), location(A, G) )
%   | | | then return 0.03813476720941674;  // std dev = 2.664, 98.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=33 */
%   | | | else return -0.007297239717924947;  // std dev = 3.470, 89.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=25 */
%   else if ( enzyme(A, H) )
%   | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.40241932262793334;  // std dev = 0.153, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.17990906083837174;  // std dev = 0.070, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( complex(A, L), interaction(K, K) )
%   | | | then return -0.029565061561017514;  // std dev = 0.304, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.11476226915667603;  // std dev = 1.190, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else return 0.24855035846257292;  // std dev = 0.877, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), interaction(A, C) )
%   | then return 0.1299612513752454;  // std dev = 0.048, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.24800066918571365;  // std dev = 0.078, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, E), location(A, F) )
%   | then if ( interaction(E, G) )
%   | | then if ( recursion_proteinclass(G, B), location(E, F) )
%   | | | then return 0.25953374355214076;  // std dev = 1.217, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | | | else return -0.08065747613882443;  // std dev = 2.270, 104.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=14 */
%   | | else return -0.19237817579864203;  // std dev = 0.075, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4153786665606782;  // std dev = 1.610, 39.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=35 */
%   | | | else return -0.18575603068479038;  // std dev = 0.458, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return -0.02094665704459925;  // std dev = 1.757, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return 0.07616106133902763;  // std dev = 1.426, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
Inference time using transfer learning 9.649022579193115
Refined model CLL: -0.195479


******************************************
Best model found
******************************************
Results 

CLL : -0.216677 

AUC ROC : 0.971469 

AUC PR : 0.381594 

Precision : 0.266773 

Recall : 0.630189 

F1 : 0.37486 

Total Learning Time : 10.52084994316101 

Total Inference Time : 6.991608142852783 

Total revision time: 21.07088327407837
Best scored revision CLL: -0.195479


Results 

CLL : -0.216677 

AUC ROC : 0.971469 

AUC PR : 0.381594 

Precision : 0.266773 

Recall : 0.630189 

F1 : 0.37486 

Total Learning Time : 21.088266611099243 

Total Inference Time : 6.991608142852783 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.3001158237457275
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1976323299334608;  // std dev = 7.795, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.2187126759588652;  // std dev = 5.594, 132.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=51 */
%   | | | else return 0.15518368526452017;  // std dev = 5.269, 127.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14715063064167166;  // std dev = 5.376, 128.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=44 */
%   | | | else return 0.14517362923249671;  // std dev = 5.624, 141.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1688943560112277;  // std dev = 3.970, 66.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=26 */
%   | | | else return 0.09255997145482639;  // std dev = 6.742, 213.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07678695988448975;  // std dev = 7.929, 290.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07524930419095241;  // std dev = 7.853, 279.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7254622839764644;  // std dev = 0.090, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2750806862813435;  // std dev = 0.132, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.007632402559893757;  // std dev = 4.249, 90.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=25 */
%   | | | else return 0.05726456339174931;  // std dev = 3.969, 73.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.036621728542110266;  // std dev = 4.273, 132.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=44 */
%   | | | else return 0.03919162229658701;  // std dev = 5.758, 155.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07640940650808206;  // std dev = 6.874, 249.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04610304759666142;  // std dev = 6.936, 262.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=92 */
Inference time using transfer learning 3.7712836265563965
Parameter learned model CLL:-0.332751 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.795, 179, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.594, 81, 51], 'false,false,false,false': [5.269, 86, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.376, 84, 44], 'false,false,false,false': [5.624, 93, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.97, 40, 26], 'false,false,false,false': [6.742, 147, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.929, 198, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.853, 187, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.09, 0, 44], 'true,false': [0.132, 95, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.249, 65, 25], 'false,false,false,false': [3.969, 50, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.273, 88, 44], 'false,false,false,false': [5.758, 107, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.874, 157, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.936, 170, 92]}]
{'': [nan, 0.2242344194659672], 'false': [nan, 0.22423441946596676], 'false,false': [nan, 0.2242344194659672], 'false,false,false': [nan, 0.22423441946596676]}
{'': [nan, 0.2290365379168462], 'false': [nan, 0.2290365379168468], 'false,false': [nan, 0.2290365379168462], 'false,false,false': [0.23708677685950397, 0.21861243722487458]}
{'': [nan, 0.22500924255630053], 'false': [nan, 0.22500924255630053], 'false,false': [nan, 0.22500924255630123], 'false,false,false': [0.22578993888309343, 0.22429866550032654]}
{'': [nan, 0.2204602595761825], 'false': [nan, 0.2204602595761825], 'false,false': [nan, 0.22046025957618254], 'false,false,false': [0.23875114784205717, 0.21341424489151553]}
{'': [nan, 0.21679028463021127], 'false': [nan, 0.21679028463021127], 'false,false': [nan, 0.21679028463021094], 'false,false,false': [nan, 0.21679028463021094]}
{'': [nan, 0.22105202679431687], 'false': [nan, 0.22105202679431687], 'false,false': [nan, 0.22105202679431765], 'false,false,false': [nan, 0.2210520267943171]}
{'': [0.21676303213637974, 0.20802619569266081], 'true': [0.00018518996124974117, 0.0001821626970772191], 'false': [nan, 0.20802619569266081], 'false,false': [nan, 0.20802619569266081], 'false,false,false': [0.20061728395061756, 0.21580033777444102], 'true,true': [nan, 0.00018518996124974117], 'true,true,false': [nan, 0.00018518996124974117]}
{'': [nan, 0.17911534790141417], 'false': [nan, 0.17911534790141417], 'false,false': [nan, 0.17911534790141356], 'false,false,false': [0.13830170631583638, 0.21386973416075994]}
{'': [nan, 0.18977257771384426], 'false': [nan, 0.18977257771384465], 'false,false': [nan, 0.18977257771384465], 'false,false,false': [nan, 0.18977257771384465]}
{'': [nan, 0.18362538474557796], 'false': [nan, 0.18362538474557796], 'false,false': [nan, 0.18362538474557658], 'false,false,false': [nan, 0.18362538474557658]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 8.993668556213379
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, C) )
%   | | then return 0.8081489350995117;  // std dev = 0.218, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.14185106490048766;  // std dev = 6.32e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( interaction(A, F), phenotype(F, G) )
%   | then if ( interaction(H, A), interaction(A, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else return 0.14386322081379807;  // std dev = 0.452, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.2684053453559216;  // std dev = 4.344, 78.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=32 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7488661891741427;  // std dev = 0.173, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( phenotype(D, E) )
%   | | then return -0.13679078369068073;  // std dev = 0.035, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.1595213700624142;  // std dev = 0.987, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.03786627293906556;  // std dev = 0.940, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.72446339972749;  // std dev = 0.012, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.11190020757356477;  // std dev = 4.862, 131.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=37 */
%   | | | else return 0.18005848225453153;  // std dev = 4.302, 91.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=32 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.5554457071313451;  // std dev = 0.023, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(E, A), complex(E, C) )
%   | | then return 0.0352471949977612;  // std dev = 0.371, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | else if ( complex(F, C), recursion_proteinclass(F, B) )
%   | | | then return 0.7322289752439295;  // std dev = 0.359, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return -0.16466341677695204;  // std dev = 0.150, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( interaction(A, G), interaction(G, H) )
%   | then if ( recursion_proteinclass(H, B) )
%   | | then return 0.6017978123725592;  // std dev = 0.117, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.08838014960070457;  // std dev = 0.413, 72.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then return -0.04086333527409196;  // std dev = 0.361, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.007014760556545309;  // std dev = 1.178, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.07225654945920272;  // std dev = 3.738, 77.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=21 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, A) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.4166598333057382;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.1295768266541152;  // std dev = 0.069, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then return 0.42061951824443433;  // std dev = 0.138, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5482615564513678;  // std dev = 0.195, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( interaction(G, G), enzyme(A, H) )
%   | | | then return 0.1543486156911588;  // std dev = 1.144, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.021390115070057114;  // std dev = 1.840, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | else if ( interaction(A, I), interaction(J, A) )
%   | | | then return 0.037183336348478306;  // std dev = 2.671, 56.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | | | else return 0.09745761244043177;  // std dev = 5.472, 177.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=57 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(E, A) )
%   | then return 0.31233586220967596;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.3992382708627538;  // std dev = 0.228, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.4410218884464901;  // std dev = 0.136, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( enzyme(A, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.10177310706806492;  // std dev = 2.125, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | | else return 0.015536207915775365;  // std dev = 3.311, 70.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=16 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.08404273243212232;  // std dev = 2.377, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | | else return 0.15429467348303932;  // std dev = 4.056, 77.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=29 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.2669262889274312;  // std dev = 0.092, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( enzyme(C, E), enzyme(A, E) )
%   | | then return -0.13465571902100312;  // std dev = 0.056, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, F), interaction(G, C) )
%   | | | then return 0.0512728893014078;  // std dev = 2.420, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return 0.13664560016075336;  // std dev = 3.024, 48.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=19 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.32116612882043477;  // std dev = 0.165, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( location(A, I), interaction(A, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.38294015057581565;  // std dev = 0.244, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.04675148234140845;  // std dev = 3.358, 78.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=23 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.05845126194859306;  // std dev = 1.506, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return -0.012824049263688771;  // std dev = 3.194, 62.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.03912036871581224;  // std dev = 0.317, 133.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=44 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then if ( interaction(D, G) )
%   | | | then return 0.208146875016096;  // std dev = 1.305, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.041567223401584474;  // std dev = 0.997, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.061189344442077215;  // std dev = 1.980, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return -0.0017806870210962137;  // std dev = 2.447, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.6970930189660582;  // std dev = 0.391, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.2500889583979768;  // std dev = 0.157, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.07381534117561654;  // std dev = 0.959, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.32473025912958703;  // std dev = 1.851, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.22293167204294226;  // std dev = 0.068, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( enzyme(D, F), enzyme(A, F) )
%   | | then if ( interaction(D, E) )
%   | | | then return -0.12495798272010045;  // std dev = 0.044, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.0687973307107739;  // std dev = 0.339, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( enzyme(A, G), location(D, H) )
%   | | | then return 0.08261675101669354;  // std dev = 2.447, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | | else return -0.02022222172487444;  // std dev = 3.752, 123.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=30 */
%   | else if ( interaction(A, I), enzyme(A, J) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.01769425752012416;  // std dev = 1.102, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.27953070624860127;  // std dev = 1.490, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.31572056764706;  // std dev = 0.653, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.024266113330400317;  // std dev = 3.313, 71.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=21 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.14495589629966138;  // std dev = 0.188, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( enzyme(A, E) )
%   | | | then return -0.11353071415815309;  // std dev = 0.026, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.08612953730651358;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( enzyme(A, E), complex(A, H) )
%   | | | then return -0.07244589523282659;  // std dev = 1.044, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.08972959566086283;  // std dev = 1.351, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else if ( interaction(A, I), location(A, J) )
%   | | then if ( phenotype(A, K), phenotype(I, K) )
%   | | | then return -0.03518306227166571;  // std dev = 1.310, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.12992640171462116;  // std dev = 3.162, 60.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=26 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.04116774526606597;  // std dev = 2.912, 66.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=16 */
%   | | | else return 0.04352855879741463;  // std dev = 3.136, 66.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=22 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( complex(D, C), interaction(F, D) )
%   | | then return 0.09654005145141799;  // std dev = 0.365, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else return -0.035169397026380875;  // std dev = 0.271, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | else if ( complex(G, C), recursion_proteinclass(G, B) )
%   | | then return 0.3721686524578153;  // std dev = 0.291, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | else return -0.19316618238881203;  // std dev = 0.061, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.21017808823470446;  // std dev = 0.177, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( complex(J, K), phenotype(J, L) )
%   | | | then return 0.07976383944070303;  // std dev = 1.587, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.15939220709480484;  // std dev = 1.099, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return 0.3603317175821475;  // std dev = 0.736, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.012320954988321947;  // std dev = 4.395, 122.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=36 */
Inference time using transfer learning 43.95566940307617
Refined model CLL: -0.248032


******************************************
Best model found
******************************************
Results 

CLL : -0.23671 

AUC ROC : 0.960729 

AUC PR : 0.216706 

Precision : 0.250489 

Recall : 0.462094 

F1 : 0.324873 

Total Learning Time : 8.993668556213379 

Total Inference Time : 5.519511699676514 

Total revision time: 17.740856170654297
Best scored revision CLL: -0.248032


Results 

CLL : -0.23671 

AUC ROC : 0.960729 

AUC PR : 0.216706 

Precision : 0.250489 

Recall : 0.462094 

F1 : 0.324873 

Total Learning Time : 17.75823950767517 

Total Inference Time : 5.519511699676514 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.1852433681488037
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19019526714584492;  // std dev = 7.579, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1871257709832246;  // std dev = 5.797, 147.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=52 */
%   | | | else return 0.1541389913657173;  // std dev = 4.806, 106.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.18086313261231096;  // std dev = 4.188, 75.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=28 */
%   | | | else return 0.1511609466155187;  // std dev = 6.172, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.14842894707919768;  // std dev = 3.453, 51.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
%   | | | else return 0.10524390763573785;  // std dev = 6.740, 208.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1010200348419201;  // std dev = 7.537, 253.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.058791348353003876;  // std dev = 7.668, 272.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6880254666209619;  // std dev = 0.988, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.276627019517076;  // std dev = 0.051, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.037882883929461125;  // std dev = 4.787, 108.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=33 */
%   | | | else return 0.1293687735524373;  // std dev = 3.903, 64.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04787099158427812;  // std dev = 3.397, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
%   | | | else return 0.06946334531719382;  // std dev = 6.140, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.053379033637389335;  // std dev = 6.993, 244.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05290205102775905;  // std dev = 6.910, 238.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=86 */
Inference time using transfer learning 3.686293363571167
Parameter learned model CLL:-0.357953 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.579, 173, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.797, 95, 52], 'false,false,false,false': [4.806, 72, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.188, 47, 28], 'false,false,false,false': [6.172, 111, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.453, 32, 19], 'false,false,false,false': [6.74, 141, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.537, 167, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.668, 186, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.988, 1, 28], 'true,false': [0.051, 49, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.787, 75, 33], 'false,false,false,false': [3.903, 39, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.397, 53, 28], 'false,false,false,false': [6.14, 108, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.993, 158, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.91, 152, 86]}]
{'': [nan, 0.22179156542090983], 'false': [nan, 0.2217915654209096], 'false,false': [nan, 0.22179156542090983], 'false,false,false': [nan, 0.2217915654209096]}
{'': [nan, 0.22437469730819098], 'false': [nan, 0.22437469730819054], 'false,false': [nan, 0.22437469730819098], 'false,false,false': [0.22860845018279374, 0.21787112851548524]}
{'': [nan, 0.22820052813486408], 'false': [nan, 0.22820052813486408], 'false,false': [nan, 0.228200528134864], 'false,false,false': [0.23386516105081792, 0.22541546365240742]}
{'': [nan, 0.22170796901988593], 'false': [nan, 0.22170796901988593], 'false,false': [nan, 0.22170796901988593], 'false,false,false': [0.23375624759707792, 0.21838659472148442]}
{'': [nan, 0.22455004483970428], 'false': [nan, 0.22455004483970428], 'false,false': [nan, 0.22455004483970414], 'false,false,false': [nan, 0.22455004483970414]}
{'': [nan, 0.2161514374149189], 'false': [nan, 0.2161514374149189], 'false,false': [nan, 0.21615143741491968], 'false,false,false': [nan, 0.21615143741491916]}
{'': [0.2298945576773523, 0.22376386938491719], 'true': [0.03366765383193333, 5.348679348566095e-05], 'false': [nan, 0.22376386938491719], 'false,false': [nan, 0.22376386938491719], 'false,false,false': [0.21219135802469197, 0.23803710937499967], 'true,true': [nan, 0.03366765383193333], 'true,true,false': [nan, 0.03366765383193333]}
{'': [nan, 0.1994657242342803], 'false': [nan, 0.1994657242342803], 'false,false': [nan, 0.1994657242342809], 'false,false,false': [0.14246576094270952, 0.22712606618087122]}
{'': [nan, 0.20042154814093666], 'false': [nan, 0.20042154814093685], 'false,false': [nan, 0.20042154814093685], 'false,false,false': [nan, 0.20042154814093685]}
{'': [nan, 0.20062001882542552], 'false': [nan, 0.20062001882542552], 'false,false': [nan, 0.2006200188254255], 'false,false,false': [nan, 0.2006200188254255]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 6.544477939605713
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( interaction(H, A), enzyme(A, I) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.013704490655067823;  // std dev = 2.431, 45.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=7 */
%   | | else if ( interaction(A, J), interaction(J, A) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.17103237068233357;  // std dev = 5.920, 163.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=51 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7530349623346114;  // std dev = 0.207, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.743272687223838;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.151064035955599;  // std dev = 0.076, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.06557550311235848;  // std dev = 4.694, 126.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=29 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then if ( phenotype(G, H) )
%   | | | then return 0.16361437215424077;  // std dev = 3.574, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | | else return -0.05286072363119993;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.3360281652576889;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.19602816525768904;  // std dev = 2.400, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.5523006305857852;  // std dev = 0.060, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( complex(A, E), complex(D, E) )
%   | | then return -0.06972902190785032;  // std dev = 0.289, 27.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | else if ( interaction(C, C) )
%   | | | then return -0.10349199758512129;  // std dev = 0.814, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.1378282246347183;  // std dev = 3.533, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.5884474518332808;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, G), phenotype(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.7947190467470228;  // std dev = 0.256, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.18594876222601267;  // std dev = 0.040, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.1908858383922843;  // std dev = 3.808, 62.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=24 */
%   | | | else return 0.09970328397831121;  // std dev = 2.868, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4205855237905032;  // std dev = 0.091, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, A) )
%   | then return -0.11970792938782945;  // std dev = 0.053, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( interaction(A, D), enzyme(D, E) )
%   | | then if ( phenotype(A, F), interaction(D, D) )
%   | | | then return 0.1752400014121586;  // std dev = 1.292, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.01070484616099286;  // std dev = 2.897, 57.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=12 */
%   | | else if ( location(A, G) )
%   | | | then return 0.15149061525504395;  // std dev = 5.421, 140.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=52 */
%   | | | else return 0.4025263514792699;  // std dev = 1.112, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( complex(A, E), phenotype(A, F) )
%   | | then return 0.3961771897521041;  // std dev = 0.203, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3134433603363447;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4860723981881789;  // std dev = 0.336, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( phenotype(A, H) )
%   | | then if ( complex(A, I) )
%   | | | then return -0.09013819391957408;  // std dev = 0.453, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.025164436609291834;  // std dev = 1.424, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else return -0.11367570673567254;  // std dev = 0.043, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.33853058678765274;  // std dev = 0.067, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.07551656613117017;  // std dev = 5.034, 125.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=39 */
%   | | | else return 0.15042669358379082;  // std dev = 3.485, 59.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=21 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2581467341527364;  // std dev = 0.111, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(D, F), enzyme(F, G) )
%   | | then if ( interaction(F, H), enzyme(H, G) )
%   | | | then return -0.11877841151024514;  // std dev = 1.645, 36.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | | | else return 0.05730887805285538;  // std dev = 1.909, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( interaction(I, A), location(A, J) )
%   | | | then return -0.0025824973551367;  // std dev = 2.843, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | | else return 0.09527026269445216;  // std dev = 2.138, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | else if ( interaction(K, A), phenotype(A, L) )
%   | | then if ( enzyme(K, M) )
%   | | | then return 0.27324650867880496;  // std dev = 1.618, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return -0.01467099197442454;  // std dev = 3.310, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | | else if ( location(A, N) )
%   | | | then return 0.13140171945562013;  // std dev = 3.085, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | | | else return -0.11777613214728307;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5549276442273653;  // std dev = 0.240, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.22550418492902732;  // std dev = 0.069, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( complex(E, F), enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.3250942321921801;  // std dev = 0.866, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.26171977223369136;  // std dev = 0.249, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.027295423347670354;  // std dev = 0.325, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3633491653436349;  // std dev = 3.538, 63.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=43 */
%   | | | else return -0.2476977853120095;  // std dev = 0.325, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else if ( interaction(A, K) )
%   | | | then return -0.05672704792728926;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.04280763860231089;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then return 0.01481365928482851;  // std dev = 0.361, 130.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=42 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( phenotype(F, G), interaction(F, A) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.357346265899041;  // std dev = 0.736, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.12023913363437133;  // std dev = 0.985, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(E, F), complex(F, I) )
%   | | | then return -0.04658858820497906;  // std dev = 1.823, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return 0.0708589754428702;  // std dev = 2.448, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.5303822336331276;  // std dev = 0.853, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.25040549321955435;  // std dev = 0.064, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.20870380770227173;  // std dev = 0.791, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.08942228920598451;  // std dev = 1.322, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.38117350261534233;  // std dev = 0.226, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.1852218714795407;  // std dev = 0.130, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else if ( enzyme(A, E), phenotype(A, F) )
%   | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, G), interaction(G, H) )
%   | | | then return 0.12007799774633386;  // std dev = 0.577, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5323452991877036;  // std dev = 0.598, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.2033685668613566;  // std dev = 0.062, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.47002441694794017;  // std dev = 0.486, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.0300549710279298;  // std dev = 3.324, 80.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=27 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.0781250037273263;  // std dev = 1.420, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.2806003036891667;  // std dev = 1.855, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F) )
%   | | then if ( interaction(A, C) )
%   | | | then return 0.13842140350298188;  // std dev = 0.117, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.3606240122336013;  // std dev = 0.705, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.3458056372284267;  // std dev = 0.164, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( complex(A, G), interaction(H, C) )
%   | | then return 0.03625403967846254;  // std dev = 0.330, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else return -0.05246672968743441;  // std dev = 0.310, 144.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=33 */
%   else if ( enzyme(A, I) )
%   | then return 0.1253599977377061;  // std dev = 0.288, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.13365110664039795;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return -0.03780280082541164;  // std dev = 2.329, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | | else return 0.018238398520449353;  // std dev = 1.638, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
Inference time using transfer learning 19.319047689437866
Refined model CLL: -0.250491


******************************************
Best model found
******************************************
Results 

CLL : -0.271853 

AUC ROC : 0.952571 

AUC PR : 0.198615 

Precision : 0.21755 

Recall : 0.420495 

F1 : 0.286747 

Total Learning Time : 6.544477939605713 

Total Inference Time : 3.243192672729492 

Total revision time: 12.716237783432007
Best scored revision CLL: -0.250491


Results 

CLL : -0.271853 

AUC ROC : 0.952571 

AUC PR : 0.198615 

Precision : 0.21755 

Recall : 0.420495 

F1 : 0.286747 

Total Learning Time : 12.73362112045288 

Total Inference Time : 3.243192672729492 

Run: 2

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.2836341857910156
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1768302537808309;  // std dev = 7.699, 273.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1763170840880921;  // std dev = 5.384, 129.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=44 */
%   | | | else return 0.14682601566881362;  // std dev = 5.441, 138.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.192201417851461;  // std dev = 4.654, 92.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=35 */
%   | | | else return 0.14313468349071404;  // std dev = 5.897, 157.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.12293156144438357;  // std dev = 3.620, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   | | | else return 0.11477582892690036;  // std dev = 6.714, 205.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09839998866509386;  // std dev = 7.618, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08688843560770948;  // std dev = 7.580, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.723619652136583;  // std dev = 0.022, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2760411117717412;  // std dev = 0.033, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.028072634200191737;  // std dev = 4.110, 81.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=24 */
%   | | | else return 0.07487452289906754;  // std dev = 4.307, 83.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.052763608411709836;  // std dev = 3.728, 99.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=35 */
%   | | | else return 0.05561409721564254;  // std dev = 5.897, 157.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04613028137592355;  // std dev = 6.944, 255.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.016884240946699543;  // std dev = 7.057, 271.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=87 */
Inference time using transfer learning 3.6670444011688232
Parameter learned model CLL:-0.331821 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.699, 186, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.384, 85, 44], 'false,false,false,false': [5.441, 95, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.654, 57, 35], 'false,false,false,false': [5.897, 105, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.62, 38, 20], 'false,false,false,false': [6.714, 138, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.618, 174, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.58, 169, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.022, 0, 35], 'true,false': [0.033, 76, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.11, 57, 24], 'false,false,false,false': [4.307, 55, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.728, 64, 35], 'false,false,false,false': [5.897, 105, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.944, 168, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.057, 184, 87]}]
{'': [nan, 0.2171235358048553], 'false': [nan, 0.2171235358048554], 'false,false': [nan, 0.2171235358048553], 'false,false,false': [nan, 0.2171235358048554]}
{'': [nan, 0.21966923368261695], 'false': [nan, 0.21966923368261712], 'false,false': [nan, 0.21966923368261695], 'false,false,false': [0.22474610900787279, 0.21450325561856776]}
{'': [nan, 0.22723633096150886], 'false': [nan, 0.22723633096150886], 'false,false': [nan, 0.22723633096150808], 'false,false,false': [0.23546433804922764, 0.22152528913867736]}
{'': [nan, 0.22124617699546004], 'false': [nan, 0.22124617699546004], 'false,false': [nan, 0.22124617699545965], 'false,false,false': [0.225921521997622, 0.21990872753648513]}
{'': [nan, 0.22237085602586085], 'false': [nan, 0.22237085602586085], 'false,false': [nan, 0.22237085602586001], 'false,false,false': [nan, 0.22237085602586001]}
{'': [nan, 0.22443092263979644], 'false': [nan, 0.22443092263979644], 'false,false': [nan, 0.22443092263979544], 'false,false,false': [nan, 0.22443092263979655]}
{'': [0.21575913448140047, 0.2166640212705846], 'false': [nan, 0.2166640212705846], 'false,false': [nan, 0.2166640212705846], 'false,false,false': [0.20850480109739414, 0.2235447815357818], 'true': [1.3848095482517562e-05, 1.4097437922308992e-05], 'true,true': [nan, 1.3848095482517562e-05], 'true,true,false': [nan, 1.3848095482517562e-05]}
{'': [nan, 0.1901384609653584], 'false': [nan, 0.1901384609653584], 'false,false': [nan, 0.19013846096535808], 'false,false,false': [0.14041350284543763, 0.2214905471333621]}
{'': [nan, 0.1891151392467578], 'false': [nan, 0.18911513924675766], 'false,false': [nan, 0.18911513924675766], 'false,false,false': [nan, 0.18911513924675766]}
{'': [nan, 0.18376559783985702], 'false': [nan, 0.18376559783985702], 'false,false': [nan, 0.18376559783985766], 'false,false,false': [nan, 0.18376559783985766]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 21.630184412002563
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(F, C), interaction(A, F) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( complex(C, G), phenotype(C, H) )
%   | | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.1824732594238367;  // std dev = 2.847, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, J), interaction(J, A) )
%   | | then if ( phenotype(J, K) )
%   | | | then return 0.0803711573217346;  // std dev = 2.160, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return -0.030739953789376676;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.274815601766179;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.14386322081379707;  // std dev = 5.732, 161.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=46 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.7194734122109543;  // std dev = 3.65e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.8037366344687843;  // std dev = 0.098, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1349162062852945;  // std dev = 0.049, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( phenotype(A, E), phenotype(D, F) )
%   | | | then return 0.048156215340577097;  // std dev = 2.667, 44.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | | | else return 0.13851889790602284;  // std dev = 2.514, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.7401919213324014;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, H), enzyme(A, I) )
%   | | | then return 0.18287841937196733;  // std dev = 2.683, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | | else return 0.12419855401244859;  // std dev = 5.546, 153.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=44 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5899046887071734;  // std dev = 0.061, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( enzyme(D, F), interaction(A, G) )
%   | | then if ( interaction(G, A), phenotype(D, H) )
%   | | | then return -0.1267761780181103;  // std dev = 0.943, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 0.08651954292336882;  // std dev = 1.970, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else if ( enzyme(E, I), location(D, J) )
%   | | | then return 0.1709145618059439;  // std dev = 5.175, 119.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=42 */
%   | | | else return 0.06521162597627685;  // std dev = 3.687, 76.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=19 */
%   | else if ( interaction(A, K), complex(K, L) )
%   | | then if ( interaction(K, M) )
%   | | | then return 0.2011421960558332;  // std dev = 1.099, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.015947080560587773;  // std dev = 0.919, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.48604386033161945;  // std dev = 0.813, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5722897227168405;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7253427973861573;  // std dev = 0.126, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2079724416145571;  // std dev = 0.031, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( location(A, E), interaction(F, A) )
%   | then if ( interaction(G, F), enzyme(G, H) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.6425359389424367;  // std dev = 0.426, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.07572494371130668;  // std dev = 4.199, 96.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=27 */
%   | | else if ( interaction(I, F) )
%   | | | then return 0.24920073665121786;  // std dev = 2.605, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return 0.0676742916632928;  // std dev = 1.150, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(A, J), interaction(J, A) )
%   | | then return 0.08458856873358754;  // std dev = 0.926, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.024262741384571275;  // std dev = 1.245, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.026948576058756488;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.6167730090183553;  // std dev = 2.162, 79.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=75 */
%   | | | else return 0.1628190360872506;  // std dev = 1.159, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(G, A) )
%   | | | then return -0.18414678886148478;  // std dev = 0.224, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0.2976406686477889;  // std dev = 1.138, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else return -0.19298753450766504;  // std dev = 0.037, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then return 0.17077061536228144;  // std dev = 0.854, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.16473236352958617;  // std dev = 0.122, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then return -0.08758637856011361;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return -0.10491807543162497;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.23538260053761612;  // std dev = 0.236, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return -0.007888207007839695;  // std dev = 0.313, 69.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=16 */
%   else if ( interaction(F, A), location(F, G) )
%   | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.4741408313746006;  // std dev = 0.484, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.022313916746310197;  // std dev = 0.718, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, F) )
%   | | | then return -0.14479638722216784;  // std dev = 0.074, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.08769437505662772;  // std dev = 4.277, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return 0.193861199046357;  // std dev = 0.704, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.03212902978668579;  // std dev = 1.034, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.03086385362293803;  // std dev = 1.161, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.04374921779763956;  // std dev = 0.282, 101.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=35 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( phenotype(A, F), location(D, G) )
%   | | then if ( enzyme(A, H), interaction(A, I) )
%   | | | then return 0.2080938160027055;  // std dev = 0.980, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.0042207729713936975;  // std dev = 1.720, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.0658658532733863;  // std dev = 1.447, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.18713149354855166;  // std dev = 1.965, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | else if ( interaction(A, L), location(A, M) )
%   | | then if ( phenotype(L, N) )
%   | | | then return 0.020519409643125864;  // std dev = 1.103, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.04117580184728124;  // std dev = 1.101, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( enzyme(A, P) )
%   | | | then return 0.027786658238572518;  // std dev = 1.452, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.0949922916884923;  // std dev = 2.552, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( complex(E, F), complex(D, G) )
%   | | | then return 0.2819225381626412;  // std dev = 1.633, 33.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=28 */
%   | | | else return 0.477535873124895;  // std dev = 1.992, 54.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=50 */
%   | | else if ( interaction(D, H), interaction(A, H) )
%   | | | then return 0.3966458419714789;  // std dev = 0.687, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.2025978246541841;  // std dev = 0.277, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then return -0.13206363640613822;  // std dev = 0.031, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.1697283532300062;  // std dev = 0.143, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.21540691863372638;  // std dev = 0.149, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( interaction(A, A) )
%   | then return 0.021306457049427057;  // std dev = 0.331, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.32401088101721104;  // std dev = 1.109, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( complex(A, E), complex(D, F) )
%   | then return -0.0018355005355124364;  // std dev = 0.246, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | else if ( phenotype(D, G), interaction(A, H) )
%   | | then if ( complex(D, I), complex(H, J) )
%   | | | then return 0.09016373783830603;  // std dev = 0.815, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.01323755561385669;  // std dev = 0.988, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( phenotype(D, K) )
%   | | | then return 0.18010534961127078;  // std dev = 1.152, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.09100070313974631;  // std dev = 1.266, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   else if ( interaction(A, L), phenotype(L, M) )
%   | then return -0.014571703223391796;  // std dev = 0.240, 83.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=23 */
%   | else if ( location(A, N) )
%   | | then if ( location(P, N), recursion_proteinclass(P, B) )
%   | | | then return 0.1958044981194741;  // std dev = 2.469, 50.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=32 */
%   | | | else return -0.1718947268384048;  // std dev = 0.231, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return 0.18516532236790711;  // std dev = 0.923, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( phenotype(A, D), complex(A, E) )
%   | then return 0.011468067538130644;  // std dev = 0.229, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | else if ( complex(C, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return -0.05129675198803228;  // std dev = 1.328, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return 0.019809853167699225;  // std dev = 1.471, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | else if ( interaction(H, C), recursion_proteinclass(H, B) )
%   | | | then return 0.39624764522727096;  // std dev = 0.463, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.20740981982338902;  // std dev = 0.276, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( enzyme(A, I), complex(A, J) )
%   | then return -0.02061139598496305;  // std dev = 0.251, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.26343277358679656;  // std dev = 2.178, 55.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=43 */
%   | | | else return -0.15676158239186272;  // std dev = 0.281, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else return 0.29733164620593794;  // std dev = 0.750, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
Inference time using transfer learning 120.47071051597595
Refined model CLL: -0.198482


******************************************
Best model found
******************************************
Results 

CLL : -0.212897 

AUC ROC : 0.991408 

AUC PR : 0.410655 

Precision : 0.304878 

Recall : 0.886525 

F1 : 0.453721 

Total Learning Time : 21.630184412002563 

Total Inference Time : 14.89198637008667 

Total revision time: 39.591137170791626
Best scored revision CLL: -0.198482


Results 

CLL : -0.212897 

AUC ROC : 0.991408 

AUC PR : 0.410655 

Precision : 0.304878 

Recall : 0.886525 

F1 : 0.453721 

Total Learning Time : 39.608076095581055 

Total Inference Time : 14.89198637008667 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.4566679000854492
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18416774387694232;  // std dev = 8.372, 319.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.18088621135721292;  // std dev = 5.829, 150.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=52 */
%   | | | else return 0.17859040561769857;  // std dev = 5.839, 151.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13577913539456035;  // std dev = 5.249, 125.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=41 */
%   | | | else return 0.16383454405400857;  // std dev = 6.370, 177.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.13935327845230214;  // std dev = 4.329, 82.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=29 */
%   | | | else return 0.10529944361131083;  // std dev = 7.124, 232.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11072421357827954;  // std dev = 8.235, 299.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07781066879841916;  // std dev = 8.313, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.727476196446624;  // std dev = 0.021, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.27239361890427477;  // std dev = 0.029, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.10361679465718608;  // std dev = 3.785, 61.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=23 */
%   | | | else return 0.04198410803589821;  // std dev = 5.235, 127.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.060420406315895854;  // std dev = 4.024, 114.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=41 */
%   | | | else return 0.04883900646616198;  // std dev = 6.474, 188.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01006016801027473;  // std dev = 7.810, 337.000 (wgt'ed) examples reached here.  /* #neg=233 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.024742210431112233;  // std dev = 7.716, 316.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=104 */
Inference time using transfer learning 3.378772497177124
Parameter learned model CLL:-0.331629 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.372, 215, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.829, 98, 52], 'false,false,false,false': [5.839, 99, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.249, 84, 41], 'false,false,false,false': [6.37, 114, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.329, 53, 29], 'false,false,false,false': [7.124, 157, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.235, 195, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.313, 206, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.021, 0, 41], 'true,false': [0.029, 74, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.785, 38, 23], 'false,false,false,false': [5.235, 87, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.024, 73, 41], 'false,false,false,false': [6.474, 125, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.81, 233, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.716, 212, 104]}]
{'': [nan, 0.2197305451007773], 'false': [nan, 0.21973054510077591], 'false,false': [nan, 0.2197305451007773], 'false,false,false': [nan, 0.21973054510077591]}
{'': [nan, 0.22613436937781714], 'false': [nan, 0.22613436937782086], 'false,false': [nan, 0.22613436937781714], 'false,false,false': [0.22648888888888835, 0.2257795710714437]}
{'': [nan, 0.2257779773153624], 'false': [nan, 0.2257779773153624], 'false,false': [nan, 0.2257779773153623], 'false,false,false': [0.2204133811398242, 0.22924074504782593]}
{'': [nan, 0.22153068828567996], 'false': [nan, 0.22153068828567996], 'false,false': [nan, 0.22153068828567807], 'false,false,false': [0.228584176085663, 0.21873480307973972]}
{'': [nan, 0.22682906463811692], 'false': [nan, 0.22682906463811692], 'false,false': [nan, 0.22682906463811783], 'false,false,false': [nan, 0.22682906463811783]}
{'': [nan, 0.2228971474954526], 'false': [nan, 0.2228971474954526], 'false,false': [nan, 0.22289714749545245], 'false,false,false': [nan, 0.22289714749545206]}
{'': [0.22936517541960932, 0.22279773282470694], 'true': [1.067669553114431e-05, 1.104739545110856e-05], 'false': [nan, 0.22279773282470694], 'false,false': [nan, 0.22279773282470694], 'false,false,false': [0.234883095941951, 0.21576043152086358], 'true,true': [nan, 1.067669553114431e-05], 'true,true,false': [nan, 1.067669553114431e-05]}
{'': [nan, 0.1924109866451093], 'false': [nan, 0.1924109866451093], 'false,false': [nan, 0.19241098664510964], 'false,false,false': [0.14202425307570857, 0.22291401282525547]}
{'': [nan, 0.18098653933287476], 'false': [nan, 0.18098653933287465], 'false,false': [nan, 0.18098653933287465], 'false,false,false': [nan, 0.18098653933287465]}
{'': [nan, 0.18839971175607687], 'false': [nan, 0.18839971175607687], 'false,false': [nan, 0.18839971175607664], 'false,false,false': [nan, 0.18839971175607664]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 14.796642303466797
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.074365151315728;  // std dev = 4.337, 111.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=24 */
%   | | | else return 0.21257931484634898;  // std dev = 6.013, 158.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=56 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.7281617657337169;  // std dev = 0.100, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( phenotype(C, E) )
%   | | then return 0.14032546066558466;  // std dev = 1.061, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.754226826302005;  // std dev = 0.085, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), location(A, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.6830876989850196;  // std dev = 0.336, 29.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=25 */
%   | | else return -0.03773046951036948;  // std dev = 0.319, 107.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=13 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.6113374025536362;  // std dev = 2.781, 45.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=35 */
%   | | | else return -0.1664838847341027;  // std dev = 0.053, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.06360726886380273;  // std dev = 2.484, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | | else return 0.2389330492559773;  // std dev = 1.900, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), complex(A, E) )
%   | then if ( complex(C, E) )
%   | | then return 0.5569240671428761;  // std dev = 0.013, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.15417561136877336;  // std dev = 0.836, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.6233415779593768;  // std dev = 0.078, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, F), location(A, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(F, A), interaction(H, F) )
%   | | | then return 0.6323164875075905;  // std dev = 1.350, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return -0.02440985033786687;  // std dev = 0.850, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.03456192527494912;  // std dev = 0.312, 111.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.6079751967691326;  // std dev = 0.150, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.08606072722667739;  // std dev = 2.573, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | | else return 0.17499895822126227;  // std dev = 4.511, 105.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=39 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.46604752246566744;  // std dev = 0.073, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(D, F) )
%   | | | then return 0.530573199606686;  // std dev = 0.877, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return -0.20596719581534312;  // std dev = 0.738, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.14763004212472836;  // std dev = 0.095, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return 0.05466594253338655;  // std dev = 2.819, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( phenotype(G, I) )
%   | | | then return 0.07491348659497402;  // std dev = 2.943, 52.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | | | else return -0.14111522657892314;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.2321865504384561;  // std dev = 2.792, 37.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | | else return 0.10888564369338324;  // std dev = 3.424, 64.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=21 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.10245394484129786;  // std dev = 0.904, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.371980416250013;  // std dev = 0.071, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( complex(E, F), complex(A, F) )
%   | | then return -0.11537703817114063;  // std dev = 0.090, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.004600411017230185;  // std dev = 1.672, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | | | else return 0.10676335831453304;  // std dev = 1.913, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.13017050247267006;  // std dev = 0.426, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.47170763056658305;  // std dev = 0.228, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return -0.004477633992082004;  // std dev = 2.106, 45.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=8 */
%   | | | else return 0.11420095812499889;  // std dev = 5.381, 161.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=55 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.3107564927931667;  // std dev = 0.072, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.030169705586501866;  // std dev = 0.949, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.10826682189353347;  // std dev = 0.052, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( complex(A, F), complex(E, G) )
%   | | | then return 0.06409771286304491;  // std dev = 1.509, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return -0.025795843143277885;  // std dev = 1.703, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.659610885455276;  // std dev = 0.657, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return -0.21043982487836319;  // std dev = 0.405, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.31045259028829125;  // std dev = 0.147, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.06272468948878734;  // std dev = 4.799, 135.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=39 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4153495606944432;  // std dev = 0.253, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else return -0.15898072416008935;  // std dev = 0.091, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(G, E), enzyme(G, F) )
%   | | then return -0.008133907819583227;  // std dev = 0.314, 55.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   | | else if ( location(A, H), phenotype(E, I) )
%   | | | then return 0.06379686522705168;  // std dev = 1.761, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return -0.007985103608016712;  // std dev = 1.402, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.3335337122446911;  // std dev = 0.828, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.20804180729809035;  // std dev = 0.030, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(L, A), location(A, M) )
%   | | | then return 0.10555363106812525;  // std dev = 3.565, 69.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=27 */
%   | | | else return -0.0012069519744092798;  // std dev = 1.526, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then if ( phenotype(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), enzyme(F, D) )
%   | | then return 0.24273673233293963;  // std dev = 0.447, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.49550052401400085;  // std dev = 0.108, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.1765463614775252;  // std dev = 0.112, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(H, I), phenotype(A, I) )
%   | | | then return 0.3684205296780126;  // std dev = 2.545, 51.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=43 */
%   | | | else return 0.11482540212946414;  // std dev = 2.898, 64.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=34 */
%   | | else return -0.19052274484851411;  // std dev = 0.066, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(K, A) )
%   | | | then return -0.16122488384802458;  // std dev = 0.480, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.20358252652267317;  // std dev = 0.984, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.4178550526908778;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1602814702828581;  // std dev = 0.056, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G), phenotype(F, H) )
%   | | | then return 0.14128779277699033;  // std dev = 0.351, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3458939956806826;  // std dev = 0.079, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, I), enzyme(I, D) )
%   | | | then return -0.11533853659875648;  // std dev = 0.072, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.06016544583777407;  // std dev = 1.943, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | else if ( interaction(A, A) )
%   | | then if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.15605537368376265;  // std dev = 0.307, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0725262680573817;  // std dev = 0.029, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.02651853863187824;  // std dev = 3.571, 129.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=40 */
%   | | | else return -0.021551901447872092;  // std dev = 3.069, 87.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=21 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.14029086017377276;  // std dev = 0.050, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then if ( interaction(A, E), enzyme(D, G) )
%   | | | then return 0.037856057803121096;  // std dev = 0.959, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return -0.0419148545972487;  // std dev = 2.262, 90.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=21 */
%   | | else if ( interaction(D, E) )
%   | | | then return 0.03858562449919526;  // std dev = 3.850, 137.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=46 */
%   | | | else return -0.04119329738313464;  // std dev = 1.324, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5302337633541805;  // std dev = 0.247, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1490184419447795;  // std dev = 0.072, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(J, A), location(A, K) )
%   | | | then return 0.15593858604477379;  // std dev = 0.837, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.02425511837564555;  // std dev = 1.213, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
Inference time using transfer learning 29.625131368637085
Refined model CLL: -0.214134


******************************************
Best model found
******************************************
Results 

CLL : -0.201642 

AUC ROC : 0.969059 

AUC PR : 0.357697 

Precision : 0.354167 

Recall : 0.513208 

F1 : 0.419106 

Total Learning Time : 14.796642303466797 

Total Inference Time : 13.81342077255249 

Total revision time: 32.19596242904663
Best scored revision CLL: -0.214134


Results 

CLL : -0.201642 

AUC ROC : 0.969059 

AUC PR : 0.357697 

Precision : 0.354167 

Recall : 0.513208 

F1 : 0.419106 

Total Learning Time : 32.21290135383606 

Total Inference Time : 13.81342077255249 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.2365846633911133
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1775933795439568;  // std dev = 7.913, 288.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.20738953853772862;  // std dev = 5.658, 137.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=51 */
%   | | | else return 0.15796141048439225;  // std dev = 5.269, 127.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1633460263792738;  // std dev = 5.321, 124.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=44 */
%   | | | else return 0.11169677969387759;  // std dev = 5.784, 158.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11969425799868087;  // std dev = 4.136, 76.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=26 */
%   | | | else return 0.12604147503541;  // std dev = 6.615, 196.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0943936219430496;  // std dev = 7.849, 279.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06500410354909818;  // std dev = 7.922, 289.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7291077097641206;  // std dev = 0.028, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.27081898967079326;  // std dev = 0.037, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.059234982996846264;  // std dev = 4.109, 77.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=25 */
%   | | | else return 0.024572673910374654;  // std dev = 4.068, 82.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.02795735644374409;  // std dev = 4.309, 139.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=44 */
%   | | | else return 0.06186370141500172;  // std dev = 5.667, 145.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03353436430154406;  // std dev = 7.154, 283.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05107681513581894;  // std dev = 6.984, 264.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=92 */
Inference time using transfer learning 3.6588733196258545
Parameter learned model CLL:-0.322488 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.913, 196, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.658, 86, 51], 'false,false,false,false': [5.269, 86, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.321, 80, 44], 'false,false,false,false': [5.784, 110, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.136, 50, 26], 'false,false,false,false': [6.615, 130, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.849, 187, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.922, 197, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.028, 0, 44], 'true,false': [0.037, 79, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.109, 52, 25], 'false,false,false,false': [4.068, 59, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.309, 95, 44], 'false,false,false,false': [5.667, 97, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.154, 191, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.984, 172, 92]}]
{'': [nan, 0.2173996913580259], 'false': [nan, 0.21739969135802562], 'false,false': [nan, 0.2173996913580259], 'false,false,false': [nan, 0.21739969135802562]}
{'': [nan, 0.22704315886134144], 'false': [nan, 0.22704315886134138], 'false,false': [nan, 0.22704315886134144], 'false,false,false': [0.23368320102296417, 0.21861243722487517]}
{'': [nan, 0.21969269326017413], 'false': [nan, 0.21969269326017413], 'false,false': [nan, 0.2196926932601733], 'false,false,false': [0.22836130114737554, 0.2117164751249652]}
{'': [nan, 0.22376708407826776], 'false': [nan, 0.22376708407826776], 'false,false': [nan, 0.22376708407826681], 'false,false,false': [0.22506925207756154, 0.2232509050852068]}
{'': [nan, 0.22078994311303626], 'false': [nan, 0.22078994311303626], 'false,false': [nan, 0.22078994311303626], 'false,false,false': [nan, 0.22078994311303626]}
{'': [nan, 0.2171412370178824], 'false': [nan, 0.2171412370178824], 'false,false': [nan, 0.21714123701788224], 'false,false,false': [nan, 0.21714123701788304]}
{'': [0.22974124432748833, 0.2105635773649995], 'true': [1.74370162226787e-05, 1.7544833878742566e-05], 'false': [nan, 0.2105635773649995], 'false,false': [nan, 0.2105635773649995], 'false,false,false': [0.21926125822229742, 0.20181439619274297], 'true,true': [nan, 1.74370162226787e-05], 'true,true,false': [nan, 1.74370162226787e-05]}
{'': [nan, 0.1787302533970074], 'false': [nan, 0.1787302533970074], 'false,false': [nan, 0.17873025339700704], 'false,false,false': [0.1335486938195696, 0.22147955517110074]}
{'': [nan, 0.1808368533363416], 'false': [nan, 0.18083685333634356], 'false,false': [nan, 0.18083685333634356], 'false,false,false': [nan, 0.18083685333634356]}
{'': [nan, 0.18474388272553507], 'false': [nan, 0.18474388272553507], 'false,false': [nan, 0.18474388272553513], 'false,false,false': [nan, 0.18474388272553513]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 5.680388689041138
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( enzyme(A, E), enzyme(C, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( complex(A, F), enzyme(C, G) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.17522210583121967;  // std dev = 4.214, 82.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=26 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), interaction(J, A) )
%   | | | then return -0.00851773156715447;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.10520775862892381;  // std dev = 5.623, 170.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=42 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.7660431525664718;  // std dev = 0.161, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(C, A) )
%   | | then return -0.13490477895553113;  // std dev = 0.027, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( complex(C, F), complex(A, F) )
%   | | | then return 0.5057563644437268;  // std dev = 1.164, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.23722722428737503;  // std dev = 2.663, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   else if ( complex(A, G), interaction(H, A) )
%   | then return 0.1383842787944804;  // std dev = 0.449, 80.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=25 */
%   | else if ( interaction(A, I), location(A, J) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.7581332768757186;  // std dev = 0.095, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.13584982243189134;  // std dev = 3.469, 58.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.19548013330363084;  // std dev = 2.830, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | | else return 0.27645402699408;  // std dev = 2.456, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B), interaction(D, A) )
%   | then return 0.6397020639161001;  // std dev = 0.166, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(E, A), phenotype(A, F) )
%   | | then return -0.0916842162269903;  // std dev = 0.257, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( phenotype(A, G), enzyme(A, H) )
%   | | | then return -0.025005970281480973;  // std dev = 1.346, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.08805324979981287;  // std dev = 2.729, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.6416915910973395;  // std dev = 0.058, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(J, A), complex(A, K) )
%   | | then if ( interaction(L, J), interaction(M, L) )
%   | | | then return 0.06275135419297298;  // std dev = 3.522, 69.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=17 */
%   | | | else return 0.39726588604385016;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(A, N), recursion_proteinclass(N, B) )
%   | | | then return 0.6190586044736334;  // std dev = 0.113, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1665376268556498;  // std dev = 4.942, 107.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=38 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, A), complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.48925409383264373;  // std dev = 0.126, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.15845801354313147;  // std dev = 0.117, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then return 0.4015063665625187;  // std dev = 0.055, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5279299073932272;  // std dev = 0.033, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(J, H), complex(J, K) )
%   | | | then return 0.22865011093765386;  // std dev = 3.264, 43.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=19 */
%   | | | else return 0.0860103147678575;  // std dev = 2.655, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.04671905318564997;  // std dev = 3.879, 84.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=22 */
%   | | | else return 0.1679671872400522;  // std dev = 3.942, 69.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=26 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.41195923413341556;  // std dev = 0.109, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( enzyme(D, G) )
%   | | | then return 0.03978063014206555;  // std dev = 0.752, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.13111750839329586;  // std dev = 0.936, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.4015806403113891;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.04721529093716261;  // std dev = 4.301, 94.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=26 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( complex(H, I) )
%   | | | then return 0.11756995025881649;  // std dev = 2.260, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.3577549085091766;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.3939193681007753;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0787238142341645;  // std dev = 4.663, 102.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=32 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(E, A) )
%   | then return 0.22438870443818612;  // std dev = 0.047, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.37509745851403065;  // std dev = 0.087, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( enzyme(A, G), phenotype(A, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12659127729218933;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.06516200437179659;  // std dev = 1.041, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( complex(F, I) )
%   | | | then return -0.11334197063365332;  // std dev = 0.943, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return -0.18398294411943658;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.307388698275539;  // std dev = 0.028, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(A, K), complex(A, L) )
%   | | | then return -0.01033424438231655;  // std dev = 3.465, 68.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=16 */
%   | | | else return 0.05955562099523963;  // std dev = 6.041, 172.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=53 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.591937240574654;  // std dev = 0.234, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.22860140375729074;  // std dev = 0.057, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( enzyme(E, F) )
%   | | then return -0.09043630390354421;  // std dev = 0.330, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5701908640243268;  // std dev = 0.417, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.24188038491411412;  // std dev = 0.094, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7297335070301975;  // std dev = 0.078, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.2591261224127849;  // std dev = 0.115, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( interaction(J, A), phenotype(A, K) )
%   | | | then return -0.021898353382366984;  // std dev = 1.327, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.09321513304609262;  // std dev = 3.947, 70.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=26 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.13411465312924517;  // std dev = 0.080, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(E, A), enzyme(E, D) )
%   | | then if ( interaction(C, F) )
%   | | | then return -0.14739758202663722;  // std dev = 0.343, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.17970540741884697;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.023878067980416477;  // std dev = 1.494, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.07151567565991583;  // std dev = 1.536, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.17318917159088812;  // std dev = 0.035, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.2771559636506795;  // std dev = 0.117, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, J), location(A, K) )
%   | | | then return 0.03713494423759495;  // std dev = 3.831, 86.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=26 */
%   | | | else return 0.08208851541581628;  // std dev = 4.354, 107.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=38 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.013167004023840592;  // std dev = 0.344, 134.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=44 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(D, D) )
%   | | then if ( complex(E, F) )
%   | | | then return 0.03591812990345476;  // std dev = 1.331, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.06967595591651789;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( interaction(E, G), interaction(H, A) )
%   | | | then return 0.02621807843919418;  // std dev = 0.595, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.26931581682738254;  // std dev = 2.272, 23.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5617121431939782;  // std dev = 0.420, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.24093160934760763;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.32276859883553244;  // std dev = 0.673, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.008445772246172571;  // std dev = 3.224, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(E, A), interaction(C, C) )
%   | then return -0.02914020013318162;  // std dev = 0.264, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | else return 0.10676885442858813;  // std dev = 0.401, 59.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=27 */
%   else if ( interaction(A, F), phenotype(F, G) )
%   | then if ( interaction(F, H), phenotype(H, G) )
%   | | then return -0.08492632136330266;  // std dev = 0.318, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(I, F), recursion_proteinclass(I, B) )
%   | | | then return 0.561540996826752;  // std dev = 0.439, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.32979650539226807;  // std dev = 0.133, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( phenotype(A, J), complex(A, K) )
%   | | then if ( complex(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.5647217186678511;  // std dev = 0.476, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.22307016798908605;  // std dev = 0.164, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.03152060158264346;  // std dev = 2.592, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | | else return -0.03102471670259746;  // std dev = 3.291, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
Inference time using transfer learning 7.7102086544036865
Refined model CLL: -0.278793


******************************************
Best model found
******************************************
Results 

CLL : -0.275695 

AUC ROC : 0.934748 

AUC PR : 0.229862 

Precision : 0.2569 

Recall : 0.436823 

F1 : 0.323529 

Total Learning Time : 5.680388689041138 

Total Inference Time : 2.48470401763916 

Total revision time: 11.296974182128906
Best scored revision CLL: -0.278793


Results 

CLL : -0.275695 

AUC ROC : 0.934748 

AUC PR : 0.229862 

Precision : 0.2569 

Recall : 0.436823 

F1 : 0.323529 

Total Learning Time : 11.313913106918335 

Total Inference Time : 2.48470401763916 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.1477913856506348
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18267723698630514;  // std dev = 7.622, 265.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16990944605731892;  // std dev = 5.878, 155.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=52 */
%   | | | else return 0.09799146656244673;  // std dev = 5.004, 129.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1964285051439686;  // std dev = 4.156, 73.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=28 */
%   | | | else return 0.12976609395205863;  // std dev = 6.300, 184.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.15747029025776368;  // std dev = 3.432, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
%   | | | else return 0.1410429626002631;  // std dev = 6.608, 193.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11922149224525208;  // std dev = 7.458, 242.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09079176581184219;  // std dev = 7.489, 247.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7133137238912443;  // std dev = 0.044, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.28617370004329745;  // std dev = 0.066, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.07180791209923686;  // std dev = 4.641, 95.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=33 */
%   | | | else return 0.11735008947350761;  // std dev = 3.941, 66.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.024880298105931644;  // std dev = 3.391, 85.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=28 */
%   | | | else return 0.04953526295007496;  // std dev = 6.199, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01577778613608992;  // std dev = 7.160, 272.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03242110088015628;  // std dev = 7.050, 254.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=86 */
Inference time using transfer learning 3.6403799057006836
Parameter learned model CLL:-0.345975 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.622, 179, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.878, 103, 52], 'false,false,false,false': [5.004, 95, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.156, 45, 28], 'false,false,false,false': [6.3, 126, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.432, 31, 19], 'false,false,false,false': [6.608, 126, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.458, 156, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.489, 161, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.044, 0, 28], 'true,false': [0.066, 60, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.641, 62, 33], 'false,false,false,false': [3.941, 41, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.391, 57, 28], 'false,false,false,false': [6.199, 114, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.16, 186, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.05, 168, 86]}]
{'': [nan, 0.21920968316126813], 'false': [nan, 0.219209683161268], 'false,false': [nan, 0.21920968316126813], 'false,false,false': [nan, 0.219209683161268]}
{'': [nan, 0.21111882562983578], 'false': [nan, 0.21111882562983542], 'false,false': [nan, 0.21111882562983578], 'false,false,false': [0.2229344432882416, 0.19409891232498017]}
{'': [nan, 0.2225572797136648], 'false': [nan, 0.2225572797136648], 'false,false': [nan, 0.22255727971366554], 'false,false,false': [0.23663364943859405, 0.21571036444639238]}
{'': [nan, 0.2282162431991537], 'false': [nan, 0.2282162431991537], 'false,false': [nan, 0.22821624319915343], 'false,false,false': [0.2356000000000002, 0.22624782668521987]}
{'': [nan, 0.2298322348472146], 'false': [nan, 0.2298322348472146], 'false,false': [nan, 0.22983223484721518], 'false,false,false': [nan, 0.22983223484721518]}
{'': [nan, 0.2270724196729064], 'false': [nan, 0.2270724196729064], 'false,false': [nan, 0.22707241967290565], 'false,false,false': [nan, 0.2270724196729051]}
{'': [0.21679206642770288, 0.2307324142828019], 'false': [nan, 0.2307324142828019], 'false,false': [nan, 0.2307324142828019], 'false,false,false': [0.22670360110803284, 0.23530762167125743], 'true': [7.01993001758058e-05, 7.32207437390553e-05], 'true,true': [nan, 7.01993001758058e-05], 'true,true,false': [nan, 7.01993001758058e-05]}
{'': [nan, 0.19439462569503843], 'false': [nan, 0.19439462569503843], 'false,false': [nan, 0.19439462569503874], 'false,false,false': [0.1352447614531191, 0.22342461765421667]}
{'': [nan, 0.1884772924579883], 'false': [nan, 0.18847729245798792], 'false,false': [nan, 0.18847729245798792], 'false,false,false': [nan, 0.18847729245798792]}
{'': [nan, 0.19567983219834134], 'false': [nan, 0.19567983219834134], 'false,false': [nan, 0.19567983219834173], 'false,false,false': [nan, 0.19567983219834173]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 10.376649856567383
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( interaction(A, C), enzyme(A, E) )
%   | then if ( location(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.28672036367094084;  // std dev = 0.495, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(G, C), recursion_proteinclass(G, B) )
%   | | then return 0.7405018762759829;  // std dev = 0.322, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11211718906776555;  // std dev = 5.984, 189.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=48 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(J, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.10814893509951236;  // std dev = 2.121, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return 0.21109011157010057;  // std dev = 1.970, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.7719026875281666;  // std dev = 0.160, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.2874897721347442;  // std dev = 1.018, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, A) )
%   | then return -0.16748626379033796;  // std dev = 0.097, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F), interaction(A, F) )
%   | | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7394880778239605;  // std dev = 0.090, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.05192239536212919;  // std dev = 3.051, 58.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=12 */
%   | | | else return 0.13351033405788648;  // std dev = 6.004, 176.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5878431617549361;  // std dev = 0.172, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, A) )
%   | then return -0.13486510851212444;  // std dev = 0.035, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, D), complex(D, E) )
%   | | then if ( complex(A, E), location(A, F) )
%   | | | then return -0.02908465505645697;  // std dev = 1.753, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | | else return 0.11776527474887934;  // std dev = 2.983, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.557181785517966;  // std dev = 0.928, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.13041617542531078;  // std dev = 5.706, 156.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.5029893598815013;  // std dev = 0.226, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else if ( interaction(A, D), location(A, E) )
%   | | then return -0.09293660271781903;  // std dev = 0.198, 44.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=2 */
%   | | else return 0.07171417718609202;  // std dev = 0.439, 126.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=35 */
%   else if ( enzyme(A, F), interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.8083005805674057;  // std dev = 0.040, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.19169941943259425;  // std dev = 0.040, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.30239948834672736;  // std dev = 0.986, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.06827884617221046;  // std dev = 2.259, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.4136112838883525;  // std dev = 1.086, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.17406507305198865;  // std dev = 2.637, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4111922783310363;  // std dev = 0.126, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), enzyme(A, G) )
%   | | then if ( phenotype(A, H), phenotype(D, H) )
%   | | | then return 0.30407702438048967;  // std dev = 1.087, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.016153694033858905;  // std dev = 1.900, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.4268413740220547;  // std dev = 0.062, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.04695188661029443;  // std dev = 2.462, 59.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=9 */
%   | else if ( interaction(I, A), interaction(A, I) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.06368042436324857;  // std dev = 0.899, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.1101359936135786;  // std dev = 0.029, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.16730111488411706;  // std dev = 2.402, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | | else return 0.09420684158266915;  // std dev = 5.004, 116.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=36 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( complex(C, D), enzyme(A, E) )
%   | then return -0.11677278869667086;  // std dev = 0.200, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.24011668487848206;  // std dev = 0.084, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.10237732202074828;  // std dev = 0.045, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0.047597133857572874;  // std dev = 1.359, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.770060784494855;  // std dev = 0.056, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.23338998459902083;  // std dev = 0.076, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.32927890755382055;  // std dev = 0.052, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.09334261806730167;  // std dev = 2.888, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | | else return 0.03133636254851692;  // std dev = 5.457, 168.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=45 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.23241108285986406;  // std dev = 0.067, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.7112160975432257;  // std dev = 0.122, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.18308576954412373;  // std dev = 0.059, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then return 0.23234857554493954;  // std dev = 0.124, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.4961919401063079;  // std dev = 0.105, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( location(A, I), location(H, I) )
%   | | | then return 0.007498792411643748;  // std dev = 4.522, 128.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=32 */
%   | | | else return 0.11117921879514053;  // std dev = 2.288, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.1559670838601626;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.46561188219694705;  // std dev = 0.756, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then return 0.5542038554198156;  // std dev = 0.117, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.19659995226198762;  // std dev = 0.043, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( phenotype(F, G), interaction(H, F) )
%   | | then if ( phenotype(H, I) )
%   | | | then return 0.22799056541932136;  // std dev = 0.197, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.10258541808926565;  // std dev = 0.681, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.23510875802394962;  // std dev = 0.100, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(J, A), interaction(A, J) )
%   | | then if ( complex(A, K) )
%   | | | then return -0.09541023206622319;  // std dev = 0.073, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.01679067328674372;  // std dev = 1.347, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( phenotype(A, L), interaction(A, M) )
%   | | | then return 0.1020897366659067;  // std dev = 2.834, 43.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
%   | | | else return 0.02492761356715858;  // std dev = 4.878, 142.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=41 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.29094080631179087;  // std dev = 0.190, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( interaction(A, F), location(F, D) )
%   | | then return -0.0497290965789568;  // std dev = 0.319, 77.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=15 */
%   | | else if ( interaction(G, C), complex(G, H) )
%   | | | then return 0.13766744157568253;  // std dev = 2.891, 46.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=19 */
%   | | | else return 0.034160760455437617;  // std dev = 3.122, 54.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=17 */
%   else if ( interaction(A, I), phenotype(I, J) )
%   | then if ( interaction(K, A) )
%   | | then return -0.06894920119745035;  // std dev = 0.368, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.008942118619384935;  // std dev = 0.351, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | else if ( phenotype(A, L) )
%   | | then return -0.02202839720522636;  // std dev = 0.904, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return -0.25684070428696676;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.16059271181131582;  // std dev = 1.249, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.16733552091707374;  // std dev = 0.333, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.6047053993065483;  // std dev = 1.164, 54.000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | else if ( interaction(F, A) )
%   | | | then return -0.19208019801825918;  // std dev = 0.316, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0.3949320900364617;  // std dev = 1.348, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | else if ( interaction(A, G), complex(A, H) )
%   | | then if ( complex(G, I) )
%   | | | then return -0.12650939906570227;  // std dev = 0.168, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.22980367277544586;  // std dev = 0.098, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.2296366446842911;  // std dev = 0.423, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( interaction(J, A) )
%   | then return -0.08433529392899529;  // std dev = 0.367, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else return -0.14648503568228;  // std dev = 1.069, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
Inference time using transfer learning 65.24381995201111
Refined model CLL: -0.223163


******************************************
Best model found
******************************************
Results 

CLL : -0.227855 

AUC ROC : 0.982349 

AUC PR : 0.229334 

Precision : 0.192922 

Recall : 0.597173 

F1 : 0.291631 

Total Learning Time : 10.376649856567383 

Total Inference Time : 7.235340356826782 

Total revision time: 20.343814849853516
Best scored revision CLL: -0.223163


Results 

CLL : -0.227855 

AUC ROC : 0.982349 

AUC PR : 0.229334 

Precision : 0.192922 

Recall : 0.597173 

F1 : 0.291631 

Total Learning Time : 20.360753774642944 

Total Inference Time : 7.235340356826782 

Run: 3

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.3078603744506836
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18521660427244457;  // std dev = 7.651, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.2007411059473411;  // std dev = 5.279, 120.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=44 */
%   | | | else return 0.13903897828776632;  // std dev = 5.467, 141.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.09783156894468319;  // std dev = 4.987, 121.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=35 */
%   | | | else return 0.14962661508368214;  // std dev = 5.857, 153.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.070240719231791;  // std dev = 3.790, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
%   | | | else return 0.12668463492069623;  // std dev = 6.659, 198.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1432442504101754;  // std dev = 7.381, 232.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07293086098175906;  // std dev = 7.627, 264.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7373125187443956;  // std dev = 0.003, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.26272325089937004;  // std dev = 0.004, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.01165532702625162;  // std dev = 4.110, 81.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=24 */
%   | | | else return 0.06108754064793934;  // std dev = 4.320, 84.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03806429260314324;  // std dev = 3.842, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
%   | | | else return 0.03529693807061719;  // std dev = 5.942, 162.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.039020903287987324;  // std dev = 7.019, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03362577124512193;  // std dev = 6.994, 260.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=87 */
Inference time using transfer learning 3.6418161392211914
Parameter learned model CLL:-0.332958 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.651, 179, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.279, 76, 44], 'false,false,false,false': [5.467, 98, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.987, 86, 35], 'false,false,false,false': [5.857, 101, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.79, 51, 20], 'false,false,false,false': [6.659, 131, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.381, 145, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.627, 177, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.003, 0, 35], 'true,false': [0.004, 61, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.11, 57, 24], 'false,false,false,false': [4.32, 56, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.842, 74, 35], 'false,false,false,false': [5.942, 110, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.019, 174, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.994, 173, 87]}]
{'': [nan, 0.22009440895471846], 'false': [nan, 0.2200944089547185], 'false,false': [nan, 0.22009440895471846], 'false,false,false': [nan, 0.2200944089547185]}
{'': [nan, 0.2222222222222227], 'false': [nan, 0.22222222222222182], 'false,false': [nan, 0.2222222222222227], 'false,false,false': [0.23222222222222202, 0.21196116895528375]}
{'': [nan, 0.21664416854991247], 'false': [nan, 0.21664416854991247], 'false,false': [nan, 0.21664416854991198], 'false,false,false': [0.20555733635043855, 0.22422747834927442]}
{'': [nan, 0.21888166292665845], 'false': [nan, 0.21888166292665845], 'false,false': [nan, 0.21888166292665864], 'false,false,false': [0.20234080539575441, 0.22397208829973583]}
{'': [nan, 0.23485463120767314], 'false': [nan, 0.23485463120767314], 'false,false': [nan, 0.23485463120767247], 'false,false,false': [nan, 0.23485463120767247]}
{'': [nan, 0.22034444950036144], 'false': [nan, 0.22034444950036144], 'false,false': [nan, 0.22034444950036094], 'false,false,false': [nan, 0.22034444950036183]}
{'': [0.23167914943847046, 0.21609889947833646], 'true': [2.539145726692433e-07, 2.4743193836998476e-07], 'false': [nan, 0.21609889947833646], 'false,false': [nan, 0.21609889947833646], 'false,false,false': [0.20850480109739397, 0.22222222222222263], 'true,true': [nan, 2.539145726692433e-07], 'true,true,false': [nan, 2.539145726692433e-07]}
{'': [nan, 0.1847692500551643], 'false': [nan, 0.1847692500551643], 'false,false': [nan, 0.18476925005516465], 'false,false,false': [0.1354228809101706, 0.21796835644612408]}
{'': [nan, 0.18874261455800917], 'false': [nan, 0.18874261455801022], 'false,false': [nan, 0.18874261455801022], 'false,false,false': [nan, 0.18874261455801022]}
{'': [nan, 0.18811409614887376], 'false': [nan, 0.18811409614887376], 'false,false': [nan, 0.18811409614887295], 'false,false,false': [nan, 0.18811409614887295]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 11.650845289230347
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.058148935099512376;  // std dev = 3.464, 75.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=15 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, H), interaction(I, A) )
%   | | | then return 0.3025933795439568;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.18614893509951144;  // std dev = 5.249, 125.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=41 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.756994458815767;  // std dev = 0.128, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, C) )
%   | | then return -0.15923387840935885;  // std dev = 0.107, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( complex(C, F), interaction(A, G) )
%   | | | then return 0.3000925474868743;  // std dev = 2.004, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.1105630984215339;  // std dev = 3.051, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.7274065038819156;  // std dev = 0.043, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( enzyme(A, I), interaction(A, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.350856362705251;  // std dev = 1.137, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.0028866678954258137;  // std dev = 2.722, 59.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=9 */
%   | | else if ( enzyme(A, L), phenotype(A, M) )
%   | | | then return 0.4053739412743134;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.13990466815218358;  // std dev = 4.804, 110.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.6105514577986633;  // std dev = 0.076, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(F, C), interaction(A, F) )
%   | | then return -0.1462359166155312;  // std dev = 0.074, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( phenotype(C, G), phenotype(A, H) )
%   | | | then return 0.5287987017382727;  // std dev = 0.815, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.2884862410382029;  // std dev = 2.492, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.46224006191888845;  // std dev = 0.909, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( complex(A, J), interaction(A, K) )
%   | | then if ( interaction(K, L), recursion_proteinclass(L, B) )
%   | | | then return 0.5707364812650013;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.027636200570785904;  // std dev = 2.357, 38.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=7 */
%   | | else if ( location(A, M), interaction(A, N) )
%   | | | then return 0.2668910966397757;  // std dev = 2.267, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0.1540237551413829;  // std dev = 4.868, 105.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=37 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.41051551564997685;  // std dev = 0.041, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, C) )
%   | | then return -0.06314371856836809;  // std dev = 0.257, 36.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=5 */
%   | | else return 0.10118920293790622;  // std dev = 0.362, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   else if ( phenotype(A, D), complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.7442628105957965;  // std dev = 0.102, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.18610373363211125;  // std dev = 0.114, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( complex(G, I), enzyme(A, J) )
%   | | | then return 0.02329766042276857;  // std dev = 2.680, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | | else return 0.08701505242210035;  // std dev = 3.235, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.19741823530021477;  // std dev = 3.511, 51.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=21 */
%   | | | else return 0.016196125832933447;  // std dev = 1.425, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, A) )
%   then return -0.042509684687540204;  // std dev = 0.215, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D) )
%   | | then if ( recursion_proteinclass(F, B), interaction(A, D) )
%   | | | then return 0.4323462448593249;  // std dev = 0.173, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.019929835405729474;  // std dev = 4.489, 132.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=35 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.1662710283347143;  // std dev = 0.748, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.5251380580331977;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5185719811207903;  // std dev = 1.637, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | | else return -0.2189142303441213;  // std dev = 0.338, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.3605741158501758;  // std dev = 0.950, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.1167021662077677;  // std dev = 3.314, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.35947428879265547;  // std dev = 0.090, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, D) )
%   | | | then return 0.45683459743135724;  // std dev = 0.441, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.07658030222919625;  // std dev = 0.786, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.16857973183328748;  // std dev = 0.335, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0.0016951599943345551;  // std dev = 3.351, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( complex(A, I), phenotype(A, J) )
%   | | | then return 0.024911439133597776;  // std dev = 1.760, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.0962315711248945;  // std dev = 3.322, 53.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.5448441292572366;  // std dev = 0.901, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.1800946817619858;  // std dev = 2.737, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5185056407819915;  // std dev = 0.177, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.19371155123028186;  // std dev = 0.078, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.2621745467672579;  // std dev = 0.150, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(A, H), location(A, I) )
%   | | | then return -0.06030939288212784;  // std dev = 0.768, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return -0.14704243126776775;  // std dev = 0.898, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( location(A, L), interaction(A, M) )
%   | | | then return 0.21229072515141506;  // std dev = 1.847, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.07183961819080317;  // std dev = 2.867, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | else if ( interaction(N, A), location(N, P) )
%   | | | then return 0.0047169327495968924;  // std dev = 3.402, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
%   | | | else return 0.41114821154368714;  // std dev = 0.832, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.17396649199432476;  // std dev = 0.312, 26.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=22 */
%   | else if ( interaction(A, C) )
%   | | then return -0.16187011639332433;  // std dev = 0.069, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( interaction(A, E) )
%   | | | then return 0.0620998084868801;  // std dev = 2.847, 55.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
%   | | | else return -0.012724282605333;  // std dev = 4.603, 129.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=37 */
%   else if ( interaction(A, F), complex(F, G) )
%   | then if ( complex(A, G), enzyme(F, H) )
%   | | then return -0.0789219518972194;  // std dev = 0.442, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(F, I) )
%   | | | then return 0.1012014980047623;  // std dev = 0.662, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.02101726937327512;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( phenotype(A, J) )
%   | | then return 0.2718854558894041;  // std dev = 0.635, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.16404564237232214;  // std dev = 1.163, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then return 0.4513612666520733;  // std dev = 0.233, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return -0.1998114630348865;  // std dev = 0.060, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( interaction(F, A), enzyme(A, G) )
%   | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.2037275669234291;  // std dev = 0.562, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(I, F), interaction(I, I) )
%   | | | then return -0.03831876158613416;  // std dev = 1.991, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return -0.14534146424062305;  // std dev = 2.164, 34.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
%   | else if ( interaction(A, J) )
%   | | then if ( complex(J, K), complex(A, K) )
%   | | | then return 0.016018619102284744;  // std dev = 1.005, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return -0.04525692631515175;  // std dev = 2.720, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.00217905995428519;  // std dev = 2.687, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | | else return 0.05286257487879072;  // std dev = 2.653, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C), enzyme(E, F) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then return -0.029908384194924396;  // std dev = 0.218, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( interaction(C, C) )
%   | | | then return 0.14688529913505743;  // std dev = 1.967, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0.03004145821771595;  // std dev = 1.999, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then return 0.011524195363408676;  // std dev = 0.212, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else return -0.060301492380370005;  // std dev = 0.350, 59.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=14 */
%   else if ( location(A, K) )
%   | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | then if ( interaction(L, M), complex(M, N) )
%   | | | then return 0.13425490157732742;  // std dev = 1.456, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return 0.40640040236632347;  // std dev = 1.996, 31.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
%   | | else return -0.23200256481633838;  // std dev = 0.085, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return 0.32775162033651695;  // std dev = 0.840, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
Inference time using transfer learning 20.009704113006592
Refined model CLL: -0.258939


******************************************
Best model found
******************************************
Results 

CLL : -0.26211 

AUC ROC : 0.920246 

AUC PR : 0.314831 

Precision : 0.197333 

Recall : 0.524823 

F1 : 0.286822 

Total Learning Time : 11.650845289230347 

Total Inference Time : 6.073903560638428 

Total revision time: 20.72589612007141
Best scored revision CLL: -0.258939


Results 

CLL : -0.26211 

AUC ROC : 0.920246 

AUC PR : 0.314831 

Precision : 0.197333 

Recall : 0.524823 

F1 : 0.286822 

Total Learning Time : 20.742656230926514 

Total Inference Time : 6.073903560638428 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.325688123703003
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1958112727618505;  // std dev = 8.300, 308.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1280575490867766;  // std dev = 6.053, 176.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=52 */
%   | | | else return 0.2040315750608021;  // std dev = 5.717, 140.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.17616776365926218;  // std dev = 5.102, 112.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=41 */
%   | | | else return 0.140153917339403;  // std dev = 6.478, 189.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.10805104791932432;  // std dev = 4.433, 90.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=29 */
%   | | | else return 0.10205048584677863;  // std dev = 7.144, 234.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09111158854708012;  // std dev = 8.371, 319.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.055810426893705536;  // std dev = 8.486, 338.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7358039221266706;  // std dev = 0.040, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.26421572408525884;  // std dev = 0.063, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06288577194354236;  // std dev = 3.969, 73.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=23 */
%   | | | else return 0.06655515033277472;  // std dev = 5.164, 120.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.030470822254263168;  // std dev = 4.181, 131.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=41 */
%   | | | else return 0.08577061943807036;  // std dev = 6.350, 175.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03219765944598515;  // std dev = 7.727, 322.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.039776084340902566;  // std dev = 7.634, 307.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=104 */
Inference time using transfer learning 3.3001620769500732
Parameter learned model CLL:-0.331872 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.3, 204, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.053, 124, 52], 'false,false,false,false': [5.717, 88, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.102, 71, 41], 'false,false,false,false': [6.478, 126, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.433, 61, 29], 'false,false,false,false': [7.144, 159, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.371, 215, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.486, 234, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.04, 0, 41], 'true,false': [0.063, 102, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.969, 50, 23], 'false,false,false,false': [5.164, 80, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.181, 90, 41], 'false,false,false,false': [6.35, 112, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.727, 218, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.634, 203, 104]}]
{'': [nan, 0.22364648338674525], 'false': [nan, 0.22364648338674367], 'false,false': [nan, 0.22364648338674525], 'false,false,false': [nan, 0.22364648338674367]}
{'': [nan, 0.22079794904662856], 'false': [nan, 0.2207979490466275], 'false,false': [nan, 0.22079794904662856], 'false,false,false': [0.20816115702479487, 0.2334693877551037]}
{'': [nan, 0.22620961216748903], 'false': [nan, 0.22620961216748903], 'false,false': [nan, 0.22620961216748964], 'false,false,false': [0.2324187197046466, 0.22204753745231293]}
{'': [nan, 0.2181845913340467], 'false': [nan, 0.2181845913340467], 'false,false': [nan, 0.2181845913340467], 'false,false,false': [0.21839506172839443, 0.2180936393087113]}
{'': [nan, 0.21964749861125463], 'false': [nan, 0.21964749861125463], 'false,false': [nan, 0.2196474986112562], 'false,false,false': [nan, 0.2196474986112562]}
{'': [nan, 0.2130655286884247], 'false': [nan, 0.2130655286884247], 'false,false': [nan, 0.21306552868842318], 'false,false,false': [nan, 0.21306552868842396]}
{'': [0.20455571109035459, 0.2197963857598744], 'false': [nan, 0.2197963857598744], 'false,false': [nan, 0.2197963857598744], 'false,false,false': [0.21580033777444246, 0.2222222222222215], 'true': [3.8818141240981055e-05, 3.892930165030731e-05], 'true,true': [nan, 3.8818141240981055e-05], 'true,true,false': [nan, 3.8818141240981055e-05]}
{'': [nan, 0.18967971467279587], 'false': [nan, 0.18967971467279587], 'false,false': [nan, 0.18967971467279562], 'false,false,false': [0.13346604543645854, 0.23045048864101855]}
{'': [nan, 0.1854325328272846], 'false': [nan, 0.18543253282728409], 'false,false': [nan, 0.18543253282728409], 'false,false,false': [nan, 0.18543253282728409]}
{'': [nan, 0.18985422691376613], 'false': [nan, 0.18985422691376613], 'false,false': [nan, 0.1898542269137666], 'false,false,false': [nan, 0.1898542269137666]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 14.835523843765259
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), complex(C, E) )
%   | then return 0.7152917922423694;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( location(A, F), phenotype(A, G) )
%   | then if ( location(H, F), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(H, G) )
%   | | | then return 0.7291166770349965;  // std dev = 2.640, 62.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=54 */
%   | | | else return -0.1418510649004877;  // std dev = 2.36e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.14185106490048763;  // std dev = 7.88e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.1308762078267851;  // std dev = 2.558, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.03571902855745626;  // std dev = 3.953, 107.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=19 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.6884521894825232;  // std dev = 0.198, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(E, G), complex(F, H) )
%   | | | then return 0.7693749003084878;  // std dev = 0.144, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.4884420004026083;  // std dev = 0.859, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, I), interaction(E, I) )
%   | | | then return -0.11742138367490257;  // std dev = 0.866, 49.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=1 */
%   | | | else return 0.05800038882900168;  // std dev = 2.677, 51.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=11 */
%   | else if ( enzyme(A, J), interaction(K, A) )
%   | | then if ( interaction(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.44496372133703926;  // std dev = 1.131, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.07498025612664745;  // std dev = 2.898, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return 0.3694539055259651;  // std dev = 1.680, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.19639497824533877;  // std dev = 4.416, 99.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=36 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, C) )
%   | then return 0.22967956907372003;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.5870926790229267;  // std dev = 0.104, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.14084236394847924;  // std dev = 0.098, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(E, E), phenotype(A, F) )
%   | | | then return 0.009131030202661535;  // std dev = 1.508, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.13193908761059708;  // std dev = 2.726, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.7116486829920706;  // std dev = 1.119, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return -0.14707597318806703;  // std dev = 0.103, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( complex(A, I), interaction(A, J) )
%   | | | then return 0.03935089515644009;  // std dev = 1.735, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.13877502038735576;  // std dev = 4.554, 112.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=37 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.44366186003514096;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.11353794033501259;  // std dev = 0.855, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.44935636561363723;  // std dev = 0.116, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( complex(A, F), location(A, G) )
%   | then if ( complex(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.5758267491278318;  // std dev = 0.207, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | else return -0.14547992815415522;  // std dev = 0.463, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B), interaction(A, K) )
%   | | | then return 0.5623432850569521;  // std dev = 0.976, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.0510999575610199;  // std dev = 4.983, 175.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=44 */
%   | | else if ( location(A, L) )
%   | | | then return 0.07534467326605758;  // std dev = 1.369, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.4734294239044896;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.4243676129836744;  // std dev = 0.105, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2218108051144103;  // std dev = 0.332, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( enzyme(A, F), interaction(E, A) )
%   | | then return -0.12749554258671633;  // std dev = 0.251, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( phenotype(E, G), phenotype(A, H) )
%   | | | then return 0.04116244028083192;  // std dev = 1.717, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return -0.0503212313992696;  // std dev = 1.725, 32.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | else if ( enzyme(A, I), phenotype(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.506000070635493;  // std dev = 0.292, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.11561644522362186;  // std dev = 0.052, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.3397096324963981;  // std dev = 0.088, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.06295443976451308;  // std dev = 5.142, 180.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=51 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.27553862735977047;  // std dev = 0.143, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( location(A, D), interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0.4692243930336075;  // std dev = 0.402, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.0344508460371363;  // std dev = 1.062, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.16941497181317894;  // std dev = 0.521, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return -0.0246188000623879;  // std dev = 2.373, 63.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=13 */
%   | else if ( location(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.48748037944371714;  // std dev = 0.649, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.12659230401028668;  // std dev = 0.158, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( location(A, K), phenotype(A, L) )
%   | | | then return 0.072019899247091;  // std dev = 2.996, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | | | else return 0.14680317513347774;  // std dev = 2.976, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.004432035669109235;  // std dev = 0.238, 137.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=41 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( complex(E, F) )
%   | | then if ( enzyme(E, G), phenotype(E, H) )
%   | | | then return 0.10307622680029645;  // std dev = 1.918, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | | else return 0.013498106334008934;  // std dev = 2.664, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6395816708358681;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.19114664977962748;  // std dev = 0.013, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.4984084512985004;  // std dev = 0.696, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.2219413340331055;  // std dev = 0.276, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.11508416123914786;  // std dev = 1.583, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.23053431748935993;  // std dev = 2.238, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.25680860016904067;  // std dev = 0.223, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else if ( interaction(C, A) )
%   | | then return -0.16547724986976334;  // std dev = 0.221, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.017770858091177354;  // std dev = 0.281, 62.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=16 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B), complex(F, H) )
%   | | then return 0.2758224941746749;  // std dev = 0.148, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else if ( interaction(G, A), interaction(I, G) )
%   | | | then return -0.04355470151652768;  // std dev = 2.609, 83.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=19 */
%   | | | else return 0.05938971099372475;  // std dev = 3.652, 103.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.30816309275226583;  // std dev = 0.996, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return -0.20453617244986724;  // std dev = 0.100, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.0036508247854578624;  // std dev = 0.966, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, C), phenotype(A, D) )
%   | then return -0.016457543715391793;  // std dev = 0.684, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.26808385577901017;  // std dev = 0.089, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, E), location(A, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then if ( location(G, F), location(E, F) )
%   | | | then return 0.31585298727265554;  // std dev = 0.279, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.20647875031495588;  // std dev = 0.697, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return -0.06123742363864588;  // std dev = 0.216, 107.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=14 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(H, I), complex(I, J) )
%   | | | then return 0.06704899567585032;  // std dev = 3.975, 122.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=44 */
%   | | | else return -0.059069828481889734;  // std dev = 1.331, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( location(A, K) )
%   | | | then return 0.017841965145071824;  // std dev = 1.092, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.136585020476202;  // std dev = 1.080, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( phenotype(C, D), phenotype(A, E) )
%   | then return -0.04758890859459553;  // std dev = 0.230, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
%   | else return -0.002099146195303395;  // std dev = 0.204, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.27028942108106147;  // std dev = 0.156, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(F, I), interaction(J, F) )
%   | | | then return 0.013520519042094673;  // std dev = 4.113, 149.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=43 */
%   | | | else return -0.03877303787181026;  // std dev = 1.301, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | else if ( enzyme(A, K), interaction(L, A) )
%   | | then if ( interaction(L, M), recursion_proteinclass(M, B) )
%   | | | then return 0.3746477883689419;  // std dev = 0.336, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.09982045707024197;  // std dev = 0.034, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( location(A, N), interaction(A, P) )
%   | | | then return 0.008487083841673243;  // std dev = 1.210, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.0600380781077821;  // std dev = 1.944, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
Inference time using transfer learning 36.55052947998047
Refined model CLL: -0.203925


******************************************
Best model found
******************************************
Results 

CLL : -0.196689 

AUC ROC : 0.98058 

AUC PR : 0.412883 

Precision : 0.45768 

Recall : 0.550943 

F1 : 0.5 

Total Learning Time : 14.835523843765259 

Total Inference Time : 14.55617618560791 

Total revision time: 32.84489440917969
Best scored revision CLL: -0.203925


Results 

CLL : -0.196689 

AUC ROC : 0.98058 

AUC PR : 0.412883 

Precision : 0.45768 

Recall : 0.550943 

F1 : 0.5 

Total Learning Time : 32.86165452003479 

Total Inference Time : 14.55617618560791 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.2751684188842773
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2027182234890256;  // std dev = 7.765, 267.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.171638132968264;  // std dev = 5.802, 150.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=51 */
%   | | | else return 0.2184305857984515;  // std dev = 5.014, 106.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13640912643579353;  // std dev = 5.417, 132.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=44 */
%   | | | else return 0.12708887318533874;  // std dev = 5.694, 148.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11735092840770765;  // std dev = 4.163, 78.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=26 */
%   | | | else return 0.11513039901730032;  // std dev = 6.626, 197.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11900881186444662;  // std dev = 7.684, 257.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06459044555285233;  // std dev = 7.876, 282.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7251080130947848;  // std dev = 0.029, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.27466619469449466;  // std dev = 0.040, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05997156097190017;  // std dev = 4.096, 76.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=25 */
%   | | | else return 0.06500824358924677;  // std dev = 3.886, 67.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.052287434260768866;  // std dev = 4.192, 125.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=44 */
%   | | | else return 0.029287042562461753;  // std dev = 5.735, 152.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05220543219261853;  // std dev = 6.968, 260.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.027344266391835938;  // std dev = 7.032, 273.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=92 */
Inference time using transfer learning 3.726724863052368
Parameter learned model CLL:-0.333648 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.765, 175, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.802, 99, 51], 'false,false,false,false': [5.014, 65, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.417, 88, 44], 'false,false,false,false': [5.694, 100, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.163, 52, 26], 'false,false,false,false': [6.626, 131, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.684, 165, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.876, 190, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.029, 0, 44], 'true,false': [0.04, 86, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.096, 51, 25], 'false,false,false,false': [3.886, 44, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.192, 81, 44], 'false,false,false,false': [5.735, 104, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.968, 168, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.032, 181, 92]}]
{'': [nan, 0.22584129388825896], 'false': [nan, 0.2258412938882585], 'false,false': [nan, 0.22584129388825896], 'false,false,false': [nan, 0.2258412938882585]}
{'': [nan, 0.23022460937500158], 'false': [nan, 0.2302246093750014], 'false,false': [nan, 0.23022460937500158], 'false,false,false': [0.22440000000000207, 0.23718405126379516]}
{'': [nan, 0.22062961667696315], 'false': [nan, 0.22062961667696315], 'false,false': [nan, 0.2206296166769632], 'false,false,false': [0.22231055401709982, 0.21908945064992363]}
{'': [nan, 0.2226786986230257], 'false': [nan, 0.2226786986230257], 'false,false': [nan, 0.2226786986230253], 'false,false,false': [0.2222222222222213, 0.22285803693185502]}
{'': [nan, 0.22971732116012042], 'false': [nan, 0.22971732116012042], 'false,false': [nan, 0.22971732116011997], 'false,false,false': [nan, 0.22971732116011997]}
{'': [nan, 0.21994749450142637], 'false': [nan, 0.21994749450142637], 'false,false': [nan, 0.2199474945014258], 'false,false,false': [nan, 0.21994749450142612]}
{'': [0.2238230970378705, 0.2229489281203457], 'true': [1.9147769948268945e-05, 1.8731415947886466e-05], 'false': [nan, 0.2229489281203457], 'false,false': [nan, 0.2229489281203457], 'false,false,false': [0.22074099722991652, 0.22543996435731758], 'true,true': [nan, 1.9147769948268945e-05], 'true,true,false': [nan, 1.9147769948268945e-05]}
{'': [nan, 0.18231000137542738], 'false': [nan, 0.18231000137542738], 'false,false': [nan, 0.1823100013754264], 'false,false,false': [0.1405544568471605, 0.21640971605678622]}
{'': [nan, 0.18676746157119523], 'false': [nan, 0.1867674615711953], 'false,false': [nan, 0.1867674615711953], 'false,false,false': [nan, 0.1867674615711953]}
{'': [nan, 0.18114258640472952], 'false': [nan, 0.18114258640472952], 'false,false': [nan, 0.18114258640472977], 'false,false,false': [nan, 0.18114258640472977]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 6.107864141464233
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( enzyme(A, E), phenotype(C, F) )
%   | then if ( complex(A, G) )
%   | | then if ( enzyme(C, E) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, C) )
%   | | | then return -0.07518439823382113;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.19148226843284524;  // std dev = 3.742, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(I, A), interaction(A, J) )
%   | | then return 0.0052077586289240585;  // std dev = 0.354, 34.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | | else return 0.15602127552504388;  // std dev = 0.457, 141.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=42 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.732036812667021;  // std dev = 0.121, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.7891337588279278;  // std dev = 0.130, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14923693795319704;  // std dev = 0.076, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, E), phenotype(E, F) )
%   | | | then return 0.06911664526860864;  // std dev = 4.126, 97.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=22 */
%   | | | else return 0.1233222743942811;  // std dev = 5.961, 171.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=50 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5689843241217795;  // std dev = 0.162, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, A) )
%   | then return -0.12809999611613196;  // std dev = 0.071, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | | then if ( complex(D, E), interaction(F, D) )
%   | | | then return 0.20477196248632948;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6809807778553602;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.06751030843326475;  // std dev = 4.768, 123.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=30 */
%   | | | else return 0.1317239028282134;  // std dev = 5.373, 133.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=42 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.42478730525747804;  // std dev = 0.082, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5208098394009234;  // std dev = 0.062, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( enzyme(E, F) )
%   | | then return -0.13536268561697068;  // std dev = 0.054, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.23293539416981854;  // std dev = 1.100, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.021346603188004343;  // std dev = 1.042, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.4441832045755764;  // std dev = 0.148, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.02074549021380634;  // std dev = 2.183, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | | else return 0.11822995008412428;  // std dev = 6.573, 198.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=63 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.3259257086481554;  // std dev = 0.075, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.026264853946174574;  // std dev = 0.401, 83.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=20 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(G, E), phenotype(G, H) )
%   | | then if ( interaction(I, G) )
%   | | | then return 0.4220053889571705;  // std dev = 1.592, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.042336613348099225;  // std dev = 1.699, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.00918500911029631;  // std dev = 1.657, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return -0.0604892393260911;  // std dev = 1.610, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.47482890637995256;  // std dev = 3.355, 58.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=42 */
%   | | | else return -0.21285229527393587;  // std dev = 0.045, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0.030862997237152356;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.283082729341326;  // std dev = 0.040, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( complex(A, D), phenotype(A, E) )
%   | then if ( complex(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.4412017467646696;  // std dev = 0.446, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7378933544157772;  // std dev = 0.161, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.19047791496489933;  // std dev = 0.057, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.2438449932172153;  // std dev = 0.190, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(L, J), phenotype(A, M) )
%   | | | then return -0.1712038092263977;  // std dev = 0.186, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.049614117184303974;  // std dev = 3.445, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   | | else if ( interaction(A, N), enzyme(N, P) )
%   | | | then return -0.014950369342431796;  // std dev = 1.723, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.09789633803340683;  // std dev = 4.505, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5197331595867328;  // std dev = 0.213, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.18030722086567477;  // std dev = 0.046, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( phenotype(A, E), interaction(A, F) )
%   | then if ( complex(F, G) )
%   | | then return -0.015652967614763615;  // std dev = 0.329, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.03411507444207048;  // std dev = 0.401, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.11997095955575178;  // std dev = 1.388, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( interaction(I, K) )
%   | | | then return 0.28903991044696464;  // std dev = 1.415, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.05480597328399002;  // std dev = 0.951, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.07197067257358167;  // std dev = 0.874, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.10481170966447312;  // std dev = 3.882, 77.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=29 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then return 0.02592429739243607;  // std dev = 0.343, 175.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=57 */
%   else if ( interaction(A, E), complex(E, F) )
%   | then if ( interaction(E, G), interaction(G, H) )
%   | | then if ( enzyme(H, I), phenotype(H, J) )
%   | | | then return 0.11533204886074519;  // std dev = 1.399, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.027536608290193523;  // std dev = 1.737, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | else if ( interaction(K, E), recursion_proteinclass(K, B) )
%   | | | then return 0.6853215473803631;  // std dev = 0.150, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.22279206343207766;  // std dev = 0.135, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(L, A), phenotype(L, M) )
%   | | then if ( interaction(L, N), recursion_proteinclass(N, B) )
%   | | | then return 0.5707385880821667;  // std dev = 0.440, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.21524849012693148;  // std dev = 0.211, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(P, A), interaction(A, Q) )
%   | | | then return -0.03866635834655979;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.30421798920261084;  // std dev = 1.569, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1753543907983763;  // std dev = 0.079, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(D, D), enzyme(D, F) )
%   | | then if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.6134349060078556;  // std dev = 0.278, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1250312674629652;  // std dev = 0.058, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(H, A), interaction(D, I) )
%   | | | then return 0.08972038432668356;  // std dev = 2.227, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return -0.054400968633783124;  // std dev = 2.022, 42.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=8 */
%   | else if ( interaction(A, J), location(A, K) )
%   | | then if ( phenotype(A, L), interaction(M, A) )
%   | | | then return 0.029091988016315736;  // std dev = 0.784, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.07580040878313292;  // std dev = 2.328, 54.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=10 */
%   | | else if ( complex(A, N) )
%   | | | then return -0.014779972710254552;  // std dev = 2.262, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | | | else return 0.050957846618364395;  // std dev = 3.513, 69.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=25 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( complex(A, D), interaction(C, E) )
%   | then return -0.025269392990343982;  // std dev = 0.278, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | else if ( interaction(F, A), complex(F, G) )
%   | | then if ( complex(A, D), phenotype(A, H) )
%   | | | then return 0.2993560018163807;  // std dev = 0.552, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.10429417709055157;  // std dev = 1.191, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0.0749394436197598;  // std dev = 0.354, 51.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
%   else if ( complex(A, I) )
%   | then return 0.018793269850547845;  // std dev = 0.289, 64.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=21 */
%   | else if ( interaction(A, J) )
%   | | then if ( phenotype(A, K), phenotype(J, K) )
%   | | | then return -0.18669888861855233;  // std dev = 0.854, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.064114809541361;  // std dev = 2.072, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return -0.14269861888403493;  // std dev = 1.231, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.02768689732619991;  // std dev = 3.378, 73.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=21 */
Inference time using transfer learning 10.189014911651611
Refined model CLL: -0.251096


******************************************
Best model found
******************************************
Results 

CLL : -0.278894 

AUC ROC : 0.867956 

AUC PR : 0.160847 

Precision : 0.239796 

Recall : 0.33935 

F1 : 0.281016 

Total Learning Time : 6.107864141464233 

Total Inference Time : 3.223564386367798 

Total revision time: 12.398157835006714
Best scored revision CLL: -0.251096


Results 

CLL : -0.278894 

AUC ROC : 0.867956 

AUC PR : 0.160847 

Precision : 0.239796 

Recall : 0.33935 

F1 : 0.281016 

Total Learning Time : 12.414917945861816 

Total Inference Time : 3.223564386367798 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.2054905891418457
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1567600462106238;  // std dev = 7.767, 288.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16095668294623156;  // std dev = 5.933, 161.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=52 */
%   | | | else return 0.17460897985293902;  // std dev = 4.749, 101.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.16874551256840256;  // std dev = 4.251, 79.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=28 */
%   | | | else return 0.17881265586206987;  // std dev = 6.070, 159.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.08969185028538114;  // std dev = 3.643, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | | | else return 0.12205942633491562;  // std dev = 6.668, 199.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10869001794327225;  // std dev = 7.519, 251.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08070728808598904;  // std dev = 7.564, 257.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7348845882041629;  // std dev = 0.022, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2667225520559526;  // std dev = 0.034, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06969170387302492;  // std dev = 4.666, 97.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=33 */
%   | | | else return 0.2369870798260509;  // std dev = 3.499, 49.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.028149401814000143;  // std dev = 3.459, 90.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
%   | | | else return 0.03259444138749092;  // std dev = 6.221, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.054672347172299296;  // std dev = 6.964, 237.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.018259251386122336;  // std dev = 7.105, 255.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=86 */
Inference time using transfer learning 3.6050779819488525
Parameter learned model CLL:-0.356357 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.767, 202, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.933, 109, 52], 'false,false,false,false': [4.749, 67, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.251, 51, 28], 'false,false,false,false': [6.07, 101, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.643, 44, 19], 'false,false,false,false': [6.668, 132, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.519, 165, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.564, 171, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.022, 0, 28], 'true,false': [0.034, 58, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.666, 64, 33], 'false,false,false,false': [3.499, 24, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.459, 62, 28], 'false,false,false,false': [6.221, 116, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.964, 151, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.105, 169, 86]}]
{'': [nan, 0.2094425154320995], 'false': [nan, 0.20944251543209946], 'false,false': [nan, 0.2094425154320995], 'false,false,false': [nan, 0.20944251543209946]}
{'': [nan, 0.2204999708641672], 'false': [nan, 0.22049997086416748], 'false,false': [nan, 0.2204999708641672], 'false,false,false': [0.21866440337949733, 0.22331144005489767]}
{'': [nan, 0.2307562501645444], 'false': [nan, 0.2307562501645444], 'false,false': [nan, 0.23075625016454318], 'false,false,false': [0.22876596648137862, 0.23171149273747407]}
{'': [nan, 0.2205196718787924], 'false': [nan, 0.2205196718787924], 'false,false': [nan, 0.22051967187879298], 'false,false,false': [0.2106324011085918, 0.22339789463708967]}
{'': [nan, 0.22526369695192497], 'false': [nan, 0.22526369695192497], 'false,false': [nan, 0.2252636969519248], 'false,false,false': [nan, 0.2252636969519248]}
{'': [nan, 0.22264861116793086], 'false': [nan, 0.22264861116793086], 'false,false': [nan, 0.22264861116793097], 'false,false,false': [nan, 0.22264861116793125]}
{'': [0.22030391226167742, 0.23924129487614615], 'false': [nan, 0.23924129487614615], 'false,false': [nan, 0.23924129487614615], 'false,false,false': [0.22446593686895586, 0.24989587671803368], 'true': [1.766703473934531e-05, 2.0249934554976472e-05], 'true,true': [nan, 1.766703473934531e-05], 'true,true,false': [nan, 1.766703473934531e-05]}
{'': [nan, 0.1919350433768537], 'false': [nan, 0.1919350433768537], 'false,false': [nan, 0.1919350433768536], 'false,false,false': [0.132959683699385, 0.22243280395147502]}
{'': [nan, 0.20461830471499726], 'false': [nan, 0.2046183047149963], 'false,false': [nan, 0.2046183047149963], 'false,false,false': [nan, 0.2046183047149963]}
{'': [nan, 0.19793906898178903], 'false': [nan, 0.19793906898178903], 'false,false': [nan, 0.1979390689817894], 'false,false,false': [nan, 0.1979390689817894]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 8.163510799407959
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(C, E), interaction(E, C) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.061538765607986934;  // std dev = 3.092, 59.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=12 */
%   | | else if ( interaction(A, I), interaction(I, A) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.17716734000748685;  // std dev = 5.951, 163.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=52 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( complex(C, E), enzyme(A, F) )
%   | then return 0.5677369841685075;  // std dev = 0.835, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(G, C), recursion_proteinclass(G, B) )
%   | | then return 0.7677668180378907;  // std dev = 0.108, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, C) )
%   | | | then return -0.14710210651391648;  // std dev = 0.023, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.1826519851402261;  // std dev = 2.555, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.7510312319294983;  // std dev = 0.052, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( complex(A, I), interaction(J, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.07920886238027983;  // std dev = 2.704, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.24743029009260983;  // std dev = 1.547, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.13148249053836938;  // std dev = 5.472, 147.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=44 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.5249950939733048;  // std dev = 0.249, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.7479125502166013;  // std dev = 0.063, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.18435692526836334;  // std dev = 0.220, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0.10326770390696573;  // std dev = 4.666, 106.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=31 */
%   else if ( interaction(A, F), interaction(F, F) )
%   | then if ( interaction(A, A) )
%   | | then return 0.07333017902561847;  // std dev = 0.306, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else return 0.16898577005918988;  // std dev = 0.459, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | else if ( complex(A, G), phenotype(A, H) )
%   | | then return 0.4769058360289938;  // std dev = 0.809, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.21356677668186974;  // std dev = 2.239, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.2873122371062264;  // std dev = 2.911, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then return 0.5150497239540042;  // std dev = 0.072, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6718026967969914;  // std dev = 0.087, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), location(A, G) )
%   | then if ( interaction(A, A) )
%   | | then return -0.12731973077206457;  // std dev = 0.088, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6275180533754098;  // std dev = 0.325, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.01702792485540722;  // std dev = 4.433, 116.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=27 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7695265734136728;  // std dev = 0.343, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.1986518520282072;  // std dev = 0.024, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.2338503376000731;  // std dev = 1.804, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.028184451921503113;  // std dev = 2.437, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.37195980141473556;  // std dev = 0.242, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, G) )
%   | | | then return -0.13405477336507624;  // std dev = 0.576, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5193934987946544;  // std dev = 0.266, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(A, H), complex(D, I) )
%   | | | then return 0.12472229878582189;  // std dev = 2.129, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return -0.04919895310438676;  // std dev = 3.434, 100.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=15 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( phenotype(J, L) )
%   | | | then return 0.22092797917399312;  // std dev = 3.011, 45.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=22 */
%   | | | else return -0.006546429374276186;  // std dev = 1.321, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( phenotype(A, M), interaction(N, A) )
%   | | | then return 0.02953446305164405;  // std dev = 2.016, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return 0.1303122692455314;  // std dev = 2.129, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.046438625218637855;  // std dev = 0.628, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.3700680912450532;  // std dev = 0.061, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( interaction(E, A) )
%   | | then if ( interaction(A, F) )
%   | | | then return -0.11708683066213693;  // std dev = 0.145, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.03354548238806896;  // std dev = 0.957, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( enzyme(F, G), location(A, H) )
%   | | | then return -0.027631175920921323;  // std dev = 2.650, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | | else return 0.06616101260723874;  // std dev = 3.279, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3833136968393201;  // std dev = 2.977, 52.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=37 */
%   | | | else return -0.22918596486473508;  // std dev = 0.392, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return 0.42528449196269963;  // std dev = 0.800, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), interaction(F, A) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.06784659514865718;  // std dev = 0.883, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.5213947445017574;  // std dev = 0.433, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.26924361921580553;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7177967917722831;  // std dev = 0.228, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.21187526456572692;  // std dev = 0.061, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.29524855635044045;  // std dev = 0.082, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, A) )
%   | | then return -0.11015058468945;  // std dev = 0.031, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return -0.021128680212518507;  // std dev = 1.688, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.07844959662213168;  // std dev = 4.459, 123.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=44 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.2607084841247163;  // std dev = 0.067, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.11671694522546269;  // std dev = 0.201, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( location(A, G) )
%   | | then if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.07370794779348745;  // std dev = 1.773, 30.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | | | else return 0.024006127562340916;  // std dev = 1.460, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else return -0.21307670363713804;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( enzyme(J, K) )
%   | | | then return -0.08198137457068115;  // std dev = 1.602, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.016991191049520474;  // std dev = 1.970, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | else if ( interaction(A, L), interaction(M, A) )
%   | | | then return 0.09290090802306332;  // std dev = 2.432, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return 0.011683585196038926;  // std dev = 3.746, 105.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=32 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, C), complex(A, E) )
%   | then return 0.06697347609834302;  // std dev = 0.281, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(F, G) )
%   | | | then return -0.3283574936855728;  // std dev = 0.583, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.20780379387960785;  // std dev = 0.698, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return -0.07520834528413294;  // std dev = 0.327, 87.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=16 */
%   else if ( location(A, H) )
%   | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, I), interaction(J, A) )
%   | | | then return 0.46161734641710717;  // std dev = 1.616, 52.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=50 */
%   | | | else return -0.035040098426294186;  // std dev = 1.575, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else return -0.19804871635418003;  // std dev = 0.051, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( interaction(A, K) )
%   | | then return 0.003653783376124727;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.2059892277720667;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20319206325369665;  // std dev = 0.066, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( complex(D, G) )
%   | | | then return 0.3805432502642502;  // std dev = 0.357, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.22324073687030593;  // std dev = 0.163, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(H, D), interaction(D, H) )
%   | | | then return -0.08009911722320132;  // std dev = 1.886, 61.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=12 */
%   | | | else return 0.02554810137188105;  // std dev = 3.086, 85.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=28 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6089317732520636;  // std dev = 0.378, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.20547207763049752;  // std dev = 0.162, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return -0.054702607712588794;  // std dev = 1.555, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return 0.0816056741234689;  // std dev = 2.176, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
Inference time using transfer learning 36.87472081184387
Refined model CLL: -0.219097


******************************************
Best model found
******************************************
Results 

CLL : -0.23401 

AUC ROC : 0.960504 

AUC PR : 0.251358 

Precision : 0.207807 

Recall : 0.639576 

F1 : 0.313692 

Total Learning Time : 8.163510799407959 

Total Inference Time : 4.92774224281311 

Total revision time: 15.90182638168335
Best scored revision CLL: -0.219097


Results 

CLL : -0.23401 

AUC ROC : 0.960504 

AUC PR : 0.251358 

Precision : 0.207807 

Recall : 0.639576 

F1 : 0.313692 

Total Learning Time : 15.918586492538452 

Total Inference Time : 4.92774224281311 

Run: 4

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.1990759372711182
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21325097591583891;  // std dev = 7.490, 245.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1104129988672904;  // std dev = 5.628, 157.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=44 */
%   | | | else return 0.1308575224965274;  // std dev = 5.484, 143.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15258438093716098;  // std dev = 4.806, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
%   | | | else return 0.16358083210666788;  // std dev = 5.809, 148.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.09283550822583593;  // std dev = 3.734, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | | | else return 0.15019586378422692;  // std dev = 6.528, 184.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10316971988029794;  // std dev = 7.577, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05408561624163079;  // std dev = 7.751, 280.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.738842710137497;  // std dev = 0.044, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2609781297231525;  // std dev = 0.063, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.02839642438890737;  // std dev = 4.110, 81.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=24 */
%   | | | else return 0.035763684152297845;  // std dev = 4.403, 91.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.05314444585354272;  // std dev = 3.799, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
%   | | | else return 0.046608755575228374;  // std dev = 5.932, 161.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06775872036326004;  // std dev = 6.872, 241.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.022477046278538464;  // std dev = 7.038, 267.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=87 */
Inference time using transfer learning 3.714832305908203
Parameter learned model CLL:-0.332503 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.49, 158, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.628, 113, 44], 'false,false,false,false': [5.484, 100, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.806, 68, 35], 'false,false,false,false': [5.809, 96, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.734, 46, 20], 'false,false,false,false': [6.528, 117, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.577, 169, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.751, 193, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.044, 0, 35], 'true,false': [0.063, 72, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.11, 57, 24], 'false,false,false,false': [4.403, 63, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.799, 68, 35], 'false,false,false,false': [5.932, 109, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.872, 154, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.038, 180, 87]}]
{'': [nan, 0.22900458142440744], 'false': [nan, 0.2290045814244073], 'false,false': [nan, 0.22900458142440744], 'false,false,false': [nan, 0.2290045814244073]}
{'': [nan, 0.20589999999999975], 'false': [nan, 0.2058999999999988], 'false,false': [nan, 0.20589999999999975], 'false,false,false': [0.20171203699947177, 0.21027923125825215]}
{'': [nan, 0.22649173363833522], 'false': [nan, 0.22649173363833522], 'false,false': [nan, 0.2264917336383362], 'false,false,false': [0.22427555457662185, 0.22798445311865007]}
{'': [nan, 0.2268750298097298], 'false': [nan, 0.2268750298097298], 'false,false': [nan, 0.22687502980973012], 'false,false,false': [0.21120293847566543, 0.23162792528882822]}
{'': [nan, 0.2242353574562168], 'false': [nan, 0.2242353574562168], 'false,false': [nan, 0.22423535745621684], 'false,false,false': [nan, 0.22423535745621684]}
{'': [nan, 0.21456850785989653], 'false': [nan, 0.21456850785989653], 'false,false': [nan, 0.21456850785989653], 'false,false,false': [nan, 0.21456850785989698]}
{'': [0.22008288311890023, 0.21090598996907925], 'true': [5.546595835872787e-05, 5.5048679737786564e-05], 'false': [nan, 0.21090598996907925], 'false,false': [nan, 0.21090598996907925], 'false,false,false': [0.20850480109739356, 0.21301775147928892], 'true,true': [nan, 5.546595835872787e-05], 'true,true,false': [nan, 5.546595835872787e-05]}
{'': [nan, 0.187980752750399], 'false': [nan, 0.187980752750399], 'false,false': [nan, 0.18798075275039972], 'false,false,false': [0.14010957675862964, 0.21858974650676014]}
{'': [nan, 0.19595929181787905], 'false': [nan, 0.19595929181787936], 'false,false': [nan, 0.19595929181787936], 'false,false,false': [nan, 0.19595929181787936]}
{'': [nan, 0.18551093063950552], 'false': [nan, 0.18551093063950552], 'false,false': [nan, 0.18551093063950536], 'false,false,false': [nan, 0.18551093063950536]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 8.960149049758911
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(F, C), interaction(A, F) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(C, C), interaction(A, G) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.14386322081379807;  // std dev = 3.162, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, I), interaction(A, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.07027014722072439;  // std dev = 2.348, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.3126943896449669;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.20814893509951118;  // std dev = 5.225, 120.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=42 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.7461945938829417;  // std dev = 0.150, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(F, A), interaction(F, D) )
%   | | then return -0.009532143414442354;  // std dev = 0.342, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | else if ( complex(D, C) )
%   | | | then return 0.4727430455382091;  // std dev = 0.769, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2225667748642855;  // std dev = 1.937, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   else if ( interaction(G, A), enzyme(G, H) )
%   | then return 0.09688025508633495;  // std dev = 0.420, 71.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=19 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8281935178168361;  // std dev = 0.024, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.1723813802724792;  // std dev = 0.033, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.008595782895771065;  // std dev = 0.795, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.1457056685827157;  // std dev = 4.530, 95.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=30 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.6909631126579187;  // std dev = 0.100, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( phenotype(A, D), interaction(A, C) )
%   | | then return -0.03575438627019971;  // std dev = 0.246, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | else if ( interaction(A, E), enzyme(A, F) )
%   | | | then return 0.3300996485448541;  // std dev = 1.966, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.14732538186704558;  // std dev = 4.643, 105.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=36 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.6561377428944619;  // std dev = 0.144, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return -0.14373418272417499;  // std dev = 0.033, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.02107442119356529;  // std dev = 1.471, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.03387283953366761;  // std dev = 1.460, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.11736395012737542;  // std dev = 3.588, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.5077320578236941;  // std dev = 0.075, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7215613474459873;  // std dev = 0.101, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.13078149291184477;  // std dev = 0.042, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.18157019668661406;  // std dev = 1.193, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.004048439135822873;  // std dev = 2.078, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.10296888050637014;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.32823990478223397;  // std dev = 0.995, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.12820165085573101;  // std dev = 2.693, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | | else return 0.0470441887785884;  // std dev = 5.583, 183.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=48 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.3777388055764529;  // std dev = 0.065, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5589284298007756;  // std dev = 0.291, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), location(A, F) )
%   | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A) )
%   | | | then return 0.6622545326553289;  // std dev = 0.314, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.7903346915091142;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.19101918089039963;  // std dev = 0.310, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6160970840274899;  // std dev = 1.343, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return -0.19747423845465437;  // std dev = 0.249, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return -0.013377563753011199;  // std dev = 1.771, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | | else return 0.07302792960989375;  // std dev = 3.852, 72.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=21 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.33387447053846137;  // std dev = 0.123, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(E, D) )
%   | | | then return -0.09900211355048924;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.02852755292184681;  // std dev = 1.297, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( complex(D, G), interaction(D, A) )
%   | | | then return -0.03208187729253238;  // std dev = 0.847, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.11961487374537257;  // std dev = 1.362, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( interaction(H, A), phenotype(A, I) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.4079181384063739;  // std dev = 0.121, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.044556394960007475;  // std dev = 3.064, 74.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=22 */
%   | | else if ( interaction(J, A), enzyme(A, K) )
%   | | | then return 0.07042629163676796;  // std dev = 2.083, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | | else return 0.16802648048454807;  // std dev = 3.853, 63.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=26 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then return 0.331769099511867;  // std dev = 0.119, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.5390897583901582;  // std dev = 0.155, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.1966767861355953;  // std dev = 0.058, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else if ( interaction(A, F), location(A, G) )
%   | then if ( location(F, G), recursion_proteinclass(F, B) )
%   | | then return 0.1909603626336883;  // std dev = 0.846, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.25677804073284377;  // std dev = 1.331, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return -0.06281565144137398;  // std dev = 2.169, 56.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=9 */
%   | else if ( phenotype(A, I), enzyme(A, J) )
%   | | then return 0.3333557425387237;  // std dev = 0.556, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.0715606819207536;  // std dev = 3.636, 73.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=25 */
%   | | | else return 0.23566959283860367;  // std dev = 1.164, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.22655693812929364;  // std dev = 0.131, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.004144140044785376;  // std dev = 0.326, 147.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=41 */
%   else if ( phenotype(A, F), interaction(A, G) )
%   | then if ( enzyme(A, H) )
%   | | then if ( phenotype(G, F) )
%   | | | then return 0.008773457868778015;  // std dev = 0.506, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.12929633607561503;  // std dev = 1.065, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0.2921669146378109;  // std dev = 0.878, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( location(A, I), interaction(J, A) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.3804293643423104;  // std dev = 0.248, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.012577992831221864;  // std dev = 3.212, 78.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=22 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.058277825493354994;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.34559202791050325;  // std dev = 0.774, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( enzyme(A, E), complex(C, D) )
%   | then return -0.12182766265918442;  // std dev = 0.222, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G) )
%   | | | then return 0.26114868457552504;  // std dev = 0.296, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.04987389087585151;  // std dev = 0.666, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(C, A) )
%   | | | then return -0.11868489320285942;  // std dev = 0.073, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.009952945440948002;  // std dev = 1.654, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   else if ( interaction(H, A), location(H, I) )
%   | then if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.2441692082469721;  // std dev = 0.297, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(A, K), interaction(L, H) )
%   | | | then return 0.004497809016022491;  // std dev = 2.539, 71.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=21 */
%   | | | else return 0.07352660668478227;  // std dev = 4.053, 101.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=37 */
%   | else return 0.30319986289163714;  // std dev = 1.003, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B), interaction(D, C) )
%   | then return 0.1861165779553198;  // std dev = 0.325, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | else return -0.09659047782008312;  // std dev = 0.227, 76.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=10 */
%   else if ( interaction(E, A), complex(A, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.3416148727454102;  // std dev = 0.237, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(H, E), complex(H, F) )
%   | | | then return -0.10191282106556879;  // std dev = 0.726, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.005133269291242109;  // std dev = 2.026, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5229150423467206;  // std dev = 1.223, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return -0.2289247261823181;  // std dev = 0.176, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.006048135312066754;  // std dev = 3.162, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | | else return 0.16911539069586362;  // std dev = 1.195, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
Inference time using transfer learning 9.537261962890625
Refined model CLL: -0.241174


******************************************
Best model found
******************************************
Results 

CLL : -0.246441 

AUC ROC : 0.971342 

AUC PR : 0.318875 

Precision : 0.237892 

Recall : 0.592199 

F1 : 0.339431 

Total Learning Time : 8.960149049758911 

Total Inference Time : 4.732985734939575 

Total revision time: 16.720886707305908
Best scored revision CLL: -0.241174


Results 

CLL : -0.246441 

AUC ROC : 0.971342 

AUC PR : 0.318875 

Precision : 0.237892 

Recall : 0.592199 

F1 : 0.339431 

Total Learning Time : 16.738136529922485 

Total Inference Time : 4.732985734939575 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.3545262813568115
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1631342723429146;  // std dev = 8.502, 341.000 (wgt'ed) examples reached here.  /* #neg=237 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1932723887094641;  // std dev = 5.786, 146.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=52 */
%   | | | else return 0.14120157239928255;  // std dev = 6.016, 171.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13666914522256804;  // std dev = 5.260, 126.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=41 */
%   | | | else return 0.16770181849130705;  // std dev = 6.383, 178.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.17366467369776903;  // std dev = 4.217, 75.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=29 */
%   | | | else return 0.10000941174142669;  // std dev = 7.186, 241.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0964043565080862;  // std dev = 8.354, 316.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06713732264921174;  // std dev = 8.424, 328.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7082086462117919;  // std dev = 0.998, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else return -0.2684120309747706;  // std dev = 0.106, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.11681125853983894;  // std dev = 3.766, 60.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=23 */
%   | | | else return 0.09135872419379519;  // std dev = 5.108, 115.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.061375711578903785;  // std dev = 4.084, 116.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=41 */
%   | | | else return 0.09714515753377595;  // std dev = 6.265, 167.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03948671451752718;  // std dev = 7.642, 306.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.026791726892485313;  // std dev = 7.672, 309.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=104 */
Inference time using transfer learning 3.4933648109436035
Parameter learned model CLL:-0.341919 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.502, 237, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.786, 94, 52], 'false,false,false,false': [6.016, 119, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.26, 85, 41], 'false,false,false,false': [6.383, 115, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.217, 46, 29], 'false,false,false,false': [7.186, 166, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.354, 212, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.424, 224, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.998, 1, 41], 'true,false': [0.106, 97, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.766, 37, 23], 'false,false,false,false': [5.108, 75, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.084, 75, 41], 'false,false,false,false': [6.265, 104, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.642, 202, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.672, 205, 104]}]
{'': [nan, 0.211969281309932], 'false': [nan, 0.21196928130993092], 'false,false': [nan, 0.211969281309932], 'false,false,false': [nan, 0.21196928130993092]}
{'': [nan, 0.22044203843207166], 'false': [nan, 0.22044203843206764], 'false,false': [nan, 0.22044203843207166], 'false,false,false': [0.22931131544379862, 0.21162066960774284]}
{'': [nan, 0.22524522156155405], 'false': [nan, 0.22524522156155405], 'false,false': [nan, 0.22524522156154983], 'false,false,false': [0.21956242333085602, 0.22886872721887602]}
{'': [nan, 0.22068540308687834], 'false': [nan, 0.22068540308687834], 'false,false': [nan, 0.2206854030868798], 'false,false,false': [0.23715555555555592, 0.214272234684152]}
{'': [nan, 0.22086021783236173], 'false': [nan, 0.22086021783236173], 'false,false': [nan, 0.22086021783236062], 'false,false,false': [nan, 0.22086021783236062]}
{'': [nan, 0.2163405929965152], 'false': [nan, 0.2163405929965152], 'false,false': [nan, 0.21634059299651714], 'false,false,false': [nan, 0.21634059299651562]}
{'': [0.2083551299350002, 0.23026190243329536], 'false': [nan, 0.23026190243329536], 'false,false': [nan, 0.23026190243329536], 'false,false,false': [0.23638888888888873, 0.22684310018903583], 'true': [0.023694744011614907, 0.00011625405436283731], 'true,true': [nan, 0.023694744011614907], 'true,true,false': [nan, 0.023694744011614907]}
{'': [nan, 0.19794856684482454], 'false': [nan, 0.19794856684482454], 'false,false': [nan, 0.19794856684482498], 'false,false,false': [0.14376296958346269, 0.23506202653182634]}
{'': [nan, 0.1908509500973122], 'false': [nan, 0.190850950097312], 'false,false': [nan, 0.190850950097312], 'false,false,false': [nan, 0.190850950097312]}
{'': [nan, 0.1904660538151943], 'false': [nan, 0.1904660538151943], 'false,false': [nan, 0.19046605381519377], 'false,false,false': [nan, 0.19046605381519377]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 8.89691686630249
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), complex(C, E) )
%   | then return 0.6081489350995123;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( phenotype(A, F) )
%   | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A) )
%   | | | then return 0.683545760496338;  // std dev = 3.013, 63.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=52 */
%   | | | else return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return -0.14185106490048763;  // std dev = 8.43e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12130682983635446;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.00814893509951222;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return 0.08803399257077657;  // std dev = 3.925, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7406283233335176;  // std dev = 0.071, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5385128322212613;  // std dev = 0.386, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(G, E), interaction(E, G) )
%   | | then if ( interaction(A, E), recursion_proteinclass(G, B) )
%   | | | then return 0.768230586396515;  // std dev = 0.082, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.03694507648533956;  // std dev = 3.171, 75.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=15 */
%   | | else if ( interaction(A, H), interaction(E, H) )
%   | | | then return -0.045767159348730706;  // std dev = 1.545, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | | else return 0.04334330447242444;  // std dev = 2.308, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.7330162161769558;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), complex(A, K) )
%   | | | then return 0.05404150038697693;  // std dev = 3.058, 65.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=14 */
%   | | | else return 0.18300215302787548;  // std dev = 4.642, 108.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=37 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.5969844112788918;  // std dev = 0.255, 38.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=35 */
%   | else return 0.07430226866236422;  // std dev = 0.394, 227.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=57 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( phenotype(A, H) )
%   | | then return 0.14130199523956363;  // std dev = 0.706, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, I), phenotype(G, J) )
%   | | | then return 0.15026426036904034;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5245429658029473;  // std dev = 0.811, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, K), complex(K, L) )
%   | | then if ( interaction(K, M), interaction(M, M) )
%   | | | then return 0.1647933737194119;  // std dev = 1.080, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.385733322857624;  // std dev = 0.716, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( location(A, N) )
%   | | | then return 0.0868613892695313;  // std dev = 0.810, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.1271063910207097;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then return 0.03546712539651887;  // std dev = 0.350, 92.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=28 */
%   else if ( interaction(D, A), location(A, E) )
%   | then if ( phenotype(A, F), phenotype(D, F) )
%   | | then if ( location(D, E), complex(D, G) )
%   | | | then return 0.26309790791229354;  // std dev = 1.848, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.12953453783373153;  // std dev = 1.787, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( interaction(A, H), location(H, E) )
%   | | | then return 0.06772849570816854;  // std dev = 2.150, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.1434264935851978;  // std dev = 4.580, 115.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=40 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.733970690494349;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.2160024842706239;  // std dev = 0.252, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.15724573365482541;  // std dev = 1.204, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.05350738652425834;  // std dev = 1.579, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( complex(A, D), phenotype(A, E) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.4695449775861977;  // std dev = 0.119, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.05277263542474622;  // std dev = 0.345, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.22295445386977125;  // std dev = 0.421, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return -0.00138735047687484;  // std dev = 0.334, 103.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=25 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.31840071963425864;  // std dev = 0.339, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( location(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), phenotype(J, K) )
%   | | | then return 0.09548802088718314;  // std dev = 4.905, 136.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=42 */
%   | | | else return 0.22235655793842007;  // std dev = 1.914, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.10159885212348983;  // std dev = 0.811, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.0063963130619021724;  // std dev = 1.462, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(C, E) )
%   | then return 0.13878020368012575;  // std dev = 0.704, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(C, C) )
%   | | then return 0.3388587099802424;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.43355073227942553;  // std dev = 0.067, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( phenotype(F, G), phenotype(A, G) )
%   | | then return 0.012931245421708279;  // std dev = 0.771, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5705726174362878;  // std dev = 0.357, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( phenotype(I, J), location(A, K) )
%   | | | then return -0.013690207371072847;  // std dev = 2.690, 68.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=14 */
%   | | | else return -0.1849230344144107;  // std dev = 0.949, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.10491205572323795;  // std dev = 2.729, 49.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
%   | | | else return 0.05282484204764518;  // std dev = 5.274, 168.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=48 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5160284646428286;  // std dev = 0.175, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.18081960473068256;  // std dev = 0.040, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.37545058773921985;  // std dev = 0.111, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(E, H), interaction(H, E) )
%   | | | then return -0.11380785131868067;  // std dev = 1.471, 27.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | | else return 0.03337602639089427;  // std dev = 0.928, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.4299196903115801;  // std dev = 0.359, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.13286414561090729;  // std dev = 1.941, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.08208138275079159;  // std dev = 4.009, 87.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=30 */
%   | | | else return 0.010871775251261153;  // std dev = 2.581, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, C) )
%   | then return 0.18106770586973067;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, D), phenotype(A, E) )
%   | | then return 0.2813285856856343;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2342143130787419;  // std dev = 0.037, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, A) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then return -0.13295866375312593;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.16885569651939836;  // std dev = 0.100, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3673676088922719;  // std dev = 1.333, 29.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=25 */
%   | | | else return -0.07309310530529578;  // std dev = 2.835, 106.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=15 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.08419699645989767;  // std dev = 4.439, 112.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=39 */
%   | | | else return 0.02531095678415123;  // std dev = 2.106, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, C), interaction(C, E) )
%   | | then return 0.2578476496174533;  // std dev = 0.227, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | | else if ( phenotype(C, F), complex(E, G) )
%   | | | then return -0.3330843873461213;  // std dev = 0.979, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.34193093512665135;  // std dev = 0.431, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, C) )
%   | | then return -0.15881112443069775;  // std dev = 0.116, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return 0.006421695215258616;  // std dev = 0.360, 186.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=52 */
%   else if ( complex(A, H), phenotype(A, I) )
%   | then return 0.3442026595062174;  // std dev = 0.313, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then return 0.31535978774793144;  // std dev = 0.630, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.12321828888613694;  // std dev = 1.892, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return -4.765210610683844E-4;  // std dev = 1.894, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( phenotype(C, E), complex(C, F) )
%   | then return -0.0346296350311284;  // std dev = 0.338, 81.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=23 */
%   | else if ( enzyme(C, D) )
%   | | then return -0.08074528991279345;  // std dev = 0.336, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( enzyme(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.6149159761940687;  // std dev = 0.307, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.2399006688473314;  // std dev = 0.110, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( location(A, H), interaction(A, I) )
%   | then return 0.011608457713636134;  // std dev = 0.267, 112.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=39 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.5208060911394597;  // std dev = 1.587, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | | else return -0.22460154462323378;  // std dev = 0.204, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.09112577468645813;  // std dev = 0.844, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.04332078357118838;  // std dev = 2.078, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
Inference time using transfer learning 8.487075090408325
Refined model CLL: -0.229032


******************************************
Best model found
******************************************
Results 

CLL : -0.238415 

AUC ROC : 0.955979 

AUC PR : 0.321235 

Precision : 0.372549 

Recall : 0.430189 

F1 : 0.399299 

Total Learning Time : 8.89691686630249 

Total Inference Time : 5.563985109329224 

Total revision time: 17.869441986083984
Best scored revision CLL: -0.229032


Results 

CLL : -0.238415 

AUC ROC : 0.955979 

AUC PR : 0.321235 

Precision : 0.372549 

Recall : 0.430189 

F1 : 0.399299 

Total Learning Time : 17.88669180870056 

Total Inference Time : 5.563985109329224 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.287895917892456
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1855510703308291;  // std dev = 7.866, 281.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.11579610172388964;  // std dev = 6.052, 181.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=51 */
%   | | | else return 0.15942497131960903;  // std dev = 5.259, 126.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14532100981158894;  // std dev = 5.428, 133.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=44 */
%   | | | else return 0.16208942268979973;  // std dev = 5.595, 138.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.10055615883951191;  // std dev = 4.248, 85.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=26 */
%   | | | else return 0.1304217141653493;  // std dev = 6.587, 193.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12644875223916174;  // std dev = 7.684, 258.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08495600049216957;  // std dev = 7.800, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.733215998990778;  // std dev = 0.047, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2670648790003026;  // std dev = 0.063, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.031227359673816787;  // std dev = 4.180, 83.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=25 */
%   | | | else return 0.08641733007350282;  // std dev = 3.821, 63.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.07793301521995455;  // std dev = 4.125, 117.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=44 */
%   | | | else return 0.07945070520117511;  // std dev = 5.526, 131.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03234540310164684;  // std dev = 7.039, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 1.7347838864831486E-4;  // std dev = 7.169, 304.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=92 */
Inference time using transfer learning 3.832730531692505
Parameter learned model CLL:-0.327848 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.866, 189, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.052, 130, 51], 'false,false,false,false': [5.259, 85, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.428, 89, 44], 'false,false,false,false': [5.595, 90, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.248, 59, 26], 'false,false,false,false': [6.587, 127, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.684, 166, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.8, 179, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.047, 0, 44], 'true,false': [0.063, 77, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.18, 58, 25], 'false,false,false,false': [3.821, 40, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.125, 73, 44], 'false,false,false,false': [5.526, 83, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.039, 184, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.169, 212, 92]}]
{'': [nan, 0.22020997707729253], 'false': [nan, 0.22020997707729223], 'false,false': [nan, 0.22020997707729253], 'false,false,false': [nan, 0.22020997707729223]}
{'': [nan, 0.20986960073847163], 'false': [nan, 0.20986960073846825], 'false,false': [nan, 0.20986960073847163], 'false,false,false': [0.20237477488476963, 0.21951373141849417]}
{'': [nan, 0.22428208963266133], 'false': [nan, 0.22428208963266133], 'false,false': [nan, 0.22428208963266014], 'false,false,false': [0.22150919905301353, 0.22681651723549148]}
{'': [nan, 0.2212029010924146], 'false': [nan, 0.2212029010924146], 'false,false': [nan, 0.22120290109241506], 'false,false,false': [0.21231833910034673, 0.2248430721372369]}
{'': [nan, 0.22887803832402162], 'false': [nan, 0.22887803832402162], 'false,false': [nan, 0.22887803832402093], 'false,false,false': [nan, 0.22887803832402093]}
{'': [nan, 0.22450632525574174], 'false': [nan, 0.22450632525574174], 'false,false': [nan, 0.22450632525574143], 'false,false,false': [nan, 0.2245063252557419]}
{'': [0.23158564291067982, 0.2204256466731253], 'true': [5.025448802084301e-05, 5.0911925070509175e-05], 'false': [nan, 0.2204256466731253], 'false,false': [nan, 0.2204256466731253], 'false,false,false': [0.21048047612135307, 0.23179642227261257], 'true,true': [nan, 5.025448802084301e-05], 'true,true,false': [nan, 5.025448802084301e-05]}
{'': [nan, 0.19172789271464746], 'false': [nan, 0.19172789271464746], 'false,false': [nan, 0.19172789271464707], 'false,false,false': [0.1454354868568154, 0.2330719318805377]}
{'': [nan, 0.17951412728375457], 'false': [nan, 0.17951412728375452], 'false,false': [nan, 0.17951412728375452], 'false,false,false': [nan, 0.17951412728375452]}
{'': [nan, 0.1690786189401334], 'false': [nan, 0.1690786189401334], 'false,false': [nan, 0.169078618940134], 'false,false,false': [nan, 0.169078618940134]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 6.413510799407959
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( complex(A, D) )
%   | | then return 0.011995088945666163;  // std dev = 0.361, 39.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | | else if ( interaction(C, E), enzyme(E, F) )
%   | | | then return 0.1273797043302816;  // std dev = 2.262, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.35814893509951234;  // std dev = 2.550, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   else if ( enzyme(A, G) )
%   | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.8081489350995122;  // std dev = 0.218, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else return -0.1418510649004877;  // std dev = 2.98e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( phenotype(A, I), interaction(A, J) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.14255260482428264;  // std dev = 0.451, 109.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=31 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, E) )
%   | then return 0.7208991229299645;  // std dev = 0.009, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( phenotype(A, F), location(A, G) )
%   | | then return 0.8405716530376331;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7821792241457427;  // std dev = 0.116, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.1477447924087692;  // std dev = 0.021, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.7395436849364613;  // std dev = 0.110, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(I, A), interaction(A, J) )
%   | | | then return 0.040570365314934506;  // std dev = 3.489, 79.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=16 */
%   | | | else return 0.13363330855787522;  // std dev = 5.981, 185.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=56 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.6271826482942202;  // std dev = 0.118, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.0753668532504121;  // std dev = 0.412, 146.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=38 */
%   else if ( phenotype(A, E), complex(A, F) )
%   | then if ( enzyme(A, G) )
%   | | then return 0.18343165220974156;  // std dev = 0.410, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( complex(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.7998449889096689;  // std dev = 0.116, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.17890056225257847;  // std dev = 1.83e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7322774438424181;  // std dev = 0.242, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1517242063481359;  // std dev = 0.045, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.11149935776318327;  // std dev = 1.876, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.17921795093788942;  // std dev = 3.147, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.46975193956393646;  // std dev = 0.172, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(E, A), enzyme(E, D) )
%   | | then return -0.1512951436682013;  // std dev = 0.029, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.059531332450927045;  // std dev = 0.415, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   else if ( interaction(F, A), complex(A, G) )
%   | then if ( phenotype(F, H), phenotype(A, I) )
%   | | then if ( interaction(A, J) )
%   | | | then return 0.2946022165648783;  // std dev = 1.396, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.18041282390132043;  // std dev = 1.680, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else return 0.05469302966716909;  // std dev = 0.351, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.6319895838072174;  // std dev = 2.171, 49.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=43 */
%   | | | else return -0.19224180642335115;  // std dev = 0.190, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return 0.07297183434585243;  // std dev = 0.419, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( location(C, E), location(A, E) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.40513060634169273;  // std dev = 0.176, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, F), interaction(F, G) )
%   | | | then return -0.026243684889321075;  // std dev = 1.583, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.09967095592966423;  // std dev = 2.065, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | else return 0.003524078872414327;  // std dev = 0.347, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.39870378782627164;  // std dev = 0.087, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( complex(A, I), interaction(A, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.39289763193894806;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.014586629344975881;  // std dev = 2.572, 53.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=9 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.06807060525616727;  // std dev = 3.187, 70.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=21 */
%   | | | else return 0.16490520259519006;  // std dev = 3.102, 52.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=23 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( enzyme(A, D), recursion_proteinclass(C, B) )
%   | then return 0.2813970510678897;  // std dev = 0.061, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.03724379021905283;  // std dev = 0.329, 39.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(G, A) )
%   | | then return 0.32945879087621943;  // std dev = 0.981, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(E, H) )
%   | | | then return 0.11850840530386565;  // std dev = 1.460, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.018603606152142675;  // std dev = 0.948, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( complex(A, I), interaction(A, J) )
%   | | then if ( complex(J, I) )
%   | | | then return 0.1340277100488748;  // std dev = 1.642, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return -0.027959947158999708;  // std dev = 1.936, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.419798929675545;  // std dev = 0.101, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.06615659803148294;  // std dev = 4.774, 156.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=52 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5370098877346856;  // std dev = 0.206, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.18985086223433384;  // std dev = 0.036, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( enzyme(A, E), location(A, F) )
%   | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), location(G, F) )
%   | | | then return 0.4716828199360095;  // std dev = 0.211, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.1486909910887369;  // std dev = 1.070, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.19035380441679373;  // std dev = 0.067, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( phenotype(A, I), interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.4702116270447445;  // std dev = 0.350, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.2145523678465634;  // std dev = 0.259, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.06483843795541859;  // std dev = 2.983, 52.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=18 */
%   | | | else return 0.14531773752245014;  // std dev = 2.256, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(E, D), enzyme(A, F) )
%   | then return -0.013882770911568242;  // std dev = 0.250, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | else if ( complex(A, G), enzyme(A, H) )
%   | | then return 0.42042129674597156;  // std dev = 0.735, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.05708306006003314;  // std dev = 0.348, 96.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=36 */
%   else if ( enzyme(A, I) )
%   | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | then return 0.524089789858204;  // std dev = 0.162, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.21039056295558506;  // std dev = 0.058, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( interaction(A, K), interaction(K, K) )
%   | | then if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.06021251500668686;  // std dev = 0.940, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.04893784147280838;  // std dev = 1.348, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return 0.004662745602749999;  // std dev = 1.200, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.06293795218685058;  // std dev = 2.234, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.1559360759939204;  // std dev = 0.040, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.31667300402891013;  // std dev = 0.216, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), enzyme(A, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.3890846351574114;  // std dev = 0.331, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.12879859072832328;  // std dev = 0.089, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.03152454757725626;  // std dev = 2.247, 69.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=22 */
%   | else if ( interaction(H, A), interaction(A, I) )
%   | | then if ( phenotype(A, J), interaction(I, K) )
%   | | | then return -0.1404672743666215;  // std dev = 0.884, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.0018517285195425043;  // std dev = 1.907, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | else if ( phenotype(A, L), complex(A, M) )
%   | | | then return 0.05908459414937981;  // std dev = 1.318, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return -0.009287841178418283;  // std dev = 4.151, 136.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=39 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then if ( enzyme(A, E), interaction(C, F) )
%   | | then return 0.10031950644816151;  // std dev = 0.013, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.13855128617537896;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.18276750393559524;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.25653608705309566;  // std dev = 0.193, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.2104799779124039;  // std dev = 0.150, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1131451904713475;  // std dev = 0.048, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.06722914772394689;  // std dev = 3.083, 68.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return -0.022785195372432735;  // std dev = 3.273, 118.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=29 */
%   | | | else return 0.03301808608592619;  // std dev = 2.609, 60.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=21 */
Inference time using transfer learning 17.741575479507446
Refined model CLL: -0.221768


******************************************
Best model found
******************************************
Results 

CLL : -0.223612 

AUC ROC : 0.978855 

AUC PR : 0.287327 

Precision : 0.271484 

Recall : 0.501805 

F1 : 0.352345 

Total Learning Time : 6.413510799407959 

Total Inference Time : 3.0781445503234863 

Total revision time: 12.666759729385376
Best scored revision CLL: -0.221768


Results 

CLL : -0.223612 

AUC ROC : 0.978855 

AUC PR : 0.287327 

Precision : 0.271484 

Recall : 0.501805 

F1 : 0.352345 

Total Learning Time : 12.684009552001953 

Total Inference Time : 3.0781445503234863 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.2369697093963623
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21798157108277627;  // std dev = 7.420, 239.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1353725397565128;  // std dev = 6.008, 170.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=52 */
%   | | | else return 0.1595872741939786;  // std dev = 4.772, 103.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1972209524233946;  // std dev = 4.136, 72.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=28 */
%   | | | else return 0.14311069869616544;  // std dev = 6.209, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.12265484455172329;  // std dev = 3.527, 55.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
%   | | | else return 0.09724337695532888;  // std dev = 6.781, 213.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10524883623646311;  // std dev = 7.524, 252.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09335711633003652;  // std dev = 7.485, 246.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7167807627831387;  // std dev = 0.000600, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.28320092169854416;  // std dev = 0.000943, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.08740573403557968;  // std dev = 4.614, 93.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=33 */
%   | | | else return 0.09544347931840302;  // std dev = 3.976, 68.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03446507887945371;  // std dev = 3.369, 83.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=28 */
%   | | | else return 0.05710793981828547;  // std dev = 6.166, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06261048659773998;  // std dev = 6.895, 233.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.031186685568684102;  // std dev = 6.986, 247.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=86 */
Inference time using transfer learning 3.7978627681732178
Parameter learned model CLL:-0.360154 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.42, 153, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.008, 118, 52], 'false,false,false,false': [4.772, 69, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.136, 44, 28], 'false,false,false,false': [6.209, 115, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.527, 36, 19], 'false,false,false,false': [6.781, 146, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.524, 166, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.485, 160, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0006, 0, 28], 'true,false': [0.000943, 63, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.614, 60, 33], 'false,false,false,false': [3.976, 43, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.369, 55, 28], 'false,false,false,false': [6.166, 110, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.895, 147, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.986, 161, 86]}]
{'': [nan, 0.23035311006460057], 'false': [nan, 0.23035311006460032], 'false,false': [nan, 0.23035311006460057], 'false,false,false': [nan, 0.23035311006460032]}
{'': [nan, 0.21578177622133504], 'false': [nan, 0.21578177622133551], 'false,false': [nan, 0.21578177622133504], 'false,false,false': [0.21231833910034398, 0.2211330002827787]}
{'': [nan, 0.22780997119044455], 'false': [nan, 0.22780997119044455], 'false,false': [nan, 0.227809971190445], 'false,false,false': [0.23761087494261787, 0.22287053251619535]}
{'': [nan, 0.21809216400007425], 'false': [nan, 0.21809216400007425], 'false,false': [nan, 0.2180921640000742], 'false,false,false': [0.22611570247933838, 0.2158878364697003]}
{'': [nan, 0.22466474190444777], 'false': [nan, 0.22466474190444777], 'false,false': [nan, 0.22466474190444827], 'false,false,false': [nan, 0.22466474190444827]}
{'': [nan, 0.22773282749019227], 'false': [nan, 0.22773282749019227], 'false,false': [nan, 0.22773282749019222], 'false,false,false': [nan, 0.2277328274901924]}
{'': [0.21300996222853763, 0.23044524084517196], 'false': [nan, 0.23044524084517196], 'false,false': [nan, 0.23044524084517196], 'false,false,false': [0.22892819979188334, 0.23248269896193743], 'true': [1.287100140753442e-08, 1.4124556452133768e-08], 'true,true': [nan, 1.287100140753442e-08], 'true,true,false': [nan, 1.287100140753442e-08]}
{'': [nan, 0.19681462834714059], 'false': [nan, 0.19681462834714059], 'false,false': [nan, 0.19681462834714034], 'false,false,false': [0.1367490174848857, 0.22632036241384734]}
{'': [nan, 0.20406191161920936], 'false': [nan, 0.20406191161920983], 'false,false': [nan, 0.20406191161920983], 'false,false,false': [nan, 0.20406191161920983]}
{'': [nan, 0.19760888179613986], 'false': [nan, 0.19760888179613986], 'false,false': [nan, 0.19760888179613956], 'false,false,false': [nan, 0.19760888179613956]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 6.161782264709473
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, C), interaction(C, G) )
%   | | | then return -0.050941973991396876;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.15444523139580862;  // std dev = 2.373, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( complex(A, H), interaction(C, I) )
%   | | | then return 0.19148226843284566;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, K), interaction(K, K) )
%   | | then return 0.01943925768015746;  // std dev = 0.368, 31.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.233148935099511;  // std dev = 4.330, 80.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=30 */
%   | | | else return 0.14800400756328025;  // std dev = 3.769, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( complex(A, D), complex(C, E) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.7392760700555665;  // std dev = 0.108, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.06666137355015077;  // std dev = 0.414, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.7554270212133389;  // std dev = 0.051, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(G, C), recursion_proteinclass(G, B) )
%   | | | then return 0.8378408657086673;  // std dev = 0.023, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.14643692532030195;  // std dev = 5.156, 126.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=39 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.8035067162160577;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.610880557134933;  // std dev = 1.252, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return -0.16454006503401242;  // std dev = 0.040, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.004337579435265114;  // std dev = 0.380, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), enzyme(C, E) )
%   | then return 0.14725212157701484;  // std dev = 1.045, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.5486935938908191;  // std dev = 0.006, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.7281027818636167;  // std dev = 0.171, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.1550526088105366;  // std dev = 0.029, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.5995891386626724;  // std dev = 0.130, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.038024280178116404;  // std dev = 2.941, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.12297826581138689;  // std dev = 3.921, 74.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=23 */
%   | | | else return 0.1880064463449866;  // std dev = 4.310, 84.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=32 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4283217197508833;  // std dev = 0.266, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( enzyme(A, F) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.033273590641538335;  // std dev = 1.907, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.2115788323570916;  // std dev = 1.590, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(I, A), complex(A, E) )
%   | | | then return -0.1379922329893142;  // std dev = 0.780, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return -0.031629485604551165;  // std dev = 2.140, 35.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=6 */
%   | else if ( complex(A, J), phenotype(A, K) )
%   | | then if ( complex(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.756229235519004;  // std dev = 0.163, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.19681661058440958;  // std dev = 0.151, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.21375495607896802;  // std dev = 1.971, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.11283224697060112;  // std dev = 4.844, 111.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=37 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.343575023818889;  // std dev = 0.084, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.04564979180572393;  // std dev = 0.781, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.48234543577779243;  // std dev = 0.212, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F), phenotype(F, H) )
%   | | then return 0.23663822344827845;  // std dev = 0.734, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.5722443927685892;  // std dev = 0.129, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A), interaction(A, I) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12929695311697986;  // std dev = 0.070, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.035676451849243805;  // std dev = 1.519, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.19254451104100065;  // std dev = 2.488, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | else return 0.06641935393349056;  // std dev = 5.605, 165.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=48 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D) )
%   | then return 0.044969962900544835;  // std dev = 0.552, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then return 0.2542214848197448;  // std dev = 0.068, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.42994810687664653;  // std dev = 0.210, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.11759361892747243;  // std dev = 0.056, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then if ( complex(G, H), phenotype(G, I) )
%   | | | then return 0.17623971628329987;  // std dev = 3.884, 69.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=30 */
%   | | | else return 0.02557323796849475;  // std dev = 2.634, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.36905366573192905;  // std dev = 0.196, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.03197238287100424;  // std dev = 4.093, 98.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=26 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.26138293093290094;  // std dev = 0.091, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.5030901130018338;  // std dev = 1.091, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.755879087929183;  // std dev = 0.045, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.19675128691530724;  // std dev = 0.059, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.26827182019669493;  // std dev = 0.071, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( location(A, J), location(H, J) )
%   | | | then return -0.10581877767360222;  // std dev = 1.905, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | | else return 0.07572289809465046;  // std dev = 1.338, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(A, K), location(A, L) )
%   | | | then return 0.09853051777288466;  // std dev = 2.960, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   | | | else return 0.02562507957005646;  // std dev = 4.115, 81.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=24 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.16723357593773924;  // std dev = 0.030, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2619788776233833;  // std dev = 0.149, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.10282660216911736;  // std dev = 0.100, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( complex(E, G) )
%   | | | then return 0.04204389198649779;  // std dev = 1.563, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return -0.04201715079117785;  // std dev = 2.467, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | else if ( phenotype(A, H), complex(A, I) )
%   | | | then return -0.024838341266139458;  // std dev = 1.323, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return 0.0905211460633563;  // std dev = 5.147, 124.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=47 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B), interaction(A, E) )
%   | then return 0.25917853804425683;  // std dev = 0.307, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return -0.05173917490942753;  // std dev = 0.367, 162.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=38 */
%   else if ( interaction(A, F), phenotype(F, G) )
%   | then if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.27407861468449524;  // std dev = 1.015, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.029478076823940158;  // std dev = 0.508, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.01696873819676952;  // std dev = 0.370, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | else if ( phenotype(A, K), interaction(L, A) )
%   | | then if ( interaction(L, M), recursion_proteinclass(M, B) )
%   | | | then return 0.6807842930197394;  // std dev = 0.187, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.2652709452406877;  // std dev = 0.263, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( complex(A, N) )
%   | | | then return 0.04906311116175776;  // std dev = 0.777, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.1877370304137173;  // std dev = 1.580, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.32611180206986934;  // std dev = 0.177, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.06308976554150153;  // std dev = 0.343, 113.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=25 */
%   | else if ( phenotype(G, C), recursion_proteinclass(G, B) )
%   | | then return 0.4490107159529068;  // std dev = 0.308, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | else return -0.22472541332499474;  // std dev = 0.062, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( enzyme(A, H), complex(A, I) )
%   | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | then return 0.5840948845561778;  // std dev = 0.046, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.20836660689243527;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, K), interaction(L, A) )
%   | | then return -0.022330212101546745;  // std dev = 0.283, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.17099224806975816;  // std dev = 1.272, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.06645713986643;  // std dev = 2.745, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
Inference time using transfer learning 11.425814390182495
Refined model CLL: -0.267011


******************************************
Best model found
******************************************
Results 

CLL : -0.273622 

AUC ROC : 0.895144 

AUC PR : 0.153266 

Precision : 0.183074 

Recall : 0.374558 

F1 : 0.24594 

Total Learning Time : 6.161782264709473 

Total Inference Time : 2.689913272857666 

Total revision time: 11.676198244094849
Best scored revision CLL: -0.267011


Results 

CLL : -0.273622 

AUC ROC : 0.895144 

AUC PR : 0.153266 

Precision : 0.183074 

Recall : 0.374558 

F1 : 0.24594 

Total Learning Time : 11.693448066711426 

Total Inference Time : 2.689913272857666 

