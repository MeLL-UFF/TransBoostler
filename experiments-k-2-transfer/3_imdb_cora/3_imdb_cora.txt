Starting experiment 3_imdb_cora 

Loading pre-trained trees.
Starting experiments for fasttext using euclidean 

Run: 1

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.917236328125
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.58e-06, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.19988648066451323;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20495251271587128;  // std dev = 39.914, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17361681718423838;  // std dev = 39.850, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14396423475540687;  // std dev = 39.800, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11723098312291419;  // std dev = 39.763, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09407131629837283;  // std dev = 39.736, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07462655346410912;  // std dev = 39.717, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05868548817565903;  // std dev = 39.704, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.045846860473955774;  // std dev = 39.695, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03564119233601765;  // std dev = 39.689, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning 0.702728271484375
Parameter learned model CLL:-0.644902 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.58e-06, 0, 399], 'false': [38.485, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.914, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.85, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.8, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.763, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.736, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.717, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.704, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.695, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.689, 4, 2]}]
{'': [6.268447192670558e-15, 0.22495299551614867]}
{'': [nan, 0.2281425894551251]}
{'': [nan, 0.22741391766586597]}
{'': [nan, 0.22684336316618148]}
{'': [nan, 0.22641852043109512]}
{'': [nan, 0.22611334723983578]}
{'': [nan, 0.2258990660139089]}
{'': [nan, 0.2257503526967285]}
{'': [nan, 0.2256474596747027]}
{'': [nan, 0.22557604227204306]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
Model training time 6583.860103845596
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.58e-06, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21728033821754725;  // std dev = 35.215, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.15514141630252049;  // std dev = 7.452, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.43157550852608434;  // std dev = 5.914, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.06760839455897227;  // std dev = 7.001, 296.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=62 */
%   | | | else return 0.04035232493002018;  // std dev = 5.930, 236.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=43 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.2209004110830832;  // std dev = 0.482, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.17536335693533175;  // std dev = 7.621, 270.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=95 */
%   | | | else return 0.38418320133830614;  // std dev = 2.513, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.4116195750630829;  // std dev = 4.221, 76.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=47 */
%   | | | else return 0.18601437608813015;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.42583397694508146;  // std dev = 3.544, 54.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=34 */
%   | | | else return 0.6392692448186323;  // std dev = 1.246, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | then return 0.04861581877207112;  // std dev = 0.398, 532.000 (wgt'ed) examples reached here.  /* #neg=427 #pos=105 */
%   | else return 0.027575939043345758;  // std dev = 0.378, 248.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=43 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.1865974967768383;  // std dev = 0.481, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return 0.048446667835526626;  // std dev = 4.344, 102.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=25 */
%   | | | else return 0.22526345358706357;  // std dev = 6.616, 196.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=86 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return 0.3440073664783103;  // std dev = 4.197, 76.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=47 */
%   | | | else return 0.11105286164872374;  // std dev = 2.069, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.35146727003442685;  // std dev = 3.522, 54.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=34 */
%   | | | else return 0.4967732231972436;  // std dev = 1.217, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | then return 0.04345748919292545;  // std dev = 0.398, 532.000 (wgt'ed) examples reached here.  /* #neg=427 #pos=105 */
%   | else return 0.02174184875037519;  // std dev = 0.378, 248.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=43 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.15438935871205028;  // std dev = 0.480, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return 0.02020230680445748;  // std dev = 4.344, 102.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=25 */
%   | | | else return 0.1857059198509028;  // std dev = 6.584, 196.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=86 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return 0.2707964021261726;  // std dev = 4.192, 76.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=47 */
%   | | | else return 0.0882313560202766;  // std dev = 2.069, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.27585876640937745;  // std dev = 3.519, 54.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=34 */
%   | | | else return 0.3738851245350983;  // std dev = 1.208, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | then return 0.05826540941114191;  // std dev = 0.411, 83.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=18 */
%   | else return 0.028580554627108595;  // std dev = 0.389, 697.000 (wgt'ed) examples reached here.  /* #neg=567 #pos=130 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.12506079096036926;  // std dev = 0.480, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return 0.014425978850460631;  // std dev = 4.344, 102.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=25 */
%   | | | else return 0.14969207867180576;  // std dev = 6.562, 196.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=86 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then return 0.36923028531018554;  // std dev = 0.327, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.1681292911679818;  // std dev = 4.598, 88.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=49 */
%   | | | else return 0.2288090322027297;  // std dev = 3.712, 75.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=53 */
%   else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | then if ( haswordtitle(M, K) )
%   | | then return 0.1254713031178872;  // std dev = 0.454, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else return -0.08641400593284641;  // std dev = 0.257, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | else return 0.024307730246201472;  // std dev = 0.389, 697.000 (wgt'ed) examples reached here.  /* #neg=567 #pos=130 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.10003864315819572;  // std dev = 0.479, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return -0.006125457375253493;  // std dev = 4.344, 102.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=25 */
%   | | | else return 0.11857654570102677;  // std dev = 6.547, 196.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=86 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( haswordauthor(I, G) )
%   | | | then return 0.3396318782650272;  // std dev = 0.890, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.11761221869514182;  // std dev = 4.579, 89.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=50 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.16746789362270556;  // std dev = 3.509, 54.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=34 */
%   | | | else return 0.23096601352261126;  // std dev = 1.218, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | then return 0.029381766860166896;  // std dev = 0.397, 532.000 (wgt'ed) examples reached here.  /* #neg=427 #pos=105 */
%   | else return 0.01125285556078711;  // std dev = 0.378, 248.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=43 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.0788695429787509;  // std dev = 0.479, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return -0.006509758879657849;  // std dev = 4.344, 102.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=25 */
%   | | | else return 0.09273103052243974;  // std dev = 6.538, 196.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=86 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then return 0.2853330983900205;  // std dev = 0.320, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.08538371429965871;  // std dev = 4.569, 88.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=49 */
%   | | | else return 0.1385415858186911;  // std dev = 3.715, 75.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=53 */
%   else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | then if ( haswordtitle(M, K) )
%   | | then return 0.11425319548438408;  // std dev = 0.452, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else return -0.0965821476545434;  // std dev = 0.258, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | else return 0.017584695940250694;  // std dev = 0.389, 697.000 (wgt'ed) examples reached here.  /* #neg=567 #pos=130 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.061872849389196426;  // std dev = 0.479, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return -0.020055312276519487;  // std dev = 4.344, 102.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=25 */
%   | | | else return 0.0718598384760615;  // std dev = 6.532, 196.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=86 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return 0.0978654016608641;  // std dev = 4.141, 76.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=47 */
%   | | | else return -0.06534131056809946;  // std dev = 2.079, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.10282427137768584;  // std dev = 3.493, 54.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=34 */
%   | | | else return 0.15589936901412837;  // std dev = 1.234, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | then return 0.02252624602039961;  // std dev = 0.397, 532.000 (wgt'ed) examples reached here.  /* #neg=427 #pos=105 */
%   | else return 0.006210726355714847;  // std dev = 0.378, 248.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=43 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.04804149608272602;  // std dev = 0.479, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return -0.017077325148279032;  // std dev = 4.344, 102.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=25 */
%   | | | else return 0.05533213452940433;  // std dev = 6.528, 196.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=86 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then return 0.1970881339434743;  // std dev = 0.320, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.0446754350744368;  // std dev = 4.568, 89.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=50 */
%   | | | else return 0.08535424329646353;  // std dev = 3.697, 74.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=52 */
%   else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | then if ( title(M, L), venue(M, B) )
%   | | then return 0.030067079777004464;  // std dev = 0.403, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | else return -0.003375371352473503;  // std dev = 0.383, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | else return 0.00534479625833549;  // std dev = 0.378, 248.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=43 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.037320286449903914;  // std dev = 0.479, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.00832857168133554;  // std dev = 7.438, 270.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=95 */
%   | | | else return 0.12355836954758888;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then return 0.1677316934341207;  // std dev = 0.319, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.029633697295565076;  // std dev = 4.558, 88.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=49 */
%   | | | else return 0.06955828516859167;  // std dev = 3.708, 75.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=53 */
%   else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | then if ( haswordtitle(N, L) )
%   | | then return 0.09693039311637;  // std dev = 0.452, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else return -0.08452383690773373;  // std dev = 0.258, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | else return 0.009936408255898463;  // std dev = 0.389, 697.000 (wgt'ed) examples reached here.  /* #neg=567 #pos=130 */
Inference time using transfer learning 1.7410402297973633
Refined model CLL: -0.630398


******************************************
Best model found
******************************************
Results 

CLL : -0.59487 

AUC ROC : 0.683045 

AUC PR : 0.572481 

Precision : 0.866667 

Recall : 0.282609 

F1 : 0.42623 

Total Learning Time : 6583.860103845596 

Total Inference Time : 28.50660276412964 

Total revision time: 6619.669302225113
Best scored revision CLL: -0.630398


Results 

CLL : -0.59487 

AUC ROC : 0.683045 

AUC PR : 0.572481 

Precision : 0.866667 

Recall : 0.282609 

F1 : 0.42623 

Total Learning Time : 6619.685615777969 

Total Inference Time : 28.50660276412964 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.429105520248413
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.53e-06, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.15094741899085268;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16583590999849213;  // std dev = 37.931, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14149265689604326;  // std dev = 37.869, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1186820619021793;  // std dev = 37.818, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09808948940354419;  // std dev = 37.779, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08007442348372748;  // std dev = 37.749, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06471334013203571;  // std dev = 37.726, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05188008215870527;  // std dev = 37.709, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04132876062552036;  // std dev = 37.696, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03276039551785497;  // std dev = 37.687, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
Inference time using transfer learning 0.7473905086517334
Parameter learned model CLL:-0.614315 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.53e-06, 0, 392], 'false': [36.21, 4, 1]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.931, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.869, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.818, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.779, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.749, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.726, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.709, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.696, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.687, 4, 2]}]
{'': [5.945357584931451e-15, 0.20706753172221312]}
{'': [nan, 0.21397140612518975]}
{'': [nan, 0.21327128052814734]}
{'': [nan, 0.21270421286372368]}
{'': [nan, 0.21226023874202504]}
{'': [nan, 0.21192096503730035]}
{'': [nan, 0.21166570556345632]}
{'': [nan, 0.2114752686691328]}
{'': [nan, 0.21133362022794774]}
{'': [nan, 0.21122817856883844]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
Model training time 5784.137795209885
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.53e-06, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.17115949497199173;  // std dev = 32.852, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.13612727444969389;  // std dev = 7.456, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.331017152153777;  // std dev = 5.671, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001355197131893661;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.1840144326866141;  // std dev = 0.470, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return 0.1028931079620797;  // std dev = 4.463, 103.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=27 */
%   | | | else return 0.2271450704657799;  // std dev = 6.769, 209.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=85 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return 0.37587742140570535;  // std dev = 3.976, 65.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=37 */
%   | | | else return 0.18790273468420615;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.5840507361119928;  // std dev = 0.866, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.39789012938481155;  // std dev = 4.159, 81.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=50 */
%   else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | then return 0.015239036175068749;  // std dev = 0.365, 585.000 (wgt'ed) examples reached here.  /* #neg=492 #pos=93 */
%   | else return 0.0010986166863134314;  // std dev = 0.351, 313.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=45 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.15681509653989714;  // std dev = 0.469, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return 0.07133680640593354;  // std dev = 4.463, 103.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=27 */
%   | | | else return 0.19178590217567634;  // std dev = 6.731, 209.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=85 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( haswordauthor(I, C) )
%   | | | then return 0.6390080878835246;  // std dev = 0.070, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4017295310407326;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.26319454374179074;  // std dev = 4.257, 73.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=37 */
%   | | | else return 0.325175128039705;  // std dev = 4.200, 84.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=52 */
%   else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | then return 0.01356417030241762;  // std dev = 0.365, 585.000 (wgt'ed) examples reached here.  /* #neg=492 #pos=93 */
%   | else return 5.709129063810754E-4;  // std dev = 0.351, 313.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=45 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.13086898219708845;  // std dev = 0.468, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.1146776494834937;  // std dev = 7.837, 297.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=103 */
%   | | | else return 0.34670448662020537;  // std dev = 1.816, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(J, C) )
%   | | | then return 0.4842145047343287;  // std dev = 0.076, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3849333245482002;  // std dev = 1.205, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.19586887996281488;  // std dev = 4.233, 73.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=37 */
%   | | | else return 0.26194151110316327;  // std dev = 4.169, 84.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=52 */
%   else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | then return 0.05824907814507801;  // std dev = 0.407, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 0.0023005726090347847;  // std dev = 0.354, 808.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=119 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.107441376442481;  // std dev = 0.468, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return 0.040957388667033065;  // std dev = 4.463, 103.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=27 */
%   | | | else return 0.1331769721044909;  // std dev = 6.666, 209.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=85 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return 0.202208837091851;  // std dev = 3.921, 65.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=37 */
%   | | | else return 0.027201750982671438;  // std dev = 1.940, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.26555227251244745;  // std dev = 0.840, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.20117566065493597;  // std dev = 4.076, 81.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=50 */
%   else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | then return 0.05629858862929409;  // std dev = 0.405, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 0.0013753008389434003;  // std dev = 0.354, 808.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=119 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.08720233205352505;  // std dev = 0.467, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return 0.02453074106625303;  // std dev = 4.463, 103.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=27 */
%   | | | else return 0.10644542116736407;  // std dev = 6.648, 209.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=85 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( haswordauthor(I, C) )
%   | | | then return 0.3129763192128619;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.24586368219067373;  // std dev = 1.206, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.11436546404493235;  // std dev = 4.213, 73.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=37 */
%   | | | else return 0.15186944187058973;  // std dev = 4.154, 84.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=52 */
%   else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | then return 0.01023536887181266;  // std dev = 0.364, 585.000 (wgt'ed) examples reached here.  /* #neg=492 #pos=93 */
%   | else return -0.0019911531863208974;  // std dev = 0.351, 313.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=45 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.06991590021541721;  // std dev = 0.467, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.054111876646895575;  // std dev = 7.785, 297.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=103 */
%   | | | else return 0.22399005859391086;  // std dev = 1.804, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(J, C) )
%   | | | then return 0.25025070645371533;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.18474772553097693;  // std dev = 1.206, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.08494494353978513;  // std dev = 4.288, 76.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=39 */
%   | | | else return 0.11763738450608573;  // std dev = 4.075, 81.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=50 */
%   else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | then return 0.04767695405633145;  // std dev = 0.405, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 4.8346773801051713E-4;  // std dev = 0.354, 808.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=119 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.055571974613207925;  // std dev = 0.467, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return 0.007000417591079692;  // std dev = 4.463, 103.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=27 */
%   | | | else return 0.0694622205401287;  // std dev = 6.620, 209.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=85 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( haswordauthor(I, C) )
%   | | | then return 0.20649506075220994;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14425704017449245;  // std dev = 1.201, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.06194713981858834;  // std dev = 4.288, 76.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=39 */
%   | | | else return 0.09060071587193902;  // std dev = 4.077, 81.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=50 */
%   else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | then return 0.008245473551400265;  // std dev = 0.364, 585.000 (wgt'ed) examples reached here.  /* #neg=492 #pos=93 */
%   | else return -0.0025122853683505484;  // std dev = 0.351, 313.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=45 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.04402848797444611;  // std dev = 0.467, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.029324812897879318;  // std dev = 7.773, 297.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=103 */
%   | | | else return 0.15457568225964013;  // std dev = 1.802, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(J, C) )
%   | | | then return 0.17483904045064358;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12429958579405351;  // std dev = 1.206, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.04354958130051736;  // std dev = 4.283, 76.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=39 */
%   | | | else return 0.07026631945979309;  // std dev = 4.081, 81.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=50 */
%   else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | then return 0.04720521823314268;  // std dev = 0.407, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return -9.056208658929835E-4;  // std dev = 0.354, 808.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=119 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.034583445932396886;  // std dev = 0.466, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return -0.008451708526470309;  // std dev = 4.463, 103.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=27 */
%   | | | else return 0.04532588615914603;  // std dev = 6.606, 209.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=85 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.07953029458297933;  // std dev = 3.550, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return -0.044060468602998754;  // std dev = 2.509, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.0643886441048804;  // std dev = 3.197, 43.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   | | | else return 0.04778273528830005;  // std dev = 2.672, 43.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=29 */
%   else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | then return 0.04063483567895103;  // std dev = 0.407, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return -7.914148445049259E-4;  // std dev = 0.354, 808.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=119 */
Inference time using transfer learning 2.3571553230285645
Refined model CLL: -0.599796


******************************************
Best model found
******************************************
Results 

CLL : -0.803289 

AUC ROC : 0.566291 

AUC PR : 0.682043 

Precision : 0.756098 

Recall : 0.040208 

F1 : 0.076355 

Total Learning Time : 5784.137795209885 

Total Inference Time : 22.862460374832153 

Total revision time: 5813.823169231415
Best scored revision CLL: -0.599796


Results 

CLL : -0.803289 

AUC ROC : 0.566291 

AUC PR : 0.682043 

Precision : 0.756098 

Recall : 0.040208 

F1 : 0.076355 

Total Learning Time : 5813.839482784271 

Total Inference Time : 22.862460374832153 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos examples: 581
Target test neg examples: 2222

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.106712579727173
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.56e-06, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.2796365384052923;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.27818501365728443;  // std dev = 35.547, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23242113232729206;  // std dev = 35.476, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18862324633504476;  // std dev = 35.424, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14957432737924786;  // std dev = 35.390, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11661006349999825;  // std dev = 35.370, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08984683694334636;  // std dev = 35.358, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06868385957197568;  // std dev = 35.352, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05223548069695678;  // std dev = 35.349, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039592421936799585;  // std dev = 35.347, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
Inference time using transfer learning 0.9106674194335938
Parameter learned model CLL:-0.672069 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.56e-06, 0, 396], 'false': [34.354, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.547, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.476, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.424, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.39, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.37, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.358, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.352, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.349, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.347, 2, 2]}]
{'': [6.172391441956426e-15, 0.24383580356527565]}
{'': [nan, 0.24132734078220114]}
{'': [nan, 0.24035858029470475]}
{'': [nan, 0.2396591168203964]}
{'': [nan, 0.2392008129357597]}
{'': [nan, 0.23892324245515695]}
{'': [nan, 0.23876585284387072]}
{'': [nan, 0.23868206035029496]}
{'': [nan, 0.23864070829038778]}
{'': [nan, 0.23862263525443253]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
Model training time 953.4988236427307
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.56e-06, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29812957401528645;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.4245825015330777;  // std dev = 5.926, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.29577407970160635;  // std dev = 0.492, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.7478725136012448;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.512539736245531;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.37438763896804284;  // std dev = 4.499, 83.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=48 */
%   | | | else return 0.4565848553827754;  // std dev = 4.152, 85.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | then if ( haswordauthor(M, J) )
%   | | | then return 0.3225844349636464;  // std dev = 2.646, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.20968120915719332;  // std dev = 5.424, 124.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=48 */
%   | | else return 0.037478495152011904;  // std dev = 0.388, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | else return 0.02656498380499918;  // std dev = 0.377, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.24628716600667114;  // std dev = 0.491, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.3623188257658217;  // std dev = 3.834, 65.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=42 */
%   | | | else return 0.17673462981915652;  // std dev = 2.520, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.39430638239274085;  // std dev = 3.351, 51.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=34 */
%   | | | else return 0.3658653065323994;  // std dev = 2.424, 36.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=26 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | then if ( haswordtitle(K, M), haswordauthor(N, M) )
%   | | | then return 0.09296573980830623;  // std dev = 4.213, 84.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=26 */
%   | | | else return 0.31930386028018776;  // std dev = 4.116, 68.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=36 */
%   | | else return 0.03411357419733453;  // std dev = 0.388, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | else return 0.021921481351592866;  // std dev = 0.377, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.5027397226768711;  // std dev = 0.274, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | else if ( haswordtitle(E, C) )
%   | | then return 0.1977711094519873;  // std dev = 0.491, 4,486.000 (wgt'ed) examples reached here.  /* #neg=2,312 #pos=2,174 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.23931566285156386;  // std dev = 4.620, 90.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=53 */
%   | | | else return 0.29281134207103515;  // std dev = 4.113, 85.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | then if ( haswordtitle(I, K), haswordauthor(L, K) )
%   | | | then return 0.07678657042853773;  // std dev = 4.212, 84.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=26 */
%   | | | else return 0.2614466286813283;  // std dev = 4.116, 68.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=36 */
%   | | else if ( title(M, I), venue(M, A) )
%   | | | then return 0.035728044429241324;  // std dev = 5.398, 189.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=36 */
%   | | | else return -0.15474814604695;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.018944626388777305;  // std dev = 0.377, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.15673350851992554;  // std dev = 0.490, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.23672894752059587;  // std dev = 3.805, 65.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=42 */
%   | | | else return 0.04851150858396194;  // std dev = 2.515, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.24397107394016146;  // std dev = 3.326, 51.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=34 */
%   | | | else return 0.2056416842692571;  // std dev = 2.388, 36.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=26 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | then if ( haswordtitle(K, M), haswordauthor(N, M) )
%   | | | then return 0.06280197547407021;  // std dev = 4.211, 84.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=26 */
%   | | | else return 0.2071778791490735;  // std dev = 4.116, 68.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=36 */
%   | | else return 0.02720351194911931;  // std dev = 0.388, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | else return 0.01522757462756753;  // std dev = 0.377, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.1214684194710987;  // std dev = 0.489, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.2695448164014068;  // std dev = 0.368, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.2676792363440104;  // std dev = 1.159, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.14268793451955186;  // std dev = 5.922, 161.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=101 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | then if ( haswordauthor(L, K) )
%   | | | then return 0.24714619245093244;  // std dev = 2.638, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.06665571340655119;  // std dev = 5.236, 124.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=48 */
%   | | else if ( title(M, J), venue(M, A) )
%   | | | then return 0.02894512947904251;  // std dev = 5.398, 189.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=36 */
%   | | | else return -0.1373642613660281;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.01295392851864065;  // std dev = 0.377, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordvenue(A, D) )
%   | | | then return 0.43668221317905886;  // std dev = 0.173, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.242957745486291;  // std dev = 3.978, 69.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=44 */
%   | | else return -0.13203700070127777;  // std dev = 0.394, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | else if ( haswordtitle(G, C) )
%   | | then return 0.09251052447006247;  // std dev = 0.490, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.08774439637218433;  // std dev = 4.434, 83.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=48 */
%   | | | else return 0.13277804808769503;  // std dev = 4.089, 85.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordauthor(L, J) )
%   | | then return 0.14536038360778936;  // std dev = 0.476, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | else return 0.03544561534456395;  // std dev = 0.424, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | else return 0.009965107388665415;  // std dev = 0.376, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.07075394058798096;  // std dev = 0.489, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.110639013478927;  // std dev = 3.796, 65.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=42 */
%   | | | else return -0.038552241995962425;  // std dev = 2.497, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.34361212692691245;  // std dev = 0.126, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.10005659019520743;  // std dev = 4.070, 83.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=56 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | then if ( haswordauthor(M, J) )
%   | | | then return 0.1511526902257477;  // std dev = 2.837, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.014212982859460786;  // std dev = 6.828, 276.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=65 */
%   | | else return 0.12889154186156784;  // std dev = 0.494, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | else return 0.005962508277020034;  // std dev = 0.377, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.319665222751219;  // std dev = 0.053, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.05305820648034542;  // std dev = 0.489, 4,493.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,179 */
%   | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | then if ( title(H, G), venue(H, A) )
%   | | | then return 0.08343237190232279;  // std dev = 3.797, 65.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=42 */
%   | | | else return -0.02897671488010082;  // std dev = 2.497, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.09804050479030754;  // std dev = 3.307, 51.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=34 */
%   | | | else return 0.06677633729834638;  // std dev = 2.408, 36.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=26 */
%   else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | then if ( haswordauthor(M, K) )
%   | | then return 0.12134533570333092;  // std dev = 0.472, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | else return 0.02157642692053338;  // std dev = 0.422, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | else return 0.0051346621658987885;  // std dev = 0.377, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordtitle(F, C) )
%   | | | then return 0.2038431442682297;  // std dev = 3.801, 71.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=48 */
%   | | | else return 0.17337141383743046;  // std dev = 1.152, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return -0.1753166875084938;  // std dev = 0.403, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | else if ( haswordtitle(G, C) )
%   | | then return 0.040102135071734095;  // std dev = 0.489, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.02482825071188388;  // std dev = 4.389, 83.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=48 */
%   | | | else return 0.0618148731424213;  // std dev = 4.090, 85.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | then return 0.016722354606974098;  // std dev = 0.419, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | else return 0.11924315173024978;  // std dev = 0.494, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | else return 0.00250897301595231;  // std dev = 0.376, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
Inference time using transfer learning 1.9840888977050781
Refined model CLL: -0.653118


******************************************
Best model found
******************************************
Results 

CLL : -0.584229 

AUC ROC : 0.621126 

AUC PR : 0.37249 

Precision : 0.848 

Recall : 0.182444 

F1 : 0.300283 

Total Learning Time : 953.4988236427307 

Total Inference Time : 8.001860857009888 

Total revision time: 966.8370332717896
Best scored revision CLL: -0.653118


Results 

CLL : -0.584229 

AUC ROC : 0.621126 

AUC PR : 0.37249 

Precision : 0.848 

Recall : 0.182444 

F1 : 0.300283 

Total Learning Time : 966.853346824646 

Total Inference Time : 8.001860857009888 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos examples: 747
Target test neg examples: 1068

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.106133699417114
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1.41e-06, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.1815575593294866;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19226970622757608;  // std dev = 37.299, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.163254413390499;  // std dev = 37.235, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.135880524406842;  // std dev = 37.184, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11118390758780922;  // std dev = 37.145, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08971399578805957;  // std dev = 37.117, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07159260191531253;  // std dev = 37.096, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0566428679458283;  // std dev = 37.081, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044521336109631666;  // std dev = 37.071, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.034819615025422954;  // std dev = 37.064, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
Inference time using transfer learning 0.8066997528076172
Parameter learned model CLL:-0.634638 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.41e-06, 0, 380], 'false': [35.76, 3, 1]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.299, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.235, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.184, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.145, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.117, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.096, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.081, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.071, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.064, 3, 2]}]
{'': [5.235578052969159e-15, 0.2188154860035915]}
{'': [nan, 0.22352893076480548]}
{'': [nan, 0.2227577464656775]}
{'': [nan, 0.22214663652311922]}
{'': [nan, 0.2216834147535044]}
{'': [nan, 0.22134322486858585]}
{'': [nan, 0.22109832170004665]}
{'': [nan, 0.2209238046139833]}
{'': [nan, 0.22079978020186086]}
{'': [nan, 0.22071140818040338]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
Model training time 1206.124905347824
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1.41e-06, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.41979277071595067;  // std dev = 4.239, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return 0.06245001036832955;  // std dev = 3.888, 93.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | else return 0.2054740379801656;  // std dev = 0.476, 4,860.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=1,688 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.018505282538265628;  // std dev = 7.775, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.04094463402424335;  // std dev = 6.456, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2169252570305885;  // std dev = 0.479, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.10538230299917599;  // std dev = 1.214, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.13135360319985787;  // std dev = 3.286, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.18688964917157472;  // std dev = 1.154, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.14826796609203804;  // std dev = 0.020, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.10442115208545176;  // std dev = 3.325, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | | else return -0.053492844087163594;  // std dev = 1.356, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.017445544690570528;  // std dev = 7.709, 436.000 (wgt'ed) examples reached here.  /* #neg=365 #pos=71 */
%   | | | else return 0.022415143543874003;  // std dev = 5.401, 210.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=35 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1833451897233841;  // std dev = 0.478, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.09185671993916304;  // std dev = 1.213, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.11416424268621796;  // std dev = 3.285, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.16195394395746618;  // std dev = 1.154, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.13050526517714098;  // std dev = 0.018, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.003969806237056818;  // std dev = 6.796, 374.000 (wgt'ed) examples reached here.  /* #neg=320 #pos=54 */
%   | | | else return 0.09367840368485991;  // std dev = 3.699, 75.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=18 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.0431990895117;  // std dev = 6.391, 264.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=51 */
%   | | | else return -0.1484029447292013;  // std dev = 0.051, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D), haswordtitle(F, C) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.6559089429588374;  // std dev = 0.116, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.2763914470810811;  // std dev = 4.193, 71.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=39 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.017361450029213372;  // std dev = 3.527, 85.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=17 */
%   | | | else return 0.40148640159331056;  // std dev = 1.873, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else return 0.15096689166341332;  // std dev = 0.478, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then return 0.01748819592767727;  // std dev = 0.375, 521.000 (wgt'ed) examples reached here.  /* #neg=432 #pos=89 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, A) )
%   | | | then return 0.044168368337558724;  // std dev = 6.346, 258.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=51 */
%   | | | else return -0.03358164148634689;  // std dev = 1.333, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else return -0.13434663379740153;  // std dev = 0.093, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D), haswordtitle(F, C) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return -0.2605159503780512;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.3943280981999354;  // std dev = 3.748, 69.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=47 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.06694649710562613;  // std dev = 3.585, 85.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=17 */
%   | | | else return 0.33092638453784884;  // std dev = 1.871, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else return 0.12225576193842218;  // std dev = 0.477, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then return 0.01492835766405514;  // std dev = 0.374, 521.000 (wgt'ed) examples reached here.  /* #neg=432 #pos=89 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return 0.03952852078166465;  // std dev = 6.366, 258.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=51 */
%   | | | else return -0.038638316191698274;  // std dev = 1.331, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else return -0.11952075123476537;  // std dev = 0.084, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5989821018825013;  // std dev = 1.370, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | | | else return -0.2601295615174977;  // std dev = 0.253, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( haswordvenue(B, D) )
%   | | | then return 0.22324785577859452;  // std dev = 1.889, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | | | else return -0.03400303061288379;  // std dev = 4.125, 99.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=24 */
%   | else return 0.09764529398141292;  // std dev = 0.476, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, H) )
%   | | | then return 0.07364570973298382;  // std dev = 1.199, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.0955903563219524;  // std dev = 3.265, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else return -0.06356705374345371;  // std dev = 0.257, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | else return 0.011903993375033598;  // std dev = 0.373, 728.000 (wgt'ed) examples reached here.  /* #neg=605 #pos=123 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C), haswordtitle(E, C) )
%   | then return 0.33125020667797334;  // std dev = 0.064, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.07674650226686634;  // std dev = 0.474, 5,398.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,120 */
%   else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | then if ( author(H, G), venue(H, B) )
%   | | then if ( samebib(H, I), venue(I, A) )
%   | | | then return 0.5117469300391836;  // std dev = 1.112, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.15762282255919438;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordauthor(G, J), haswordtitle(K, J) )
%   | | | then return 0.06677796695373397;  // std dev = 3.295, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | | else return -0.12695820930649213;  // std dev = 0.090, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.0020383323034078547;  // std dev = 0.366, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.031207423480368177;  // std dev = 6.368, 264.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=51 */
%   | | | else return -0.10920905791936869;  // std dev = 0.062, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06038562559761532;  // std dev = 0.474, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then return 0.08338006635984892;  // std dev = 0.439, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.12198817728136979;  // std dev = 1.152, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.12031884054112002;  // std dev = 0.073, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.01366517239804962;  // std dev = 6.782, 374.000 (wgt'ed) examples reached here.  /* #neg=320 #pos=54 */
%   | | | else return 0.07534668762293319;  // std dev = 3.699, 75.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=18 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.02539339912855459;  // std dev = 6.350, 264.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=51 */
%   | | | else return -0.09816500418641466;  // std dev = 0.074, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0469762723202747;  // std dev = 0.474, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, E) )
%   | | | then return 0.010466708107967938;  // std dev = 7.543, 393.000 (wgt'ed) examples reached here.  /* #neg=322 #pos=71 */
%   | | | else return -0.1530672142859242;  // std dev = 0.080, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return 0.07884840709236685;  // std dev = 0.423, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.188202580524093;  // std dev = 0.923, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.022036336240906423;  // std dev = 6.370, 270.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=51 */
%   | | else return -0.09480860262186842;  // std dev = 0.109, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(B, C), haswordtitle(D, C) )
%   then if ( haswordauthor(E, C) )
%   | then if ( title(F, D), venue(F, A) )
%   | | then return -0.42567094525834176;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( author(G, E), title(G, D) )
%   | | | then return 0.16724459823650595;  // std dev = 3.927, 68.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=40 */
%   | | | else return 0.04242231323366211;  // std dev = 1.682, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | else if ( title(H, D), venue(H, B) )
%   | | then if ( haswordvenue(A, C) )
%   | | | then return 0.030919526836164002;  // std dev = 33.036, 4,876.000 (wgt'ed) examples reached here.  /* #neg=2,998 #pos=1,878 */
%   | | | else return 0.04137074789052368;  // std dev = 8.272, 416.000 (wgt'ed) examples reached here.  /* #neg=318 #pos=98 */
%   | | else if ( title(I, D), venue(I, A) )
%   | | | then return -0.10186860763245992;  // std dev = 4.667, 127.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=28 */
%   | | | else return 0.02722560782172814;  // std dev = 7.705, 335.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=105 */
%   else if ( haswordvenue(A, J), haswordvenue(B, J) )
%   | then return 0.28012057712721244;  // std dev = 0.429, 85.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=59 */
%   | else return 0.013429895408108142;  // std dev = 0.375, 297.000 (wgt'ed) examples reached here.  /* #neg=244 #pos=53 */
Inference time using transfer learning 1.8060731887817383
Refined model CLL: -0.614757


******************************************
Best model found
******************************************
Results 

CLL : -0.656744 

AUC ROC : 0.616128 

AUC PR : 0.603164 

Precision : 1.0 

Recall : 0.15261 

F1 : 0.264808 

Total Learning Time : 1206.124905347824 

Total Inference Time : 10.016896724700928 

Total revision time: 1222.6269607543945
Best scored revision CLL: -0.614757


Results 

CLL : -0.656744 

AUC ROC : 0.616128 

AUC PR : 0.603164 

Precision : 1.0 

Recall : 0.15261 

F1 : 0.264808 

Total Learning Time : 1222.643274307251 

Total Inference Time : 10.016896724700928 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos examples: 550
Target test neg examples: 500

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.839338302612305
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.72e-06, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.17049686697298647;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18219293009188628;  // std dev = 39.232, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1549854988346978;  // std dev = 39.167, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12937973874075148;  // std dev = 39.114, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10626852302092496;  // std dev = 39.074, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08612508071057384;  // std dev = 39.044, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06905487324779401;  // std dev = 39.022, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.054903602744648373;  // std dev = 39.006, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043368507640746165;  // std dev = 38.994, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03408565176686349;  // std dev = 38.986, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
Inference time using transfer learning 0.811288595199585
Parameter learned model CLL:-0.627729 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.72e-06, 0, 413], 'false': [37.582, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.232, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.167, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.114, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.074, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.044, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.022, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.006, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.994, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.986, 4, 2]}]
{'': [7.157040631385029e-15, 0.21478670132777686]}
{'': [nan, 0.22022403069905938]}
{'': [nan, 0.2194901685181124]}
{'': [nan, 0.2189035983392447]}
{'': [nan, 0.2184532295464633]}
{'': [nan, 0.21811719093471407]}
{'': [nan, 0.2178709566476115]}
{'': [nan, 0.217692213292287]}
{'': [nan, 0.21756281567098815]}
{'': [nan, 0.21746895701486602]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
Model training time 6728.859457731247
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.72e-06, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18699686136678825;  // std dev = 34.603, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.13739421811838173;  // std dev = 7.303, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3581489350995111;  // std dev = 4.062, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.0607699838194067;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.035677024987153;  // std dev = 8.061, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return 0.0021489350995115234;  // std dev = 5.551, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.19700108919512738;  // std dev = 0.474, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.14689419051007144;  // std dev = 7.378, 266.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=85 */
%   | | | else return 0.46652546987453924;  // std dev = 2.459, 29.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.3876224127078261;  // std dev = 3.885, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return 0.15313109757134968;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.38281520985970885;  // std dev = 3.634, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.4962537292833593;  // std dev = 2.513, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | then return 0.0267243067696609;  // std dev = 0.375, 482.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=82 */
%   | else return -0.00188463525480229;  // std dev = 0.351, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.16714732731800644;  // std dev = 0.474, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.12504636728730545;  // std dev = 7.361, 266.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=85 */
%   | | | else return 0.3865066562643995;  // std dev = 2.438, 29.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.3333432016432612;  // std dev = 3.865, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return 0.08978799354659359;  // std dev = 2.413, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.3197871744175821;  // std dev = 3.605, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.39278303840827566;  // std dev = 2.460, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | then return -0.06796740201112841;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | else return 0.019260637684458074;  // std dev = 0.371, 695.000 (wgt'ed) examples reached here.  /* #neg=580 #pos=115 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.13907516125872488;  // std dev = 0.473, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return 0.04254090760078497;  // std dev = 4.562, 109.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=28 */
%   | | | else return 0.1687496851372663;  // std dev = 6.256, 186.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=76 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.26643258671127473;  // std dev = 3.860, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return 0.07047091428444123;  // std dev = 2.412, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.25550530143345823;  // std dev = 3.600, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.2996768390255727;  // std dev = 2.434, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | then return 0.02181785019974467;  // std dev = 0.375, 482.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=82 */
%   | else return -0.00406301936117618;  // std dev = 0.351, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.11379971122568773;  // std dev = 0.472, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.07752801008496639;  // std dev = 7.326, 266.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=85 */
%   | | | else return 0.2678920325127578;  // std dev = 2.423, 29.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.21931303466481256;  // std dev = 3.845, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return 0.020009286182245154;  // std dev = 2.401, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.200525140305217;  // std dev = 3.573, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.22590169469146404;  // std dev = 2.427, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | then return 0.020387045536659872;  // std dev = 0.375, 482.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=82 */
%   | else return -0.006146190434714983;  // std dev = 0.351, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.09166415462952966;  // std dev = 0.472, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return 0.011602353655330062;  // std dev = 4.562, 109.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=28 */
%   | | | else return 0.11538735480839434;  // std dev = 6.196, 186.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=76 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return 0.16770037917167674;  // std dev = 3.843, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return 0.015607394728836701;  // std dev = 2.401, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.15279664322414685;  // std dev = 3.570, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.17081609244789214;  // std dev = 2.430, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | then return -0.0642960693334714;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | else return 0.013819798455428953;  // std dev = 0.371, 695.000 (wgt'ed) examples reached here.  /* #neg=580 #pos=115 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.07322625973581734;  // std dev = 0.472, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return -0.002160668253775121;  // std dev = 4.562, 109.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=28 */
%   | | | else return 0.09189004574328043;  // std dev = 6.182, 186.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=76 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.1403715546949856;  // std dev = 3.834, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return -0.021343465642865336;  // std dev = 2.392, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.11597243579803933;  // std dev = 3.550, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.13035629210632066;  // std dev = 2.438, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | then return 0.017060409747371864;  // std dev = 0.375, 482.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=82 */
%   | else return -0.007799679329683129;  // std dev = 0.351, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.05787561280076737;  // std dev = 0.471, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return -0.004437829696111774;  // std dev = 4.562, 109.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=28 */
%   | | | else return 0.07248436852702479;  // std dev = 6.173, 186.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=76 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordvenue(B, I) )
%   | | | then return 0.062133921149866767;  // std dev = 2.806, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | | else return 0.0742527615893458;  // std dev = 3.580, 56.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=31 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.0873788214337284;  // std dev = 3.549, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.1005219813841169;  // std dev = 2.446, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | then return 0.016001627811949345;  // std dev = 0.375, 482.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=82 */
%   | else return -0.009044911540196566;  // std dev = 0.351, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6371640986702969;  // std dev = 0.994, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return -0.3157843023208243;  // std dev = 1.49e-08, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordauthor(E, H), haswordtitle(I, H) )
%   | | | then return -0.07279033629385238;  // std dev = 4.097, 98.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=25 */
%   | | | else return 0.6524712204543162;  // std dev = 0.142, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( haswordtitle(J, C) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.044717130870848235;  // std dev = 35.402, 5,648.000 (wgt'ed) examples reached here.  /* #neg=3,563 #pos=2,085 */
%   | | | else return 0.032031859015350564;  // std dev = 7.631, 289.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=102 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.048726357155283735;  // std dev = 4.501, 86.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=44 */
%   | | | else return 0.07229486849757372;  // std dev = 4.315, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   else return 0.006465793265651088;  // std dev = 0.367, 732.000 (wgt'ed) examples reached here.  /* #neg=614 #pos=118 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.035475836960782305;  // std dev = 0.470, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.013370111263310615;  // std dev = 7.274, 266.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=85 */
%   | | | else return 0.1283426379847052;  // std dev = 2.423, 29.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.07214158194444696;  // std dev = 3.832, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return -0.044189640568171505;  // std dev = 2.392, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.05426463500354747;  // std dev = 3.553, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.06271661578513323;  // std dev = 2.461, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | then return 0.013511068588735312;  // std dev = 0.375, 482.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=82 */
%   | else return -0.009598500163016116;  // std dev = 0.351, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
Inference time using transfer learning 1.71327543258667
Refined model CLL: -0.612588


******************************************
Best model found
******************************************
Results 

CLL : -0.720286 

AUC ROC : 0.710782 

AUC PR : 0.73863 

Precision : 0.878788 

Recall : 0.052727 

F1 : 0.099485 

Total Learning Time : 6728.859457731247 

Total Inference Time : 29.039673328399658 

Total revision time: 6765.084731578827
Best scored revision CLL: -0.612588


Results 

CLL : -0.720286 

AUC ROC : 0.710782 

AUC PR : 0.73863 

Precision : 0.878788 

Recall : 0.052727 

F1 : 0.099485 

Total Learning Time : 6765.101045131683 

Total Inference Time : 29.039673328399658 

Run: 2

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 6.003193616867065
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.58e-06, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.19988648066451323;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20495251271587084;  // std dev = 39.914, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17361681718423844;  // std dev = 39.850, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14396423475540684;  // std dev = 39.800, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11723098312291458;  // std dev = 39.763, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09407131629837208;  // std dev = 39.736, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07462655346411003;  // std dev = 39.717, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05868548817565857;  // std dev = 39.704, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04584686047395603;  // std dev = 39.695, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.035641192336017424;  // std dev = 39.689, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning 0.704338550567627
Parameter learned model CLL:-0.644902 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.58e-06, 0, 399], 'false': [38.485, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.914, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.85, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.8, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.763, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.736, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.717, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.704, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.695, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.689, 4, 2]}]
{'': [6.268447192670558e-15, 0.22495299551614867]}
{'': [nan, 0.2281425894551253]}
{'': [nan, 0.22741391766586577]}
{'': [nan, 0.2268433631661814]}
{'': [nan, 0.22641852043109545]}
{'': [nan, 0.22611334723983625]}
{'': [nan, 0.22589906601390894]}
{'': [nan, 0.2257503526967287]}
{'': [nan, 0.22564745967470284]}
{'': [nan, 0.22557604227204325]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
Model training time 6769.2193031311035
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.58e-06, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21728033821754725;  // std dev = 35.215, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.15514141630252049;  // std dev = 7.452, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.46529179224236833;  // std dev = 3.655, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14905802600860327;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.04473174432383054;  // std dev = 8.508, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.22090041108308192;  // std dev = 0.482, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return 0.0746873828403928;  // std dev = 4.344, 102.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=25 */
%   | | | else return 0.2575873620423084;  // std dev = 6.662, 196.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=86 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return 0.41172530147250935;  // std dev = 4.233, 76.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=47 */
%   | | | else return 0.18525271169198645;  // std dev = 2.070, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.426586635139678;  // std dev = 3.549, 54.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=34 */
%   | | | else return 0.6387903642923934;  // std dev = 1.254, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | then return 0.048990118991439034;  // std dev = 0.398, 532.000 (wgt'ed) examples reached here.  /* #neg=427 #pos=105 */
%   | else return 0.026693362236559336;  // std dev = 0.378, 248.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=43 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.18682539089831626;  // std dev = 0.481, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return 0.051056222367307884;  // std dev = 4.344, 102.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=25 */
%   | | | else return 0.21681476526910434;  // std dev = 6.625, 196.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=86 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then return 0.577295908766959;  // std dev = 0.327, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.2851348448646605;  // std dev = 4.643, 88.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=49 */
%   | | | else return 0.38473763899631064;  // std dev = 3.769, 75.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=53 */
%   else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | then if ( haswordauthor(M, K) )
%   | | then return 0.12376177523479723;  // std dev = 0.454, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else return 0.034286829852621555;  // std dev = 0.390, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | else return 0.0215110439130173;  // std dev = 0.378, 248.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=43 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.15438859466873453;  // std dev = 0.480, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return 0.034480470378395606;  // std dev = 4.344, 102.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=25 */
%   | | | else return 0.17776665763310495;  // std dev = 6.597, 196.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=86 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return 0.25517760410258444;  // std dev = 4.212, 76.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=47 */
%   | | | else return 0.096114501609942;  // std dev = 2.079, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.2853815171891252;  // std dev = 3.536, 54.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=34 */
%   | | | else return 0.39904593313960257;  // std dev = 1.217, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | then return 0.059115893809281964;  // std dev = 0.411, 83.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=18 */
%   | else return 0.028370235709649385;  // std dev = 0.389, 697.000 (wgt'ed) examples reached here.  /* #neg=567 #pos=130 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.12523070180667012;  // std dev = 0.480, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return 0.016899861027964827;  // std dev = 4.344, 102.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=25 */
%   | | | else return 0.14264736496857172;  // std dev = 6.578, 196.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=86 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then return 0.41995848313875733;  // std dev = 0.320, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.15500936957240471;  // std dev = 4.591, 88.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=49 */
%   | | | else return 0.23835505127212367;  // std dev = 3.743, 75.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=53 */
%   else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | then if ( haswordtitle(L, M), haswordauthor(N, M) )
%   | | then return 0.02811513660741547;  // std dev = 0.393, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | else return 0.06667628634593845;  // std dev = 0.421, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | else return 0.014307505993068072;  // std dev = 0.378, 248.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=43 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.09999392579955925;  // std dev = 0.479, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.05970168377302598;  // std dev = 7.469, 270.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=95 */
%   | | | else return 0.23688674450128536;  // std dev = 2.478, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return 0.3182454358347723;  // std dev = 0.319, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.11762265284569459;  // std dev = 4.589, 88.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=49 */
%   | | | else return 0.18083746213804694;  // std dev = 3.746, 75.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=53 */
%   else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | then if ( haswordauthor(N, L) )
%   | | then return 0.09676005408791699;  // std dev = 0.454, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else return 0.021738334595678678;  // std dev = 0.389, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | else return 0.010973868953942182;  // std dev = 0.378, 248.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=43 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.07880656776857665;  // std dev = 0.479, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return -0.004338519799650233;  // std dev = 4.344, 102.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=25 */
%   | | | else return 0.09380399587597513;  // std dev = 6.541, 196.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=86 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return 0.12817006150566046;  // std dev = 4.145, 76.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=47 */
%   | | | else return -0.08080919313931344;  // std dev = 2.087, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.13069504717987807;  // std dev = 3.494, 54.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=34 */
%   | | | else return 0.2056141061419712;  // std dev = 1.231, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | then return 0.044203610610003906;  // std dev = 0.410, 83.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=18 */
%   | else return 0.017327195238707672;  // std dev = 0.389, 697.000 (wgt'ed) examples reached here.  /* #neg=567 #pos=130 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.06184097248624605;  // std dev = 0.479, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return -0.019347848122991625;  // std dev = 4.344, 102.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=25 */
%   | | | else return 0.0727077025015633;  // std dev = 6.535, 196.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=86 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then return 0.2377203273933243;  // std dev = 0.316, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.05493564583422453;  // std dev = 4.574, 88.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=49 */
%   | | | else return 0.11493529038177702;  // std dev = 3.712, 75.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=53 */
%   else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | then if ( title(M, L), venue(M, A) )
%   | | then return 0.031755798743350216;  // std dev = 0.402, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | else return 0.0030558157487341874;  // std dev = 0.384, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | else return 0.006256450583292411;  // std dev = 0.379, 248.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=43 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.04800035350626425;  // std dev = 0.479, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.01981062724528573;  // std dev = 7.441, 270.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=95 */
%   | | | else return 0.1440731940159842;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.07992380478018013;  // std dev = 4.138, 76.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=47 */
%   | | | else return -0.07437581118750024;  // std dev = 2.087, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.06937039524309269;  // std dev = 3.493, 54.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=34 */
%   | | | else return 0.14350885676908584;  // std dev = 1.246, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | then return 0.02046207508609895;  // std dev = 0.397, 532.000 (wgt'ed) examples reached here.  /* #neg=427 #pos=105 */
%   | else return 0.0027185270008924143;  // std dev = 0.378, 248.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=43 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.03717097424662298;  // std dev = 0.479, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return -0.024607557675292754;  // std dev = 4.344, 102.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=25 */
%   | | | else return 0.04708962197385009;  // std dev = 6.520, 196.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=86 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return 0.06052952421414343;  // std dev = 4.138, 76.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=47 */
%   | | | else return -0.05595775919735954;  // std dev = 2.087, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.052434767962191056;  // std dev = 3.493, 54.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=34 */
%   | | | else return 0.11915649557908659;  // std dev = 1.253, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | then return 0.017467228016003478;  // std dev = 0.397, 532.000 (wgt'ed) examples reached here.  /* #neg=427 #pos=105 */
%   | else return 0.002333549818309466;  // std dev = 0.378, 248.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=43 */
Inference time using transfer learning 1.7082726955413818
Refined model CLL: -0.630547


******************************************
Best model found
******************************************
Results 

CLL : -0.595024 

AUC ROC : 0.682934 

AUC PR : 0.57738 

Precision : 0.866667 

Recall : 0.282609 

F1 : 0.42623 

Total Learning Time : 6769.2193031311035 

Total Inference Time : 28.02749538421631 

Total revision time: 6804.689286708832
Best scored revision CLL: -0.630547


Results 

CLL : -0.595024 

AUC ROC : 0.682934 

AUC PR : 0.57738 

Precision : 0.866667 

Recall : 0.282609 

F1 : 0.42623 

Total Learning Time : 6804.702044963837 

Total Inference Time : 28.02749538421631 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.663189888000488
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.53e-06, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.15094741899085268;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1658359099984924;  // std dev = 37.931, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14149265689604304;  // std dev = 37.869, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1186820619021793;  // std dev = 37.818, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09808948940354423;  // std dev = 37.779, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08007442348372748;  // std dev = 37.749, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06471334013203574;  // std dev = 37.726, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0518800821587053;  // std dev = 37.709, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04132876062552039;  // std dev = 37.696, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03276039551785491;  // std dev = 37.687, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
Inference time using transfer learning 0.7526981830596924
Parameter learned model CLL:-0.614315 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.53e-06, 0, 392], 'false': [36.21, 4, 1]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.931, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.869, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.818, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.779, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.749, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.726, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.709, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.696, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.687, 4, 2]}]
{'': [5.945357584931451e-15, 0.20706753172221312]}
{'': [nan, 0.21397140612518964]}
{'': [nan, 0.21327128052814745]}
{'': [nan, 0.2127042128637235]}
{'': [nan, 0.21226023874202507]}
{'': [nan, 0.21192096503730015]}
{'': [nan, 0.2116657055634563]}
{'': [nan, 0.2114752686691327]}
{'': [nan, 0.21133362022794772]}
{'': [nan, 0.2112281785688386]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
Model training time 5747.9429936409
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.53e-06, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.17115949497199173;  // std dev = 32.852, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.13612727444969389;  // std dev = 7.456, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.38901313263037696;  // std dev = 4.491, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.2967454263275814;  // std dev = 3.746, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.004584387893347046;  // std dev = 8.054, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006937862435151973;  // std dev = 6.050, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.18401443268661458;  // std dev = 0.470, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return 0.1028931079620797;  // std dev = 4.463, 103.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=27 */
%   | | | else return 0.22714507046577997;  // std dev = 6.769, 209.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=85 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( haswordauthor(I, C) )
%   | | | then return 0.7804847822576769;  // std dev = 0.075, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5242663365072892;  // std dev = 1.194, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.31707944660163856;  // std dev = 4.357, 76.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=39 */
%   | | | else return 0.40126423240570985;  // std dev = 4.147, 81.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=50 */
%   else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | then return 0.060261881828623715;  // std dev = 0.406, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 0.004764299489696811;  // std dev = 0.354, 808.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=119 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.15681509653989734;  // std dev = 0.469, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return 0.07133680640593354;  // std dev = 4.463, 103.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=27 */
%   | | | else return 0.1917859021756764;  // std dev = 6.731, 209.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=85 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return 0.3143455857116845;  // std dev = 3.976, 65.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=37 */
%   | | | else return 0.12411680006316139;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.47883863102790014;  // std dev = 0.854, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.32689025657113574;  // std dev = 4.105, 81.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=50 */
%   else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | then return 0.05238724029487717;  // std dev = 0.406, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 0.004181095725731637;  // std dev = 0.354, 808.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=119 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.13086898219708848;  // std dev = 0.468, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.1146776494834937;  // std dev = 7.837, 297.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=103 */
%   | | | else return 0.34670448662020537;  // std dev = 1.816, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(J, C) )
%   | | | then return 0.5201204498511846;  // std dev = 0.122, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.39987138596451716;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.19855518896700333;  // std dev = 4.245, 73.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=37 */
%   | | | else return 0.2576514005036352;  // std dev = 4.160, 84.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=52 */
%   else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | then return 0.06575383351676854;  // std dev = 0.407, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 0.0013864485481056834;  // std dev = 0.354, 808.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=119 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.1074413764424814;  // std dev = 0.468, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return 0.04095738866703303;  // std dev = 4.463, 103.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=27 */
%   | | | else return 0.13317697210449086;  // std dev = 6.666, 209.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=85 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return 0.19881315470145827;  // std dev = 3.931, 65.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=37 */
%   | | | else return 0.015377251891914315;  // std dev = 1.939, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.3065244774920274;  // std dev = 0.833, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.20391641729502238;  // std dev = 4.060, 81.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=50 */
%   else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | then return 0.05739675201401028;  // std dev = 0.407, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 0.0012136868574286956;  // std dev = 0.354, 808.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=119 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.08720233205352496;  // std dev = 0.467, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return 0.024530741066252287;  // std dev = 4.463, 103.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=27 */
%   | | | else return 0.10644542116736411;  // std dev = 6.648, 209.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=85 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( haswordauthor(I, C) )
%   | | | then return 0.33335905922808506;  // std dev = 0.113, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2478908248144763;  // std dev = 1.199, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.11168539026970234;  // std dev = 4.302, 76.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=39 */
%   | | | else return 0.1548251638888446;  // std dev = 4.056, 81.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=50 */
%   else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | then return 0.04978412469349253;  // std dev = 0.407, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 0.0010623134311769913;  // std dev = 0.354, 808.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=119 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.06991590021541735;  // std dev = 0.467, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.05411187664689573;  // std dev = 7.785, 297.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=103 */
%   | | | else return 0.2239900585939108;  // std dev = 1.804, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(J, C) )
%   | | | then return 0.26492458130153057;  // std dev = 0.097, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1860428951442652;  // std dev = 1.199, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.2160456358286709;  // std dev = 1.200, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.09602916218598123;  // std dev = 5.785, 150.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=84 */
%   else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | then return 0.0429371730500215;  // std dev = 0.407, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 9.297129682288774E-4;  // std dev = 0.354, 808.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=119 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.05557197461320782;  // std dev = 0.467, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return 0.007000417591079692;  // std dev = 4.463, 103.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=27 */
%   | | | else return 0.0694622205401283;  // std dev = 6.620, 209.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=85 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( haswordauthor(I, C) )
%   | | | then return 0.21729559274969965;  // std dev = 0.084, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.16227973353031652;  // std dev = 1.200, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.05554445505123432;  // std dev = 4.213, 73.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=37 */
%   | | | else return 0.09294359064465627;  // std dev = 4.141, 84.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=52 */
%   else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | then return 0.04187504487608471;  // std dev = 0.405, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 2.5357815900055715E-4;  // std dev = 0.354, 808.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=119 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.04402848797444587;  // std dev = 0.467, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.029324812897879464;  // std dev = 7.773, 297.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=103 */
%   | | | else return 0.15457568225964027;  // std dev = 1.802, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.08899392998361531;  // std dev = 3.558, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return -0.033392055538781946;  // std dev = 2.511, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0807400477305318;  // std dev = 3.198, 43.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   | | | else return 0.06959612060023074;  // std dev = 2.640, 43.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=29 */
%   else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | then return 0.03622227099743726;  // std dev = 0.407, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 1.876049186940375E-4;  // std dev = 0.354, 808.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=119 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.0345834459323971;  // std dev = 0.466, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return -0.008451708526470317;  // std dev = 4.463, 103.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=27 */
%   | | | else return 0.04532588615914606;  // std dev = 6.606, 209.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=85 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( haswordauthor(I, C) )
%   | | | then return 0.17133495010438057;  // std dev = 0.068, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.13083374222701036;  // std dev = 1.200, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.0250398677283432;  // std dev = 4.193, 73.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=37 */
%   | | | else return 0.054709837002648185;  // std dev = 4.147, 84.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=52 */
%   else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | then return 0.03093708451085494;  // std dev = 0.407, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 1.6408418354071325E-4;  // std dev = 0.354, 808.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=119 */
Inference time using transfer learning 2.33205509185791
Refined model CLL: -0.599736


******************************************
Best model found
******************************************
Results 

CLL : -0.803692 

AUC ROC : 0.56579 

AUC PR : 0.68192 

Precision : 0.756098 

Recall : 0.040208 

F1 : 0.076355 

Total Learning Time : 5747.9429936409 

Total Inference Time : 22.981985092163086 

Total revision time: 5777.894268035889
Best scored revision CLL: -0.599736


Results 

CLL : -0.803692 

AUC ROC : 0.56579 

AUC PR : 0.68192 

Precision : 0.756098 

Recall : 0.040208 

F1 : 0.076355 

Total Learning Time : 5777.907026290894 

Total Inference Time : 22.981985092163086 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos examples: 581
Target test neg examples: 2222

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.007697582244873
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.56e-06, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.2796365384052923;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2781850136572844;  // std dev = 35.547, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23242113232729078;  // std dev = 35.476, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1886232463350446;  // std dev = 35.424, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14957432737924717;  // std dev = 35.390, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11661006349999817;  // std dev = 35.370, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08984683694334689;  // std dev = 35.358, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06868385957197519;  // std dev = 35.352, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.052235480696956604;  // std dev = 35.349, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03959242193679937;  // std dev = 35.347, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
Inference time using transfer learning 0.9098899364471436
Parameter learned model CLL:-0.672069 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.56e-06, 0, 396], 'false': [34.354, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.547, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.476, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.424, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.39, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.37, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.358, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.352, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.349, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.347, 2, 2]}]
{'': [6.172391441956426e-15, 0.24383580356527565]}
{'': [nan, 0.24132734078220106]}
{'': [nan, 0.2403585802947048]}
{'': [nan, 0.2396591168203964]}
{'': [nan, 0.23920081293576]}
{'': [nan, 0.23892324245515711]}
{'': [nan, 0.23876585284387045]}
{'': [nan, 0.2386820603502947]}
{'': [nan, 0.23864070829038767]}
{'': [nan, 0.2386226352544325]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
Model training time 1101.7592000961304
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.56e-06, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29812957401528645;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.4245825015330777;  // std dev = 5.926, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.2957740797016051;  // std dev = 0.492, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.44385122261114845;  // std dev = 3.852, 65.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=42 */
%   | | | else return 0.25005118720427894;  // std dev = 2.518, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.7695133801067445;  // std dev = 0.065, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.449223717818592;  // std dev = 4.128, 83.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=56 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | then if ( haswordauthor(M, J) )
%   | | | then return 0.3225844349636464;  // std dev = 2.646, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.20968120915719332;  // std dev = 5.424, 124.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=48 */
%   | | else return 0.037478495152011904;  // std dev = 0.388, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | else return 0.026564983804999165;  // std dev = 0.377, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.24628716600667122;  // std dev = 0.491, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | else if ( haswordauthor(E, C) )
%   | | then return 0.6043379792619531;  // std dev = 0.092, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3106203535422717;  // std dev = 4.638, 90.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=53 */
%   | | | else return 0.3724285812682855;  // std dev = 4.113, 85.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | then if ( haswordauthor(K, H) )
%   | | | then return 0.2885099172979169;  // std dev = 2.639, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.17293150773071567;  // std dev = 5.418, 124.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=48 */
%   | | else if ( title(L, I), venue(L, A) )
%   | | | then return 0.03997438005814042;  // std dev = 5.398, 189.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=36 */
%   | | | else return -0.15050181041805108;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.021921481351592866;  // std dev = 0.377, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.19886210069410656;  // std dev = 0.490, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.3866871386073207;  // std dev = 0.380, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2303493773815219;  // std dev = 4.455, 83.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=48 */
%   | | | else return 0.2930486888842632;  // std dev = 4.107, 85.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then if ( haswordauthor(L, I) )
%   | | | then return 0.2369115316370593;  // std dev = 2.637, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.14229795275014295;  // std dev = 5.417, 124.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=48 */
%   | | else if ( title(M, J), venue(M, B) )
%   | | | then return 0.035728044429241324;  // std dev = 5.398, 189.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=36 */
%   | | | else return -0.15474814604695;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.018899929661778916;  // std dev = 0.377, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.15675847302177687;  // std dev = 0.490, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.3122806279842218;  // std dev = 0.359, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.17089760722373518;  // std dev = 4.475, 83.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=48 */
%   | | | else return 0.22584652552314874;  // std dev = 4.087, 85.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | then if ( haswordvenue(A, K) )
%   | | | then return 0.18849885528015406;  // std dev = 2.636, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.037964596088737625;  // std dev = 7.014, 284.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=66 */
%   | | else return 0.2509112922144598;  // std dev = 0.496, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | then return 0.025871788791942418;  // std dev = 0.388, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else return -0.13302596770119757;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.12147802553128406;  // std dev = 0.490, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.29648746219639954;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2174008613138505;  // std dev = 1.182, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.1249803720343406;  // std dev = 4.443, 83.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=48 */
%   | | | else return 0.1740007084822644;  // std dev = 4.102, 85.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | then if ( haswordvenue(B, L) )
%   | | | then return 0.19601589433517025;  // std dev = 2.618, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.022115305651984798;  // std dev = 6.947, 284.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=66 */
%   | | else return 0.24350734255645087;  // std dev = 0.496, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | else return 0.012518148794839394;  // std dev = 0.376, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.093076547279656;  // std dev = 0.489, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.15203370035224;  // std dev = 3.793, 65.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=42 */
%   | | | else return -0.03661481888849806;  // std dev = 2.499, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.15746408053484304;  // std dev = 3.313, 51.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=34 */
%   | | | else return 0.10726656174313592;  // std dev = 2.394, 36.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=26 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | then if ( haswordvenue(A, L) )
%   | | | then return 0.13866202370163627;  // std dev = 2.621, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.020417783918015596;  // std dev = 6.950, 284.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=66 */
%   | | else return 0.19485991926211227;  // std dev = 0.496, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | else return 0.009902768227316323;  // std dev = 0.376, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.07080263258837509;  // std dev = 0.489, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.19594136416067753;  // std dev = 0.355, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06267304259380653;  // std dev = 4.430, 83.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=48 */
%   | | | else return 0.10083858233281486;  // std dev = 4.091, 85.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | then if ( haswordauthor(L, I) )
%   | | | then return 0.07520250896839462;  // std dev = 2.801, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.014228355068551128;  // std dev = 6.856, 276.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=65 */
%   | | else return 0.18858617550785456;  // std dev = 0.496, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | then return 0.017248330360277925;  // std dev = 0.388, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else return -0.12077943942766999;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.470892686773913;  // std dev = 0.173, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.20117536586376553;  // std dev = 3.970, 69.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=44 */
%   | | else return -0.16239220719230182;  // std dev = 0.401, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | else if ( haswordtitle(H, C) )
%   | | then return 0.05278609277438548;  // std dev = 0.489, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.04713480273527482;  // std dev = 4.430, 83.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=48 */
%   | | | else return 0.07681506443107321;  // std dev = 4.095, 85.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | then if ( haswordtitle(L, M), haswordauthor(N, M) )
%   | | then return 0.0172849854747329;  // std dev = 0.419, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | else return 0.14603995450094576;  // std dev = 0.496, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | else return 0.006567821683655273;  // std dev = 0.376, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.04045508914856104;  // std dev = 0.489, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.13373670853011324;  // std dev = 0.367, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.02563731840705499;  // std dev = 4.422, 83.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=48 */
%   | | | else return 0.0677044549914963;  // std dev = 4.094, 85.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then if ( haswordtitle(K, I) )
%   | | then return 0.05507659695643498;  // std dev = 0.466, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | else return -0.09877308830374618;  // std dev = 0.260, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then if ( haswordtitle(M, N), haswordauthor(P, N) )
%   | | | then return 0.011860175437414869;  // std dev = 6.745, 262.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=64 */
%   | | | else return 0.14398899228395204;  // std dev = 2.931, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else return 0.011180867938775357;  // std dev = 0.382, 195.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=35 */
Inference time using transfer learning 1.7839014530181885
Refined model CLL: -0.654035


******************************************
Best model found
******************************************
Results 

CLL : -0.585897 

AUC ROC : 0.621532 

AUC PR : 0.370326 

Precision : 0.84252 

Recall : 0.184165 

F1 : 0.30226 

Total Learning Time : 1101.7592000961304 

Total Inference Time : 8.686135053634644 

Total revision time: 1115.7908353805542
Best scored revision CLL: -0.654035


Results 

CLL : -0.585897 

AUC ROC : 0.621532 

AUC PR : 0.370326 

Precision : 0.84252 

Recall : 0.184165 

F1 : 0.30226 

Total Learning Time : 1115.803593635559 

Total Inference Time : 8.686135053634644 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos examples: 747
Target test neg examples: 1068

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.995913982391357
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1.41e-06, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.1815575593294866;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19226970622757533;  // std dev = 37.299, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16325441339049906;  // std dev = 37.235, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.135880524406842;  // std dev = 37.184, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11118390758780915;  // std dev = 37.145, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08971399578805932;  // std dev = 37.117, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07159260191531248;  // std dev = 37.096, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.056642867945828956;  // std dev = 37.081, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04452133610963159;  // std dev = 37.071, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03481961502542255;  // std dev = 37.064, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
Inference time using transfer learning 0.7987134456634521
Parameter learned model CLL:-0.634638 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.41e-06, 0, 380], 'false': [35.76, 3, 1]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.299, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.235, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.184, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.145, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.117, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.096, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.081, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.071, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.064, 3, 2]}]
{'': [5.235578052969159e-15, 0.2188154860035915]}
{'': [nan, 0.2235289307648055]}
{'': [nan, 0.22275774646567748]}
{'': [nan, 0.22214663652311953]}
{'': [nan, 0.22168341475350434]}
{'': [nan, 0.22134322486858599]}
{'': [nan, 0.22109832170004667]}
{'': [nan, 0.22092380461398328]}
{'': [nan, 0.22079978020186095]}
{'': [nan, 0.22071140818040344]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
Model training time 1749.216988325119
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1.41e-06, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.20594041938124213;  // std dev = 0.476, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.04548402744779789;  // std dev = 7.596, 379.000 (wgt'ed) examples reached here.  /* #neg=308 #pos=71 */
%   | | | else return -0.015090501520205963;  // std dev = 3.965, 142.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=18 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.050876207826785;  // std dev = 6.541, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2169706255610159;  // std dev = 0.480, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.10489240129660038;  // std dev = 1.220, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.13191235604281157;  // std dev = 3.284, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.1857416197762869;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.1435649726427456;  // std dev = 0.040, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.0018377772581475026;  // std dev = 6.790, 374.000 (wgt'ed) examples reached here.  /* #neg=320 #pos=54 */
%   | | | else return 0.09977719629024243;  // std dev = 3.696, 75.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=18 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.045024070651233226;  // std dev = 6.415, 264.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=51 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18338432179127062;  // std dev = 0.479, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.10266781101313052;  // std dev = 1.211, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.1269657446553971;  // std dev = 3.276, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return 0.18051658738926668;  // std dev = 1.153, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.14790246158317705;  // std dev = 0.070, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.006994745108237792;  // std dev = 6.778, 374.000 (wgt'ed) examples reached here.  /* #neg=320 #pos=54 */
%   | | | else return 0.09435077084739095;  // std dev = 3.691, 75.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.043535983101987724;  // std dev = 6.391, 264.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=51 */
%   | | | else return -0.11573480466069615;  // std dev = 0.038, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D), haswordtitle(F, C) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return -0.23259701990581833;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.4368021746473598;  // std dev = 3.817, 69.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=47 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.04055246672768822;  // std dev = 3.550, 85.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=17 */
%   | | | else return 0.3826400163361133;  // std dev = 1.886, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.33262037139853007;  // std dev = 4.118, 69.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=39 */
%   | | | else return -0.027777742797384413;  // std dev = 3.677, 83.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=17 */
%   | | else return 0.1513250089666977;  // std dev = 0.478, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,997 */
%   else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | then return 0.05309851948813833;  // std dev = 0.401, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 0.01685717718029537;  // std dev = 0.373, 728.000 (wgt'ed) examples reached here.  /* #neg=605 #pos=123 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.12270833814107225;  // std dev = 0.476, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.08577185072466964;  // std dev = 1.207, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.1073635173560253;  // std dev = 3.273, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return 0.15318072886724532;  // std dev = 1.153, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.13276208275107274;  // std dev = 0.065, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.008434463175932815;  // std dev = 6.779, 374.000 (wgt'ed) examples reached here.  /* #neg=320 #pos=54 */
%   | | | else return 0.07996162384887151;  // std dev = 3.690, 75.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.034463375669899404;  // std dev = 6.388, 264.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=51 */
%   | | | else return -0.107221566674245;  // std dev = 0.040, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09799405576341429;  // std dev = 0.476, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.08580555786429855;  // std dev = 1.190, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.09968055434875572;  // std dev = 3.263, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.1436418500046072;  // std dev = 1.151, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.1394398640009805;  // std dev = 0.088, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.014006068369303324;  // std dev = 6.756, 374.000 (wgt'ed) examples reached here.  /* #neg=320 #pos=54 */
%   | | | else return 0.08695975787235609;  // std dev = 3.696, 75.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=18 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.03362621181547064;  // std dev = 6.370, 264.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=51 */
%   | | | else return -0.0986030878726068;  // std dev = 0.063, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07735088235232387;  // std dev = 0.475, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.07535207074825549;  // std dev = 1.192, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.08826345248565975;  // std dev = 3.262, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return 0.12519150979626764;  // std dev = 1.150, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.12088420597547946;  // std dev = 0.081, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.011919154526328675;  // std dev = 6.761, 374.000 (wgt'ed) examples reached here.  /* #neg=320 #pos=54 */
%   | | | else return 0.0708018155584201;  // std dev = 3.690, 75.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.028981609170462327;  // std dev = 6.368, 264.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=51 */
%   | | | else return -0.09125412077707695;  // std dev = 0.063, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C), haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return -0.36284643860213844;  // std dev = 2.11e-08, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.30384156676846974;  // std dev = 3.772, 69.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=47 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.09516427979582594;  // std dev = 3.555, 85.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=17 */
%   | | | else return 0.2720165893861848;  // std dev = 1.917, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.24741654657671475;  // std dev = 3.343, 54.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=32 */
%   | | | else return -0.06818141482878204;  // std dev = 4.100, 98.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=24 */
%   | | else return 0.06044685745024887;  // std dev = 0.476, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,997 */
%   else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | then return 0.032547030919694346;  // std dev = 0.395, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 0.008022440562962984;  // std dev = 0.371, 728.000 (wgt'ed) examples reached here.  /* #neg=605 #pos=123 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D), haswordtitle(F, C) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return -0.2930054328836352;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.24600994887139313;  // std dev = 3.679, 69.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=47 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.08417772400064764;  // std dev = 3.534, 85.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=17 */
%   | | | else return 0.20256646005422058;  // std dev = 1.911, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else return 0.04655463390835432;  // std dev = 0.475, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | then if ( haswordtitle(L, I) )
%   | | | then return 0.06208891718817866;  // std dev = 1.188, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.0728625861438442;  // std dev = 3.260, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else return -0.06432748530848986;  // std dev = 0.235, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | else return 0.006760402081276778;  // std dev = 0.371, 728.000 (wgt'ed) examples reached here.  /* #neg=605 #pos=123 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.03250580733678531;  // std dev = 0.474, 4,955.000 (wgt'ed) examples reached here.  /* #neg=3,030 #pos=1,925 */
%   | | else if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.38804869573701717;  // std dev = 6.093, 161.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=98 */
%   | | | else return -0.17002818668559969;  // std dev = 1.387, 264.000 (wgt'ed) examples reached here.  /* #neg=262 #pos=2 */
%   | else if ( title(G, D), venue(G, B) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.10948787292124386;  // std dev = 4.456, 110.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=26 */
%   | | | else return -0.06437971764779085;  // std dev = 1.365, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.06643408727198426;  // std dev = 6.450, 192.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=85 */
%   | | | else return -0.029987185480370514;  // std dev = 4.129, 143.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=20 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.27545383813011354;  // std dev = 0.430, 85.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=59 */
%   | else return 0.015299566194576852;  // std dev = 0.376, 297.000 (wgt'ed) examples reached here.  /* #neg=244 #pos=53 */
Inference time using transfer learning 1.4585535526275635
Refined model CLL: -0.610902


******************************************
Best model found
******************************************
Results 

CLL : -0.654187 

AUC ROC : 0.617521 

AUC PR : 0.607014 

Precision : 1.0 

Recall : 0.151272 

F1 : 0.262791 

Total Learning Time : 1749.216988325119 

Total Inference Time : 10.626218795776367 

Total revision time: 1766.181916475296
Best scored revision CLL: -0.610902


Results 

CLL : -0.654187 

AUC ROC : 0.617521 

AUC PR : 0.607014 

Precision : 1.0 

Recall : 0.151272 

F1 : 0.262791 

Total Learning Time : 1766.194674730301 

Total Inference Time : 10.626218795776367 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos examples: 550
Target test neg examples: 500

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 6.474202632904053
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.72e-06, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.17049686697298647;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18219293009188628;  // std dev = 39.232, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15498549883469784;  // std dev = 39.167, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12937973874075168;  // std dev = 39.114, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10626852302092493;  // std dev = 39.074, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08612508071057391;  // std dev = 39.044, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06905487324779398;  // std dev = 39.022, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05490360274464841;  // std dev = 39.006, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0433685076407462;  // std dev = 38.994, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.034085651766862665;  // std dev = 38.986, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
Inference time using transfer learning 0.7333943843841553
Parameter learned model CLL:-0.627729 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.72e-06, 0, 413], 'false': [37.582, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.232, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.167, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.114, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.074, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.044, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.022, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.006, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.994, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.986, 4, 2]}]
{'': [7.157040631385029e-15, 0.21478670132777686]}
{'': [nan, 0.22022403069905938]}
{'': [nan, 0.21949016851811237]}
{'': [nan, 0.21890359833924453]}
{'': [nan, 0.2184532295464632]}
{'': [nan, 0.218117190934714]}
{'': [nan, 0.2178709566476115]}
{'': [nan, 0.217692213292287]}
{'': [nan, 0.21756281567098812]}
{'': [nan, 0.21746895701486607]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
Model training time 6683.815071821213
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.72e-06, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18699686136678825;  // std dev = 34.603, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.13739421811838173;  // std dev = 7.303, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3581489350995111;  // std dev = 4.062, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.0607699838194067;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.0607699838194067;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.02836170105695747;  // std dev = 9.640, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.19700108919512732;  // std dev = 0.474, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.14689419051007135;  // std dev = 7.378, 266.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=85 */
%   | | | else return 0.46652546987453924;  // std dev = 2.459, 29.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.3876224127078261;  // std dev = 3.885, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return 0.15313109757134968;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.38281520985970885;  // std dev = 3.634, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.4962537292833593;  // std dev = 2.513, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | then return -0.05353224823028762;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | else return 0.020699908559497604;  // std dev = 0.371, 695.000 (wgt'ed) examples reached here.  /* #neg=580 #pos=115 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.16714732731800627;  // std dev = 0.474, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.12504636728730545;  // std dev = 7.361, 266.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=85 */
%   | | | else return 0.3865066562643996;  // std dev = 2.438, 29.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.3333432016432613;  // std dev = 3.865, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return 0.08978799354659366;  // std dev = 2.413, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.3197871744175821;  // std dev = 3.605, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.3927830384082758;  // std dev = 2.460, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | then return -0.055961924027801875;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | else return 0.018573181461201245;  // std dev = 0.371, 695.000 (wgt'ed) examples reached here.  /* #neg=580 #pos=115 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.1390751612587248;  // std dev = 0.473, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return 0.04254090760078497;  // std dev = 4.562, 109.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=28 */
%   | | | else return 0.16874968513726632;  // std dev = 6.256, 186.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=76 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.2664325867112747;  // std dev = 3.860, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return 0.07047091428444115;  // std dev = 2.412, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.2555053014334582;  // std dev = 3.600, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.2996768390255727;  // std dev = 2.434, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | then return 0.022660902714843285;  // std dev = 0.375, 482.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=82 */
%   | else return -0.005891440202628928;  // std dev = 0.351, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.11379971122568744;  // std dev = 0.472, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.07752801008496632;  // std dev = 7.326, 266.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=85 */
%   | | | else return 0.2678920325127577;  // std dev = 2.423, 29.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.2193130346648125;  // std dev = 3.845, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return 0.020009286182245116;  // std dev = 2.401, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.200525140305217;  // std dev = 3.573, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.22590169469146404;  // std dev = 2.427, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | then return 0.021627126413262386;  // std dev = 0.375, 482.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=82 */
%   | else return -0.008683711826172417;  // std dev = 0.351, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.09166415462953009;  // std dev = 0.472, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return 0.011602353655330069;  // std dev = 4.562, 109.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=28 */
%   | | | else return 0.11538735480839445;  // std dev = 6.196, 186.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=76 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return 0.1677003791716768;  // std dev = 3.843, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return 0.015607394728836708;  // std dev = 2.401, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.15279664322414682;  // std dev = 3.570, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.17081609244789214;  // std dev = 2.430, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | then return -0.054174853127228285;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | else return 0.013251970971846758;  // std dev = 0.371, 695.000 (wgt'ed) examples reached here.  /* #neg=580 #pos=115 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.07322625973581748;  // std dev = 0.472, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return -0.002160668253775121;  // std dev = 4.562, 109.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=28 */
%   | | | else return 0.09189004574328039;  // std dev = 6.182, 186.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=76 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.14037155469498572;  // std dev = 3.834, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return -0.021343465642865385;  // std dev = 2.392, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.11597243579803933;  // std dev = 3.550, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.1303562921063207;  // std dev = 2.438, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | then return 0.017796442480088194;  // std dev = 0.375, 482.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=82 */
%   | else return -0.009344893791124643;  // std dev = 0.351, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6496790993799475;  // std dev = 0.994, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return -0.3034147641059442;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordtitle(H, D), haswordtitle(H, C) )
%   | | | then return -0.08645507143271568;  // std dev = 3.510, 76.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=17 */
%   | | | else return 0.148789365893896;  // std dev = 2.433, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | else if ( haswordtitle(I, C) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.0570081381110505;  // std dev = 35.413, 5,648.000 (wgt'ed) examples reached here.  /* #neg=3,563 #pos=2,085 */
%   | | | else return 0.04503996272742344;  // std dev = 7.640, 289.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=102 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.06698056497706638;  // std dev = 4.502, 86.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=44 */
%   | | | else return 0.09297165545517024;  // std dev = 4.311, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   else return 0.007418100082775946;  // std dev = 0.367, 732.000 (wgt'ed) examples reached here.  /* #neg=614 #pos=118 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.04530432415025735;  // std dev = 0.470, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return -0.013224924127502351;  // std dev = 4.562, 109.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=28 */
%   | | | else return 0.06367812755554086;  // std dev = 6.168, 186.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=76 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return 0.08534017003263798;  // std dev = 3.833, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return -0.03355207908941264;  // std dev = 2.395, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.06930800106740465;  // std dev = 3.546, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.07991511313040418;  // std dev = 2.454, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | then return 0.01626154877285466;  // std dev = 0.375, 482.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=82 */
%   | else return -0.01246477147283965;  // std dev = 0.351, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.03557858449812553;  // std dev = 0.470, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return -0.021842214125765237;  // std dev = 4.562, 109.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=28 */
%   | | | else return 0.04973181579700425;  // std dev = 6.163, 186.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=76 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return 0.06433255631849015;  // std dev = 3.832, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return -0.02571561101734456;  // std dev = 2.395, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.05217586408488981;  // std dev = 3.545, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.06270176829237317;  // std dev = 2.461, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | then return 0.014274240237019705;  // std dev = 0.375, 482.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=82 */
%   | else return -0.011097739376520258;  // std dev = 0.351, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
Inference time using transfer learning 1.6714863777160645
Refined model CLL: -0.612726


******************************************
Best model found
******************************************
Results 

CLL : -0.722013 

AUC ROC : 0.710665 

AUC PR : 0.739076 

Precision : 0.878788 

Recall : 0.052727 

F1 : 0.099485 

Total Learning Time : 6683.815071821213 

Total Inference Time : 29.1247136592865 

Total revision time: 6720.765346288681
Best scored revision CLL: -0.612726


Results 

CLL : -0.722013 

AUC ROC : 0.710665 

AUC PR : 0.739076 

Precision : 0.878788 

Recall : 0.052727 

F1 : 0.099485 

Total Learning Time : 6720.778104543686 

Total Inference Time : 29.1247136592865 

Run: 3

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 6.076033353805542
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.58e-06, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.19988648066451323;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20495251271587128;  // std dev = 39.914, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17361681718423858;  // std dev = 39.850, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1439642347554069;  // std dev = 39.800, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11723098312291434;  // std dev = 39.763, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09407131629837247;  // std dev = 39.736, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07462655346410961;  // std dev = 39.717, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0586854881756588;  // std dev = 39.704, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0458468604739559;  // std dev = 39.695, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.035641192336017584;  // std dev = 39.689, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning 0.7377469539642334
Parameter learned model CLL:-0.644902 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.58e-06, 0, 399], 'false': [38.485, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.914, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.85, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.8, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.763, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.736, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.717, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.704, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.695, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.689, 4, 2]}]
{'': [6.268447192670558e-15, 0.22495299551614867]}
{'': [nan, 0.2281425894551251]}
{'': [nan, 0.22741391766586597]}
{'': [nan, 0.2268433631661814]}
{'': [nan, 0.2264185204310953]}
{'': [nan, 0.22611334723983495]}
{'': [nan, 0.22589906601390888]}
{'': [nan, 0.22575035269672858]}
{'': [nan, 0.22564745967470265]}
{'': [nan, 0.22557604227204317]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
Model training time 6945.848162174225
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.58e-06, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21728033821754725;  // std dev = 35.215, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.15514141630252049;  // std dev = 7.452, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.43157550852608434;  // std dev = 5.914, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.06760839455897227;  // std dev = 7.001, 296.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=62 */
%   | | | else return 0.04035232493002018;  // std dev = 5.930, 236.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=43 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.22090041108308256;  // std dev = 0.482, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return 0.0746873828403928;  // std dev = 4.344, 102.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=25 */
%   | | | else return 0.2575873620423084;  // std dev = 6.662, 196.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=86 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return 0.41161957506308294;  // std dev = 4.221, 76.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=47 */
%   | | | else return 0.18601437608813015;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.42583397694508146;  // std dev = 3.544, 54.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=34 */
%   | | | else return 0.6392692448186323;  // std dev = 1.246, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | then return 0.04861581877207112;  // std dev = 0.398, 532.000 (wgt'ed) examples reached here.  /* #neg=427 #pos=105 */
%   | else return 0.027575939043345755;  // std dev = 0.378, 248.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=43 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.1868253908983159;  // std dev = 0.481, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return 0.051056222367307884;  // std dev = 4.344, 102.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=25 */
%   | | | else return 0.21681476526910426;  // std dev = 6.625, 196.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=86 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return 0.34400736647831043;  // std dev = 4.197, 76.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=47 */
%   | | | else return 0.11105286164872374;  // std dev = 2.069, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.3514672700344268;  // std dev = 3.522, 54.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=34 */
%   | | | else return 0.4967732231972436;  // std dev = 1.217, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | then return 0.04345748919292548;  // std dev = 0.398, 532.000 (wgt'ed) examples reached here.  /* #neg=427 #pos=105 */
%   | else return 0.021741848750375187;  // std dev = 0.378, 248.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=43 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.15438859466873522;  // std dev = 0.480, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return 0.034480470378395606;  // std dev = 4.344, 102.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=25 */
%   | | | else return 0.177766657633105;  // std dev = 6.597, 196.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=86 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then return 0.481130388992587;  // std dev = 0.321, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.21989740155335172;  // std dev = 4.602, 88.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=49 */
%   | | | else return 0.2995254369564275;  // std dev = 3.728, 75.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=53 */
%   else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | then if ( haswordtitle(M, K) )
%   | | then return 0.1296920391490274;  // std dev = 0.454, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else return -0.08203689900256206;  // std dev = 0.257, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | else return 0.028580554627108665;  // std dev = 0.389, 697.000 (wgt'ed) examples reached here.  /* #neg=567 #pos=130 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.12523070180665946;  // std dev = 0.480, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return 0.016899861027964598;  // std dev = 4.344, 102.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=25 */
%   | | | else return 0.14264736496857172;  // std dev = 6.578, 196.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=86 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return 0.2029500458418186;  // std dev = 4.169, 76.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=47 */
%   | | | else return 0.036537992705569046;  // std dev = 2.076, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.22152394319239133;  // std dev = 3.512, 54.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=34 */
%   | | | else return 0.2993093245772513;  // std dev = 1.209, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | then return 0.03333945890764088;  // std dev = 0.397, 532.000 (wgt'ed) examples reached here.  /* #neg=427 #pos=105 */
%   | else return 0.0146281837461467;  // std dev = 0.378, 248.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=43 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.09999392579955928;  // std dev = 0.479, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.05970168377302607;  // std dev = 7.469, 270.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=95 */
%   | | | else return 0.2368867445012854;  // std dev = 2.478, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.15331338714320428;  // std dev = 4.167, 76.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=47 */
%   | | | else return 0.028157219267102414;  // std dev = 2.076, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.3840713609507194;  // std dev = 0.144, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1784093571057789;  // std dev = 3.706, 74.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=52 */
%   else if ( haswordvenue(A, N), haswordauthor(P, N) )
%   | then return 0.05018311300397874;  // std dev = 0.410, 83.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=18 */
%   | else return 0.02045037905000026;  // std dev = 0.389, 697.000 (wgt'ed) examples reached here.  /* #neg=567 #pos=130 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.0788065677685773;  // std dev = 0.479, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return -0.0043385197996502894;  // std dev = 4.344, 102.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=25 */
%   | | | else return 0.09380399587597517;  // std dev = 6.541, 196.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=86 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return 0.11530204402627005;  // std dev = 4.167, 76.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=47 */
%   | | | else return 0.021640066977593155;  // std dev = 2.076, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.12104229301765804;  // std dev = 3.504, 54.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=34 */
%   | | | else return 0.1926284818731924;  // std dev = 1.224, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | then return 0.025524109655028115;  // std dev = 0.397, 532.000 (wgt'ed) examples reached here.  /* #neg=427 #pos=105 */
%   | else return 0.009136342341192087;  // std dev = 0.378, 248.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=43 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.06184097248624693;  // std dev = 0.479, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return -0.019347848122990025;  // std dev = 4.344, 102.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=25 */
%   | | | else return 0.07270770250156319;  // std dev = 6.535, 196.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=86 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then return 0.22853180467038475;  // std dev = 0.317, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.06371553059547196;  // std dev = 4.580, 88.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=49 */
%   | | | else return 0.10595918704947489;  // std dev = 3.697, 75.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=53 */
%   else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | then if ( haswordauthor(M, K) )
%   | | then return 0.11096787750027191;  // std dev = 0.452, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else return 0.012524883028567158;  // std dev = 0.389, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | else return 0.006077742921970135;  // std dev = 0.378, 248.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=43 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.04800035350626434;  // std dev = 0.479, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.019810627245286185;  // std dev = 7.441, 270.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=95 */
%   | | | else return 0.14407319401598406;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then return 0.17948746968826618;  // std dev = 0.317, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return 0.18896810945000633;  // std dev = 0.888, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.059675843473307386;  // std dev = 5.818, 158.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=98 */
%   else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | then if ( haswordauthor(N, L) )
%   | | then return 0.09401377645981217;  // std dev = 0.452, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else return 0.010717800056069352;  // std dev = 0.389, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | else return 0.00522971530937677;  // std dev = 0.378, 248.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=43 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.03717097424662298;  // std dev = 0.479, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return -0.02460755767529305;  // std dev = 4.344, 102.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=25 */
%   | | | else return 0.0470896219738501;  // std dev = 6.520, 196.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=86 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( haswordauthor(I, G) )
%   | | | then return 0.14513237511059068;  // std dev = 0.888, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.02603024464211895;  // std dev = 4.559, 89.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=50 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.058548210286734244;  // std dev = 3.499, 54.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=34 */
%   | | | else return 0.12541468073933065;  // std dev = 1.242, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | then return 0.034211963182406095;  // std dev = 0.406, 83.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=18 */
%   | else return 0.010007170860423048;  // std dev = 0.389, 697.000 (wgt'ed) examples reached here.  /* #neg=567 #pos=130 */
Inference time using transfer learning 1.784259557723999
Refined model CLL: -0.630517


******************************************
Best model found
******************************************
Results 

CLL : -0.59483 

AUC ROC : 0.682883 

AUC PR : 0.572439 

Precision : 0.866667 

Recall : 0.282609 

F1 : 0.42623 

Total Learning Time : 6945.848162174225 

Total Inference Time : 28.218271255493164 

Total revision time: 6981.500272035599
Best scored revision CLL: -0.630517


Results 

CLL : -0.59483 

AUC ROC : 0.682883 

AUC PR : 0.572439 

Precision : 0.866667 

Recall : 0.282609 

F1 : 0.42623 

Total Learning Time : 6981.513030052185 

Total Inference Time : 28.218271255493164 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.478761196136475
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.53e-06, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.15094741899085268;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1658359099984922;  // std dev = 37.931, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1414926568960433;  // std dev = 37.869, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1186820619021793;  // std dev = 37.818, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09808948940354419;  // std dev = 37.779, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08007442348372758;  // std dev = 37.749, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06471334013203554;  // std dev = 37.726, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05188008215870557;  // std dev = 37.709, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04132876062552069;  // std dev = 37.696, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.032760395517854944;  // std dev = 37.687, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
Inference time using transfer learning 0.7634415626525879
Parameter learned model CLL:-0.614315 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.53e-06, 0, 392], 'false': [36.21, 4, 1]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.931, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.869, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.818, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.779, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.749, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.726, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.709, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.696, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.687, 4, 2]}]
{'': [5.945357584931451e-15, 0.20706753172221312]}
{'': [nan, 0.21397140612518967]}
{'': [nan, 0.21327128052814734]}
{'': [nan, 0.2127042128637235]}
{'': [nan, 0.21226023874202513]}
{'': [nan, 0.21192096503730018]}
{'': [nan, 0.21166570556345626]}
{'': [nan, 0.2114752686691326]}
{'': [nan, 0.2113336202279476]}
{'': [nan, 0.21122817856883858]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
Model training time 5782.119655370712
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.53e-06, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.17115949497199173;  // std dev = 32.852, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.13612727444969389;  // std dev = 7.456, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.331017152153777;  // std dev = 5.671, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001355197131893661;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.1840144326866142;  // std dev = 0.470, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return 0.1028931079620797;  // std dev = 4.463, 103.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=27 */
%   | | | else return 0.2271450704657799;  // std dev = 6.769, 209.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=85 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return 0.37587742140570546;  // std dev = 3.976, 65.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=37 */
%   | | | else return 0.18790273468420615;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.39311597490774475;  // std dev = 3.229, 43.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   | | | else return 0.4243108660394551;  // std dev = 2.786, 43.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=29 */
%   else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | then return 0.06026188182862376;  // std dev = 0.406, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 0.004746452748334506;  // std dev = 0.354, 808.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=119 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.15681509653989698;  // std dev = 0.469, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.1404756070701781;  // std dev = 7.880, 297.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=103 */
%   | | | else return 0.3806459543123323;  // std dev = 1.821, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.3106248454675755;  // std dev = 3.973, 65.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=37 */
%   | | | else return 0.15763357948740442;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.3256649125444656;  // std dev = 3.228, 43.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   | | | else return 0.33783967783248275;  // std dev = 2.725, 43.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=29 */
%   else if ( haswordvenue(A, N), haswordauthor(P, N) )
%   | then return 0.05238724029487717;  // std dev = 0.406, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 0.004165406752791617;  // std dev = 0.354, 808.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=119 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.13086898219708867;  // std dev = 0.468, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return 0.04870217106044572;  // std dev = 4.463, 103.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=27 */
%   | | | else return 0.16423992978408988;  // std dev = 6.690, 209.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=85 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( haswordauthor(I, C) )
%   | | | then return 0.5904993820562355;  // std dev = 0.056, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3975037241904397;  // std dev = 1.196, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.1996028925913989;  // std dev = 4.237, 73.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=37 */
%   | | | else return 0.2537219250166795;  // std dev = 4.163, 84.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=52 */
%   else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | then return 0.058832591685396035;  // std dev = 0.407, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 0.0021435993274919766;  // std dev = 0.354, 808.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=119 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.10744137644248104;  // std dev = 0.468, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return 0.04041199865796756;  // std dev = 4.463, 103.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=27 */
%   | | | else return 0.13339266049713086;  // std dev = 6.665, 209.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=85 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( haswordauthor(I, C) )
%   | | | then return 0.44476012162990175;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.30601525881429525;  // std dev = 1.196, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.15583847950255528;  // std dev = 4.235, 73.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=37 */
%   | | | else return 0.19431687936331546;  // std dev = 4.153, 84.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=52 */
%   else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | then return 0.04427356144221816;  // std dev = 0.406, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 0.002636088208059331;  // std dev = 0.354, 808.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=119 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.08719344070272803;  // std dev = 0.467, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return 0.024530741066252856;  // std dev = 4.463, 103.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=27 */
%   | | | else return 0.10663065243543868;  // std dev = 6.648, 209.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=85 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.15438982655288558;  // std dev = 3.589, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.06979761958039564;  // std dev = 2.524, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.16724064100876854;  // std dev = 3.208, 43.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   | | | else return 0.14725223531957973;  // std dev = 2.659, 43.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=29 */
%   else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | then return 0.05019398811992162;  // std dev = 0.407, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 9.553892278457185E-4;  // std dev = 0.354, 808.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=119 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.06991766888850888;  // std dev = 0.467, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.054132415685193884;  // std dev = 7.785, 297.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=103 */
%   | | | else return 0.2224273855773579;  // std dev = 1.804, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(J, C) )
%   | | | then return 0.3055938785515358;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19061408843193392;  // std dev = 1.197, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.0854144252143545;  // std dev = 4.294, 76.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=39 */
%   | | | else return 0.11396069441007597;  // std dev = 4.081, 81.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=50 */
%   else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | then return 0.0433032383693998;  // std dev = 0.407, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 8.360986912236782E-4;  // std dev = 0.354, 808.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=119 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.05556382428685284;  // std dev = 0.467, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return 0.0070000814698606105;  // std dev = 4.463, 103.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=27 */
%   | | | else return 0.06963951160376033;  // std dev = 6.620, 209.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=85 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( haswordauthor(I, C) )
%   | | | then return 0.24500311814018383;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19611208939429378;  // std dev = 1.198, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.05854838743242248;  // std dev = 4.205, 73.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=37 */
%   | | | else return 0.08623138717858257;  // std dev = 4.165, 84.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=52 */
%   else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | then return 0.03717096934086115;  // std dev = 0.407, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 7.316367998477042E-4;  // std dev = 0.354, 808.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=119 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.04403167650669666;  // std dev = 0.467, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return -0.0032136626773200394;  // std dev = 4.463, 103.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=27 */
%   | | | else return 0.054240989835958486;  // std dev = 6.614, 209.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=85 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( haswordauthor(I, C) )
%   | | | then return 0.2026542266875551;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14750298427342048;  // std dev = 1.198, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.04156810795868712;  // std dev = 4.300, 76.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=39 */
%   | | | else return 0.06853511426913625;  // std dev = 4.068, 81.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=50 */
%   else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | then return 0.007809991152288493;  // std dev = 0.364, 585.000 (wgt'ed) examples reached here.  /* #neg=492 #pos=93 */
%   | else return -0.0038100194672437073;  // std dev = 0.352, 313.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=45 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.03459044551453341;  // std dev = 0.466, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.02152366097387454;  // std dev = 7.765, 297.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=103 */
%   | | | else return 0.14010163601793402;  // std dev = 1.802, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.06252319897819733;  // std dev = 3.578, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return -0.006936440058173738;  // std dev = 2.504, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.10082266892420677;  // std dev = 0.825, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.05185792600953126;  // std dev = 4.091, 81.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=50 */
%   else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | then return 0.0350850844103716;  // std dev = 0.405, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return -2.70486027117122E-4;  // std dev = 0.354, 808.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=119 */
Inference time using transfer learning 2.3144419193267822
Refined model CLL: -0.5998


******************************************
Best model found
******************************************
Results 

CLL : -0.803669 

AUC ROC : 0.566134 

AUC PR : 0.682035 

Precision : 0.756098 

Recall : 0.040208 

F1 : 0.076355 

Total Learning Time : 5782.119655370712 

Total Inference Time : 24.52995467185974 

Total revision time: 5813.514012098312
Best scored revision CLL: -0.5998


Results 

CLL : -0.803669 

AUC ROC : 0.566134 

AUC PR : 0.682035 

Precision : 0.756098 

Recall : 0.040208 

F1 : 0.076355 

Total Learning Time : 5813.526770114899 

Total Inference Time : 24.52995467185974 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos examples: 581
Target test neg examples: 2222

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.02970814704895
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.56e-06, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.2796365384052923;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2781850136572844;  // std dev = 35.547, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23242113232729092;  // std dev = 35.476, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18862324633504446;  // std dev = 35.424, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14957432737924717;  // std dev = 35.390, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11661006349999804;  // std dev = 35.370, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08984683694334689;  // std dev = 35.358, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06868385957197519;  // std dev = 35.352, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.052235480696956646;  // std dev = 35.349, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03959242193679933;  // std dev = 35.347, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
Inference time using transfer learning 0.9631104469299316
Parameter learned model CLL:-0.672069 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.56e-06, 0, 396], 'false': [34.354, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.547, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.476, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.424, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.39, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.37, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.358, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.352, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.349, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.347, 2, 2]}]
{'': [6.172391441956426e-15, 0.24383580356527565]}
{'': [nan, 0.24132734078220106]}
{'': [nan, 0.2403585802947049]}
{'': [nan, 0.2396591168203965]}
{'': [nan, 0.23920081293576]}
{'': [nan, 0.23892324245515703]}
{'': [nan, 0.23876585284387059]}
{'': [nan, 0.2386820603502947]}
{'': [nan, 0.23864070829038767]}
{'': [nan, 0.2386226352544325]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
Model training time 1116.6888356208801
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.56e-06, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29812957401528645;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.4245825015330777;  // std dev = 5.926, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.1145591915097694;  // std dev = 7.713, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.37243464938522663;  // std dev = 2.957, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.295774079701605;  // std dev = 0.492, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.44385122261114845;  // std dev = 3.852, 65.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=42 */
%   | | | else return 0.25005118720427894;  // std dev = 2.518, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.7695133801067446;  // std dev = 0.065, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.449223717818592;  // std dev = 4.128, 83.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=56 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | then if ( haswordtitle(K, M), haswordauthor(N, M) )
%   | | | then return 0.1531474499605089;  // std dev = 4.237, 84.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=26 */
%   | | | else return 0.35448442778552364;  // std dev = 4.119, 68.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=36 */
%   | | else return 0.037478495152011904;  // std dev = 0.388, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | else return 0.017766904263372178;  // std dev = 0.377, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.24628716600667108;  // std dev = 0.491, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.35624584695914263;  // std dev = 4.094, 74.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=47 */
%   | | | else return 0.1288834743695294;  // std dev = 2.030, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.660819755926758;  // std dev = 0.140, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.36420222170396327;  // std dev = 4.084, 83.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=56 */
%   else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | then if ( haswordtitle(L, M), haswordvenue(A, M) )
%   | | then if ( haswordauthor(N, K) )
%   | | | then return 0.32234161217825635;  // std dev = 2.646, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.17968782249498022;  // std dev = 5.338, 124.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=48 */
%   | | else return 0.032712942227039486;  // std dev = 0.388, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | else return 0.015433182435672021;  // std dev = 0.377, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.19886210069410626;  // std dev = 0.490, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.37721498622846067;  // std dev = 0.366, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.23553519726150168;  // std dev = 4.455, 83.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=48 */
%   | | | else return 0.28892233817150026;  // std dev = 4.086, 85.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | then if ( haswordauthor(L, K) )
%   | | | then return 0.29282207044023034;  // std dev = 2.637, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.1437218703371088;  // std dev = 5.319, 124.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=48 */
%   | | else if ( title(M, J), venue(M, A) )
%   | | | then return 0.03431124393138129;  // std dev = 5.398, 189.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=36 */
%   | | | else return -0.15616494654480936;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.01338279223233582;  // std dev = 0.377, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.15675847302177712;  // std dev = 0.490, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.22773271937443532;  // std dev = 3.802, 65.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=42 */
%   | | | else return 0.07057440957073581;  // std dev = 2.480, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.2427918300496564;  // std dev = 3.324, 51.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=34 */
%   | | | else return 0.2076014721985063;  // std dev = 2.386, 36.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=26 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | then if ( haswordvenue(A, L) )
%   | | | then return 0.24063542979685154;  // std dev = 2.635, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.03686738258624365;  // std dev = 6.936, 284.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=66 */
%   | | else return 0.2505622735201097;  // std dev = 0.496, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | else return 0.011587261258085778;  // std dev = 0.377, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.1214780255312841;  // std dev = 0.490, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.27949860662528575;  // std dev = 0.358, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.12511193632485332;  // std dev = 4.407, 83.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=48 */
%   | | | else return 0.1689459688237421;  // std dev = 4.089, 85.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then if ( haswordauthor(L, K) )
%   | | | then return 0.23151824876691865;  // std dev = 2.620, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.08797716672345914;  // std dev = 5.255, 124.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=48 */
%   | | else if ( title(M, J), venue(M, B) )
%   | | | then return 0.026271595039930366;  // std dev = 5.398, 189.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=36 */
%   | | | else return -0.17062342567348524;  // std dev = 0.035, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.00931299939742036;  // std dev = 0.376, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.09307654727965596;  // std dev = 0.489, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.14853826766569345;  // std dev = 3.788, 65.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=42 */
%   | | | else return -0.01999006475462112;  // std dev = 2.468, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.14673749756419222;  // std dev = 3.291, 51.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=34 */
%   | | | else return 0.11580088758739901;  // std dev = 2.393, 36.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=26 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | then if ( haswordvenue(A, L) )
%   | | | then return 0.17037515280168547;  // std dev = 2.622, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.021841265079876725;  // std dev = 6.911, 284.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=66 */
%   | | else return 0.1803778392549326;  // std dev = 0.496, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | else return 0.007312280114978665;  // std dev = 0.376, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.07080263258837519;  // std dev = 0.489, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.18473142142715737;  // std dev = 0.351, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06772738689443217;  // std dev = 4.398, 83.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=48 */
%   | | | else return 0.09696779650774669;  // std dev = 4.082, 85.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | then if ( haswordvenue(B, K) )
%   | | | then return 0.17648974223020047;  // std dev = 2.606, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.011576950668632005;  // std dev = 6.871, 284.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=66 */
%   | | else return 0.16565510821271254;  // std dev = 0.495, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | then return 0.014993475700815596;  // std dev = 0.388, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else return -0.13388277665806436;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.0536180720305478;  // std dev = 0.489, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.0881563697516297;  // std dev = 3.783, 65.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=42 */
%   | | | else return -0.03424385705493568;  // std dev = 2.475, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.2639883436585485;  // std dev = 0.140, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.07297177118012071;  // std dev = 4.055, 83.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=56 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | then if ( haswordvenue(B, L) )
%   | | | then return 0.13689944791304334;  // std dev = 2.605, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.009659679960649247;  // std dev = 6.871, 284.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=66 */
%   | | else return 0.12731644455560512;  // std dev = 0.495, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | else return 0.004030978336826648;  // std dev = 0.376, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.040492442367401724;  // std dev = 0.489, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.0667872569058344;  // std dev = 3.784, 65.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=42 */
%   | | | else return -0.02579773015315353;  // std dev = 2.475, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.21700788111799044;  // std dev = 0.121, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.05582358135763511;  // std dev = 4.058, 83.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=56 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | then if ( haswordvenue(B, L) )
%   | | | then return 0.10482477568683736;  // std dev = 2.604, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.008051144220060313;  // std dev = 6.871, 284.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=66 */
%   | | else return 0.09684947930929869;  // std dev = 0.495, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | else return 0.0034669844621416854;  // std dev = 0.376, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
Inference time using transfer learning 1.8198308944702148
Refined model CLL: -0.654407


******************************************
Best model found
******************************************
Results 

CLL : -0.587567 

AUC ROC : 0.621425 

AUC PR : 0.370246 

Precision : 0.84252 

Recall : 0.184165 

F1 : 0.30226 

Total Learning Time : 1116.6888356208801 

Total Inference Time : 8.610922813415527 

Total revision time: 1130.6461362838745
Best scored revision CLL: -0.654407


Results 

CLL : -0.587567 

AUC ROC : 0.621425 

AUC PR : 0.370246 

Precision : 0.84252 

Recall : 0.184165 

F1 : 0.30226 

Total Learning Time : 1130.6588943004608 

Total Inference Time : 8.610922813415527 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos examples: 747
Target test neg examples: 1068

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.994770526885986
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1.41e-06, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.1815575593294866;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19226970622757572;  // std dev = 37.299, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16325441339049906;  // std dev = 37.235, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13588052440684203;  // std dev = 37.184, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11118390758780919;  // std dev = 37.145, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08971399578805954;  // std dev = 37.117, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07159260191531253;  // std dev = 37.096, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0566428679458283;  // std dev = 37.081, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044521336109631666;  // std dev = 37.071, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03481961502542292;  // std dev = 37.064, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
Inference time using transfer learning 0.9003500938415527
Parameter learned model CLL:-0.634638 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.41e-06, 0, 380], 'false': [35.76, 3, 1]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.299, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.235, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.184, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.145, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.117, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.096, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.081, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.071, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.064, 3, 2]}]
{'': [5.235578052969159e-15, 0.2188154860035915]}
{'': [nan, 0.22352893076480565]}
{'': [nan, 0.22275774646567756]}
{'': [nan, 0.22214663652311933]}
{'': [nan, 0.22168341475350445]}
{'': [nan, 0.2213432248685861]}
{'': [nan, 0.22109832170004654]}
{'': [nan, 0.2209238046139834]}
{'': [nan, 0.22079978020186083]}
{'': [nan, 0.22071140818040338]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
Model training time 1717.2039833068848
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1.41e-06, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.20594041938124213;  // std dev = 0.476, 5,026.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=1,748 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.022235622406012474;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D), haswordtitle(F, C) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.7474016819767072;  // std dev = 0.137, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.38048226592185147;  // std dev = 4.193, 71.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=39 */
%   | | else if ( haswordtitle(G, C) )
%   | | | then return 0.02461513368202221;  // std dev = 3.573, 85.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=17 */
%   | | | else return 0.4519598844356088;  // std dev = 1.899, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else return 0.2163012713967889;  // std dev = 0.479, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, H) )
%   | | | then return 0.10096488854482308;  // std dev = 1.216, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.12821928662036908;  // std dev = 3.287, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else return -0.07951514279938432;  // std dev = 0.258, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | else return 0.023648883469051855;  // std dev = 0.374, 728.000 (wgt'ed) examples reached here.  /* #neg=605 #pos=123 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1832858101512032;  // std dev = 0.478, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.08770621412923812;  // std dev = 1.216, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.11116982749544013;  // std dev = 3.286, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else if ( haswordauthor(E, H), haswordvenue(A, H) )
%   | | | then return -0.1484041632968498;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06014946293178558;  // std dev = 1.356, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.10123754975841022;  // std dev = 3.325, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | | else return -0.05625215737834572;  // std dev = 1.356, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.015315171235368312;  // std dev = 7.710, 436.000 (wgt'ed) examples reached here.  /* #neg=365 #pos=71 */
%   | | | else return 0.019137801204787273;  // std dev = 5.401, 210.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=35 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D), haswordtitle(F, C) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.33854426703977747;  // std dev = 3.784, 62.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=38 */
%   | | | else return 0.21600449498431265;  // std dev = 1.887, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.007333880484768845;  // std dev = 3.561, 85.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=17 */
%   | | | else return 0.3353953666281081;  // std dev = 1.880, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else return 0.15101400335366427;  // std dev = 0.478, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | then if ( haswordtitle(L, I) )
%   | | | then return 0.07740308101498819;  // std dev = 1.206, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.10315605040148014;  // std dev = 3.282, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else return -0.061728621398682286;  // std dev = 0.259, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | else return 0.01733786327639291;  // std dev = 0.374, 728.000 (wgt'ed) examples reached here.  /* #neg=605 #pos=123 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D), haswordtitle(F, C) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return -0.2604832262898825;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.39213554956398433;  // std dev = 3.746, 69.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=47 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.06441568151843748;  // std dev = 3.626, 85.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=17 */
%   | | | else return 0.29728254316777614;  // std dev = 1.917, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else return 0.122323600867821;  // std dev = 0.476, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | then if ( haswordtitle(L, I) )
%   | | | then return 0.07252393601627159;  // std dev = 1.205, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.09277299996295928;  // std dev = 3.282, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else return -0.06435499979138436;  // std dev = 0.258, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | else return 0.015024517423490123;  // std dev = 0.374, 728.000 (wgt'ed) examples reached here.  /* #neg=605 #pos=123 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5961367459383331;  // std dev = 1.389, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | | | else return -0.25966271608551056;  // std dev = 0.252, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.01758785632945716;  // std dev = 4.220, 106.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=29 */
%   | | | else return 0.20808093128860794;  // std dev = 1.886, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | else return 0.09770503116482462;  // std dev = 0.476, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | then if ( haswordtitle(L, I) )
%   | | | then return 0.0633633244720446;  // std dev = 1.195, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.08565078078906915;  // std dev = 3.278, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else return -0.05745833763760849;  // std dev = 0.259, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | else return 0.012520569414825322;  // std dev = 0.374, 728.000 (wgt'ed) examples reached here.  /* #neg=605 #pos=123 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07712527689951194;  // std dev = 0.474, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5106889527801162;  // std dev = 1.111, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.1582118864773188;  // std dev = 0.062, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordauthor(E, H), haswordtitle(I, H) )
%   | | | then return 0.062481362990163776;  // std dev = 3.309, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | | else return -0.13108008117671222;  // std dev = 0.024, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return -0.01185770619311661;  // std dev = 6.800, 374.000 (wgt'ed) examples reached here.  /* #neg=320 #pos=54 */
%   | | | else return 0.08473863809508207;  // std dev = 3.699, 75.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=18 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.031253664438379715;  // std dev = 6.373, 264.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=51 */
%   | | | else return -0.15522357092835543;  // std dev = 0.098, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06038269782470512;  // std dev = 0.474, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5126294211049849;  // std dev = 1.100, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.15280670817452613;  // std dev = 0.083, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordauthor(E, H), haswordtitle(I, H) )
%   | | | then return 0.05345809427519018;  // std dev = 3.279, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | | else return -0.12352315095790677;  // std dev = 0.074, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return -0.016537270845460833;  // std dev = 6.772, 374.000 (wgt'ed) examples reached here.  /* #neg=320 #pos=54 */
%   | | | else return 0.08620475429350423;  // std dev = 3.699, 75.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=18 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.03125938740996901;  // std dev = 6.351, 264.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=51 */
%   | | | else return -0.1422977995804748;  // std dev = 0.111, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5151853446806754;  // std dev = 1.391, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | | | else return -0.3053791949262064;  // std dev = 0.330, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.16031244296204603;  // std dev = 2.018, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | | | else return -0.07450353759275742;  // std dev = 4.146, 97.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.15995841444780862;  // std dev = 3.449, 69.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=39 */
%   | | | else return -0.08183730198789893;  // std dev = 3.479, 83.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=17 */
%   | | else return 0.04744221939841805;  // std dev = 0.476, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,997 */
%   else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | then return 0.022884759630713663;  // std dev = 0.388, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 0.00750246126816684;  // std dev = 0.372, 728.000 (wgt'ed) examples reached here.  /* #neg=605 #pos=123 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.032690510480796284;  // std dev = 0.472, 4,955.000 (wgt'ed) examples reached here.  /* #neg=3,030 #pos=1,925 */
%   | | else if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.3877793439040889;  // std dev = 6.093, 161.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=98 */
%   | | | else return -0.166115545178611;  // std dev = 1.432, 264.000 (wgt'ed) examples reached here.  /* #neg=262 #pos=2 */
%   | else if ( title(G, D), venue(G, B) )
%   | | then if ( samebib(G, H), venue(H, A) )
%   | | | then return 0.14646579165719573;  // std dev = 1.044, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.11533371160812049;  // std dev = 4.505, 121.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=26 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.06670059768815927;  // std dev = 6.450, 192.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=85 */
%   | | | else return -0.03522188060449905;  // std dev = 4.148, 143.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=20 */
%   else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | then return 0.2700642359969472;  // std dev = 0.431, 85.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=59 */
%   | else return 0.013214121913487123;  // std dev = 0.376, 297.000 (wgt'ed) examples reached here.  /* #neg=244 #pos=53 */
Inference time using transfer learning 1.6893861293792725
Refined model CLL: -0.608583


******************************************
Best model found
******************************************
Results 

CLL : -0.649607 

AUC ROC : 0.635554 

AUC PR : 0.624797 

Precision : 1.0 

Recall : 0.164659 

F1 : 0.282759 

Total Learning Time : 1717.2039833068848 

Total Inference Time : 8.726077556610107 

Total revision time: 1732.2804222106934
Best scored revision CLL: -0.608583


Results 

CLL : -0.649607 

AUC ROC : 0.635554 

AUC PR : 0.624797 

Precision : 1.0 

Recall : 0.164659 

F1 : 0.282759 

Total Learning Time : 1732.2931802272797 

Total Inference Time : 8.726077556610107 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos examples: 550
Target test neg examples: 500

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.922909736633301
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.72e-06, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.17049686697298647;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18219293009188636;  // std dev = 39.232, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15498549883469778;  // std dev = 39.167, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12937973874075157;  // std dev = 39.114, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10626852302092493;  // std dev = 39.074, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08612508071057384;  // std dev = 39.044, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06905487324779411;  // std dev = 39.022, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05490360274464841;  // std dev = 39.006, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04336850764074613;  // std dev = 38.994, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03408565176686329;  // std dev = 38.986, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
Inference time using transfer learning 0.7488353252410889
Parameter learned model CLL:-0.627729 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.72e-06, 0, 413], 'false': [37.582, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.232, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.167, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.114, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.074, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.044, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.022, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.006, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.994, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.986, 4, 2]}]
{'': [7.157040631385029e-15, 0.21478670132777686]}
{'': [nan, 0.22022403069905935]}
{'': [nan, 0.21949016851811234]}
{'': [nan, 0.21890359833924458]}
{'': [nan, 0.2184532295464631]}
{'': [nan, 0.218117190934714]}
{'': [nan, 0.2178709566476115]}
{'': [nan, 0.21769221329228686]}
{'': [nan, 0.21756281567098804]}
{'': [nan, 0.21746895701486604]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
Model training time 6745.431476831436
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.72e-06, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18699686136678825;  // std dev = 34.603, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.13739421811838173;  // std dev = 7.303, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3581489350995111;  // std dev = 4.062, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.0607699838194067;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.0607699838194067;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.02836170105695747;  // std dev = 9.640, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.19700108919512752;  // std dev = 0.474, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.14689419051007147;  // std dev = 7.378, 266.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=85 */
%   | | | else return 0.46652546987453924;  // std dev = 2.459, 29.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.3876224127078261;  // std dev = 3.885, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return 0.15313109757134968;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.38281520985970885;  // std dev = 3.634, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.4962537292833593;  // std dev = 2.513, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | then return 0.026321148460655384;  // std dev = 0.375, 482.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=82 */
%   | else return -0.0011242011748237037;  // std dev = 0.351, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.1671473273180061;  // std dev = 0.474, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.12504636728730545;  // std dev = 7.361, 266.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=85 */
%   | | | else return 0.38650665626439956;  // std dev = 2.438, 29.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.33334320164326126;  // std dev = 3.865, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return 0.08978799354659363;  // std dev = 2.413, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.3197871744175821;  // std dev = 3.605, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.39278303840827566;  // std dev = 2.460, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | then return -0.056628061682375025;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | else return 0.01864644531530569;  // std dev = 0.371, 695.000 (wgt'ed) examples reached here.  /* #neg=580 #pos=115 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.13907516125872493;  // std dev = 0.473, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return 0.04254090760078497;  // std dev = 4.562, 109.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=28 */
%   | | | else return 0.16874968513726635;  // std dev = 6.256, 186.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=76 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.2664325867112747;  // std dev = 3.860, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return 0.0704709142844412;  // std dev = 2.412, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.2555053014334583;  // std dev = 3.600, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.2996768390255727;  // std dev = 2.434, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | then return 0.023028971913232263;  // std dev = 0.375, 482.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=82 */
%   | else return -0.006504560394109255;  // std dev = 0.351, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.11379971122568718;  // std dev = 0.472, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.07752801008496642;  // std dev = 7.326, 266.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=85 */
%   | | | else return 0.2678920325127577;  // std dev = 2.423, 29.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.21931303466481233;  // std dev = 3.845, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return 0.020009286182245102;  // std dev = 2.401, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.200525140305217;  // std dev = 3.573, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.22590169469146404;  // std dev = 2.427, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | then return 0.020341652352110988;  // std dev = 0.375, 482.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=82 */
%   | else return -0.0061082130632665625;  // std dev = 0.351, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.09166415462953008;  // std dev = 0.472, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return 0.011602353655330062;  // std dev = 4.562, 109.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=28 */
%   | | | else return 0.11538735480839439;  // std dev = 6.196, 186.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=76 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return 0.16770037917167738;  // std dev = 3.843, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return 0.015607394728836755;  // std dev = 2.401, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.15279664322414685;  // std dev = 3.570, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.17081609244789214;  // std dev = 2.430, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | then return -0.054597000122262346;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | else return 0.013287618203633215;  // std dev = 0.371, 695.000 (wgt'ed) examples reached here.  /* #neg=580 #pos=115 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.07322625973581738;  // std dev = 0.472, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return -0.002160668253775109;  // std dev = 4.562, 109.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=28 */
%   | | | else return 0.09189004574328048;  // std dev = 6.182, 186.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=76 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.1403715546949856;  // std dev = 3.834, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return -0.021343465642865385;  // std dev = 2.392, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.11597243579803933;  // std dev = 3.550, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.13035629210632066;  // std dev = 2.438, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | then return 0.018020922661783192;  // std dev = 0.375, 482.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=82 */
%   | else return -0.009743878626439231;  // std dev = 0.351, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.05787561280076737;  // std dev = 0.471, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return -0.004437829696111776;  // std dev = 4.562, 109.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=28 */
%   | | | else return 0.0724843685270248;  // std dev = 6.173, 186.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=76 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.10602194212954637;  // std dev = 3.834, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return -0.0164200110089529;  // std dev = 2.392, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.08737882143372835;  // std dev = 3.549, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.1005219813841169;  // std dev = 2.446, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | then return -0.06718224315247537;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | else return 0.011402694770954002;  // std dev = 0.371, 695.000 (wgt'ed) examples reached here.  /* #neg=580 #pos=115 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.04557964113790047;  // std dev = 0.471, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.019530259946308626;  // std dev = 7.276, 266.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=85 */
%   | | | else return 0.1361542969096778;  // std dev = 2.423, 29.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.0799081407454414;  // std dev = 3.833, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return -0.012651585520903832;  // std dev = 2.392, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.06577273242996848;  // std dev = 3.548, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.07826841716436113;  // std dev = 2.454, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | then return -0.05125238832175155;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | else return 0.009504187273667735;  // std dev = 0.371, 695.000 (wgt'ed) examples reached here.  /* #neg=580 #pos=115 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordtitle(E, C) )
%   | | then if ( author(F, D), title(F, E) )
%   | | | then return 0.5141167741213626;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.030785757419645017;  // std dev = 1.180, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return 0.27416509448957976;  // std dev = 0.379, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( haswordtitle(G, C) )
%   | | then if ( title(H, G), venue(H, B) )
%   | | | then return 0.0350846638746163;  // std dev = 35.789, 5,767.000 (wgt'ed) examples reached here.  /* #neg=3,637 #pos=2,130 */
%   | | | else return 0.025059600164779067;  // std dev = 7.620, 289.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=102 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.03954749339555738;  // std dev = 4.528, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.05460087853557683;  // std dev = 4.318, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | then return 0.014514754856877629;  // std dev = 0.375, 482.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=82 */
%   | else return -0.011782337358438134;  // std dev = 0.351, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
Inference time using transfer learning 1.748415231704712
Refined model CLL: -0.61418


******************************************
Best model found
******************************************
Results 

CLL : -0.730108 

AUC ROC : 0.681887 

AUC PR : 0.713734 

Precision : 0.878788 

Recall : 0.052727 

F1 : 0.099485 

Total Learning Time : 6745.431476831436 

Total Inference Time : 28.288007020950317 

Total revision time: 6781.137920618057
Best scored revision CLL: -0.61418


Results 

CLL : -0.730108 

AUC ROC : 0.681887 

AUC PR : 0.713734 

Precision : 0.878788 

Recall : 0.052727 

F1 : 0.099485 

Total Learning Time : 6781.150678634644 

Total Inference Time : 28.288007020950317 

Run: 4

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.8047614097595215
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.58e-06, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.19988648066451323;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2049525127158711;  // std dev = 39.914, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17361681718423871;  // std dev = 39.850, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14396423475540687;  // std dev = 39.800, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11723098312291463;  // std dev = 39.763, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09407131629837234;  // std dev = 39.736, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07462655346410987;  // std dev = 39.717, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.058685488175658766;  // std dev = 39.704, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0458468604739561;  // std dev = 39.695, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.035641192336017584;  // std dev = 39.689, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning 0.7338149547576904
Parameter learned model CLL:-0.644902 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.58e-06, 0, 399], 'false': [38.485, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.914, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.85, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.8, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.763, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.736, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.717, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.704, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.695, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.689, 4, 2]}]
{'': [6.268447192670558e-15, 0.22495299551614867]}
{'': [nan, 0.22814258945512517]}
{'': [nan, 0.2274139176658657]}
{'': [nan, 0.22684336316618142]}
{'': [nan, 0.2264185204310952]}
{'': [nan, 0.2261133472398351]}
{'': [nan, 0.22589906601390886]}
{'': [nan, 0.22575035269672866]}
{'': [nan, 0.2256474596747027]}
{'': [nan, 0.22557604227204325]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
Model training time 6381.549185037613
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.58e-06, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21728033821754725;  // std dev = 35.215, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.15514141630252049;  // std dev = 7.452, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.46529179224236833;  // std dev = 3.655, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.06760839455897227;  // std dev = 7.001, 296.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=62 */
%   | | | else return 0.04035232493002018;  // std dev = 5.930, 236.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=43 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.2209004110830822;  // std dev = 0.482, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return 0.0746873828403928;  // std dev = 4.344, 102.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=25 */
%   | | | else return 0.25758736204230853;  // std dev = 6.662, 196.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=86 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return 0.4117253014725093;  // std dev = 4.233, 76.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=47 */
%   | | | else return 0.18525271169198645;  // std dev = 2.070, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.426586635139678;  // std dev = 3.549, 54.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=34 */
%   | | | else return 0.6387903642923934;  // std dev = 1.254, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | then return 0.04861581877207112;  // std dev = 0.398, 532.000 (wgt'ed) examples reached here.  /* #neg=427 #pos=105 */
%   | else return 0.027575939043345755;  // std dev = 0.378, 248.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=43 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.1868253908983159;  // std dev = 0.481, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return 0.051056222367307884;  // std dev = 4.344, 102.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=25 */
%   | | | else return 0.21681476526910426;  // std dev = 6.625, 196.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=86 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then return 0.577295908766959;  // std dev = 0.327, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.28513484486466056;  // std dev = 4.643, 88.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=49 */
%   | | | else return 0.38473763899631064;  // std dev = 3.769, 75.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=53 */
%   else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | then if ( title(M, L), venue(M, A) )
%   | | then return 0.052755885215911354;  // std dev = 0.404, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | else return 0.023995730075051267;  // std dev = 0.384, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | else return 0.021741848750375204;  // std dev = 0.378, 248.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=43 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.15438859466873506;  // std dev = 0.480, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return 0.034480470378395606;  // std dev = 4.344, 102.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=25 */
%   | | | else return 0.177766657633105;  // std dev = 6.597, 196.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=86 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then return 0.48565143600758065;  // std dev = 0.320, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.20750116628665619;  // std dev = 4.606, 88.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=49 */
%   | | | else return 0.3142253761321684;  // std dev = 3.755, 75.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=53 */
%   else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | then if ( haswordauthor(M, K) )
%   | | then return 0.12920265769794004;  // std dev = 0.453, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else return 0.02784788717538703;  // std dev = 0.390, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | else return 0.017624042358774163;  // std dev = 0.378, 248.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=43 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.1252307018066597;  // std dev = 0.480, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return 0.01689986102796467;  // std dev = 4.344, 102.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=25 */
%   | | | else return 0.14264736496857178;  // std dev = 6.578, 196.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=86 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then return 0.36699992045427615;  // std dev = 0.319, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.1597017568219252;  // std dev = 4.618, 88.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=49 */
%   | | | else return 0.2390160703364585;  // std dev = 3.737, 75.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=53 */
%   else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | then if ( haswordtitle(M, K) )
%   | | then return 0.1273538865629475;  // std dev = 0.453, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else return -0.08712072824006127;  // std dev = 0.257, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | else return 0.02413311537632538;  // std dev = 0.389, 697.000 (wgt'ed) examples reached here.  /* #neg=567 #pos=130 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.09999392579955932;  // std dev = 0.479, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.059701683773025996;  // std dev = 7.469, 270.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=95 */
%   | | | else return 0.23688674450128536;  // std dev = 2.478, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.14485459439857085;  // std dev = 4.179, 76.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=47 */
%   | | | else return 0.012707042668109295;  // std dev = 2.088, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.16958129083142703;  // std dev = 3.524, 54.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=34 */
%   | | | else return 0.2631398251185572;  // std dev = 1.223, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | then return 0.029078790793932652;  // std dev = 0.397, 532.000 (wgt'ed) examples reached here.  /* #neg=427 #pos=105 */
%   | else return 0.011799274546049883;  // std dev = 0.378, 248.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=43 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.07880656776857727;  // std dev = 0.479, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return -0.004338519799650275;  // std dev = 4.344, 102.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=25 */
%   | | | else return 0.09380399587597521;  // std dev = 6.541, 196.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=86 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return 0.10884015757762895;  // std dev = 4.179, 76.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=47 */
%   | | | else return 0.00972365424314141;  // std dev = 2.088, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.12739890515173938;  // std dev = 3.524, 54.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=34 */
%   | | | else return 0.2061319950947871;  // std dev = 1.231, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | then return 0.043079891538030074;  // std dev = 0.407, 83.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=18 */
%   | else return 0.017557473807442426;  // std dev = 0.389, 697.000 (wgt'ed) examples reached here.  /* #neg=567 #pos=130 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( haswordauthor(E, C) )
%   | | then if ( author(F, E), title(F, D) )
%   | | | then return 0.518917333976114;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1735371796229174;  // std dev = 1.647, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else if ( title(G, D), venue(G, B) )
%   | | | then return 0.06120501594712191;  // std dev = 36.239, 5,723.000 (wgt'ed) examples reached here.  /* #neg=3,451 #pos=2,272 */
%   | | | else return 0.04318762546531768;  // std dev = 7.821, 292.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=109 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.08182331137595111;  // std dev = 4.179, 76.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=47 */
%   | | | else return 0.0074345161091068585;  // std dev = 2.088, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.09569346076171915;  // std dev = 3.525, 54.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=34 */
%   | | | else return 0.1654886918422751;  // std dev = 1.240, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else return 0.017392571452752636;  // std dev = 0.391, 780.000 (wgt'ed) examples reached here.  /* #neg=632 #pos=148 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.04804758609125781;  // std dev = 0.479, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return -0.027833462595514478;  // std dev = 4.344, 102.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=25 */
%   | | | else return 0.06187238801454643;  // std dev = 6.536, 196.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=86 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordauthor(I, G) )
%   | | | then return 0.21290348371699758;  // std dev = 0.884, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.0418273467746634;  // std dev = 4.578, 89.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=50 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.0720411626057948;  // std dev = 3.525, 54.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=34 */
%   | | | else return 0.13567401353967715;  // std dev = 1.248, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | then return 0.020033619882356662;  // std dev = 0.397, 532.000 (wgt'ed) examples reached here.  /* #neg=427 #pos=105 */
%   | else return 0.0038848256999238664;  // std dev = 0.378, 248.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=43 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.03715572285738791;  // std dev = 0.479, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.011101017392167319;  // std dev = 7.443, 270.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=95 */
%   | | | else return 0.13630259206532483;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.07643655678076695;  // std dev = 4.133, 76.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=47 */
%   | | | else return -0.13536224433568325;  // std dev = 2.089, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.059127943372580614;  // std dev = 3.485, 54.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=34 */
%   | | | else return 0.11316332943114282;  // std dev = 1.255, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | then return 0.01751852323132229;  // std dev = 0.397, 532.000 (wgt'ed) examples reached here.  /* #neg=427 #pos=105 */
%   | else return 0.0024266479715453785;  // std dev = 0.378, 248.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=43 */
Inference time using transfer learning 1.6925992965698242
Refined model CLL: -0.630524


******************************************
Best model found
******************************************
Results 

CLL : -0.595413 

AUC ROC : 0.672669 

AUC PR : 0.567118 

Precision : 0.866667 

Recall : 0.282609 

F1 : 0.42623 

Total Learning Time : 6381.549185037613 

Total Inference Time : 30.110476970672607 

Total revision time: 6418.83712887764
Best scored revision CLL: -0.630524


Results 

CLL : -0.595413 

AUC ROC : 0.672669 

AUC PR : 0.567118 

Precision : 0.866667 

Recall : 0.282609 

F1 : 0.42623 

Total Learning Time : 6418.849773645401 

Total Inference Time : 30.110476970672607 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.596597194671631
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.53e-06, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.15094741899085268;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1658359099984922;  // std dev = 37.931, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1414926568960431;  // std dev = 37.869, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1186820619021793;  // std dev = 37.818, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0980894894035444;  // std dev = 37.779, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08007442348372731;  // std dev = 37.749, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06471334013203578;  // std dev = 37.726, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051880082158705335;  // std dev = 37.709, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041328760625520454;  // std dev = 37.696, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03276039551785501;  // std dev = 37.687, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
Inference time using transfer learning 0.7354927062988281
Parameter learned model CLL:-0.614315 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.53e-06, 0, 392], 'false': [36.21, 4, 1]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.931, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.869, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.818, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.779, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.749, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.726, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.709, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.696, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.687, 4, 2]}]
{'': [5.945357584931451e-15, 0.20706753172221312]}
{'': [nan, 0.2139714061251897]}
{'': [nan, 0.21327128052814734]}
{'': [nan, 0.2127042128637235]}
{'': [nan, 0.212260238742025]}
{'': [nan, 0.2119209650373003]}
{'': [nan, 0.2116657055634563]}
{'': [nan, 0.21147526866913272]}
{'': [nan, 0.21133362022794777]}
{'': [nan, 0.2112281785688384]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
Model training time 5710.255752325058
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.53e-06, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.17115949497199173;  // std dev = 32.852, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.13612727444969389;  // std dev = 7.456, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.331017152153777;  // std dev = 5.671, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001355197131893661;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.18401443268661433;  // std dev = 0.470, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return 0.1028931079620797;  // std dev = 4.463, 103.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=27 */
%   | | | else return 0.22714507046577997;  // std dev = 6.769, 209.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=85 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( haswordauthor(I, C) )
%   | | | then return 0.7478725136012448;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5271884489699205;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.31696680753966777;  // std dev = 4.261, 73.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=37 */
%   | | | else return 0.39899186515546325;  // std dev = 4.238, 84.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=52 */
%   else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | then return 0.0611902149998531;  // std dev = 0.408, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 0.004643049301044159;  // std dev = 0.354, 808.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=119 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.15681509653989706;  // std dev = 0.469, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return 0.07133680640593354;  // std dev = 4.463, 103.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=27 */
%   | | | else return 0.1917859021756764;  // std dev = 6.731, 209.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=85 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( haswordauthor(I, C) )
%   | | | then return 0.5844968966119565;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4067438680226333;  // std dev = 1.198, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.2563483507742434;  // std dev = 4.255, 73.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=37 */
%   | | | else return 0.3324685996618676;  // std dev = 4.198, 84.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=52 */
%   else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | then return 0.05901524953679452;  // std dev = 0.406, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 0.0034293950546689087;  // std dev = 0.354, 808.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=119 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.1308689821970884;  // std dev = 0.468, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.11467764948349364;  // std dev = 7.837, 297.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=103 */
%   | | | else return 0.3467044866202053;  // std dev = 1.816, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(J, C) )
%   | | | then return 0.4398808393104569;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.37188191846098745;  // std dev = 1.197, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.2028301924115022;  // std dev = 4.244, 73.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=37 */
%   | | | else return 0.25864423003536474;  // std dev = 4.173, 84.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=52 */
%   else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | then return 0.05125530637108288;  // std dev = 0.406, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 0.003006607293260542;  // std dev = 0.354, 808.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=119 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.10744137644248115;  // std dev = 0.468, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return 0.040957388667033065;  // std dev = 4.463, 103.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=27 */
%   | | | else return 0.13317697210449092;  // std dev = 6.666, 209.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=85 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.20856435310496066;  // std dev = 3.581, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.07357666834442644;  // std dev = 2.523, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return 0.26665735098871696;  // std dev = 0.825, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.2053881778068517;  // std dev = 4.082, 81.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=50 */
%   else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | then return 0.05109795428919894;  // std dev = 0.407, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 0.0018732803053417857;  // std dev = 0.354, 808.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=119 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.08720233205352543;  // std dev = 0.467, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return 0.024530741066252856;  // std dev = 4.463, 103.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=27 */
%   | | | else return 0.10644542116736411;  // std dev = 6.648, 209.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=85 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( haswordauthor(I, C) )
%   | | | then return 0.28366567379215274;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.22614212429317623;  // std dev = 1.200, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return 0.240453690373484;  // std dev = 1.200, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.13118813439020122;  // std dev = 5.803, 150.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=84 */
%   else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | then return 0.044111657068867695;  // std dev = 0.407, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 0.0016404691532286263;  // std dev = 0.354, 808.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=119 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.06991590021541713;  // std dev = 0.467, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.05411187664689538;  // std dev = 7.785, 297.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=103 */
%   | | | else return 0.22399005859391075;  // std dev = 1.804, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(J, C) )
%   | | | then return 0.22983221052580574;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1804855962142712;  // std dev = 1.200, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.07863291127717041;  // std dev = 4.214, 73.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=37 */
%   | | | else return 0.12332542013592865;  // std dev = 4.162, 84.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=52 */
%   else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | then return 0.03788626592681634;  // std dev = 0.407, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 0.0014363379906351824;  // std dev = 0.354, 808.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=119 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.05557197461320786;  // std dev = 0.467, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return 0.007000417591079692;  // std dev = 4.463, 103.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=27 */
%   | | | else return 0.06946222054012857;  // std dev = 6.620, 209.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=85 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( haswordauthor(I, C) )
%   | | | then return 0.1917685336228594;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.13601316263214897;  // std dev = 1.200, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.05938096037651463;  // std dev = 4.213, 73.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=37 */
%   | | | else return 0.0932036409366458;  // std dev = 4.164, 84.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=52 */
%   else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | then return 0.04187549399408314;  // std dev = 0.405, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 2.013332053773427E-4;  // std dev = 0.354, 808.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=119 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.04402848797444631;  // std dev = 0.467, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.02932481289787945;  // std dev = 7.773, 297.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=103 */
%   | | | else return 0.15457568225964013;  // std dev = 1.802, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(J, C) )
%   | | | then return 0.16383860188772434;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12782790883930087;  // std dev = 1.203, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03883412449755132;  // std dev = 4.220, 73.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=37 */
%   | | | else return 0.07362665554694138;  // std dev = 4.155, 84.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=52 */
%   else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | then return 0.03178372956302885;  // std dev = 0.407, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 6.362574847449214E-4;  // std dev = 0.354, 808.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=119 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.03458344593239688;  // std dev = 0.466, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return -0.00845170852647031;  // std dev = 4.463, 103.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=27 */
%   | | | else return 0.04532588615914603;  // std dev = 6.606, 209.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=85 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.07340604137730387;  // std dev = 3.568, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return -0.03831650812057958;  // std dev = 2.494, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.06868865899488792;  // std dev = 3.205, 43.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   | | | else return 0.047742609377596446;  // std dev = 2.672, 43.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=29 */
%   else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | then return 0.035379116938567164;  // std dev = 0.405, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return -3.6993399322442867E-4;  // std dev = 0.354, 808.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=119 */
Inference time using transfer learning 2.361051082611084
Refined model CLL: -0.599775


******************************************
Best model found
******************************************
Results 

CLL : -0.803859 

AUC ROC : 0.565967 

AUC PR : 0.681994 

Precision : 0.756098 

Recall : 0.040208 

F1 : 0.076355 

Total Learning Time : 5710.255752325058 

Total Inference Time : 22.271312952041626 

Total revision time: 5739.488105773926
Best scored revision CLL: -0.599775


Results 

CLL : -0.803859 

AUC ROC : 0.565967 

AUC PR : 0.681994 

Precision : 0.756098 

Recall : 0.040208 

F1 : 0.076355 

Total Learning Time : 5739.500750541687 

Total Inference Time : 22.271312952041626 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos examples: 581
Target test neg examples: 2222

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.101907730102539
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.56e-06, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.2796365384052923;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2781850136572844;  // std dev = 35.547, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23242113232729122;  // std dev = 35.476, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18862324633504468;  // std dev = 35.424, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14957432737924747;  // std dev = 35.390, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11661006349999821;  // std dev = 35.370, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08984683694334654;  // std dev = 35.358, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06868385957197563;  // std dev = 35.352, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05223548069695708;  // std dev = 35.349, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03959242193679976;  // std dev = 35.347, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
Inference time using transfer learning 0.9487082958221436
Parameter learned model CLL:-0.672069 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.56e-06, 0, 396], 'false': [34.354, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.547, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.476, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.424, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.39, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.37, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.358, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.352, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.349, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.347, 2, 2]}]
{'': [6.172391441956426e-15, 0.24383580356527565]}
{'': [nan, 0.24132734078220108]}
{'': [nan, 0.24035858029470536]}
{'': [nan, 0.23965911682039598]}
{'': [nan, 0.23920081293575987]}
{'': [nan, 0.23892324245515675]}
{'': [nan, 0.2387658528438705]}
{'': [nan, 0.23868206035029477]}
{'': [nan, 0.23864070829038767]}
{'': [nan, 0.23862263525443253]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
Model training time 990.5821676254272
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.56e-06, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29812957401528645;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.415525984279839;  // std dev = 3.879, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.29577407970160563;  // std dev = 0.492, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | else if ( haswordauthor(E, C) )
%   | | then return 0.7710190666182092;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.38276409085846574;  // std dev = 4.668, 90.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=53 */
%   | | | else return 0.4584629464202312;  // std dev = 4.155, 85.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | then if ( haswordauthor(K, H) )
%   | | | then return 0.3225844349636464;  // std dev = 2.646, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.20968120915719332;  // std dev = 5.424, 124.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=48 */
%   | | else if ( title(L, I), venue(L, A) )
%   | | | then return 0.0433393010128178;  // std dev = 5.398, 189.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=36 */
%   | | | else return -0.1471368894633737;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.026564983804999165;  // std dev = 0.377, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.2462871660066712;  // std dev = 0.491, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.4885626715642851;  // std dev = 0.386, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2979488394320368;  // std dev = 4.493, 83.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=48 */
%   | | | else return 0.3745791398382711;  // std dev = 4.129, 85.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then if ( haswordtitle(J, L), haswordauthor(M, L) )
%   | | | then return 0.09296573980830629;  // std dev = 4.213, 84.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=26 */
%   | | | else return 0.31930386028018776;  // std dev = 4.116, 68.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=36 */
%   | | else if ( title(N, J), venue(N, B) )
%   | | | then return 0.03997438005814042;  // std dev = 5.398, 189.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=36 */
%   | | | else return -0.15050181041805108;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.021877151876328802;  // std dev = 0.377, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.1988621006941057;  // std dev = 0.490, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.28037352773605073;  // std dev = 4.119, 74.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=47 */
%   | | | else return 0.06915354267517171;  // std dev = 2.042, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.31460552612873366;  // std dev = 3.348, 51.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=34 */
%   | | | else return 0.2762581197899888;  // std dev = 2.390, 36.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=26 */
%   else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | then if ( haswordtitle(L, M), haswordvenue(A, M) )
%   | | then if ( haswordauthor(N, M) )
%   | | | then return 0.27259375624584065;  // std dev = 2.638, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.13383723783422558;  // std dev = 5.345, 124.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=48 */
%   | | else return 0.029825153203191006;  // std dev = 0.388, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | else return 0.01890026739018946;  // std dev = 0.377, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.15675847302177656;  // std dev = 0.490, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.23866243375562232;  // std dev = 3.807, 65.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=42 */
%   | | | else return 0.043137953773015554;  // std dev = 2.504, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.2422735724629051;  // std dev = 3.347, 51.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=34 */
%   | | | else return 0.20820077285008562;  // std dev = 2.383, 36.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=26 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | then if ( haswordvenue(B, L) )
%   | | | then return 0.2259905700490792;  // std dev = 2.635, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.03763488321570721;  // std dev = 6.971, 284.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=66 */
%   | | else return 0.22385532267628863;  // std dev = 0.496, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | else return 0.015239025257119627;  // std dev = 0.377, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.5411679589861986;  // std dev = 0.169, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.2733031834329415;  // std dev = 3.976, 69.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=44 */
%   | | else return -0.08641889559211093;  // std dev = 0.410, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | else if ( haswordtitle(G, C) )
%   | | then return 0.12064377089069761;  // std dev = 0.490, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.12325940351276425;  // std dev = 4.444, 83.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=48 */
%   | | | else return 0.16975495494462178;  // std dev = 4.089, 85.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | then return 0.04162627016507766;  // std dev = 0.422, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | else return 0.21611001891045883;  // std dev = 0.496, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | else return 0.011481057520566466;  // std dev = 0.377, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.09299172270336041;  // std dev = 0.489, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.14010344160647983;  // std dev = 3.802, 65.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=42 */
%   | | | else return -0.0013931420999277828;  // std dev = 2.513, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.4100696437739072;  // std dev = 0.099, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.12423823946988427;  // std dev = 4.076, 83.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=56 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | then if ( haswordvenue(B, L) )
%   | | | then return 0.16970096248200228;  // std dev = 2.634, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.023398522432287697;  // std dev = 6.934, 284.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=66 */
%   | | else return 0.16662845466925094;  // std dev = 0.495, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | else return 0.007699969964204786;  // std dev = 0.376, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.38683054720906046;  // std dev = 0.169, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.22571533161135543;  // std dev = 3.966, 69.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=44 */
%   | | else if ( haswordvenue(A, D) )
%   | | | then return 0.27831099906017287;  // std dev = 1.040, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.2531969244788585;  // std dev = 2.063, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | else if ( haswordtitle(H, C) )
%   | | then return 0.07003001432578826;  // std dev = 0.489, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.05892931754280066;  // std dev = 4.403, 83.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=48 */
%   | | | else return 0.10013004581070002;  // std dev = 4.095, 85.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | then return 0.039562643198912714;  // std dev = 0.430, 347.000 (wgt'ed) examples reached here.  /* #neg=249 #pos=98 */
%   | else return 0.006639261713907217;  // std dev = 0.376, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.3010250966508476;  // std dev = 0.154, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.16686607387551394;  // std dev = 3.952, 69.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=44 */
%   | | else return -0.11967651494217592;  // std dev = 0.397, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | else if ( haswordtitle(H, C) )
%   | | then return 0.05322115546925086;  // std dev = 0.489, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.04563088331943208;  // std dev = 4.434, 83.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=48 */
%   | | | else return 0.07876588007892447;  // std dev = 4.084, 85.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | then if ( haswordtitle(L, M), haswordauthor(N, M) )
%   | | then return 0.021641870996756307;  // std dev = 0.420, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | else return 0.15510028861574773;  // std dev = 0.495, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | else return 0.0014780511289391018;  // std dev = 0.376, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.2423514563807458;  // std dev = 0.137, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.12553522061488648;  // std dev = 3.952, 69.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=44 */
%   | | else return -0.09214837350719648;  // std dev = 0.397, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | else if ( haswordtitle(G, C) )
%   | | then return 0.040199285299724025;  // std dev = 0.489, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.03438566136415251;  // std dev = 4.435, 83.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=48 */
%   | | | else return 0.060304427266972965;  // std dev = 4.087, 85.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | then return 0.017912171525847603;  // std dev = 0.420, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | else return 0.11886216346488686;  // std dev = 0.495, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | else return 0.0012687865714691123;  // std dev = 0.376, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
Inference time using transfer learning 1.8781960010528564
Refined model CLL: -0.652523


******************************************
Best model found
******************************************
Results 

CLL : -0.582576 

AUC ROC : 0.621076 

AUC PR : 0.375807 

Precision : 0.84252 

Recall : 0.184165 

F1 : 0.30226 

Total Learning Time : 990.5821676254272 

Total Inference Time : 7.702984809875488 

Total revision time: 1003.6953828334808
Best scored revision CLL: -0.652523


Results 

CLL : -0.582576 

AUC ROC : 0.621076 

AUC PR : 0.375807 

Precision : 0.84252 

Recall : 0.184165 

F1 : 0.30226 

Total Learning Time : 1003.7080276012421 

Total Inference Time : 7.702984809875488 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos examples: 747
Target test neg examples: 1068

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.139777421951294
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1.41e-06, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.1815575593294866;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19226970622757558;  // std dev = 37.299, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.163254413390499;  // std dev = 37.235, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13588052440684203;  // std dev = 37.184, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11118390758780915;  // std dev = 37.145, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08971399578805947;  // std dev = 37.117, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07159260191531248;  // std dev = 37.096, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0566428679458287;  // std dev = 37.081, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044521336109631555;  // std dev = 37.071, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03481961502542266;  // std dev = 37.064, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
Inference time using transfer learning 0.8607027530670166
Parameter learned model CLL:-0.634638 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.41e-06, 0, 380], 'false': [35.76, 3, 1]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.299, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.235, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.184, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.145, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.117, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.096, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.081, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.071, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.064, 3, 2]}]
{'': [5.235578052969159e-15, 0.2188154860035915]}
{'': [nan, 0.22352893076480548]}
{'': [nan, 0.2227577464656775]}
{'': [nan, 0.22214663652311947]}
{'': [nan, 0.22168341475350428]}
{'': [nan, 0.22134322486858607]}
{'': [nan, 0.22109832170004665]}
{'': [nan, 0.22092380461398323]}
{'': [nan, 0.2207997802018609]}
{'': [nan, 0.22071140818040338]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
Model training time 1661.9943046569824
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1.41e-06, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.41979277071595067;  // std dev = 4.239, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return 0.06245001036832955;  // std dev = 3.888, 93.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | else return 0.2054740379801656;  // std dev = 0.476, 4,860.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=1,688 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.018505282538265628;  // std dev = 7.775, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.04094463402424335;  // std dev = 6.456, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21692525703058788;  // std dev = 0.479, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.10538230299917598;  // std dev = 1.214, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.13135360319985778;  // std dev = 3.286, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.18688964917157477;  // std dev = 1.154, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.14826796609203804;  // std dev = 0.020, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.10442115208545176;  // std dev = 3.325, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | | else return -0.053492844087163594;  // std dev = 1.356, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.01744554469057053;  // std dev = 7.709, 436.000 (wgt'ed) examples reached here.  /* #neg=365 #pos=71 */
%   | | | else return 0.022415143543873986;  // std dev = 5.401, 210.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=35 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18334518972338343;  // std dev = 0.478, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.08048835475082824;  // std dev = 1.216, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.10582431179775369;  // std dev = 3.286, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return 0.20590774220380692;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.1302776785863999;  // std dev = 0.034, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.00252550366359096;  // std dev = 6.798, 374.000 (wgt'ed) examples reached here.  /* #neg=320 #pos=54 */
%   | | | else return 0.09370777593261773;  // std dev = 3.699, 75.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.04212975474633723;  // std dev = 6.391, 264.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=51 */
%   | | | else return -0.1475692252620614;  // std dev = 0.040, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D), haswordtitle(F, C) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.6559089429588376;  // std dev = 0.116, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.27639144708108115;  // std dev = 4.193, 71.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=39 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.01736145002921331;  // std dev = 3.527, 85.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=17 */
%   | | | else return 0.4014864015933108;  // std dev = 1.873, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.3327186869519071;  // std dev = 4.118, 69.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=39 */
%   | | | else return -0.02767942724400663;  // std dev = 3.677, 83.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=17 */
%   | | else return 0.15141766449889216;  // std dev = 0.478, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,997 */
%   else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | then return 0.0523517067024854;  // std dev = 0.401, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 0.016844992335943023;  // std dev = 0.373, 728.000 (wgt'ed) examples reached here.  /* #neg=605 #pos=123 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6163208078291934;  // std dev = 1.331, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | | | else return -0.24343431064862808;  // std dev = 0.278, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( haswordvenue(B, D) )
%   | | | then return 0.2772167162667603;  // std dev = 1.905, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | | | else return -0.004759210808747952;  // std dev = 4.198, 97.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=24 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.3075198301805388;  // std dev = 3.502, 55.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=32 */
%   | | | else return -0.0030756185189080515;  // std dev = 4.244, 97.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=24 */
%   | | else return 0.12275567138428037;  // std dev = 0.477, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,997 */
%   else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | then return 0.045252045593679645;  // std dev = 0.401, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 0.014662600985821356;  // std dev = 0.373, 728.000 (wgt'ed) examples reached here.  /* #neg=605 #pos=123 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D), haswordtitle(F, C) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return -0.29637657499076525;  // std dev = 2.58e-08, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.31654840083458907;  // std dev = 3.632, 69.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=47 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.05571692947488452;  // std dev = 3.523, 85.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=17 */
%   | | | else return 0.30279994355363593;  // std dev = 1.906, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.21826780670535023;  // std dev = 2.773, 55.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=32 */
%   | | | else return -0.0038790579900819548;  // std dev = 4.198, 97.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=24 */
%   | | else return 0.09801963539222978;  // std dev = 0.477, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,997 */
%   else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | then return 0.0389127175566701;  // std dev = 0.401, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 0.012742201541793383;  // std dev = 0.373, 728.000 (wgt'ed) examples reached here.  /* #neg=605 #pos=123 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07697141087483764;  // std dev = 0.473, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.058783056204863654;  // std dev = 1.208, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.08265249787937944;  // std dev = 3.284, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return 0.1754095239904301;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.12238579001796263;  // std dev = 0.050, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.07615155140405029;  // std dev = 3.315, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | | else return -0.07848253666032205;  // std dev = 1.301, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.0050494547327340576;  // std dev = 7.698, 436.000 (wgt'ed) examples reached here.  /* #neg=365 #pos=71 */
%   | | | else return 0.015115116973495478;  // std dev = 5.397, 210.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=35 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then return 0.1541155318938061;  // std dev = 0.360, 61.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=36 */
%   | | else if ( haswordvenue(B, D), haswordtitle(G, D) )
%   | | | then return 0.3468798089959704;  // std dev = 0.117, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.003164524539866368;  // std dev = 4.577, 114.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=33 */
%   | else return 0.06023733710516659;  // std dev = 0.475, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | then return 0.06678983972869626;  // std dev = 0.444, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | else return -0.05402484517916426;  // std dev = 0.243, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.0043287260228521245;  // std dev = 0.367, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.02567940195694711;  // std dev = 6.374, 264.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=51 */
%   | | | else return -0.13957881018442644;  // std dev = 0.059, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.046878042682507504;  // std dev = 0.473, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then return 0.07508394798533767;  // std dev = 0.441, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.14497700552809398;  // std dev = 1.151, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.1443665250009525;  // std dev = 0.107, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.018679129740877324;  // std dev = 6.779, 374.000 (wgt'ed) examples reached here.  /* #neg=320 #pos=54 */
%   | | | else return 0.08706071970505981;  // std dev = 3.699, 75.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=18 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.02968495702759367;  // std dev = 6.351, 264.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=51 */
%   | | | else return -0.1315671759278768;  // std dev = 0.139, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.03240958068534995;  // std dev = 0.472, 4,955.000 (wgt'ed) examples reached here.  /* #neg=3,030 #pos=1,925 */
%   | | else if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.3908123558511795;  // std dev = 6.108, 161.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=98 */
%   | | | else return -0.16712328137335275;  // std dev = 1.371, 264.000 (wgt'ed) examples reached here.  /* #neg=262 #pos=2 */
%   | else if ( title(G, D), venue(G, B) )
%   | | then if ( samebib(G, H), venue(H, A) )
%   | | | then return 0.14806367801719023;  // std dev = 1.042, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.11566828953261246;  // std dev = 4.505, 121.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=26 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.06656184418567929;  // std dev = 6.450, 192.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=85 */
%   | | | else return -0.03345911844919907;  // std dev = 4.140, 143.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=20 */
%   else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | then return 0.28690236226024984;  // std dev = 0.431, 85.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=59 */
%   | else return 0.013745411642539163;  // std dev = 0.377, 297.000 (wgt'ed) examples reached here.  /* #neg=244 #pos=53 */
Inference time using transfer learning 1.7665581703186035
Refined model CLL: -0.609655


******************************************
Best model found
******************************************
Results 

CLL : -0.650314 

AUC ROC : 0.622449 

AUC PR : 0.612488 

Precision : 1.0 

Recall : 0.164659 

F1 : 0.282759 

Total Learning Time : 1661.9943046569824 

Total Inference Time : 9.076066255569458 

Total revision time: 1677.5793054103851
Best scored revision CLL: -0.609655


Results 

CLL : -0.650314 

AUC ROC : 0.622449 

AUC PR : 0.612488 

Precision : 1.0 

Recall : 0.164659 

F1 : 0.282759 

Total Learning Time : 1677.5919501781464 

Total Inference Time : 9.076066255569458 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos examples: 550
Target test neg examples: 500

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 6.107270240783691
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.72e-06, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.17049686697298647;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18219293009188636;  // std dev = 39.232, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15498549883469795;  // std dev = 39.167, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12937973874075173;  // std dev = 39.114, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10626852302092489;  // std dev = 39.074, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08612508071057388;  // std dev = 39.044, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06905487324779395;  // std dev = 39.022, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.054903602744648346;  // std dev = 39.006, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04336850764074626;  // std dev = 38.994, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.034085651766862735;  // std dev = 38.986, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
Inference time using transfer learning 0.7164707183837891
Parameter learned model CLL:-0.627729 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.72e-06, 0, 413], 'false': [37.582, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.232, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.167, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.114, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.074, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.044, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.022, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.006, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.994, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.986, 4, 2]}]
{'': [7.157040631385029e-15, 0.21478670132777686]}
{'': [nan, 0.22022403069905927]}
{'': [nan, 0.21949016851811237]}
{'': [nan, 0.21890359833924458]}
{'': [nan, 0.21845322954646323]}
{'': [nan, 0.21811719093471404]}
{'': [nan, 0.21787095664761147]}
{'': [nan, 0.21769221329228686]}
{'': [nan, 0.21756281567098806]}
{'': [nan, 0.21746895701486615]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
Model training time 5193.003444194794
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.72e-06, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18699686136678825;  // std dev = 34.603, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.13739421811838173;  // std dev = 7.303, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3581489350995111;  // std dev = 4.062, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.0607699838194067;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.035677024987153;  // std dev = 8.061, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return 0.0021489350995115234;  // std dev = 5.551, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.19700108919512732;  // std dev = 0.474, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.14689419051007138;  // std dev = 7.378, 266.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=85 */
%   | | | else return 0.46652546987453924;  // std dev = 2.459, 29.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.3876224127078261;  // std dev = 3.885, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return 0.15313109757134968;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.38281520985970885;  // std dev = 3.634, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.4962537292833592;  // std dev = 2.513, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | then return -0.05353224823028762;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | else return 0.020705971559420677;  // std dev = 0.372, 695.000 (wgt'ed) examples reached here.  /* #neg=580 #pos=115 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.1671473273180065;  // std dev = 0.474, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.1250463672873055;  // std dev = 7.361, 266.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=85 */
%   | | | else return 0.3865066562643995;  // std dev = 2.438, 29.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.33334320164326126;  // std dev = 3.865, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return 0.08978799354659363;  // std dev = 2.413, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.3197871744175821;  // std dev = 3.605, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.39278303840827566;  // std dev = 2.460, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | then return 0.024729560612758057;  // std dev = 0.375, 482.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=82 */
%   | else return -0.004312635981313445;  // std dev = 0.351, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.13907516125872493;  // std dev = 0.473, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.10204759068337793;  // std dev = 7.353, 266.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=85 */
%   | | | else return 0.3061979738702875;  // std dev = 2.426, 29.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.2664325867112747;  // std dev = 3.860, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return 0.07047091428444119;  // std dev = 2.412, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.2555053014334583;  // std dev = 3.600, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.2996768390255727;  // std dev = 2.434, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | then return 0.021630377696233553;  // std dev = 0.375, 482.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=82 */
%   | else return -0.00376874362026137;  // std dev = 0.351, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.11361828066711882;  // std dev = 0.472, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return 0.024856085702884646;  // std dev = 4.562, 109.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=28 */
%   | | | else return 0.14278061216837942;  // std dev = 6.214, 186.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=76 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return 0.21931303466481258;  // std dev = 3.845, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return 0.020009286182245085;  // std dev = 2.401, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.20052514030521706;  // std dev = 3.573, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.22590169469146398;  // std dev = 2.427, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | then return -0.05186323945748661;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | else return 0.01466622135362108;  // std dev = 0.371, 695.000 (wgt'ed) examples reached here.  /* #neg=580 #pos=115 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.09180074467594722;  // std dev = 0.472, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return 0.0048601860079538865;  // std dev = 4.562, 109.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=28 */
%   | | | else return 0.1151561160671333;  // std dev = 6.195, 186.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=76 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.16937700469924108;  // std dev = 3.842, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return 0.013402591151865845;  // std dev = 2.400, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.15193320082215125;  // std dev = 3.569, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.17081609244789214;  // std dev = 2.430, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | then return 0.01912221114598997;  // std dev = 0.375, 482.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=82 */
%   | else return -0.008150974807953567;  // std dev = 0.351, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordtitle(E, C) )
%   | | then if ( author(F, D), title(F, E) )
%   | | | then return 0.5580393088477242;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.009294984959981798;  // std dev = 1.191, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return 0.31626944034330673;  // std dev = 0.382, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( haswordtitle(G, C) )
%   | | then if ( title(H, G), venue(H, B) )
%   | | | then return 0.07262541895331158;  // std dev = 35.822, 5,767.000 (wgt'ed) examples reached here.  /* #neg=3,637 #pos=2,130 */
%   | | | else return 0.05996635343036828;  // std dev = 7.655, 289.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=102 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.09224098354321293;  // std dev = 4.570, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.12243483223225622;  // std dev = 4.308, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | then return -0.048134464438001;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | else return 0.011558711187061364;  // std dev = 0.371, 695.000 (wgt'ed) examples reached here.  /* #neg=580 #pos=115 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6412057718104286;  // std dev = 1.033, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return -0.3032783139479345;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordtitle(H, D), haswordtitle(H, C) )
%   | | | then return -0.08593541887115211;  // std dev = 3.495, 76.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=17 */
%   | | | else return 0.13284286145788918;  // std dev = 2.411, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | else if ( haswordtitle(I, C) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.05702099229732401;  // std dev = 35.415, 5,648.000 (wgt'ed) examples reached here.  /* #neg=3,563 #pos=2,085 */
%   | | | else return 0.04705542364725405;  // std dev = 7.651, 289.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=102 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.06393376253070217;  // std dev = 4.506, 86.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=44 */
%   | | | else return 0.09631407003108874;  // std dev = 4.325, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   else return 0.007375650598088001;  // std dev = 0.367, 732.000 (wgt'ed) examples reached here.  /* #neg=614 #pos=118 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.04521906153982452;  // std dev = 0.470, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return -0.019343259553121772;  // std dev = 4.562, 109.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=28 */
%   | | | else return 0.07032368441971729;  // std dev = 6.170, 186.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=76 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return 0.09470420365192422;  // std dev = 3.832, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return -0.058868028001975686;  // std dev = 2.395, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.07025373693771969;  // std dev = 3.547, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.08091580520360384;  // std dev = 2.453, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | then return 0.014745791659075197;  // std dev = 0.375, 482.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=82 */
%   | else return -0.009650854345613979;  // std dev = 0.351, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6098401525235074;  // std dev = 1.102, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return -0.32530554220520874;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordtitle(H, D), haswordtitle(H, C) )
%   | | | then return -0.10432309012561093;  // std dev = 3.508, 76.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=17 */
%   | | | else return 0.10563314734585488;  // std dev = 2.398, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | else if ( haswordtitle(I, C) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.034848102881824904;  // std dev = 35.327, 5,648.000 (wgt'ed) examples reached here.  /* #neg=3,563 #pos=2,085 */
%   | | | else return 0.024319165103278938;  // std dev = 7.638, 289.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=102 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.034083101353940555;  // std dev = 4.501, 86.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=44 */
%   | | | else return 0.057385135202009815;  // std dev = 4.317, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   else return 0.005560748342926738;  // std dev = 0.367, 732.000 (wgt'ed) examples reached here.  /* #neg=614 #pos=118 */
Inference time using transfer learning 1.790442943572998
Refined model CLL: -0.611301


******************************************
Best model found
******************************************
Results 

CLL : -0.713928 

AUC ROC : 0.736658 

AUC PR : 0.761894 

Precision : 0.878788 

Recall : 0.052727 

F1 : 0.099485 

Total Learning Time : 5193.003444194794 

Total Inference Time : 32.27120661735535 

Total revision time: 5232.822162389755
Best scored revision CLL: -0.611301


Results 

CLL : -0.713928 

AUC ROC : 0.736658 

AUC PR : 0.761894 

Precision : 0.878788 

Recall : 0.052727 

F1 : 0.099485 

Total Learning Time : 5232.8348071575165 

Total Inference Time : 32.27120661735535 

Run: 5

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.925959348678589
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.58e-06, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else return 0.19988648066451323;  // std dev = 38.485, 6,584.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,250 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20495251271587117;  // std dev = 39.914, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17361681718423863;  // std dev = 39.850, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.143964234755407;  // std dev = 39.800, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11723098312291419;  // std dev = 39.763, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0940713162983728;  // std dev = 39.736, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07462655346410928;  // std dev = 39.717, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.058685488175658995;  // std dev = 39.704, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0458468604739559;  // std dev = 39.695, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03564119233601768;  // std dev = 39.689, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning 0.694512128829956
Parameter learned model CLL:-0.644902 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.58e-06, 0, 399], 'false': [38.485, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.914, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.85, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.8, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.763, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.736, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.717, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.704, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.695, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.689, 4, 2]}]
{'': [6.268447192670558e-15, 0.22495299551614867]}
{'': [nan, 0.22814258945512517]}
{'': [nan, 0.22741391766586572]}
{'': [nan, 0.22684336316618126]}
{'': [nan, 0.22641852043109525]}
{'': [nan, 0.22611334723983503]}
{'': [nan, 0.2258990660139089]}
{'': [nan, 0.2257503526967286]}
{'': [nan, 0.2256474596747027]}
{'': [nan, 0.22557604227204303]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
Model training time 5509.376040935516
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.58e-06, 399.000 (wgt'ed) examples reached here.  /* #pos=399 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21728033821754725;  // std dev = 35.215, 5,388.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=1,935 */
%   | | | else return 0.15514141630252049;  // std dev = 7.452, 266.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=79 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.43157550852608434;  // std dev = 5.914, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14905802600860327;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.04473174432383054;  // std dev = 8.508, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.4203763489667664;  // std dev = 0.433, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return 0.2202146227311588;  // std dev = 36.450, 5,723.000 (wgt'ed) examples reached here.  /* #neg=3,451 #pos=2,272 */
%   | | | else return 0.19627914156696027;  // std dev = 8.027, 292.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=109 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return 0.40832337445708267;  // std dev = 3.984, 67.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=41 */
%   | | | else return 0.2693955698428218;  // std dev = 2.568, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.42583397694508146;  // std dev = 3.544, 54.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=34 */
%   | | | else return 0.6392692448186323;  // std dev = 1.246, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | then return 0.04899011899143924;  // std dev = 0.398, 532.000 (wgt'ed) examples reached here.  /* #neg=427 #pos=105 */
%   | else return 0.02669336223655935;  // std dev = 0.378, 248.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=43 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.18663161352727933;  // std dev = 0.481, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return 0.045121423645586536;  // std dev = 4.344, 102.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=25 */
%   | | | else return 0.22580375994840393;  // std dev = 6.637, 196.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=86 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return 0.3424544923244522;  // std dev = 4.208, 76.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=47 */
%   | | | else return 0.1116398924432081;  // std dev = 2.070, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.3540958287641604;  // std dev = 3.527, 54.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=34 */
%   | | | else return 0.4967732231972436;  // std dev = 1.217, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | then return 0.043537059168448314;  // std dev = 0.398, 532.000 (wgt'ed) examples reached here.  /* #neg=427 #pos=105 */
%   | else return 0.021511043913017315;  // std dev = 0.378, 248.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=43 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.1543709182685519;  // std dev = 0.480, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return 0.02031588429543308;  // std dev = 4.344, 102.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=25 */
%   | | | else return 0.1861787395438739;  // std dev = 6.608, 196.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=86 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then return 0.4817946893941672;  // std dev = 0.321, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.2185839070913734;  // std dev = 4.612, 88.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=49 */
%   | | | else return 0.30123777544038105;  // std dev = 3.732, 75.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=53 */
%   else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | then if ( haswordtitle(L, M), haswordauthor(N, M) )
%   | | then return 0.03308975172408428;  // std dev = 0.393, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | else return 0.06983754854056753;  // std dev = 0.421, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | else return 0.017827536176753214;  // std dev = 0.378, 248.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=43 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.12510421700814356;  // std dev = 0.480, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return 0.011292843303677344;  // std dev = 4.344, 102.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=25 */
%   | | | else return 0.15007698825224022;  // std dev = 6.587, 196.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=86 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return 0.2071390106322866;  // std dev = 4.171, 76.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=47 */
%   | | | else return 0.017766433797206393;  // std dev = 2.077, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.2221783713021361;  // std dev = 3.512, 54.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=34 */
%   | | | else return 0.29891530623047957;  // std dev = 1.209, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | then return 0.055041836155716284;  // std dev = 0.411, 83.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=18 */
%   | else return 0.024148280642790815;  // std dev = 0.389, 697.000 (wgt'ed) examples reached here.  /* #neg=567 #pos=130 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.10003018348224353;  // std dev = 0.479, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return -0.006032416693287742;  // std dev = 4.344, 102.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=25 */
%   | | | else return 0.11887173659701321;  // std dev = 6.574, 196.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=86 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then return 0.3278627222788191;  // std dev = 0.318, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.11587792267864726;  // std dev = 4.577, 88.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=49 */
%   | | | else return 0.18263436009131515;  // std dev = 3.718, 75.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=53 */
%   else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | then if ( haswordauthor(M, K) )
%   | | then return 0.10894372567421938;  // std dev = 0.454, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else return 0.02048446344411523;  // std dev = 0.389, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | else return 0.010881922152706561;  // std dev = 0.378, 248.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=43 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.07891387244576048;  // std dev = 0.479, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.04130443916131739;  // std dev = 7.467, 270.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=95 */
%   | | | else return 0.21868535376621473;  // std dev = 2.476, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return 0.26467274136782;  // std dev = 0.317, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.08349279162296629;  // std dev = 4.581, 88.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=49 */
%   | | | else return 0.14230889090794285;  // std dev = 3.708, 75.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=53 */
%   else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | then if ( haswordtitle(N, L) )
%   | | then return 0.11623610179686061;  // std dev = 0.452, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else return -0.09801803633981691;  // std dev = 0.258, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | else return 0.01744514113781975;  // std dev = 0.389, 697.000 (wgt'ed) examples reached here.  /* #neg=567 #pos=130 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.06169797928791924;  // std dev = 0.479, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return -0.019985699673399686;  // std dev = 4.344, 102.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=25 */
%   | | | else return 0.07785371188110889;  // std dev = 6.543, 196.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=86 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then return 0.21696604955104012;  // std dev = 0.315, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.056108705516881546;  // std dev = 4.568, 88.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=49 */
%   | | | else return 0.11578834629403234;  // std dev = 3.719, 75.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=53 */
%   else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | then if ( title(M, L), venue(M, B) )
%   | | then return 0.033054649565369694;  // std dev = 0.403, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | else return -3.985850704485897E-4;  // std dev = 0.382, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | else return 0.006760490075532586;  // std dev = 0.378, 248.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=43 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.18643452091174245;  // std dev = 0.390, 26.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=18 */
%   | else if ( haswordtitle(E, C) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04739576417552426;  // std dev = 36.216, 5,717.000 (wgt'ed) examples reached here.  /* #neg=3,449 #pos=2,268 */
%   | | | else return 0.03255771540730936;  // std dev = 7.818, 292.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=109 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04549062336978439;  // std dev = 4.668, 93.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=53 */
%   | | | else return 0.09256861644605172;  // std dev = 3.710, 75.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=53 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, A) )
%   | | then if ( samebib(K, L), venue(L, B) )
%   | | | then return 0.47134413385833174;  // std dev = 5.055, 113.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=73 */
%   | | | else return -0.16947518635858463;  // std dev = 1.001, 247.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=1 */
%   | | else return -0.003929879486139638;  // std dev = 0.382, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | else return 0.003400317344771339;  // std dev = 0.378, 248.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=43 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.03723875345672554;  // std dev = 0.479, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return -0.035789170290898606;  // std dev = 4.344, 102.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=25 */
%   | | | else return 0.05136953321199803;  // std dev = 6.544, 196.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=86 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return 0.054603840892109526;  // std dev = 4.142, 76.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=47 */
%   | | | else return -0.06205268207865311;  // std dev = 2.088, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.05889660064570085;  // std dev = 3.503, 54.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=34 */
%   | | | else return 0.125693230394032;  // std dev = 1.242, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | then return 0.016157471612259444;  // std dev = 0.386, 532.000 (wgt'ed) examples reached here.  /* #neg=427 #pos=105 */
%   | else return -9.555492929032787E-4;  // std dev = 0.349, 248.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=43 */
Inference time using transfer learning 1.6669795513153076
Refined model CLL: -0.626253


******************************************
Best model found
******************************************
Results 

CLL : -0.592316 

AUC ROC : 0.685962 

AUC PR : 0.573458 

Precision : 0.866667 

Recall : 0.282609 

F1 : 0.42623 

Total Learning Time : 5509.376040935516 

Total Inference Time : 29.48255228996277 

Total revision time: 5546.220108032227
Best scored revision CLL: -0.626253


Results 

CLL : -0.592316 

AUC ROC : 0.685962 

AUC PR : 0.573458 

Precision : 0.866667 

Recall : 0.282609 

F1 : 0.42623 

Total Learning Time : 5546.232736587524 

Total Inference Time : 29.48255228996277 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.869081020355225
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.53e-06, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else return 0.15094741899085268;  // std dev = 36.210, 6,332.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=1,854 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16583590999849232;  // std dev = 37.931, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14149265689604312;  // std dev = 37.869, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1186820619021793;  // std dev = 37.818, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09808948940354412;  // std dev = 37.779, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08007442348372765;  // std dev = 37.749, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06471334013203557;  // std dev = 37.726, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05188008215870564;  // std dev = 37.709, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04132876062552066;  // std dev = 37.696, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.032760395517854875;  // std dev = 37.687, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
Inference time using transfer learning 0.846747875213623
Parameter learned model CLL:-0.614315 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.53e-06, 0, 392], 'false': [36.21, 4, 1]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.931, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.869, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.818, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.779, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.749, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.726, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.709, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.696, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.687, 4, 2]}]
{'': [5.945357584931451e-15, 0.20706753172221312]}
{'': [nan, 0.21397140612518964]}
{'': [nan, 0.21327128052814745]}
{'': [nan, 0.21270421286372349]}
{'': [nan, 0.21226023874202518]}
{'': [nan, 0.2119209650373]}
{'': [nan, 0.2116657055634563]}
{'': [nan, 0.2114752686691325]}
{'': [nan, 0.21133362022794752]}
{'': [nan, 0.21122817856883858]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
Model training time 5689.140331506729
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.53e-06, 392.000 (wgt'ed) examples reached here.  /* #pos=392 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.17115949497199173;  // std dev = 32.852, 5,019.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,571 */
%   | | | else return 0.13612727444969389;  // std dev = 7.456, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.331017152153777;  // std dev = 5.671, 129.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001355197131893661;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.184014432686614;  // std dev = 0.470, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return 0.1028931079620797;  // std dev = 4.463, 103.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=27 */
%   | | | else return 0.2271450704657799;  // std dev = 6.769, 209.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=85 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( haswordauthor(I, C) )
%   | | | then return 0.7478725136012448;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.47635777858210415;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.31975204975269883;  // std dev = 4.272, 73.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=37 */
%   | | | else return 0.4008072462407424;  // std dev = 4.240, 84.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=52 */
%   else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | then return 0.06119021499985308;  // std dev = 0.408, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 0.004643049301044163;  // std dev = 0.354, 808.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=119 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.1568150965398969;  // std dev = 0.469, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return 0.07133680640593357;  // std dev = 4.463, 103.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=27 */
%   | | | else return 0.19178590217567643;  // std dev = 6.731, 209.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=85 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( haswordauthor(I, C) )
%   | | | then return 0.5844968966119565;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4671758566928465;  // std dev = 1.197, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.2529957329745749;  // std dev = 4.246, 73.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=37 */
%   | | | else return 0.33010552266542337;  // std dev = 4.197, 84.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=52 */
%   else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | then return 0.053224494021574364;  // std dev = 0.408, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 0.004074404951166174;  // std dev = 0.354, 808.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=119 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.13086898219708856;  // std dev = 0.468, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.11467764948349378;  // std dev = 7.837, 297.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=103 */
%   | | | else return 0.34670448662020537;  // std dev = 1.816, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(J, C) )
%   | | | then return 0.4398808393104569;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.37063481925285274;  // std dev = 1.198, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.20230866151652313;  // std dev = 4.244, 73.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=37 */
%   | | | else return 0.2592441525120108;  // std dev = 4.174, 84.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=52 */
%   else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | then return 0.05790081247576187;  // std dev = 0.406, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 0.002250391173755413;  // std dev = 0.354, 808.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=119 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.10744137644248083;  // std dev = 0.468, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return 0.040957388667033065;  // std dev = 4.463, 103.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=27 */
%   | | | else return 0.13317697210449095;  // std dev = 6.666, 209.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=85 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.20930464505628746;  // std dev = 3.582, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.07369658460466136;  // std dev = 2.522, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return 0.26560990105627746;  // std dev = 0.825, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.20495971593519127;  // std dev = 4.082, 81.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=50 */
%   else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | then return 0.011354103035124713;  // std dev = 0.364, 585.000 (wgt'ed) examples reached here.  /* #neg=492 #pos=93 */
%   | else return -0.0016845744873044898;  // std dev = 0.351, 313.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=45 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.08720233205352525;  // std dev = 0.467, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return 0.02453074106625303;  // std dev = 4.463, 103.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=27 */
%   | | | else return 0.10644542116736413;  // std dev = 6.648, 209.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=85 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( haswordauthor(I, C) )
%   | | | then return 0.28375129003995;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.23955474180751699;  // std dev = 1.200, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.11211582336543632;  // std dev = 4.218, 73.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=37 */
%   | | | else return 0.1557809984824825;  // std dev = 4.161, 84.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=52 */
%   else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | then return 0.009930607224765863;  // std dev = 0.364, 585.000 (wgt'ed) examples reached here.  /* #neg=492 #pos=93 */
%   | else return -0.0014938479916775857;  // std dev = 0.351, 313.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=45 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.06991590021541735;  // std dev = 0.467, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.054111876646895415;  // std dev = 7.785, 297.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=103 */
%   | | | else return 0.22399005859391075;  // std dev = 1.804, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(J, C) )
%   | | | then return 0.2298904494341043;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17980813864051917;  // std dev = 1.200, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.08515072227840735;  // std dev = 4.217, 73.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=37 */
%   | | | else return 0.11775305211155317;  // std dev = 4.162, 84.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=52 */
%   else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | then return 0.048027415440791546;  // std dev = 0.405, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 4.1911006962806264E-4;  // std dev = 0.354, 808.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=119 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.05557197461320788;  // std dev = 0.467, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return 0.007000417591079692;  // std dev = 4.463, 103.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=27 */
%   | | | else return 0.0694622205401287;  // std dev = 6.620, 209.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=85 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( haswordauthor(I, C) )
%   | | | then return 0.1918097639274973;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.13551158486250367;  // std dev = 1.200, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return 0.16787986199540475;  // std dev = 1.204, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.07331406721667247;  // std dev = 5.800, 150.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=84 */
%   else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | then return 0.04137430552998338;  // std dev = 0.405, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 3.6661249130981325E-4;  // std dev = 0.354, 808.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=119 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.044028487974445946;  // std dev = 0.467, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.029324812897879225;  // std dev = 7.773, 297.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=103 */
%   | | | else return 0.15457568225964013;  // std dev = 1.802, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(J, C) )
%   | | | then return 0.16386891538989776;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10290689974327658;  // std dev = 1.200, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.040531234384908243;  // std dev = 4.302, 76.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=39 */
%   | | | else return 0.07547703704734446;  // std dev = 4.073, 81.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=50 */
%   else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | then return 0.03547145092771991;  // std dev = 0.405, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 3.206780089464371E-4;  // std dev = 0.354, 808.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=119 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.0345834459323973;  // std dev = 0.466, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return -0.00845170852646979;  // std dev = 4.463, 103.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=27 */
%   | | | else return 0.04532588615914603;  // std dev = 6.606, 209.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=85 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.07485905884176478;  // std dev = 3.571, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return -0.04161564973851153;  // std dev = 2.489, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.06906112881020643;  // std dev = 3.204, 43.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   | | | else return 0.04760764230442644;  // std dev = 2.672, 43.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=29 */
%   else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | then return 0.030283310596609603;  // std dev = 0.405, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 2.804891158928752E-4;  // std dev = 0.354, 808.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=119 */
Inference time using transfer learning 2.3744587898254395
Refined model CLL: -0.599803


******************************************
Best model found
******************************************
Results 

CLL : -0.803581 

AUC ROC : 0.5663 

AUC PR : 0.682077 

Precision : 0.756098 

Recall : 0.040208 

F1 : 0.076355 

Total Learning Time : 5689.140331506729 

Total Inference Time : 22.54736876487732 

Total revision time: 5718.871552467346
Best scored revision CLL: -0.599803


Results 

CLL : -0.803581 

AUC ROC : 0.5663 

AUC PR : 0.682077 

Precision : 0.756098 

Recall : 0.040208 

F1 : 0.076355 

Total Learning Time : 5718.884181022644 

Total Inference Time : 22.54736876487732 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos examples: 581
Target test neg examples: 2222

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.046394348144531
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.56e-06, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else return 0.2796365384052923;  // std dev = 34.354, 4,840.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,040 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.27818501365728443;  // std dev = 35.547, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23242113232729175;  // std dev = 35.476, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1886232463350446;  // std dev = 35.424, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14957432737924764;  // std dev = 35.390, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11661006349999808;  // std dev = 35.370, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08984683694334636;  // std dev = 35.358, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0686838595719758;  // std dev = 35.352, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05223548069695704;  // std dev = 35.349, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03959242193679985;  // std dev = 35.347, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
Inference time using transfer learning 0.9070541858673096
Parameter learned model CLL:-0.672069 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.56e-06, 0, 396], 'false': [34.354, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.547, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.476, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.424, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.39, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.37, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.358, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.352, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.349, 2, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [35.347, 2, 2]}]
{'': [6.172391441956426e-15, 0.24383580356527565]}
{'': [nan, 0.241327340782201]}
{'': [nan, 0.2403585802947053]}
{'': [nan, 0.23965911682039565]}
{'': [nan, 0.23920081293575973]}
{'': [nan, 0.2389232424551569]}
{'': [nan, 0.23876585284387075]}
{'': [nan, 0.23868206035029493]}
{'': [nan, 0.23864070829038783]}
{'': [nan, 0.2386226352544325]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
Model training time 846.1337728500366
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.56e-06, 396.000 (wgt'ed) examples reached here.  /* #pos=396 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29812957401528645;  // std dev = 0.496, 4,132.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=1,818 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.415525984279839;  // std dev = 3.879, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.2957740797016064;  // std dev = 0.492, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.7710190666182091;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5081609162552908;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.37218845498162506;  // std dev = 4.499, 83.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=48 */
%   | | | else return 0.45846294642023105;  // std dev = 4.155, 85.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | then if ( haswordtitle(K, M), haswordauthor(N, M) )
%   | | | then return 0.13210824448745517;  // std dev = 4.237, 84.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=26 */
%   | | | else return 0.3519961996695275;  // std dev = 4.116, 68.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=36 */
%   | | else return 0.037478495152011904;  // std dev = 0.388, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | else return 0.026564983804999154;  // std dev = 0.377, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.24628716600667114;  // std dev = 0.491, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.4896161853377907;  // std dev = 0.386, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2971602507958034;  // std dev = 4.491, 83.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=48 */
%   | | | else return 0.37516351453202945;  // std dev = 4.124, 85.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | then if ( haswordtitle(J, L), haswordauthor(M, L) )
%   | | | then return 0.11200079726649931;  // std dev = 4.237, 84.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=26 */
%   | | | else return 0.2947118217213483;  // std dev = 4.116, 68.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=36 */
%   | | else if ( title(N, J), venue(N, A) )
%   | | | then return 0.03997438005814042;  // std dev = 5.398, 189.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=36 */
%   | | | else return -0.15050181041805108;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.021921481351592876;  // std dev = 0.377, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.1988621006941051;  // std dev = 0.490, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.29258505811049923;  // std dev = 3.831, 65.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=42 */
%   | | | else return 0.11158598183365184;  // std dev = 2.532, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.3147589018441275;  // std dev = 3.348, 51.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=34 */
%   | | | else return 0.2761121806314024;  // std dev = 2.390, 36.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=26 */
%   else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | then if ( haswordtitle(K, M), haswordauthor(N, M) )
%   | | | then return 0.09364514920229115;  // std dev = 4.237, 84.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=26 */
%   | | | else return 0.23773375813233416;  // std dev = 4.116, 68.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=36 */
%   | | else return 0.029867238568435428;  // std dev = 0.388, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | else return 0.018899929661778916;  // std dev = 0.377, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.15675847302177642;  // std dev = 0.490, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.346306296543867;  // std dev = 0.379, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1698072419315908;  // std dev = 4.451, 83.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=48 */
%   | | | else return 0.22276321672166002;  // std dev = 4.103, 85.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | then if ( haswordauthor(L, K) )
%   | | | then return 0.2678484759038342;  // std dev = 2.646, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.0941031182242101;  // std dev = 5.258, 124.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=48 */
%   | | else if ( title(M, J), venue(M, A) )
%   | | | then return 0.03229136968268301;  // std dev = 5.398, 189.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=36 */
%   | | | else return -0.13443838440870468;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.015273052326996713;  // std dev = 0.377, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.12147802553128395;  // std dev = 0.490, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.2625192076126452;  // std dev = 0.379, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.12825349671849748;  // std dev = 4.489, 85.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=50 */
%   | | | else return 0.1688500088705659;  // std dev = 4.062, 83.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=56 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | then if ( haswordauthor(L, K) )
%   | | | then return 0.24823090386456595;  // std dev = 2.633, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.0674306250142939;  // std dev = 5.232, 124.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=48 */
%   | | else if ( title(M, J), venue(M, B) )
%   | | | then return 0.02973120096894702;  // std dev = 5.398, 189.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=36 */
%   | | | else return -0.16074498950724306;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.012808215778431274;  // std dev = 0.376, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.093076547279656;  // std dev = 0.489, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return 0.214915365144487;  // std dev = 0.368, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.0864067122307433;  // std dev = 4.467, 83.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=48 */
%   | | | else return 0.13466491956798185;  // std dev = 4.088, 85.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( haswordauthor(K, I) )
%   | | then if ( author(L, K), title(L, J) )
%   | | | then return 0.14039154171044857;  // std dev = 1.062, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.1512294075497212;  // std dev = 2.636, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | else if ( haswordtitle(J, M), haswordauthor(N, M) )
%   | | | then return 0.02176189924970144;  // std dev = 6.842, 276.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=65 */
%   | | | else return 0.14132967319368456;  // std dev = 2.923, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | else return 0.010066775354911978;  // std dev = 0.376, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.34732480036352903;  // std dev = 0.275, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | else if ( haswordtitle(E, C) )
%   | | then return 0.06974556318867944;  // std dev = 0.490, 4,486.000 (wgt'ed) examples reached here.  /* #neg=2,312 #pos=2,174 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.06648201585797771;  // std dev = 4.597, 90.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=53 */
%   | | | else return 0.10594640405628057;  // std dev = 4.111, 85.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, H) )
%   | | | then return 0.14336721795722368;  // std dev = 2.837, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.012506817368876582;  // std dev = 6.812, 276.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=65 */
%   | | else return 0.13574759478756182;  // std dev = 0.494, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.017942155087809945;  // std dev = 0.388, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else return -0.13748750131025494;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.40387403649396647;  // std dev = 0.171, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.19975461556089988;  // std dev = 3.988, 69.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=44 */
%   | | else return -0.17310384506026483;  // std dev = 0.393, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | else if ( haswordtitle(H, C) )
%   | | then return 0.053043966000349274;  // std dev = 0.489, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.04379703482816833;  // std dev = 4.439, 83.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=48 */
%   | | | else return 0.0806821701121921;  // std dev = 4.115, 85.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | then if ( haswordauthor(M, K) )
%   | | then return 0.11464678602046413;  // std dev = 0.472, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | else return 0.02091504862719864;  // std dev = 0.421, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | else return 0.006231051208658959;  // std dev = 0.376, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then return 0.04048177126639006;  // std dev = 0.489, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.0850605241622099;  // std dev = 3.787, 65.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=42 */
%   | | | else return -0.0982863428386258;  // std dev = 2.514, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.09349462059099345;  // std dev = 3.311, 51.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=34 */
%   | | | else return 0.03933556192272244;  // std dev = 2.411, 36.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=26 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( haswordauthor(L, J) )
%   | | then if ( author(M, L), title(M, K) )
%   | | | then return 0.10487665365170973;  // std dev = 1.029, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.11131241417159586;  // std dev = 2.620, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | else return 0.015878480304871812;  // std dev = 0.421, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | else return 0.004007544958356222;  // std dev = 0.376, 209.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=36 */
Inference time using transfer learning 1.7911953926086426
Refined model CLL: -0.653844


******************************************
Best model found
******************************************
Results 

CLL : -0.585649 

AUC ROC : 0.620791 

AUC PR : 0.369866 

Precision : 0.84252 

Recall : 0.184165 

F1 : 0.30226 

Total Learning Time : 846.1337728500366 

Total Inference Time : 7.367959022521973 

Total revision time: 858.877477645874
Best scored revision CLL: -0.653844


Results 

CLL : -0.585649 

AUC ROC : 0.620791 

AUC PR : 0.369866 

Precision : 0.84252 

Recall : 0.184165 

F1 : 0.30226 

Total Learning Time : 858.8901062011719 

Total Inference Time : 7.367959022521973 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos examples: 747
Target test neg examples: 1068

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.262086391448975
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1.41e-06, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else return 0.1815575593294866;  // std dev = 35.760, 5,844.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=1,890 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19226970622757575;  // std dev = 37.299, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.163254413390499;  // std dev = 37.235, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13588052440684198;  // std dev = 37.184, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11118390758780919;  // std dev = 37.145, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08971399578805939;  // std dev = 37.117, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07159260191531255;  // std dev = 37.096, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05664286794582874;  // std dev = 37.081, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0445213361096317;  // std dev = 37.071, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.034819615025422766;  // std dev = 37.064, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
Inference time using transfer learning 0.8451571464538574
Parameter learned model CLL:-0.634638 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.41e-06, 0, 380], 'false': [35.76, 3, 1]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.299, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.235, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.184, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.145, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.117, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.096, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.081, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.071, 3, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.064, 3, 2]}]
{'': [5.235578052969159e-15, 0.2188154860035915]}
{'': [nan, 0.22352893076480546]}
{'': [nan, 0.22275774646567756]}
{'': [nan, 0.22214663652311925]}
{'': [nan, 0.22168341475350437]}
{'': [nan, 0.2213432248685861]}
{'': [nan, 0.22109832170004654]}
{'': [nan, 0.2209238046139833]}
{'': [nan, 0.22079978020186083]}
{'': [nan, 0.22071140818040338]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
Model training time 1782.389099597931
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995083;  // std dev = 1.41e-06, 380.000 (wgt'ed) examples reached here.  /* #pos=380 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.41979277071595067;  // std dev = 4.239, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return 0.06245001036832955;  // std dev = 3.888, 93.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | else return 0.2054740379801656;  // std dev = 0.476, 4,860.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=1,688 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.018505282538265628;  // std dev = 7.775, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.04094463402424335;  // std dev = 6.456, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C), haswordtitle(F, D) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.7393611291878139;  // std dev = 0.097, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.34832005476627864;  // std dev = 4.193, 71.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=39 */
%   | | else if ( haswordtitle(G, C) )
%   | | | then return 0.04267547241311764;  // std dev = 3.554, 85.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=17 */
%   | | | else return 0.4666339096546239;  // std dev = 1.888, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.39646931301400523;  // std dev = 4.118, 69.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=39 */
%   | | | else return 0.03607119881808987;  // std dev = 3.677, 83.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=17 */
%   | | else return 0.21686218073454122;  // std dev = 0.479, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,997 */
%   else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | then return 0.025037803914296865;  // std dev = 0.376, 521.000 (wgt'ed) examples reached here.  /* #neg=432 #pos=89 */
%   | else return 0.032589299644563745;  // std dev = 0.382, 297.000 (wgt'ed) examples reached here.  /* #neg=244 #pos=53 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1831443136162803;  // std dev = 0.478, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.10166189211957409;  // std dev = 1.213, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.12810923917432263;  // std dev = 3.286, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.18357377283436782;  // std dev = 1.154, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.15176892180561755;  // std dev = 0.021, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.10020105579443643;  // std dev = 3.324, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | | else return -0.05720071131901899;  // std dev = 1.356, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.014306748602688758;  // std dev = 7.709, 436.000 (wgt'ed) examples reached here.  /* #neg=365 #pos=71 */
%   | | | else return 0.018345411070517337;  // std dev = 5.402, 210.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=35 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D), haswordtitle(F, C) )
%   | | then if ( haswordvenue(A, D) )
%   | | | then return 0.5317443996721616;  // std dev = 0.132, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.2856800361726548;  // std dev = 4.172, 71.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=39 */
%   | | else if ( haswordtitle(G, C) )
%   | | | then return -0.01101294705167305;  // std dev = 3.570, 85.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=17 */
%   | | | else return 0.3744378209030467;  // std dev = 1.889, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else return 0.15085373031083474;  // std dev = 0.477, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, H) )
%   | | | then return 0.08835911210017393;  // std dev = 1.212, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.11106470698757304;  // std dev = 3.285, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else return -0.07069463230466538;  // std dev = 0.249, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | else return 0.01710062159865208;  // std dev = 0.374, 728.000 (wgt'ed) examples reached here.  /* #neg=605 #pos=123 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.12259378998275193;  // std dev = 0.476, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.07456749725329594;  // std dev = 1.205, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.09952544069040668;  // std dev = 3.282, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return 0.2008512739940346;  // std dev = 1.154, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.13703905056136287;  // std dev = 0.053, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.008174089172143744;  // std dev = 6.797, 374.000 (wgt'ed) examples reached here.  /* #neg=320 #pos=54 */
%   | | | else return 0.08875819117951064;  // std dev = 3.699, 75.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.03550051899255427;  // std dev = 6.380, 264.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=51 */
%   | | | else return -0.15327232083590403;  // std dev = 0.067, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5890618978245453;  // std dev = 1.357, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | | | else return -0.26063756954450906;  // std dev = 0.282, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( haswordvenue(A, D), haswordtitle(H, C) )
%   | | | then return 0.2789933871704944;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return -0.01048153196435647;  // std dev = 4.408, 106.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.26607604605988966;  // std dev = 3.363, 55.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=32 */
%   | | | else return -0.02787555446779673;  // std dev = 4.197, 97.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=24 */
%   | | else return 0.09822423844885272;  // std dev = 0.477, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,997 */
%   else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | then return 0.03834010348417656;  // std dev = 0.399, 90.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=19 */
%   | else return 0.012650620966287593;  // std dev = 0.373, 728.000 (wgt'ed) examples reached here.  /* #neg=605 #pos=123 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then return 0.19921973011479147;  // std dev = 0.366, 61.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=36 */
%   | | else if ( haswordtitle(G, C) )
%   | | | then return -0.017683104798721802;  // std dev = 4.162, 104.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=29 */
%   | | | else return 0.2497657645209509;  // std dev = 1.848, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.2072321350615515;  // std dev = 3.336, 55.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=32 */
%   | | | else return -0.02245774780629226;  // std dev = 4.197, 97.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=24 */
%   | | else return 0.0775280809854751;  // std dev = 0.476, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,997 */
%   else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | then if ( haswordauthor(L, M), haswordtitle(N, M) )
%   | | then return 0.08782486382366199;  // std dev = 0.443, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | else return -0.06636893448296764;  // std dev = 0.249, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | else return 0.010108702048050897;  // std dev = 0.373, 728.000 (wgt'ed) examples reached here.  /* #neg=605 #pos=123 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06026420631749256;  // std dev = 0.473, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | then return 0.07415144380205511;  // std dev = 0.442, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.17208321666627238;  // std dev = 1.152, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.12163481290912515;  // std dev = 0.048, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.017044602462728185;  // std dev = 6.779, 374.000 (wgt'ed) examples reached here.  /* #neg=320 #pos=54 */
%   | | | else return 0.08677955792860764;  // std dev = 3.699, 75.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=18 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.03184188769487247;  // std dev = 6.369, 264.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=51 */
%   | | | else return -0.1444063597993904;  // std dev = 0.092, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04689667674040753;  // std dev = 0.473, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then return 0.0221074384209942;  // std dev = 0.386, 379.000 (wgt'ed) examples reached here.  /* #neg=308 #pos=71 */
%   | | else if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return -0.12695234204837183;  // std dev = 1.392, 66.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=2 */
%   | | | else return 0.04404598874380229;  // std dev = 3.563, 76.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=16 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.031334316603407936;  // std dev = 6.337, 258.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=51 */
%   | | | else return -0.04484431175663437;  // std dev = 1.335, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else return -0.1306171840459744;  // std dev = 0.141, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( title(E, D), venue(E, A) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.0325021812593747;  // std dev = 0.473, 4,955.000 (wgt'ed) examples reached here.  /* #neg=3,030 #pos=1,925 */
%   | | else if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.3900333597836411;  // std dev = 6.106, 161.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=98 */
%   | | | else return -0.16681080192156975;  // std dev = 1.379, 264.000 (wgt'ed) examples reached here.  /* #neg=262 #pos=2 */
%   | else if ( title(G, D), venue(G, B) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.10929923977876528;  // std dev = 4.456, 110.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=26 */
%   | | | else return -0.0649971227328143;  // std dev = 1.373, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.06660407368509218;  // std dev = 6.450, 192.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=85 */
%   | | | else return -0.030763729193972834;  // std dev = 4.118, 143.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=20 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.2832440155784606;  // std dev = 0.429, 85.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=59 */
%   | else return 0.012560340551100493;  // std dev = 0.378, 297.000 (wgt'ed) examples reached here.  /* #neg=244 #pos=53 */
Inference time using transfer learning 1.6381845474243164
Refined model CLL: -0.609882


******************************************
Best model found
******************************************
Results 

CLL : -0.649796 

AUC ROC : 0.62563 

AUC PR : 0.614338 

Precision : 0.94964 

Recall : 0.176707 

F1 : 0.297968 

Total Learning Time : 1782.389099597931 

Total Inference Time : 8.657196044921875 

Total revision time: 1797.773148059845
Best scored revision CLL: -0.609882


Results 

CLL : -0.649796 

AUC ROC : 0.62563 

AUC PR : 0.614338 

Precision : 0.94964 

Recall : 0.176707 

F1 : 0.297968 

Total Learning Time : 1797.7857766151428 

Total Inference Time : 8.657196044921875 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos examples: 550
Target test neg examples: 500

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.74431037902832
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.72e-06, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else return 0.17049686697298647;  // std dev = 37.582, 6,576.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,054 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18219293009188647;  // std dev = 39.232, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1549854988346977;  // std dev = 39.167, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1293797387407514;  // std dev = 39.114, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10626852302092493;  // std dev = 39.074, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08612508071057372;  // std dev = 39.044, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06905487324779415;  // std dev = 39.022, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05490360274464825;  // std dev = 39.006, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04336850764074607;  // std dev = 38.994, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( venue(A, C), venue(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0340856517668633;  // std dev = 38.986, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
Inference time using transfer learning 0.7395799160003662
Parameter learned model CLL:-0.627729 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'venue(C, A), venue(C, B)'}, {'true': [1.72e-06, 0, 413], 'false': [37.582, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.232, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.167, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.114, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.074, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.044, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.022, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.006, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.994, 4, 2]}]
['samevenue(A, B)', {'': 'venue(A, C), venue(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.986, 4, 2]}]
{'': [7.157040631385029e-15, 0.21478670132777686]}
{'': [nan, 0.22022403069905924]}
{'': [nan, 0.21949016851811237]}
{'': [nan, 0.21890359833924458]}
{'': [nan, 0.21845322954646335]}
{'': [nan, 0.218117190934714]}
{'': [nan, 0.21787095664761144]}
{'': [nan, 0.21769221329228702]}
{'': [nan, 0.2175628156709882]}
{'': [nan, 0.2174689570148661]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;samevenue(A, B) :- venue(C, A), venue(C, B).;true;true


Refining candidate
***************************
Model training time 6983.201917409897
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( venue(C, A), venue(C, B) )
%   then return 0.8581489350995082;  // std dev = 1.72e-06, 413.000 (wgt'ed) examples reached here.  /* #pos=413 */
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18699686136678825;  // std dev = 34.603, 5,425.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=1,784 */
%   | | | else return 0.13739421811838173;  // std dev = 7.303, 265.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3581489350995111;  // std dev = 4.062, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.0607699838194067;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.0607699838194067;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.02836170105695747;  // std dev = 9.640, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.19700108919512768;  // std dev = 0.474, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.14689419051007127;  // std dev = 7.378, 266.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=85 */
%   | | | else return 0.4665254698745393;  // std dev = 2.459, 29.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.3876224127078261;  // std dev = 3.885, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return 0.15313109757134968;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.38281520985970885;  // std dev = 3.634, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.4962537292833592;  // std dev = 2.513, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | then return -0.05353224823028762;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | else return 0.020699908559497562;  // std dev = 0.371, 695.000 (wgt'ed) examples reached here.  /* #neg=580 #pos=115 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.16714732731800627;  // std dev = 0.474, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.1250463672873055;  // std dev = 7.361, 266.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=85 */
%   | | | else return 0.38650665626439956;  // std dev = 2.438, 29.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.3333432016432613;  // std dev = 3.865, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return 0.08978799354659364;  // std dev = 2.413, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.3197871744175821;  // std dev = 3.605, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.3927830384082758;  // std dev = 2.460, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | then return 0.02440987598573608;  // std dev = 0.375, 482.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=82 */
%   | else return -0.0037111611944718433;  // std dev = 0.351, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.1390751612587251;  // std dev = 0.473, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return 0.04254090760078497;  // std dev = 4.562, 109.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=28 */
%   | | | else return 0.16874968513726607;  // std dev = 6.256, 186.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=76 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.2664325867112747;  // std dev = 3.860, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return 0.07047091428444117;  // std dev = 2.412, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.2555053014334582;  // std dev = 3.600, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.2996768390255727;  // std dev = 2.434, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | then return -0.058421548297120734;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | else return 0.01674690492181317;  // std dev = 0.371, 695.000 (wgt'ed) examples reached here.  /* #neg=580 #pos=115 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.11379971122568734;  // std dev = 0.472, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.0775280100849664;  // std dev = 7.326, 266.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=85 */
%   | | | else return 0.2678920325127578;  // std dev = 2.423, 29.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.2193130346648124;  // std dev = 3.845, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return 0.020009286182245154;  // std dev = 2.401, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.200525140305217;  // std dev = 3.573, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.22590169469146398;  // std dev = 2.427, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | then return 0.02161536855390763;  // std dev = 0.375, 482.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=82 */
%   | else return -0.00867616667517006;  // std dev = 0.351, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.09166415462952988;  // std dev = 0.472, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return 0.011602353655330026;  // std dev = 4.562, 109.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=28 */
%   | | | else return 0.11538735480839431;  // std dev = 6.196, 186.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=76 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return 0.16770037917167674;  // std dev = 3.843, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return 0.015607394728836713;  // std dev = 2.401, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.15279664322414685;  // std dev = 3.570, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.17081609244789214;  // std dev = 2.430, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | then return 0.019001349680321074;  // std dev = 0.375, 482.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=82 */
%   | else return -0.00782556748850699;  // std dev = 0.351, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.07322625973581734;  // std dev = 0.472, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | else if ( title(F, D), venue(F, A) )
%   | | | then return -0.002160668253775109;  // std dev = 4.562, 109.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=28 */
%   | | | else return 0.09189004574328037;  // std dev = 6.182, 186.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=76 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.1403715546949857;  // std dev = 3.834, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return -0.021343465642865316;  // std dev = 2.392, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.11597243579803933;  // std dev = 3.550, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.1303562921063207;  // std dev = 2.438, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | then return 0.018149578762499258;  // std dev = 0.375, 482.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=82 */
%   | else return -0.009907640596958008;  // std dev = 0.351, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, A) )
%   | | then return 0.05787561280076731;  // std dev = 0.471, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | else if ( title(F, D), venue(F, B) )
%   | | | then return -0.004437829696112451;  // std dev = 4.562, 109.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=28 */
%   | | | else return 0.07248436852702486;  // std dev = 6.173, 186.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=76 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.10602194212954619;  // std dev = 3.834, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return -0.016420011008953003;  // std dev = 2.392, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.08737882143372835;  // std dev = 3.549, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.1005219813841169;  // std dev = 2.446, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | then return -0.05809844081230512;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | else return 0.01094688296685752;  // std dev = 0.371, 695.000 (wgt'ed) examples reached here.  /* #neg=580 #pos=115 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6371640986702969;  // std dev = 0.994, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return -0.3157843023208243;  // std dev = 1.49e-08, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordtitle(H, D), haswordtitle(H, C) )
%   | | | then return -0.0991582820268927;  // std dev = 3.507, 76.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=17 */
%   | | | else return 0.1363756382311687;  // std dev = 2.427, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | else if ( haswordtitle(I, C) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.04471713087084819;  // std dev = 35.402, 5,648.000 (wgt'ed) examples reached here.  /* #neg=3,563 #pos=2,085 */
%   | | | else return 0.032031859015350675;  // std dev = 7.631, 289.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=102 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.050421935198534364;  // std dev = 4.500, 86.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=44 */
%   | | | else return 0.07022531481392524;  // std dev = 4.305, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   else return 0.006438655996966293;  // std dev = 0.367, 732.000 (wgt'ed) examples reached here.  /* #neg=614 #pos=118 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordtitle(D, C) )
%   | then if ( title(E, D), venue(E, B) )
%   | | then return 0.03548781890320608;  // std dev = 0.470, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | else if ( haswordtitle(D, F), haswordauthor(G, F) )
%   | | | then return 0.013498745327610766;  // std dev = 7.274, 266.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=85 */
%   | | | else return 0.12834263798470524;  // std dev = 2.423, 29.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.06384806302861408;  // std dev = 3.832, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return -0.026346685901438335;  // std dev = 2.395, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.052931943761315665;  // std dev = 3.545, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.06315626533712482;  // std dev = 2.460, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | then return -0.05202400837893027;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | else return 0.008662340965149305;  // std dev = 0.371, 695.000 (wgt'ed) examples reached here.  /* #neg=580 #pos=115 */
Inference time using transfer learning 1.8092033863067627
Refined model CLL: -0.612721


******************************************
Best model found
******************************************
Results 

CLL : -0.722401 

AUC ROC : 0.710505 

AUC PR : 0.739035 

Precision : 0.878788 

Recall : 0.052727 

F1 : 0.099485 

Total Learning Time : 6983.201917409897 

Total Inference Time : 28.924037218093872 

Total revision time: 7019.210218906403
Best scored revision CLL: -0.612721


Results 

CLL : -0.722401 

AUC ROC : 0.710505 

AUC PR : 0.739035 

Precision : 0.878788 

Recall : 0.052727 

F1 : 0.099485 

Total Learning Time : 7019.2228474617 

Total Inference Time : 28.924037218093872 

Starting experiments for fasttext using softcosine 

Run: 1

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.493498802185059
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23749878473433458;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060618178036594;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17453024670666556;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446407501339931;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11767244800090106;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430962074455004;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.074707177635281;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865473052223055;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574473720619161;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549889774086067;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning 0.7091884613037109
Parameter learned model CLL:-0.665378 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(C, A), haswordauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
{'': [nan, 0.23544354121679714]}
{'': [nan, 0.23544354121687253]}
{'': [nan, 0.23544354121689864]}
{'': [nan, 0.23544354121683903]}
{'': [nan, 0.2354435412168111]}
{'': [nan, 0.235443541216926]}
{'': [nan, 0.23544354121692726]}
{'': [nan, 0.23544354121684707]}
{'': [nan, 0.23544354121692693]}
{'': [nan, 0.23544354121681993]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(C, A), haswordauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 1065.9147953987122
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2559515161947286;  // std dev = 37.062, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.23063215657601857;  // std dev = 8.346, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5724346493852271;  // std dev = 3.964, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14905802600860327;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.04473174432383054;  // std dev = 8.508, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.22191983436381657;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.19893044877511365;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3578878444734629;  // std dev = 4.780, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5042038727151713;  // std dev = 3.938, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1430950943192866;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.038139440494516626;  // std dev = 8.501, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03579563578659918;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1874125148267566;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.16852367080292122;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2903869442291748;  // std dev = 4.777, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.409605459669476;  // std dev = 3.930, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1241486430000413;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.033254011027631876;  // std dev = 8.501, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.031226012289466983;  // std dev = 5.927, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15464644444436793;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.13877229675309696;  // std dev = 8.358, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21276715551903777;  // std dev = 4.765, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.33529130189735984;  // std dev = 3.900, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.11908733057402586;  // std dev = 3.356, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.02777923196985434;  // std dev = 8.494, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.10071049980613894;  // std dev = 0.955, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.027413238102116603;  // std dev = 5.849, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12507102235802825;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.11301079645083846;  // std dev = 8.359, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.16116179168107547;  // std dev = 4.763, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.25581663152892176;  // std dev = 3.895, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10482738960563373;  // std dev = 3.345, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.02406682743456655;  // std dev = 8.493, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.10429800159180262;  // std dev = 0.955, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.024117056454726362;  // std dev = 5.848, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09961342423151814;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.08991633070098659;  // std dev = 8.363, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.41361481040861914;  // std dev = 0.897, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.14073340693244182;  // std dev = 6.058, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10070359569499665;  // std dev = 3.339, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.019677775753912725;  // std dev = 8.487, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.0730174966344952;  // std dev = 1.349, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.022322894969222882;  // std dev = 5.771, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0783575713624531;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.07134003523012984;  // std dev = 8.364, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07114248376188397;  // std dev = 4.741, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.16965420420965704;  // std dev = 3.865, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.018146215018495494;  // std dev = 8.370, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.061768330511541035;  // std dev = 3.627, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.09899655851414475;  // std dev = 0.953, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.01823121228284398;  // std dev = 5.848, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06110814766171412;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.05571808877883213;  // std dev = 8.366, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.050868238614851166;  // std dev = 4.736, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.1314979290904509;  // std dev = 3.870, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.08449776445155219;  // std dev = 3.330, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.013544644765900286;  // std dev = 8.483, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.01545087957069873;  // std dev = 5.923, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.10147528751619299;  // std dev = 0.044, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.047327940801264526;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.04353629497715654;  // std dev = 8.367, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.029631487868902757;  // std dev = 4.738, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.11072577363948359;  // std dev = 3.854, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07034412540296643;  // std dev = 3.328, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.011600016436905376;  // std dev = 8.483, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.013277482467306086;  // std dev = 5.923, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.09260215190620773;  // std dev = 0.040, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.22438121563125094;  // std dev = 4.326, 78.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=46 */
%   | | | else return -0.07299654898631079;  // std dev = 4.660, 110.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=33 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.036257587192374846;  // std dev = 37.417, 5,852.000 (wgt'ed) examples reached here.  /* #neg=3,532 #pos=2,320 */
%   | | | else return 0.03831047263680782;  // std dev = 6.017, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.02675125340013681;  // std dev = 7.634, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return -0.009917874925805478;  // std dev = 4.971, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.06650560541337479;  // std dev = 1.348, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.013706306114133269;  // std dev = 5.766, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
Inference time using transfer learning 1.613962173461914
Refined model CLL: -0.649984


******************************************
Best model found
******************************************
Results 

CLL : -0.624287 

AUC ROC : 0.583872 

AUC PR : 0.41429 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1065.9147953987122 

Total Inference Time : 25.227493286132812 

Total revision time: 1097.9353094100952
Best scored revision CLL: -0.649984


Results 

CLL : -0.624287 

AUC ROC : 0.583872 

AUC PR : 0.41429 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1097.9804475307465 

Total Inference Time : 25.227493286132812 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.777668237686157
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19217629976339767;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16713638120911187;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14258842882632106;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11954222017840668;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09871555462348185;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0804912793883634;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495809409335633;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05199278934611344;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041346460903546045;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03271420126321413;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
Inference time using transfer learning 0.7799620628356934
Parameter learned model CLL:-0.63853 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(C, A), haswordauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
{'': [nan, 0.22245308431952357]}
{'': [nan, 0.22245308431959404]}
{'': [nan, 0.22245308431958877]}
{'': [nan, 0.22245308431962857]}
{'': [nan, 0.22245308431955624]}
{'': [nan, 0.22245308431956373]}
{'': [nan, 0.22245308431964844]}
{'': [nan, 0.2224530843195216]}
{'': [nan, 0.22245308431962652]}
{'': [nan, 0.22245308431955077]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(C, A), haswordauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 934.6305727958679
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21330135701834016;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.2171232940738674;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.43131966680682676;  // std dev = 6.334, 164.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=94 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.004584387893347046;  // std dev = 8.054, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006937862435151973;  // std dev = 6.050, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1852931461937749;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.18876403158703928;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.5738588241704818;  // std dev = 1.233, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.36404583875914304;  // std dev = 6.209, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12730486140002475;  // std dev = 3.515, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0701388309589216;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.05628962009248213;  // std dev = 3.652, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0020235307543291694;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15754756052067018;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.16042305417489885;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.25736735468916044;  // std dev = 4.468, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.3565968211842242;  // std dev = 4.463, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11102856632026789;  // std dev = 3.514, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06169832040280135;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.048936969486220026;  // std dev = 3.652, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0017764187555891495;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.131365980298942;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.1338033667505171;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.19352357429218908;  // std dev = 4.460, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.2902875841255672;  // std dev = 4.453, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.095630250030407;  // std dev = 3.513, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.05462132700712879;  // std dev = 1.363, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.042311154052049875;  // std dev = 3.651, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0015597785669668627;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1077230198093344;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.10960511197842092;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.3715674209519837;  // std dev = 1.209, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.17533956368444528;  // std dev = 6.172, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.0922073624699113;  // std dev = 3.502, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.08061028535874709;  // std dev = 1.366, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.03866799536772453;  // std dev = 3.627, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0013697853889791153;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08711677196357491;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.08864762197227534;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.10229755064611798;  // std dev = 4.442, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.17907338384309066;  // std dev = 4.447, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.200522420137351;  // std dev = 1.590, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.014367542048728149;  // std dev = 3.406, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.029497363997526775;  // std dev = 3.635, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0012031098220195858;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06968385538081794;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.07081042840251583;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06725637907313488;  // std dev = 4.436, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.14402302167896627;  // std dev = 4.442, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07077701849368358;  // std dev = 3.502, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.05927025558799874;  // std dev = 1.339, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.025160144324187263;  // std dev = 3.635, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0010568502412599526;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05525671877644005;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.05613048194530428;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.22851055152942318;  // std dev = 1.211, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.07082142697133348;  // std dev = 6.152, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.06960575175667874;  // std dev = 3.489, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0016410059041458553;  // std dev = 8.011, 522.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=76 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.007036088932552379;  // std dev = 6.187, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.13898246523052732;  // std dev = 0.037, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), venue(F, A) )
%   | | | then return 0.5822716089785634;  // std dev = 0.368, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3429384704412518;  // std dev = 2.008, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.042229837722957284;  // std dev = 35.908, 5,638.000 (wgt'ed) examples reached here.  /* #neg=3,642 #pos=1,996 */
%   | | | else return 0.05697903604152624;  // std dev = 6.272, 164.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=94 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.05824695550202246;  // std dev = 3.487, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07763542520550974;  // std dev = 1.366, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.022670056283989843;  // std dev = 3.609, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -8.979528154601873E-4;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03418572860158616;  // std dev = 34.979, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.033421251366252826;  // std dev = 8.469, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.01424703287513861;  // std dev = 4.424, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.07458349688414218;  // std dev = 4.436, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.0483855882933588;  // std dev = 3.486, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06792779180292621;  // std dev = 1.366, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.002871880871446605;  // std dev = 7.955, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.008295554512026078;  // std dev = 6.112, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
Inference time using transfer learning 2.1767609119415283
Refined model CLL: -0.621452


******************************************
Best model found
******************************************
Results 

CLL : -0.826006 

AUC ROC : 0.506085 

AUC PR : 0.608806 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 934.6305727958679 

Total Inference Time : 20.849898099899292 

Total revision time: 961.5211503505707
Best scored revision CLL: -0.621452


Results 

CLL : -0.826006 

AUC ROC : 0.506085 

AUC PR : 0.608806 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 961.5662884712219 

Total Inference Time : 20.849898099899292 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos examples: 581
Target test neg examples: 2222

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.5189502239227295
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3233895768107371;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2793007008737935;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23328649407241175;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18916724063245646;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1498110457236774;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11660571223754278;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08968116396383638;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06842666944178562;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051938581046928;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039290221911838154;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
Inference time using transfer learning 0.8668146133422852
Parameter learned model CLL:-0.692509 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(C, A), haswordauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
{'': [nan, 0.24879178701129595]}
{'': [nan, 0.24879178701138563]}
{'': [nan, 0.24879178701132204]}
{'': [nan, 0.24879178701131163]}
{'': [nan, 0.24879178701132562]}
{'': [nan, 0.24879178701133703]}
{'': [nan, 0.24879178701133225]}
{'': [nan, 0.24879178701133212]}
{'': [nan, 0.24879178701138097]}
{'': [nan, 0.24879178701133148]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(C, A), haswordauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 502.4831027984619
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3441551545575258;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.5478041075133061;  // std dev = 4.315, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29690255138011334;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3782052229457276;  // std dev = 4.673, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.47682880772073083;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.247146690498353;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.5131337382016201;  // std dev = 1.246, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.3361153135855333;  // std dev = 6.231, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19937367766283512;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.23048590135751634;  // std dev = 4.659, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.31038115199810856;  // std dev = 4.305, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15694231532784036;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.5108456768880878;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19954413477821759;  // std dev = 6.331, 175.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=111 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return 0.05142434221559853;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.06821007189820737;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.027832149581508096;  // std dev = 5.247, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.3027167568315818;  // std dev = 4.124, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.0797126310956014;  // std dev = 2.863, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.1204890902009401;  // std dev = 33.118, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.14747224608646942;  // std dev = 6.217, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0416213028775108;  // std dev = 7.527, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.2283906622842639;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.07465821730094525;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.021057526455510987;  // std dev = 5.246, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.27258192373092005;  // std dev = 4.081, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.09819140053493378;  // std dev = 2.942, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.09187331919908162;  // std dev = 33.093, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.1074966204717221;  // std dev = 6.213, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.034718743328304574;  // std dev = 7.525, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1797059618185123;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.01594824973596078;  // std dev = 5.415, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09342649776027477;  // std dev = 0.015, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.4457313519578653;  // std dev = 1.214, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return 0.040764943372074036;  // std dev = 4.831, 102.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=49 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.05176015214638727;  // std dev = 4.794, 100.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=49 */
%   | | | else return 0.07062016377709474;  // std dev = 33.328, 4,459.000 (wgt'ed) examples reached here.  /* #neg=2,272 #pos=2,187 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return 0.02659322878595539;  // std dev = 7.502, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17191951349138584;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, N), haswordauthor(P, N) )
%   | | | then return -0.06777294304188576;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.014249584286302795;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.18186471674014534;  // std dev = 4.027, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.10864420605950728;  // std dev = 2.799, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.05266846226917642;  // std dev = 33.092, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.06377008926265756;  // std dev = 6.213, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.02242976577421192;  // std dev = 7.498, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.13251849744708535;  // std dev = 2.934, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.06923665802894197;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.012802064843005844;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.16462628517126207;  // std dev = 4.015, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.10919772367529051;  // std dev = 2.853, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03945837972342941;  // std dev = 33.077, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.04838500216126549;  // std dev = 6.212, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.13277134749588018;  // std dev = 2.863, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.015824653018009265;  // std dev = 7.508, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.007107838771578342;  // std dev = 5.413, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.08535272928885211;  // std dev = 0.025, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
Inference time using transfer learning 1.5897912979125977
Refined model CLL: -0.671608


******************************************
Best model found
******************************************
Results 

CLL : -0.600876 

AUC ROC : 0.559689 

AUC PR : 0.248994 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 502.4831027984619 

Total Inference Time : 4.554891347885132 

Total revision time: 511.8034963607788
Best scored revision CLL: -0.671608


Results 

CLL : -0.600876 

AUC ROC : 0.559689 

AUC PR : 0.248994 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 511.84863448143005 

Total Inference Time : 4.554891347885132 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos examples: 747
Target test neg examples: 1068

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.383108139038086
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22286615874989274;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935154405685214;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1642887262433117;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13666278671669155;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11171555888479459;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09002630084157656;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0717310965916087;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665493302668148;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044448905993106524;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469622643034082;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
Inference time using transfer learning 0.8118276596069336
Parameter learned model CLL:-0.657691 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(C, A), haswordauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
{'': [nan, 0.2316985704230787]}
{'': [nan, 0.23169857042309244]}
{'': [nan, 0.23169857042312694]}
{'': [nan, 0.23169857042310815]}
{'': [nan, 0.23169857042316017]}
{'': [nan, 0.23169857042318218]}
{'': [nan, 0.23169857042308678]}
{'': [nan, 0.23169857042320033]}
{'': [nan, 0.2316985704231533]}
{'': [nan, 0.23169857042309308]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(C, A), haswordauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 815.45001912117
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2517856350625112;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.018505282538265628;  // std dev = 7.775, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.04094463402424335;  // std dev = 6.456, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.21829238097522888;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.12800246769009244;  // std dev = 3.503, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07644847710697812;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.014740337475085448;  // std dev = 7.775, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.03695236799168645;  // std dev = 6.442, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.18446442968974686;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.11125506497562065;  // std dev = 3.502, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06731420093509295;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.012913281013131607;  // std dev = 7.775, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.03229664472527576;  // std dev = 6.442, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.35361695176439173;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.03319004682520159;  // std dev = 4.507, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.15159890319074093;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.09550882828282044;  // std dev = 3.502, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.05946529372908972;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.01128272344755806;  // std dev = 7.775, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.02812226618030121;  // std dev = 6.441, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1233061942605253;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.10407326548138497;  // std dev = 3.485, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.0761495628856054;  // std dev = 1.368, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.007246341024451364;  // std dev = 7.775, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.025819202074438927;  // std dev = 6.421, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09831218970132415;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.08888611474365012;  // std dev = 3.484, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06683239202691561;  // std dev = 1.367, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.006304746511051957;  // std dev = 7.775, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.022381077185516875;  // std dev = 6.420, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07745367018904148;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.07480045498198638;  // std dev = 3.482, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.05974347375561888;  // std dev = 1.367, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.029648477349418428;  // std dev = 3.616, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.00846286353239152;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.37248318696029226;  // std dev = 2.328, 27.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=19 */
%   | | | else return 0.023684743459342565;  // std dev = 5.821, 154.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=56 */
%   | | else return 0.05994954210456292;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.0012494678824975243;  // std dev = 7.665, 443.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=71 */
%   | | | else return 0.07672117434982954;  // std dev = 3.733, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.026826525905692535;  // std dev = 6.489, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.1632322437039211;  // std dev = 0.132, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04689911963752102;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.20065828597019497;  // std dev = 1.557, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.0035657835903718784;  // std dev = 3.380, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 8.297991990342417E-4;  // std dev = 7.768, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.01815479839505507;  // std dev = 6.405, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(A, D) )
%   | | | then return 0.031077831715842833;  // std dev = 34.264, 4,955.000 (wgt'ed) examples reached here.  /* #neg=3,030 #pos=1,925 */
%   | | | else return 0.04392370171898132;  // std dev = 8.383, 425.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=100 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.11319577157088954;  // std dev = 4.675, 127.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=28 */
%   | | | else return 0.03709696069024003;  // std dev = 8.110, 335.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=105 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.22513139091609619;  // std dev = 3.248, 43.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   | | | else return 0.4497152846635329;  // std dev = 2.538, 42.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.023371824145181064;  // std dev = 6.480, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.1439102336114468;  // std dev = 0.119, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
Inference time using transfer learning 1.2565727233886719
Refined model CLL: -0.640619


******************************************
Best model found
******************************************
Results 

CLL : -0.677984 

AUC ROC : 0.542656 

AUC PR : 0.457931 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 815.45001912117 

Total Inference Time : 6.047255754470825 

Total revision time: 827.2026073932648
Best scored revision CLL: -0.640619


Results 

CLL : -0.677984 

AUC ROC : 0.542656 

AUC PR : 0.457931 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 827.247745513916 

Total Inference Time : 6.047255754470825 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos examples: 550
Target test neg examples: 500

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.365227699279785
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111321945071477;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834400110087453;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15602704447107354;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13017937030369744;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10682752122740194;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08647162920053506;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06923052182131084;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0549522535276705;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043329703588355264;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399163325643134;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
Inference time using transfer learning 0.7154223918914795
Parameter learned model CLL:-0.650857 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(C, A), haswordauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
{'': [nan, 0.22838607798553479]}
{'': [nan, 0.22838607798557076]}
{'': [nan, 0.2283860779855225]}
{'': [nan, 0.22838607798565272]}
{'': [nan, 0.22838607798564442]}
{'': [nan, 0.22838607798554508]}
{'': [nan, 0.2283860779856207]}
{'': [nan, 0.22838607798554997]}
{'': [nan, 0.22838607798564564]}
{'': [nan, 0.22838607798561553]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(C, A), haswordauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 1173.870283126831
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2282181392517563;  // std dev = 36.707, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.21069130798086477;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.5070851053122791;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.0607699838194067;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.035677024987153;  // std dev = 8.061, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return 0.0021489350995115234;  // std dev = 5.551, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19815347585533294;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1821443572831206;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.30463403419907914;  // std dev = 4.674, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.446408274938219;  // std dev = 4.609, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05353224823028762;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03153053866875638;  // std dev = 8.067, 450.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=79 */
%   | | | else return 8.241136034949667E-4;  // std dev = 5.541, 245.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16808795298651213;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.15483203266496462;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2497725814972297;  // std dev = 4.671, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.36538039098940905;  // std dev = 4.604, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.011074185795563683;  // std dev = 7.222, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.07974346360908242;  // std dev = 3.924, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.002759826125214896;  // std dev = 5.536, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1422133576581236;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13967524500406545;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1283611316378811;  // std dev = 8.212, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1835423643603244;  // std dev = 4.656, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.30011734151408936;  // std dev = 4.585, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.00819678484190866;  // std dev = 7.217, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.07911243123217214;  // std dev = 3.920, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.001317355228622245;  // std dev = 5.534, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.12573134027071317;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1139834107002916;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.10525038208708748;  // std dev = 8.213, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1412868163248816;  // std dev = 4.654, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.23024351682844127;  // std dev = 4.582, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.0695395444271173;  // std dev = 1.659, 36.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | | | else return 0.025352564138217838;  // std dev = 8.042, 446.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=79 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.001151691652321949;  // std dev = 5.534, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.11254829852844518;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0917038549161181;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.08453605238431225;  // std dev = 8.215, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.0952646132699769;  // std dev = 4.645, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.18546709000766584;  // std dev = 4.571, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.006667730197893203;  // std dev = 7.210, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.06524029603464303;  // std dev = 3.921, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.001708591572730352;  // std dev = 5.535, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.10178744722220766;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07291392488816677;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.06763151292090487;  // std dev = 8.216, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07112594416158735;  // std dev = 4.644, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.14041504467441782;  // std dev = 4.570, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.005814783370772766;  // std dev = 7.210, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.05607043831853026;  // std dev = 3.921, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.14098743780209205;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.0016266560528232805;  // std dev = 5.532, 245.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.057480512491567354;  // std dev = 36.704, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.0533315294901017;  // std dev = 8.217, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.044010483865084875;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.11470565173946207;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.005067704730254583;  // std dev = 7.210, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.04787116695740107;  // std dev = 3.921, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -9.51618372310916E-4;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.09271435234189082;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04499836200047467;  // std dev = 36.704, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.042030807820199786;  // std dev = 8.218, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.03195107228254392;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.08771320653817367;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -1.4163288907475613E-4;  // std dev = 7.196, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.06288536375182385;  // std dev = 3.920, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.0013933699628059825;  // std dev = 5.535, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.08520433556142609;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.035061421409154046;  // std dev = 36.704, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.03272200386618076;  // std dev = 8.219, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.016733153509168184;  // std dev = 4.635, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.07331717420310015;  // std dev = 4.560, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06451154120086561;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.015803195378718382;  // std dev = 8.023, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.0036981649865249306;  // std dev = 5.539, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
Inference time using transfer learning 1.720369815826416
Refined model CLL: -0.636718


******************************************
Best model found
******************************************
Results 

CLL : -0.749657 

AUC ROC : 0.639835 

AUC PR : 0.639883 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1173.870283126831 

Total Inference Time : 27.312907934188843 

Total revision time: 1207.8429832458496
Best scored revision CLL: -0.636718


Results 

CLL : -0.749657 

AUC ROC : 0.639835 

AUC PR : 0.639883 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1207.8881213665009 

Total Inference Time : 27.312907934188843 

Run: 2

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.263270378112793
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23749878473433458;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060618178036594;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17453024670666556;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446407501339931;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11767244800090106;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430962074455004;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.074707177635281;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865473052223055;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574473720619161;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549889774086067;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning 0.6604177951812744
Parameter learned model CLL:-0.665378 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(C, A), haswordauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
{'': [nan, 0.23544354121679714]}
{'': [nan, 0.23544354121687253]}
{'': [nan, 0.23544354121689864]}
{'': [nan, 0.23544354121683903]}
{'': [nan, 0.2354435412168111]}
{'': [nan, 0.235443541216926]}
{'': [nan, 0.23544354121692726]}
{'': [nan, 0.23544354121684707]}
{'': [nan, 0.23544354121692693]}
{'': [nan, 0.23544354121681993]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(C, A), haswordauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 901.4555132389069
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2559515161947286;  // std dev = 37.062, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.23063215657601857;  // std dev = 8.346, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5724346493852271;  // std dev = 3.964, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.06760839455897227;  // std dev = 7.001, 296.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=62 */
%   | | | else return 0.04035232493002018;  // std dev = 5.930, 236.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=43 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2219198343638166;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.19893044877511365;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.35788784447346306;  // std dev = 4.780, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5042038727151715;  // std dev = 3.938, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14131665839554822;  // std dev = 3.366, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.03792704271485758;  // std dev = 8.509, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03673101633396252;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18741251482675658;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.16852367080292113;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2903869442291748;  // std dev = 4.777, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.4096054596694761;  // std dev = 3.930, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13590836049502242;  // std dev = 3.360, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07762444073070454;  // std dev = 1.361, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.05197889587174922;  // std dev = 3.525, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.03092571634578205;  // std dev = 9.646, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1546464444443682;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.13877229675309694;  // std dev = 8.358, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2127671555190377;  // std dev = 4.765, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.33529130189735984;  // std dev = 3.900, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.11554599048128149;  // std dev = 3.356, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.02821826488597793;  // std dev = 8.499, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.027380325475343522;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1136234278258406;  // std dev = 0.018, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12507102235802825;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.1130107964508383;  // std dev = 8.359, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.458764766850876;  // std dev = 0.900, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.1912697601898217;  // std dev = 6.073, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11269032522283247;  // std dev = 3.353, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07137940747381515;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.03260508546690914;  // std dev = 3.511, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.02334795282109769;  // std dev = 9.644, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), venue(F, B) )
%   | | | then return 0.6507579684699867;  // std dev = 0.227, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.29880615895895996;  // std dev = 2.146, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.09814014693515102;  // std dev = 37.902, 6,009.000 (wgt'ed) examples reached here.  /* #neg=3,632 #pos=2,377 */
%   | | | else return 0.14870254766348737;  // std dev = 6.145, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.09338578191624103;  // std dev = 3.346, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.020448806001775767;  // std dev = 8.490, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.07819031120054783;  // std dev = 1.350, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.022856507068628653;  // std dev = 5.770, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07848498374362567;  // std dev = 37.046, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.06872731831658944;  // std dev = 8.366, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07280058365803195;  // std dev = 4.740, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.1677598193020892;  // std dev = 3.881, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09236466264454736;  // std dev = 3.345, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.06642887782799169;  // std dev = 1.365, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.020419385886484988;  // std dev = 3.494, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.01726671852821167;  // std dev = 9.644, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06119110018916592;  // std dev = 37.045, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.05400370065406785;  // std dev = 8.366, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04255115479169701;  // std dev = 4.735, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.1416751116014336;  // std dev = 3.864, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.0749160607295092;  // std dev = 3.336, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.01444068593759914;  // std dev = 8.484, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.10684049870020981;  // std dev = 0.947, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.016566877526890154;  // std dev = 5.846, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04741660578437276;  // std dev = 37.045, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.04174609130114682;  // std dev = 8.369, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.030205982353344037;  // std dev = 4.734, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.1099359744705238;  // std dev = 3.865, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.02983910316552802;  // std dev = 7.635, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return -0.008312893171735378;  // std dev = 4.976, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.014002307746869449;  // std dev = 5.921, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.10319005675065462;  // std dev = 0.052, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03655017986372487;  // std dev = 37.045, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.03243637536468525;  // std dev = 8.369, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.23619125843037836;  // std dev = 0.883, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.041320705132234105;  // std dev = 6.038, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07416166197173006;  // std dev = 3.325, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.008689101778688707;  // std dev = 8.476, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.010906525240094906;  // std dev = 5.925, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.09404141774397047;  // std dev = 0.047, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
Inference time using transfer learning 1.8291304111480713
Refined model CLL: -0.650211


******************************************
Best model found
******************************************
Results 

CLL : -0.624127 

AUC ROC : 0.583384 

AUC PR : 0.417087 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 901.4555132389069 

Total Inference Time : 24.59420394897461 

Total revision time: 932.645087480545
Best scored revision CLL: -0.650211


Results 

CLL : -0.624127 

AUC ROC : 0.583384 

AUC PR : 0.417087 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 932.6676766872406 

Total Inference Time : 24.59420394897461 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.032084941864014
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19217629976339767;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16713638120911187;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14258842882632106;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11954222017840668;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09871555462348185;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0804912793883634;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495809409335633;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05199278934611344;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041346460903546045;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03271420126321413;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
Inference time using transfer learning 0.7756075859069824
Parameter learned model CLL:-0.63853 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(C, A), haswordauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
{'': [nan, 0.22245308431952357]}
{'': [nan, 0.22245308431959404]}
{'': [nan, 0.22245308431958877]}
{'': [nan, 0.22245308431962857]}
{'': [nan, 0.22245308431955624]}
{'': [nan, 0.22245308431956373]}
{'': [nan, 0.22245308431964844]}
{'': [nan, 0.2224530843195216]}
{'': [nan, 0.22245308431962652]}
{'': [nan, 0.22245308431955077]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(C, A), haswordauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 898.3841862678528
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21330135701834016;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.2171232940738674;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.4250279159912295;  // std dev = 6.209, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return 0.003742804831313513;  // std dev = 8.058, 522.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=76 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.00966408661466345;  // std dev = 6.179, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18529314619377496;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.18876403158703933;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.32507976765547286;  // std dev = 4.477, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.42515523560317653;  // std dev = 4.476, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12691587628979487;  // std dev = 3.517, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06817424577221032;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.054248544937466926;  // std dev = 3.656, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0018445117067543754;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15754756052067018;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.16042305417489888;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5163560461381884;  // std dev = 1.244, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.29537733019571455;  // std dev = 6.190, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11065493322241757;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06006093605344258;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0014421425053628891;  // std dev = 8.037, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006702086531805594;  // std dev = 6.047, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13136598029894195;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.13380336675051696;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.19096778712337115;  // std dev = 4.449, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.29266997214746515;  // std dev = 4.458, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09528119155838945;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.05324031672351533;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.04678342314390638;  // std dev = 3.656, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0020389620127247627;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10772301980933432;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.10960511197842099;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.347946444286524;  // std dev = 1.236, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.17681779426250516;  // std dev = 6.171, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.20366231081107353;  // std dev = 1.600, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.020121601097146;  // std dev = 3.412, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.04038201309501116;  // std dev = 3.656, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0017899523786452972;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08711677196357501;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.08864762197227534;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09999393329869383;  // std dev = 4.435, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.1810399979501141;  // std dev = 4.451, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09199000827856056;  // std dev = 3.495, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.08974611000395363;  // std dev = 1.367, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -8.919176684466963E-4;  // std dev = 7.964, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.006958302958996721;  // std dev = 6.111, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), venue(F, A) )
%   | | | then return 0.6338462279400175;  // std dev = 0.280, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.37808091142800515;  // std dev = 2.003, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.0684124767970211;  // std dev = 35.908, 5,638.000 (wgt'ed) examples reached here.  /* #neg=3,642 #pos=1,996 */
%   | | | else return 0.10184676375816291;  // std dev = 6.278, 164.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=94 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.07539923222577628;  // std dev = 3.503, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.055429861347956785;  // std dev = 1.338, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.028287262953592265;  // std dev = 3.638, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0018269633158187913;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05531393708878405;  // std dev = 34.979, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.0550088750457561;  // std dev = 8.469, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.040643704834993945;  // std dev = 4.425, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.11707034790483337;  // std dev = 4.439, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordvenue(A, K) )
%   | | | then return -0.1708102405830226;  // std dev = 0.074, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.04384576529094849;  // std dev = 3.746, 84.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=19 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.024104135587731577;  // std dev = 3.638, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0016041042442112327;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04357586244300641;  // std dev = 34.978, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.043249893883622756;  // std dev = 8.469, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.1991940123621964;  // std dev = 1.208, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.05133269202475939;  // std dev = 6.145, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07109223963158633;  // std dev = 3.482, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.08223481249389826;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0025958517476603;  // std dev = 7.956, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.006597867985564549;  // std dev = 6.111, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03415519084797898;  // std dev = 34.978, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.033816812336111224;  // std dev = 8.469, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.013856331754822053;  // std dev = 4.414, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.07532273686614595;  // std dev = 4.439, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.16589426037085325;  // std dev = 1.580, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.0052098196641609746;  // std dev = 3.380, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.015301163040951185;  // std dev = 3.625, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0015199213129668053;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
Inference time using transfer learning 2.299927234649658
Refined model CLL: -0.621438


******************************************
Best model found
******************************************
Results 

CLL : -0.826017 

AUC ROC : 0.506008 

AUC PR : 0.608788 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 898.3841862678528 

Total Inference Time : 20.398957014083862 

Total revision time: 925.0740101337433
Best scored revision CLL: -0.621438


Results 

CLL : -0.826017 

AUC ROC : 0.506008 

AUC PR : 0.608788 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 925.0965993404388 

Total Inference Time : 20.398957014083862 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos examples: 581
Target test neg examples: 2222

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.6602137088775635
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3233895768107371;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2793007008737935;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23328649407241175;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18916724063245646;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1498110457236774;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11660571223754278;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08968116396383638;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06842666944178562;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051938581046928;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039290221911838154;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
Inference time using transfer learning 0.8605678081512451
Parameter learned model CLL:-0.692509 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(C, A), haswordauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
{'': [nan, 0.24879178701129595]}
{'': [nan, 0.24879178701138563]}
{'': [nan, 0.24879178701132204]}
{'': [nan, 0.24879178701131163]}
{'': [nan, 0.24879178701132562]}
{'': [nan, 0.24879178701133703]}
{'': [nan, 0.24879178701133225]}
{'': [nan, 0.24879178701133212]}
{'': [nan, 0.24879178701138097]}
{'': [nan, 0.24879178701133148]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(C, A), haswordauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 709.4863882064819
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3441551545575258;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.5478041075133061;  // std dev = 4.315, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29690255138011334;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3782052229457276;  // std dev = 4.673, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.4768288077207307;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.247146690498353;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.6984459746020693;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.34001926937474014;  // std dev = 6.348, 175.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=111 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordvenue(B, I) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19937367766283512;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.23228051201687613;  // std dev = 4.662, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.30843319502714467;  // std dev = 4.299, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15694231532784036;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.1670534496159236;  // std dev = 4.650, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.24425728659686713;  // std dev = 4.297, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.051424342215598814;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.06821007189820738;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.02783214958150811;  // std dev = 5.247, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1214121850859716;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.3050123891101873;  // std dev = 1.197, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.1450918420025476;  // std dev = 6.209, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.04162130287751081;  // std dev = 7.527, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.22839066228426375;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07465821730094525;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.021057526455510973;  // std dev = 5.246, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09285073212259731;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.08625884815496349;  // std dev = 4.640, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.14665185395650632;  // std dev = 4.294, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03471874332830444;  // std dev = 7.525, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1797059618185123;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.015948249735960762;  // std dev = 5.415, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09342649776027477;  // std dev = 0.015, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07049226145065242;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.05682173454223592;  // std dev = 4.638, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.11899639170648856;  // std dev = 4.288, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.026593228785955318;  // std dev = 7.502, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17191951349138584;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.011338247714681978;  // std dev = 5.416, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.08580970317158733;  // std dev = 0.014, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05327696275075745;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.2157955280705806;  // std dev = 1.180, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.05706508005935016;  // std dev = 6.194, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.13632524966246456;  // std dev = 2.866, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.02120452871855679;  // std dev = 7.524, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.06834364951326545;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.013097194305318976;  // std dev = 5.242, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.040154893573991046;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.16594577476523903;  // std dev = 1.183, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.04324566765402447;  // std dev = 6.195, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.13154062318031012;  // std dev = 2.853, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.01664363054340011;  // std dev = 7.511, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.0723622507398623;  // std dev = 1.348, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.00970986175475136;  // std dev = 5.242, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
Inference time using transfer learning 1.5292339324951172
Refined model CLL: -0.674039


******************************************
Best model found
******************************************
Results 

CLL : -0.605799 

AUC ROC : 0.557607 

AUC PR : 0.246183 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 709.4863882064819 

Total Inference Time : 4.408930063247681 

Total revision time: 718.7907083034515
Best scored revision CLL: -0.674039


Results 

CLL : -0.605799 

AUC ROC : 0.557607 

AUC PR : 0.246183 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 718.8132975101471 

Total Inference Time : 4.408930063247681 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos examples: 747
Target test neg examples: 1068

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.344782829284668
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22286615874989274;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935154405685214;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1642887262433117;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13666278671669155;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11171555888479459;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09002630084157656;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0717310965916087;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665493302668148;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044448905993106524;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469622643034082;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
Inference time using transfer learning 0.8445100784301758
Parameter learned model CLL:-0.657691 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(C, A), haswordauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
{'': [nan, 0.2316985704230787]}
{'': [nan, 0.23169857042309244]}
{'': [nan, 0.23169857042312694]}
{'': [nan, 0.23169857042310815]}
{'': [nan, 0.23169857042316017]}
{'': [nan, 0.23169857042318218]}
{'': [nan, 0.23169857042308678]}
{'': [nan, 0.23169857042320033]}
{'': [nan, 0.2316985704231533]}
{'': [nan, 0.23169857042309308]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(C, A), haswordauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 885.8568828105927
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2517856350625112;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.022235622406012474;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.21829238097522888;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.12470259009449207;  // std dev = 3.505, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07951514279938432;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.056276641057215464;  // std dev = 3.650, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.0195072795646717;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.38576443858749054;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.06533753364830068;  // std dev = 4.507, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.18374639001382412;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.10814740147793038;  // std dev = 3.505, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06960532368518532;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.04892593448380705;  // std dev = 3.650, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.01707792693870001;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.3503435961481189;  // std dev = 4.330, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.0360597032175596;  // std dev = 4.542, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.15155062405279954;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.1019038718633728;  // std dev = 3.497, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07649398550675916;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.010572788794873458;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.02942720294923546;  // std dev = 6.427, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.2794696927230318;  // std dev = 4.325, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.02992043088935761;  // std dev = 4.542, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.12273063650389733;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.08689047009925016;  // std dev = 3.496, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06711175033347863;  // std dev = 1.365, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.009221645580454442;  // std dev = 7.778, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.025572821586086727;  // std dev = 6.426, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0982077481409483;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.07331033690311202;  // std dev = 3.496, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.059296219741129155;  // std dev = 1.365, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.008035007213784365;  // std dev = 7.778, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.0221597119273395;  // std dev = 6.426, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07738205633629874;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.08285324576603732;  // std dev = 3.480, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07257781886116842;  // std dev = 1.368, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.0035686246987163906;  // std dev = 7.778, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.021870383723738826;  // std dev = 6.410, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.060431589467262244;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.20128330574166442;  // std dev = 1.559, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.0040566825149815485;  // std dev = 3.392, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0030965859111856345;  // std dev = 7.778, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.01890963147621071;  // std dev = 6.410, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.046884699471766524;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.0663901465849575;  // std dev = 3.471, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06954676151747442;  // std dev = 1.340, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.01128361303243984;  // std dev = 8.451, 505.000 (wgt'ed) examples reached here.  /* #neg=418 #pos=87 */
%   | | | else return 2.67308178082303E-4;  // std dev = 5.494, 223.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(A, D) )
%   | | | then return 0.030761012170100674;  // std dev = 34.227, 4,955.000 (wgt'ed) examples reached here.  /* #neg=3,030 #pos=1,925 */
%   | | | else return 0.046233242113843304;  // std dev = 8.386, 425.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=100 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.11288042400975788;  // std dev = 4.673, 127.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=28 */
%   | | | else return 0.036139846598906664;  // std dev = 8.113, 335.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=105 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.23493586763348542;  // std dev = 3.223, 43.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   | | | else return 0.4628947112123099;  // std dev = 2.581, 42.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.0239821289945683;  // std dev = 6.477, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.16347578628404438;  // std dev = 0.146, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
Inference time using transfer learning 1.4121055603027344
Refined model CLL: -0.640028


******************************************
Best model found
******************************************
Results 

CLL : -0.677751 

AUC ROC : 0.543576 

AUC PR : 0.458807 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 885.8568828105927 

Total Inference Time : 6.029686212539673 

Total revision time: 897.4738943576813
Best scored revision CLL: -0.640028


Results 

CLL : -0.677751 

AUC ROC : 0.543576 

AUC PR : 0.458807 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 897.4964835643768 

Total Inference Time : 6.029686212539673 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos examples: 550
Target test neg examples: 500

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.978893756866455
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111321945071477;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834400110087453;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15602704447107354;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13017937030369744;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10682752122740194;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08647162920053506;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06923052182131084;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0549522535276705;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043329703588355264;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399163325643134;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
Inference time using transfer learning 0.7235856056213379
Parameter learned model CLL:-0.650857 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(C, A), haswordauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
{'': [nan, 0.22838607798553479]}
{'': [nan, 0.22838607798557076]}
{'': [nan, 0.2283860779855225]}
{'': [nan, 0.22838607798565272]}
{'': [nan, 0.22838607798564442]}
{'': [nan, 0.22838607798554508]}
{'': [nan, 0.2283860779856207]}
{'': [nan, 0.22838607798554997]}
{'': [nan, 0.22838607798564564]}
{'': [nan, 0.22838607798561553]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(C, A), haswordauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 922.7895863056183
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2282181392517563;  // std dev = 36.707, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.21069130798086477;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.5070851053122791;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.015110960415968286;  // std dev = 7.230, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.08803399257077657;  // std dev = 3.925, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.006909265678023899;  // std dev = 5.536, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19815347585533316;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1821443572831206;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.30463403419907925;  // std dev = 4.674, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.4464082749382189;  // std dev = 4.609, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06323004872688665;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032666702177892644;  // std dev = 8.054, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return 8.100339195512078E-4;  // std dev = 5.548, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16808795298651227;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.15483203266496434;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2497725814972297;  // std dev = 4.671, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3653803909894089;  // std dev = 4.604, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.06399301267906284;  // std dev = 1.658, 36.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | | | else return 0.030484675591905763;  // std dev = 8.051, 446.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=79 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.00226285781766762;  // std dev = 5.534, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.12553353292333844;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13967524500406553;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1283611316378811;  // std dev = 8.212, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.18354236436032442;  // std dev = 4.656, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.30011734151408936;  // std dev = 4.585, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.058782521002084365;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.027417299209186615;  // std dev = 8.048, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.002359202700002857;  // std dev = 5.544, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11398341070029168;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.10525038208708755;  // std dev = 8.213, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14128681632488152;  // std dev = 4.654, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.23024351682844163;  // std dev = 4.582, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.051859932665773954;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02388682795350593;  // std dev = 8.048, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.0020647904260743927;  // std dev = 5.544, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.2281084052826149;  // std dev = 1.725, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.4357791751928057;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.09068670108632819;  // std dev = 37.541, 6,056.000 (wgt'ed) examples reached here.  /* #neg=3,824 #pos=2,232 */
%   | | | else return 0.1418527056509817;  // std dev = 6.545, 182.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.008889016952180619;  // std dev = 7.218, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.06296979687204476;  // std dev = 3.918, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.004178994278060008;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1119477281023825;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07300286372927374;  // std dev = 36.699, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.06579282616736205;  // std dev = 8.216, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06067932412913757;  // std dev = 4.644, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.15032151880898117;  // std dev = 4.571, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04732038002199308;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.01979138328599633;  // std dev = 8.048, 450.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=79 */
%   | | | else return -0.0044012384605502655;  // std dev = 5.533, 245.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.41553714195275954;  // std dev = 2.696, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return -0.031389418072114095;  // std dev = 4.541, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.05657652005956566;  // std dev = 37.166, 5,937.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=2,187 */
%   | | | else return 0.08091040807480301;  // std dev = 6.500, 180.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=105 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.06525724943182795;  // std dev = 1.656, 36.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | | | else return 0.020418314108928436;  // std dev = 8.036, 446.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=79 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0029774228089221133;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.10089245350600895;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04503726094526854;  // std dev = 36.668, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.04052613541860331;  // std dev = 8.217, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.025094699743534035;  // std dev = 4.641, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.09429337430665855;  // std dev = 4.573, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.044010128875676936;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.017717666225815693;  // std dev = 8.035, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.00713193138709568;  // std dev = 5.540, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.30908377888717664;  // std dev = 2.695, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return -0.0343828933238515;  // std dev = 4.539, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.034415696984915777;  // std dev = 37.166, 5,937.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=2,187 */
%   | | | else return 0.04605293645904339;  // std dev = 6.494, 180.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=105 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.06155018900741927;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.017915113877920264;  // std dev = 8.030, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.00752954539322986;  // std dev = 5.536, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
Inference time using transfer learning 1.660506010055542
Refined model CLL: -0.635581


******************************************
Best model found
******************************************
Results 

CLL : -0.74987 

AUC ROC : 0.635931 

AUC PR : 0.628757 

Precision : 0.896552 

Recall : 0.047273 

F1 : 0.08981 

Total Learning Time : 922.7895863056183 

Total Inference Time : 23.891592025756836 

Total revision time: 953.0190572738647
Best scored revision CLL: -0.635581


Results 

CLL : -0.74987 

AUC ROC : 0.635931 

AUC PR : 0.628757 

Precision : 0.896552 

Recall : 0.047273 

F1 : 0.08981 

Total Learning Time : 953.0416464805603 

Total Inference Time : 23.891592025756836 

Run: 3

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.262605667114258
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23749878473433458;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060618178036594;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17453024670666556;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446407501339931;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11767244800090106;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430962074455004;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.074707177635281;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865473052223055;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574473720619161;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549889774086067;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning 0.6995093822479248
Parameter learned model CLL:-0.665378 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(C, A), haswordauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
{'': [nan, 0.23544354121679714]}
{'': [nan, 0.23544354121687253]}
{'': [nan, 0.23544354121689864]}
{'': [nan, 0.23544354121683903]}
{'': [nan, 0.2354435412168111]}
{'': [nan, 0.235443541216926]}
{'': [nan, 0.23544354121692726]}
{'': [nan, 0.23544354121684707]}
{'': [nan, 0.23544354121692693]}
{'': [nan, 0.23544354121681993]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(C, A), haswordauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 1039.030832529068
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2559515161947286;  // std dev = 37.062, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.23063215657601857;  // std dev = 8.346, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5724346493852271;  // std dev = 3.964, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.06760839455897227;  // std dev = 7.001, 296.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=62 */
%   | | | else return 0.04035232493002018;  // std dev = 5.930, 236.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=43 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2219198343638166;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.19893044877511365;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3578878444734629;  // std dev = 4.780, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5042038727151713;  // std dev = 3.938, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.05742828982964905;  // std dev = 7.665, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return 0.030171111907377375;  // std dev = 5.041, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03673101633396252;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18741251482675658;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.1685236708029212;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2903869442291748;  // std dev = 4.777, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.40960545966947604;  // std dev = 3.930, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.13476937700759767;  // std dev = 3.364, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.03284935612678079;  // std dev = 8.508, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02972048696584876;  // std dev = 5.925, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.154646444444368;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.13877229675309694;  // std dev = 8.358, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21276715551903777;  // std dev = 4.765, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.33529130189735984;  // std dev = 3.900, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13182164589385853;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.08067015192563701;  // std dev = 1.360, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.046383588693908746;  // std dev = 3.519, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.025954567956928888;  // std dev = 9.642, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12507102235802825;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.11301079645083856;  // std dev = 8.359, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.16116179168107542;  // std dev = 4.763, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.25581663152892176;  // std dev = 3.895, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10989290830638034;  // std dev = 3.353, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.02422931900455779;  // std dev = 8.498, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07456565614773725;  // std dev = 1.348, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.02420350436413468;  // std dev = 5.770, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09961342423151819;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.0899163307009866;  // std dev = 8.363, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.10960654337929138;  // std dev = 4.757, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.2070837498130332;  // std dev = 3.877, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.03986713157881985;  // std dev = 7.653, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return 0.0042893290821034305;  // std dev = 4.999, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.01953383599475224;  // std dev = 5.922, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.10264029613826044;  // std dev = 0.016, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0783575713624531;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.07134003523012979;  // std dev = 8.364, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.08066329609033358;  // std dev = 4.757, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.15811656424851994;  // std dev = 3.876, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10508343834984996;  // std dev = 3.349, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07792008193888535;  // std dev = 1.361, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.029435076059274205;  // std dev = 3.503, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.015751854996031402;  // std dev = 9.638, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06110814766171405;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.05571808877883225;  // std dev = 8.366, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.0514932631686941;  // std dev = 4.754, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.13096078914647838;  // std dev = 3.866, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08866357242150477;  // std dev = 3.348, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.06832542875002132;  // std dev = 1.361, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.024998377088521886;  // std dev = 3.502, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.013544628472196741;  // std dev = 9.638, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04732794080126448;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.04353629497715651;  // std dev = 8.367, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.3339831179964738;  // std dev = 0.886, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.05313143460349652;  // std dev = 6.028, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.08281327191794306;  // std dev = 3.338, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.010980705712209694;  // std dev = 8.479, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.10794025364800558;  // std dev = 0.947, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.013510694536362819;  // std dev = 5.843, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.036494598551081836;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.03356677994741378;  // std dev = 8.369, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.02007309680046645;  // std dev = 4.737, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.0874373895972662;  // std dev = 3.854, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.026290514892205533;  // std dev = 7.632, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return -0.006973975859226139;  // std dev = 4.981, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07511012524656861;  // std dev = 1.348, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.01340606386217304;  // std dev = 5.764, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
Inference time using transfer learning 1.8415019512176514
Refined model CLL: -0.65049


******************************************
Best model found
******************************************
Results 

CLL : -0.62465 

AUC ROC : 0.582541 

AUC PR : 0.414031 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1039.030832529068 

Total Inference Time : 27.755987882614136 

Total revision time: 1073.3943972587585
Best scored revision CLL: -0.65049


Results 

CLL : -0.62465 

AUC ROC : 0.582541 

AUC PR : 0.414031 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1073.4164006710052 

Total Inference Time : 27.755987882614136 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.731791734695435
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19217629976339767;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16713638120911187;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14258842882632106;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11954222017840668;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09871555462348185;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0804912793883634;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495809409335633;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05199278934611344;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041346460903546045;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03271420126321413;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
Inference time using transfer learning 0.6806566715240479
Parameter learned model CLL:-0.63853 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(C, A), haswordauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
{'': [nan, 0.22245308431952357]}
{'': [nan, 0.22245308431959404]}
{'': [nan, 0.22245308431958877]}
{'': [nan, 0.22245308431962857]}
{'': [nan, 0.22245308431955624]}
{'': [nan, 0.22245308431956373]}
{'': [nan, 0.22245308431964844]}
{'': [nan, 0.2224530843195216]}
{'': [nan, 0.22245308431962652]}
{'': [nan, 0.22245308431955077]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(C, A), haswordauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 801.1046380996704
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21330135701834016;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.2171232940738674;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.4250279159912295;  // std dev = 6.209, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001355197131893661;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1852931461937749;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.18876403158703908;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3250797676554728;  // std dev = 4.477, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.42515523560317653;  // std dev = 4.476, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12034593308451501;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07683979386435784;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.05628962009248211;  // std dev = 3.652, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0011903099343518006;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.4686228361433862;  // std dev = 2.001, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.15671398474667977;  // std dev = 35.925, 5,641.000 (wgt'ed) examples reached here.  /* #neg=3,642 #pos=1,999 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5163560461381884;  // std dev = 1.244, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.2953773301957146;  // std dev = 6.190, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1045962743970368;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06726361331927284;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0025760352738960707;  // std dev = 8.036, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006588670209165278;  // std dev = 6.051, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13139836867308802;  // std dev = 34.986, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.13298232854065867;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.19096778712337123;  // std dev = 4.449, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.29266997214746515;  // std dev = 4.458, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1038929318746234;  // std dev = 3.508, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0691442827387355;  // std dev = 1.365, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.04066377358700953;  // std dev = 3.637, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0015448782031845846;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10774830178936155;  // std dev = 34.986, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.10896551138401535;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return 0.49373770955655694;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.18145515252078578;  // std dev = 6.293, 164.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=94 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.08901592615361113;  // std dev = 3.507, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06087009173347084;  // std dev = 1.365, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.03496000033724059;  // std dev = 3.636, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001356715533571568;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), venue(F, B) )
%   | | | then return 0.6117299210351119;  // std dev = 0.271, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3427674682924735;  // std dev = 2.026, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.08606631918796159;  // std dev = 35.908, 5,638.000 (wgt'ed) examples reached here.  /* #neg=3,642 #pos=1,996 */
%   | | | else return 0.13754754857771095;  // std dev = 6.292, 164.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=94 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.20019881429667355;  // std dev = 1.590, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.013871334657251497;  // std dev = 3.406, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -2.0389333679289432E-4;  // std dev = 8.019, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.005866042160354457;  // std dev = 6.053, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0697374767197949;  // std dev = 34.972, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.06930578854994851;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06739792695028395;  // std dev = 4.435, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.14370625659467176;  // std dev = 4.445, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07031874188683716;  // std dev = 3.502, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.05958596401992387;  // std dev = 1.338, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.029826597576556882;  // std dev = 3.636, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0014477695835342752;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05530910849849087;  // std dev = 34.972, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.05483755725011591;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.040945976975368725;  // std dev = 4.431, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.11717808073094636;  // std dev = 4.438, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07374020162181276;  // std dev = 3.489, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07576946125645002;  // std dev = 1.370, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.021565736250159433;  // std dev = 3.610, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0012715290806409958;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04357360554193983;  // std dev = 34.972, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.04312617202620898;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.19376207463894796;  // std dev = 1.206, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.05183694098020163;  // std dev = 6.150, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.061875858091409205;  // std dev = 3.487, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06638420806588709;  // std dev = 1.369, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.018316655642326644;  // std dev = 3.610, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0011168934703181398;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03415510232297154;  // std dev = 34.971, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.03372285050973762;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.014348016542307858;  // std dev = 4.421, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.07509199065066885;  // std dev = 4.439, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.18713593461070915;  // std dev = 1.583, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.004989557157336023;  // std dev = 3.375, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.002839622933306535;  // std dev = 7.955, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.00674090812439172;  // std dev = 6.117, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
Inference time using transfer learning 2.030369520187378
Refined model CLL: -0.621328


******************************************
Best model found
******************************************
Results 

CLL : -0.826058 

AUC ROC : 0.50602 

AUC PR : 0.608951 

Precision : 0.75 

Recall : 0.038911 

F1 : 0.073983 

Total Learning Time : 801.1046380996704 

Total Inference Time : 18.80329418182373 

Total revision time: 825.8860714435577
Best scored revision CLL: -0.621328


Results 

CLL : -0.826058 

AUC ROC : 0.50602 

AUC PR : 0.608951 

Precision : 0.75 

Recall : 0.038911 

F1 : 0.073983 

Total Learning Time : 825.9080748558044 

Total Inference Time : 18.80329418182373 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos examples: 581
Target test neg examples: 2222

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.573758840560913
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3233895768107371;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2793007008737935;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23328649407241175;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18916724063245646;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1498110457236774;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11660571223754278;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08968116396383638;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06842666944178562;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051938581046928;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039290221911838154;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
Inference time using transfer learning 0.8610811233520508
Parameter learned model CLL:-0.692509 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(C, A), haswordauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
{'': [nan, 0.24879178701129595]}
{'': [nan, 0.24879178701138563]}
{'': [nan, 0.24879178701132204]}
{'': [nan, 0.24879178701131163]}
{'': [nan, 0.24879178701132562]}
{'': [nan, 0.24879178701133703]}
{'': [nan, 0.24879178701133225]}
{'': [nan, 0.24879178701133212]}
{'': [nan, 0.24879178701138097]}
{'': [nan, 0.24879178701133148]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(C, A), haswordauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 588.1051552295685
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3441551545575258;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.5478041075133061;  // std dev = 4.315, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29690255138011334;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.37820522294572756;  // std dev = 4.673, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.4768288077207307;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.247146690498353;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3073171177232837;  // std dev = 4.671, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.38658450978812625;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.7133674582047752;  // std dev = 4.21e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.48465035582335547;  // std dev = 1.227, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.19798627229309015;  // std dev = 33.473, 4,486.000 (wgt'ed) examples reached here.  /* #neg=2,312 #pos=2,174 */
%   | | | else return 0.2634479061240529;  // std dev = 6.337, 175.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=111 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15690236887502418;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.16737337957816528;  // std dev = 4.652, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.2451002342995651;  // std dev = 4.301, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.051424342215598905;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.06821007189820738;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.02783214958150811;  // std dev = 5.247, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1213855481706736;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.3150359215619556;  // std dev = 1.206, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.1449443647284237;  // std dev = 6.209, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.04162130287751094;  // std dev = 7.527, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.22839066228426375;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07465821730094525;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.021057526455510994;  // std dev = 5.246, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09283448716391003;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.08629368965772949;  // std dev = 4.641, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.14720468781542997;  // std dev = 4.297, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03471874332830441;  // std dev = 7.525, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1797059618185123;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.01594824973596078;  // std dev = 5.415, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09342649776027478;  // std dev = 0.015, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.4569334144578344;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.06970932313528297;  // std dev = 33.497, 4,493.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,179 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.24029725658928802;  // std dev = 1.187, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.07831213912580355;  // std dev = 6.200, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.02659322878595539;  // std dev = 7.502, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17191951349138584;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.06777294304188576;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.014249584286302807;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.208995146899954;  // std dev = 4.007, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.1609518333330021;  // std dev = 2.778, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.052906880414716036;  // std dev = 33.118, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.0591212874050514;  // std dev = 6.200, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.13682433256477528;  // std dev = 2.864, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.02157735807032234;  // std dev = 7.522, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.06923665802894202;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.012802064843005851;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), venue(F, B) )
%   | | | then return 0.35725516101320504;  // std dev = 0.204, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2610251141791586;  // std dev = 1.170, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.03926181415401722;  // std dev = 33.448, 4,486.000 (wgt'ed) examples reached here.  /* #neg=2,312 #pos=2,174 */
%   | | | else return 0.04651565999830877;  // std dev = 6.311, 175.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=111 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.1315028928406824;  // std dev = 2.853, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.016676853046868886;  // std dev = 7.511, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.006633248604405723;  // std dev = 5.414, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.08535272928885211;  // std dev = 0.025, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
Inference time using transfer learning 1.5486154556274414
Refined model CLL: -0.672562


******************************************
Best model found
******************************************
Results 

CLL : -0.603695 

AUC ROC : 0.560112 

AUC PR : 0.2486 

Precision : 0.47619 

Recall : 0.034423 

F1 : 0.064205 

Total Learning Time : 588.1051552295685 

Total Inference Time : 4.894120216369629 

Total revision time: 597.7998094558716
Best scored revision CLL: -0.672562


Results 

CLL : -0.603695 

AUC ROC : 0.560112 

AUC PR : 0.2486 

Precision : 0.47619 

Recall : 0.034423 

F1 : 0.064205 

Total Learning Time : 597.8218128681183 

Total Inference Time : 4.894120216369629 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos examples: 747
Target test neg examples: 1068

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.286915302276611
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22286615874989274;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935154405685214;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1642887262433117;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13666278671669155;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11171555888479459;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09002630084157656;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0717310965916087;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665493302668148;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044448905993106524;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469622643034082;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
Inference time using transfer learning 0.7792835235595703
Parameter learned model CLL:-0.657691 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(C, A), haswordauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
{'': [nan, 0.2316985704230787]}
{'': [nan, 0.23169857042309244]}
{'': [nan, 0.23169857042312694]}
{'': [nan, 0.23169857042310815]}
{'': [nan, 0.23169857042316017]}
{'': [nan, 0.23169857042318218]}
{'': [nan, 0.23169857042308678]}
{'': [nan, 0.23169857042320033]}
{'': [nan, 0.2316985704231533]}
{'': [nan, 0.23169857042309308]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(C, A), haswordauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 908.0549495220184
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2517856350625112;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.018505282538265628;  // std dev = 7.775, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.04094463402424335;  // std dev = 6.456, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.21829238097522888;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.12800246769009244;  // std dev = 3.503, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07644847710697812;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.05627664105721549;  // std dev = 3.650, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.019061048961767565;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.38576443858749054;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.06533753364830068;  // std dev = 4.507, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.18374639001382412;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.11129332679128007;  // std dev = 3.503, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06707326593972926;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.01220988015008433;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.0333548851396885;  // std dev = 6.439, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.3503435961481187;  // std dev = 4.330, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.036059703217559635;  // std dev = 4.542, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.15155062405279957;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.10435957839956113;  // std dev = 3.495, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07458556283848432;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.010651144312064846;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.028664619958566718;  // std dev = 6.429, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.27946969272303174;  // std dev = 4.325, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.029920430889357613;  // std dev = 4.542, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.09194198190907539;  // std dev = 5.814, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   | | | else return 0.12365314300861101;  // std dev = 34.798, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,997 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.09200416997631702;  // std dev = 3.492, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06336343913269057;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.008024298828812688;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.026079272012431844;  // std dev = 6.428, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0982080048973163;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.07790019841531995;  // std dev = 3.491, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.05614591469713575;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.006985500015977097;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.022607152195070014;  // std dev = 6.427, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.3889947647271525;  // std dev = 2.274, 27.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=19 */
%   | | | else return 0.04743118703714268;  // std dev = 5.831, 154.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=56 */
%   | | else return 0.0766545847152033;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.08286222166705753;  // std dev = 3.478, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07278097412688722;  // std dev = 1.369, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.004940627611537103;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.019761544379305447;  // std dev = 6.413, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.25139478100201823;  // std dev = 3.688, 59.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=36 */
%   | | | else return -0.007554717587923859;  // std dev = 4.950, 122.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=39 */
%   | | else return 0.059859730502551674;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.2034124842235672;  // std dev = 1.563, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.0021571663492774167;  // std dev = 3.378, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.004341298711931138;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.01741657687058547;  // std dev = 6.418, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.046850051688176464;  // std dev = 0.487, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.19992911371522396;  // std dev = 1.558, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 8.953984259869087E-4;  // std dev = 3.383, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.0026614191159670983;  // std dev = 7.775, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.01605727299583211;  // std dev = 6.409, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.030805202023842727;  // std dev = 34.197, 4,955.000 (wgt'ed) examples reached here.  /* #neg=3,030 #pos=1,925 */
%   | | | else return 0.04641452157151712;  // std dev = 8.388, 425.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=100 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return -0.11285699393084915;  // std dev = 4.675, 127.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=28 */
%   | | | else return 0.03721111085742778;  // std dev = 8.108, 335.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=105 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.0644104618816365;  // std dev = 7.109, 293.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=75 */
%   | | | else return -0.10398922793117102;  // std dev = 1.678, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordvenue(B, K) )
%   | | | then return 0.4593408330732232;  // std dev = 2.567, 42.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | | | else return -0.16636302467036845;  // std dev = 0.134, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
Inference time using transfer learning 1.4405744075775146
Refined model CLL: -0.639362


******************************************
Best model found
******************************************
Results 

CLL : -0.677961 

AUC ROC : 0.543585 

AUC PR : 0.458452 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 908.0549495220184 

Total Inference Time : 6.451207399368286 

Total revision time: 920.0285482406616
Best scored revision CLL: -0.639362


Results 

CLL : -0.677961 

AUC ROC : 0.543585 

AUC PR : 0.458452 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 920.0505516529083 

Total Inference Time : 6.451207399368286 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos examples: 550
Target test neg examples: 500

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.356594562530518
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111321945071477;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834400110087453;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15602704447107354;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13017937030369744;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10682752122740194;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08647162920053506;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06923052182131084;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0549522535276705;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043329703588355264;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399163325643134;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
Inference time using transfer learning 0.7449796199798584
Parameter learned model CLL:-0.650857 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(C, A), haswordauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
{'': [nan, 0.22838607798553479]}
{'': [nan, 0.22838607798557076]}
{'': [nan, 0.2283860779855225]}
{'': [nan, 0.22838607798565272]}
{'': [nan, 0.22838607798564442]}
{'': [nan, 0.22838607798554508]}
{'': [nan, 0.2283860779856207]}
{'': [nan, 0.22838607798554997]}
{'': [nan, 0.22838607798564564]}
{'': [nan, 0.22838607798561553]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(C, A), haswordauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 1124.9835143089294
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2282181392517563;  // std dev = 36.707, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.21069130798086477;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.5070851053122791;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.015110960415968286;  // std dev = 7.230, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.08803399257077657;  // std dev = 3.925, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.006909265678023899;  // std dev = 5.536, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19815347585533305;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1821443572831206;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.30463403419907925;  // std dev = 4.674, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.446408274938219;  // std dev = 4.609, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06323004872688665;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.06261940488996087;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.025921138191458297;  // std dev = 9.632, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1680879529865122;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.15483203266496462;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.24977258149722978;  // std dev = 4.671, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.365380390989409;  // std dev = 4.604, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05559667967238913;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.055084618573868996;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.022691409711711085;  // std dev = 9.632, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13967524500406556;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1283611316378811;  // std dev = 8.212, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.18354236436032442;  // std dev = 4.656, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3001173415140894;  // std dev = 4.585, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.048734191123617925;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.027331693918668073;  // std dev = 8.050, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.0037736065018017582;  // std dev = 5.545, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11398341070029148;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.10525038208708748;  // std dev = 8.213, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14128681632488146;  // std dev = 4.654, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.23024351682844124;  // std dev = 4.582, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.008672590053361306;  // std dev = 7.208, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.07769639674183358;  // std dev = 3.919, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.004023578114489297;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.13044701690204674;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09170385491611782;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.08453605238431226;  // std dev = 8.215, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09526461326997687;  // std dev = 4.645, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.18546709000766626;  // std dev = 4.571, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05282260693050084;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02429296784813311;  // std dev = 8.038, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.007114643491062609;  // std dev = 5.542, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07291392488816674;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.06763151292090491;  // std dev = 8.216, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07112594416158732;  // std dev = 4.644, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.14041504467441787;  // std dev = 4.570, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.005779452181271362;  // std dev = 7.206, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.06355230938562256;  // std dev = 3.919, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.0031954200565753204;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.11562041912955656;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.057480512491567416;  // std dev = 36.704, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.05333152949010177;  // std dev = 8.217, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.044010483865084875;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.1147056517394621;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.04759631069944492;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.019094266542891793;  // std dev = 8.034, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.006033081517959315;  // std dev = 5.540, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04499836200047424;  // std dev = 36.704, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.042030807820199904;  // std dev = 8.218, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.0319510722825438;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.08771320653817369;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.042353859460143854;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.0496855555775848;  // std dev = 1.661, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.011975493798615127;  // std dev = 9.613, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.035061421409154005;  // std dev = 36.704, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.03272200386618068;  // std dev = 8.219, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.016733153509168187;  // std dev = 4.635, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.07331717420310022;  // std dev = 4.560, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.044142164290211554;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.01798671533819622;  // std dev = 8.028, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.010309111674328054;  // std dev = 5.539, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
Inference time using transfer learning 1.8207616806030273
Refined model CLL: -0.636735


******************************************
Best model found
******************************************
Results 

CLL : -0.752625 

AUC ROC : 0.639651 

AUC PR : 0.639831 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1124.9835143089294 

Total Inference Time : 27.50066590309143 

Total revision time: 1159.2508640289307
Best scored revision CLL: -0.636735


Results 

CLL : -0.752625 

AUC ROC : 0.639651 

AUC PR : 0.639831 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1159.2728674411774 

Total Inference Time : 27.50066590309143 

Run: 4

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.309150695800781
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23749878473433458;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060618178036594;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17453024670666556;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446407501339931;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11767244800090106;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430962074455004;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.074707177635281;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865473052223055;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574473720619161;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549889774086067;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning 0.7446565628051758
Parameter learned model CLL:-0.665378 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(C, A), haswordauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
{'': [nan, 0.23544354121679714]}
{'': [nan, 0.23544354121687253]}
{'': [nan, 0.23544354121689864]}
{'': [nan, 0.23544354121683903]}
{'': [nan, 0.2354435412168111]}
{'': [nan, 0.235443541216926]}
{'': [nan, 0.23544354121692726]}
{'': [nan, 0.23544354121684707]}
{'': [nan, 0.23544354121692693]}
{'': [nan, 0.23544354121681993]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(C, A), haswordauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 1125.407166481018
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2559515161947286;  // std dev = 37.062, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.23063215657601857;  // std dev = 8.346, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5724346493852271;  // std dev = 3.964, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14905802600860327;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.04473174432383054;  // std dev = 8.508, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2219198343638166;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.19893044877511365;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.35788784447346306;  // std dev = 4.780, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5042038727151713;  // std dev = 3.938, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14309509431928658;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.038139440494516674;  // std dev = 8.501, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.035795635786599146;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1874125148267565;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.16852367080292127;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2903869442291748;  // std dev = 4.777, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.409605459669476;  // std dev = 3.930, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1241486430000413;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.03325401102763202;  // std dev = 8.501, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.031226012289467045;  // std dev = 5.927, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15464644444436804;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.13877229675309688;  // std dev = 8.358, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21276715551903752;  // std dev = 4.765, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.33529130189735995;  // std dev = 3.900, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1190873305740258;  // std dev = 3.356, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.027779231969854247;  // std dev = 8.494, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.10071049980613894;  // std dev = 0.955, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.027413238102116634;  // std dev = 5.849, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12507102235802828;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.11301079645083846;  // std dev = 8.359, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1611617916810754;  // std dev = 4.763, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.2558166315289217;  // std dev = 3.895, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10482738960563374;  // std dev = 3.345, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.02406682743456642;  // std dev = 8.493, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02286355421025842;  // std dev = 5.929, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.10169161522662762;  // std dev = 0.017, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09961342423151819;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.08991633070098663;  // std dev = 8.363, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.10960654337929146;  // std dev = 4.757, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.20708374981303304;  // std dev = 3.877, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.038281962905494224;  // std dev = 7.647, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return 0.005744458560264434;  // std dev = 4.992, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.019753532084376864;  // std dev = 5.929, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.09277300618478924;  // std dev = 0.016, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07835757136245307;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.07134003523012979;  // std dev = 8.364, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.3776149864265999;  // std dev = 0.891, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.10267733367002739;  // std dev = 6.045, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09242001559718843;  // std dev = 3.345, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.017021111021694714;  // std dev = 8.488, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.09838226120104707;  // std dev = 0.953, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.01658489034278438;  // std dev = 5.844, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06110814766171417;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.055718088778832366;  // std dev = 8.366, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.32859468583488016;  // std dev = 0.882, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.07531533486234075;  // std dev = 6.034, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07731421671587398;  // std dev = 3.344, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.014613251684674984;  // std dev = 8.487, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.08569922538117374;  // std dev = 0.953, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.014298334530796776;  // std dev = 5.844, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.047327940801264415;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.04353629497715654;  // std dev = 8.367, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.029012642011795788;  // std dev = 4.721, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.11125598347323629;  // std dev = 3.862, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.08584033227760998;  // std dev = 3.320, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.010260029451150846;  // std dev = 8.478, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.12512079196529463;  // std dev = 0.954, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.015230274412331664;  // std dev = 5.842, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03649459855108186;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.03356677994741377;  // std dev = 8.369, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.01232210890162166;  // std dev = 4.719, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.096843157306572;  // std dev = 3.850, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.06580290413638444;  // std dev = 3.325, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.009665292787656108;  // std dev = 8.481, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.010196023682904943;  // std dev = 5.921, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.08343467271197531;  // std dev = 0.037, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
Inference time using transfer learning 1.719909906387329
Refined model CLL: -0.650424


******************************************
Best model found
******************************************
Results 

CLL : -0.624461 

AUC ROC : 0.582452 

AUC PR : 0.415112 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1125.407166481018 

Total Inference Time : 26.284270763397217 

Total revision time: 1158.3133730888367
Best scored revision CLL: -0.650424


Results 

CLL : -0.624461 

AUC ROC : 0.582452 

AUC PR : 0.415112 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1158.3360595703125 

Total Inference Time : 26.284270763397217 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.793994903564453
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19217629976339767;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16713638120911187;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14258842882632106;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11954222017840668;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09871555462348185;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0804912793883634;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495809409335633;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05199278934611344;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041346460903546045;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03271420126321413;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
Inference time using transfer learning 0.7619979381561279
Parameter learned model CLL:-0.63853 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(C, A), haswordauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
{'': [nan, 0.22245308431952357]}
{'': [nan, 0.22245308431959404]}
{'': [nan, 0.22245308431958877]}
{'': [nan, 0.22245308431962857]}
{'': [nan, 0.22245308431955624]}
{'': [nan, 0.22245308431956373]}
{'': [nan, 0.22245308431964844]}
{'': [nan, 0.2224530843195216]}
{'': [nan, 0.22245308431962652]}
{'': [nan, 0.22245308431955077]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(C, A), haswordauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 961.2456374168396
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21330135701834016;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.2171232940738674;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.4250279159912295;  // std dev = 6.209, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001355197131893661;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1852931461937749;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.18876403158703922;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5861333969918011;  // std dev = 1.247, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.36327055714680573;  // std dev = 6.203, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12034593308451501;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07683979386435782;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0034512830147094453;  // std dev = 8.041, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.00678328010591943;  // std dev = 6.050, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15754756052067012;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.16042305417489877;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2566020382312614;  // std dev = 4.462, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.357386763876413;  // std dev = 4.468, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11114943689428064;  // std dev = 3.514, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.061772009516298104;  // std dev = 1.363, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.001877772656438271;  // std dev = 8.036, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006035082404866447;  // std dev = 6.051, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1313659802989421;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.1338033667505171;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1909692512806418;  // std dev = 4.449, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.29270920720177157;  // std dev = 4.457, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09574303520256384;  // std dev = 3.514, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.054683344102783665;  // std dev = 1.363, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0016455034371986416;  // std dev = 8.036, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.0052950383976307835;  // std dev = 6.051, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10772301980933431;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.10960511197842084;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14679887142721507;  // std dev = 4.447, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.22502644346895245;  // std dev = 4.456, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10346535789754059;  // std dev = 3.500, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07092761911745639;  // std dev = 1.368, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -8.107133130327598E-4;  // std dev = 7.967, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.005783555718260265;  // std dev = 6.120, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08711677196357488;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.08864762197227534;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.3077086839646279;  // std dev = 1.232, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.13112767521828259;  // std dev = 6.160, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08862746262091498;  // std dev = 3.499, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.062361805165505636;  // std dev = 1.368, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -7.087604573771445E-4;  // std dev = 7.967, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.0050781965717959674;  // std dev = 6.120, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06968385538081798;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.07081042840251583;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06667936582595037;  // std dev = 4.429, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.14442370176151761;  // std dev = 4.446, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08158530771683932;  // std dev = 3.496, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.05226794535572301;  // std dev = 1.368, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.032560654887208836;  // std dev = 3.626, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.002953698376551361;  // std dev = 9.362, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05525671877644;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.05613048194530428;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.2388642504782629;  // std dev = 1.222, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.07009251824057187;  // std dev = 6.145, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.06881106283937315;  // std dev = 3.495, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.04661666490252591;  // std dev = 1.368, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.00279891200829145;  // std dev = 7.960, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.006140415835110287;  // std dev = 6.122, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0435283733055788;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.044151104462696;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.028451621316761638;  // std dev = 4.418, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.09050491181647545;  // std dev = 4.443, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.19395399758823045;  // std dev = 1.571, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.008251226086237158;  // std dev = 3.399, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.024477643096853657;  // std dev = 3.613, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0026640509163961537;  // std dev = 9.362, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03411263494702463;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.03459452826638882;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.01345816216265069;  // std dev = 4.414, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.07569355331196287;  // std dev = 4.440, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.053034607888895434;  // std dev = 3.487, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0449801873278303;  // std dev = 1.369, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.023858371303962615;  // std dev = 3.618, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.002337577910332863;  // std dev = 9.362, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
Inference time using transfer learning 2.2471885681152344
Refined model CLL: -0.621862


******************************************
Best model found
******************************************
Results 

CLL : -0.825988 

AUC ROC : 0.505922 

AUC PR : 0.608642 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 961.2456374168396 

Total Inference Time : 21.787265062332153 

Total revision time: 989.2169103622437
Best scored revision CLL: -0.621862


Results 

CLL : -0.825988 

AUC ROC : 0.505922 

AUC PR : 0.608642 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 989.2395968437195 

Total Inference Time : 21.787265062332153 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos examples: 581
Target test neg examples: 2222

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.593735694885254
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3233895768107371;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2793007008737935;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23328649407241175;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18916724063245646;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1498110457236774;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11660571223754278;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08968116396383638;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06842666944178562;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051938581046928;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039290221911838154;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
Inference time using transfer learning 0.8436064720153809
Parameter learned model CLL:-0.692509 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(C, A), haswordauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
{'': [nan, 0.24879178701129595]}
{'': [nan, 0.24879178701138563]}
{'': [nan, 0.24879178701132204]}
{'': [nan, 0.24879178701131163]}
{'': [nan, 0.24879178701132562]}
{'': [nan, 0.24879178701133703]}
{'': [nan, 0.24879178701133225]}
{'': [nan, 0.24879178701133212]}
{'': [nan, 0.24879178701138097]}
{'': [nan, 0.24879178701133148]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(C, A), haswordauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 650.7662434577942
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3441551545575258;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.5478041075133061;  // std dev = 4.315, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29690255138011334;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3782052229457276;  // std dev = 4.673, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.4768288077207307;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.247146690498353;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.30731711772328374;  // std dev = 4.671, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.3865845097881259;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19937367766283512;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.23066939715587165;  // std dev = 4.657, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.30994712392327534;  // std dev = 4.308, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15694231532784036;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.175627123734989;  // std dev = 4.656, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.2352262428041224;  // std dev = 4.308, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.0514243422155989;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02466453237780332;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1214121850859716;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.33444050264228425;  // std dev = 1.222, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.14333731770753289;  // std dev = 6.203, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.041033921494960164;  // std dev = 7.530, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.2284030407915789;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.017491416206777653;  // std dev = 5.419, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09285073212259731;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.281913546277411;  // std dev = 1.201, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.1058690756114885;  // std dev = 6.199, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03421308315076533;  // std dev = 7.529, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17971754005858212;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.015042597374062692;  // std dev = 5.419, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.25114171131274327;  // std dev = 4.122, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.12977695923149232;  // std dev = 2.869, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06956916656562182;  // std dev = 33.118, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.07967424792016019;  // std dev = 6.199, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.026161070506565406;  // std dev = 7.505, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1721803758904671;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.010507365000831666;  // std dev = 5.420, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.07324622576333704;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.22937257906720673;  // std dev = 4.085, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.1367084191293813;  // std dev = 2.950, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.05230608657023132;  // std dev = 33.092, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.05841819817203443;  // std dev = 6.196, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.13598974072007902;  // std dev = 2.869, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.020900619972444745;  // std dev = 7.526, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07865131097577113;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.014502618874549702;  // std dev = 5.240, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.04005368262644923;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.017211167916387764;  // std dev = 4.636, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.08813974003294087;  // std dev = 4.297, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.13134038525315384;  // std dev = 2.856, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.016397361323422063;  // std dev = 7.512, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.08284944755282171;  // std dev = 1.348, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.011149100567742409;  // std dev = 5.240, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
Inference time using transfer learning 1.5467116832733154
Refined model CLL: -0.672737


******************************************
Best model found
******************************************
Results 

CLL : -0.602568 

AUC ROC : 0.559597 

AUC PR : 0.252185 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 650.7662434577942 

Total Inference Time : 4.502864122390747 

Total revision time: 660.0666875839233
Best scored revision CLL: -0.672737


Results 

CLL : -0.602568 

AUC ROC : 0.559597 

AUC PR : 0.252185 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 660.0893740653992 

Total Inference Time : 4.502864122390747 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos examples: 747
Target test neg examples: 1068

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.325027942657471
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22286615874989274;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935154405685214;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1642887262433117;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13666278671669155;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11171555888479459;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09002630084157656;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0717310965916087;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665493302668148;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044448905993106524;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469622643034082;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
Inference time using transfer learning 0.7920286655426025
Parameter learned model CLL:-0.657691 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(C, A), haswordauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
{'': [nan, 0.2316985704230787]}
{'': [nan, 0.23169857042309244]}
{'': [nan, 0.23169857042312694]}
{'': [nan, 0.23169857042310815]}
{'': [nan, 0.23169857042316017]}
{'': [nan, 0.23169857042318218]}
{'': [nan, 0.23169857042308678]}
{'': [nan, 0.23169857042320033]}
{'': [nan, 0.2316985704231533]}
{'': [nan, 0.23169857042309308]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(C, A), haswordauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 935.9658443927765
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2517856350625112;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.018505282538265628;  // std dev = 7.775, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.04094463402424335;  // std dev = 6.456, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.21829238097522888;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.12800246769009244;  // std dev = 3.503, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07644847710697814;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.056276641057215464;  // std dev = 3.650, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.01906104896176754;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.18446442968974686;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.10831975056255072;  // std dev = 3.504, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06965937941835045;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.013632486057174754;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.03198579141674701;  // std dev = 6.441, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15231694286666383;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.09278781245127814;  // std dev = 3.504, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06142754256950095;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.04820673253261971;  // std dev = 3.647, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.01419010303228209;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12334450536867779;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.1011348747469363;  // std dev = 3.487, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07848590062943366;  // std dev = 1.367, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.007145438195823114;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.0267917818898169;  // std dev = 6.419, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.29963997899528955;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return -0.020786925943901333;  // std dev = 4.507, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.09762193042160681;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.08619330446495327;  // std dev = 3.486, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.0687621142818866;  // std dev = 1.367, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.006216496120991328;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.023241873994705082;  // std dev = 6.418, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.38931042048992304;  // std dev = 2.329, 27.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=19 */
%   | | | else return 0.040732622801166116;  // std dev = 5.824, 154.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=56 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.052412076444162806;  // std dev = 5.947, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   | | | else return 0.07764369481592304;  // std dev = 34.798, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,997 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.2034260808740991;  // std dev = 1.565, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.00721778131004895;  // std dev = 3.396, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.005404580327544556;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.020109708454594394;  // std dev = 6.418, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.2543072439958811;  // std dev = 4.285, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return -0.06290820257766097;  // std dev = 4.453, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.05992891968867017;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.2011186264654259;  // std dev = 1.565, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.0031286374660527715;  // std dev = 3.388, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.003821662543021907;  // std dev = 7.775, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.018571548827056188;  // std dev = 6.414, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.19552430755404523;  // std dev = 4.282, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return -0.04902097467150069;  // std dev = 4.454, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.0464900027157622;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.06581191770083748;  // std dev = 3.469, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06943519848319027;  // std dev = 1.341, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.003039722072533549;  // std dev = 7.775, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.01634495870168108;  // std dev = 6.413, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(A, D) )
%   | | | then return 0.03081393567024443;  // std dev = 34.214, 4,955.000 (wgt'ed) examples reached here.  /* #neg=3,030 #pos=1,925 */
%   | | | else return 0.04619439248180399;  // std dev = 8.395, 425.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=100 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.11313658131289317;  // std dev = 4.674, 127.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=28 */
%   | | | else return 0.036984020035843924;  // std dev = 8.107, 335.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=105 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.22877562719850075;  // std dev = 3.235, 43.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   | | | else return 0.45722091890752237;  // std dev = 2.561, 42.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.023220391965874686;  // std dev = 6.475, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.1659146820780722;  // std dev = 0.134, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
Inference time using transfer learning 1.5027391910552979
Refined model CLL: -0.639623


******************************************
Best model found
******************************************
Results 

CLL : -0.677644 

AUC ROC : 0.543578 

AUC PR : 0.458807 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 935.9658443927765 

Total Inference Time : 6.206521987915039 

Total revision time: 947.8604583740234
Best scored revision CLL: -0.639623


Results 

CLL : -0.677644 

AUC ROC : 0.543578 

AUC PR : 0.458807 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 947.8831448554993 

Total Inference Time : 6.206521987915039 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos examples: 550
Target test neg examples: 500

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.933660507202148
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111321945071477;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834400110087453;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15602704447107354;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13017937030369744;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10682752122740194;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08647162920053506;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06923052182131084;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0549522535276705;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043329703588355264;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399163325643134;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
Inference time using transfer learning 0.7433571815490723
Parameter learned model CLL:-0.650857 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(C, A), haswordauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
{'': [nan, 0.22838607798553479]}
{'': [nan, 0.22838607798557076]}
{'': [nan, 0.2283860779855225]}
{'': [nan, 0.22838607798565272]}
{'': [nan, 0.22838607798564442]}
{'': [nan, 0.22838607798554508]}
{'': [nan, 0.2283860779856207]}
{'': [nan, 0.22838607798554997]}
{'': [nan, 0.22838607798564564]}
{'': [nan, 0.22838607798561553]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(C, A), haswordauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 1010.7824578285217
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2282181392517563;  // std dev = 36.707, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.21069130798086477;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.5070851053122791;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.015110960415968286;  // std dev = 7.230, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.08803399257077657;  // std dev = 3.925, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.006909265678023899;  // std dev = 5.536, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19815347585533308;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1821443572831206;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3046340341990792;  // std dev = 4.674, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.4464082749382189;  // std dev = 4.609, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.01189139339341445;  // std dev = 7.221, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.0862077043203286;  // std dev = 3.924, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.0049837420996485;  // std dev = 5.536, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.30064202036403054;  // std dev = 1.729, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.16718062240703047;  // std dev = 37.571, 6,063.000 (wgt'ed) examples reached here.  /* #neg=3,826 #pos=2,237 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.24977258149722978;  // std dev = 4.671, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3653803909894089;  // std dev = 4.604, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.010410532610465824;  // std dev = 7.221, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.07527206642243237;  // std dev = 3.924, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.004369132737304533;  // std dev = 5.536, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13977190160827796;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.12648107333047434;  // std dev = 8.210, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.18354236436032442;  // std dev = 4.656, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.30011734151408936;  // std dev = 4.585, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.06664901675994686;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.06600576464641886;  // std dev = 1.662, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.021714677092244943;  // std dev = 9.619, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11411070551999615;  // std dev = 36.704, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.10277226757047016;  // std dev = 8.213, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14128681632488146;  // std dev = 4.654, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.23024351682844152;  // std dev = 4.582, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05791697996349951;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.024293643146730902;  // std dev = 8.041, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.00201862492912549;  // std dev = 5.543, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09178159890549793;  // std dev = 36.704, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.08302579417280202;  // std dev = 8.214, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09526461326997691;  // std dev = 4.645, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.18546709000766584;  // std dev = 4.571, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.06097317378133378;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.051129766570521325;  // std dev = 1.661, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.017038176841537547;  // std dev = 9.617, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07301088484387033;  // std dev = 36.703, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.06573912686517636;  // std dev = 8.216, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07112594416158742;  // std dev = 4.644, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.14041504467441787;  // std dev = 4.570, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0054385800884954255;  // std dev = 7.202, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.06675241792776523;  // std dev = 3.919, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.004265382959389836;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.10499863882685365;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.41549495891674315;  // std dev = 2.696, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return -0.02605531039202695;  // std dev = 4.586, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.056487961862611645;  // std dev = 37.166, 5,937.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=2,187 */
%   | | | else return 0.08092694290295276;  // std dev = 6.494, 180.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=105 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05433995296978125;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.04642468629627544;  // std dev = 1.662, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.013577776605647619;  // std dev = 9.611, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3985646866103153;  // std dev = 2.683, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return -0.03535579766501477;  // std dev = 4.604, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.04400126542092712;  // std dev = 37.137, 5,937.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=2,187 */
%   | | | else return 0.061206191312859655;  // std dev = 6.493, 180.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=105 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.04810413116622912;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.01862114184852337;  // std dev = 8.027, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.008266394154669423;  // std dev = 5.539, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.035069952247063614;  // std dev = 36.643, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.03130461908994675;  // std dev = 8.216, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.009744563738203066;  // std dev = 4.636, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.080177104873505;  // std dev = 4.567, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0030543883847642854;  // std dev = 7.197, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.0523556011523943;  // std dev = 3.917, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.004974346490880208;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.0959927155920519;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning 1.5462749004364014
Refined model CLL: -0.635347


******************************************
Best model found
******************************************
Results 

CLL : -0.750657 

AUC ROC : 0.634545 

AUC PR : 0.623667 

Precision : 0.828571 

Recall : 0.052727 

F1 : 0.099145 

Total Learning Time : 1010.7824578285217 

Total Inference Time : 21.473991632461548 

Total revision time: 1038.5119030475616
Best scored revision CLL: -0.635347


Results 

CLL : -0.750657 

AUC ROC : 0.634545 

AUC PR : 0.623667 

Precision : 0.828571 

Recall : 0.052727 

F1 : 0.099145 

Total Learning Time : 1038.5345895290375 

Total Inference Time : 21.473991632461548 

Run: 5

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.0686867237091064
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23749878473433458;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060618178036594;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17453024670666556;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446407501339931;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11767244800090106;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430962074455004;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.074707177635281;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865473052223055;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574473720619161;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549889774086067;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning 0.6704962253570557
Parameter learned model CLL:-0.665378 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(C, A), haswordauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
{'': [nan, 0.23544354121679714]}
{'': [nan, 0.23544354121687253]}
{'': [nan, 0.23544354121689864]}
{'': [nan, 0.23544354121683903]}
{'': [nan, 0.2354435412168111]}
{'': [nan, 0.235443541216926]}
{'': [nan, 0.23544354121692726]}
{'': [nan, 0.23544354121684707]}
{'': [nan, 0.23544354121692693]}
{'': [nan, 0.23544354121681993]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(C, A), haswordauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 1114.397367477417
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2559515161947286;  // std dev = 37.062, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.23063215657601857;  // std dev = 8.346, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5724346493852271;  // std dev = 3.964, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14905802600860327;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.04473174432383054;  // std dev = 8.508, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.22191983436381657;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.19893044877511365;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3578878444734629;  // std dev = 4.780, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5042038727151713;  // std dev = 3.938, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14309509431928658;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.038139440494516744;  // std dev = 8.501, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03579563578659918;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1874125148267566;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.16852367080292122;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2903869442291748;  // std dev = 4.777, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.4096054596694762;  // std dev = 3.930, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.03711211154702523;  // std dev = 8.412, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.07693231806277193;  // std dev = 3.621, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.031226012289466983;  // std dev = 5.927, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15464644444436812;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.13877229675309696;  // std dev = 8.358, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21276715551903774;  // std dev = 4.765, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.33529130189735984;  // std dev = 3.900, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.11884093411175968;  // std dev = 3.363, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.027928308115416595;  // std dev = 8.498, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.026380820066897216;  // std dev = 5.927, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12507102235802825;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.11301079645083835;  // std dev = 8.359, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4590666853235596;  // std dev = 0.901, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.1912549421052729;  // std dev = 6.073, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.04156347407608284;  // std dev = 7.646, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return 0.012405540952494555;  // std dev = 5.022, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02284600836110885;  // std dev = 5.929, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09961342423151819;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.08991633070098656;  // std dev = 8.363, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1108222674585151;  // std dev = 4.747, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.20570300724483617;  // std dev = 3.883, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09589620236338703;  // std dev = 3.359, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.020986570547541085;  // std dev = 8.497, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07356092249920497;  // std dev = 1.347, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.02064902720100383;  // std dev = 5.767, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0783575713624531;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.07134003523012984;  // std dev = 8.364, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07043470907702587;  // std dev = 4.736, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.1704997117069607;  // std dev = 3.870, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10852519542652281;  // std dev = 3.350, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.09066989111535698;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.02398877468258041;  // std dev = 3.494, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.016503283158815895;  // std dev = 9.636, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06110814766171403;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.055718088778832275;  // std dev = 8.366, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.32879850158547486;  // std dev = 0.881, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.07530708081426489;  // std dev = 6.034, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07684027177262891;  // std dev = 3.348, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.015032643434765193;  // std dev = 8.488, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.012772544699140496;  // std dev = 5.925, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.08491808264310845;  // std dev = 0.014, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04732794080126452;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.04353629497715666;  // std dev = 8.367, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.02902343704100393;  // std dev = 4.722, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.11124547317124804;  // std dev = 3.861, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.030374820232520472;  // std dev = 7.643, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return -0.007488545571667849;  // std dev = 4.979, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.10512823898704604;  // std dev = 0.951, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.013559627265380594;  // std dev = 5.839, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03649459855108193;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.03356677994741383;  // std dev = 8.369, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.012573371620340711;  // std dev = 4.719, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.09654054618328596;  // std dev = 3.851, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08872903194288975;  // std dev = 3.331, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.0816243518717485;  // std dev = 1.365, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.00902177582409473;  // std dev = 8.419, 465.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=88 */
%   | | | else return 0.011665933258435679;  // std dev = 5.839, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
Inference time using transfer learning 1.6398143768310547
Refined model CLL: -0.650432


******************************************
Best model found
******************************************
Results 

CLL : -0.624437 

AUC ROC : 0.582853 

AUC PR : 0.415218 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1114.397367477417 

Total Inference Time : 26.269684553146362 

Total revision time: 1147.034746646881
Best scored revision CLL: -0.650432


Results 

CLL : -0.624437 

AUC ROC : 0.582853 

AUC PR : 0.415218 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1147.0565376281738 

Total Inference Time : 26.269684553146362 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.000614643096924
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19217629976339767;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16713638120911187;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14258842882632106;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11954222017840668;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09871555462348185;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0804912793883634;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495809409335633;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05199278934611344;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041346460903546045;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03271420126321413;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
Inference time using transfer learning 0.7892200946807861
Parameter learned model CLL:-0.63853 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(C, A), haswordauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
{'': [nan, 0.22245308431952357]}
{'': [nan, 0.22245308431959404]}
{'': [nan, 0.22245308431958877]}
{'': [nan, 0.22245308431962857]}
{'': [nan, 0.22245308431955624]}
{'': [nan, 0.22245308431956373]}
{'': [nan, 0.22245308431964844]}
{'': [nan, 0.2224530843195216]}
{'': [nan, 0.22245308431962652]}
{'': [nan, 0.22245308431955077]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(C, A), haswordauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 987.4568436145782
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21330135701834016;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.2171232940738674;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.4250279159912295;  // std dev = 6.209, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.025981102931679878;  // std dev = 6.320, 286.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=48 */
%   | | | else return 0.008650607340314613;  // std dev = 6.183, 299.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=45 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.00966408661466345;  // std dev = 6.179, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18529314619377496;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.18876403158703925;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.32507976765547286;  // std dev = 4.477, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.42515523560317664;  // std dev = 4.476, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.022788916345782995;  // std dev = 6.320, 286.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=48 */
%   | | | else return 0.007594308571877338;  // std dev = 6.183, 299.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=45 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.008483607059122275;  // std dev = 6.179, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15754756052067012;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.1604230541748989;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2582347543207277;  // std dev = 4.469, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.3560556535131382;  // std dev = 4.466, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12261942235916055;  // std dev = 3.521, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06643081447841012;  // std dev = 1.357, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 6.47482941596234E-4;  // std dev = 8.055, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006366872036244485;  // std dev = 6.041, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13136598029894195;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.13380336675051696;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.41990355905140664;  // std dev = 1.258, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.2321483325946311;  // std dev = 6.182, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12236350386317417;  // std dev = 3.513, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06854796172031997;  // std dev = 1.360, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -9.161205344553589E-4;  // std dev = 8.042, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.005732667054086222;  // std dev = 6.041, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10772301980933428;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.1096051119784209;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.38890237105478825;  // std dev = 1.221, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.17414498903489992;  // std dev = 6.167, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10642833251314583;  // std dev = 3.512, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.060320644409218464;  // std dev = 1.360, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.05297082788461752;  // std dev = 3.645, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.004566339786430374;  // std dev = 9.362, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08711677196357491;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.08864762197227534;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09985254527048859;  // std dev = 4.435, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.18118014319827166;  // std dev = 4.451, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09135491210646961;  // std dev = 3.511, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0534638589062371;  // std dev = 1.360, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0014549623260838526;  // std dev = 8.037, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.005597513428028224;  // std dev = 6.042, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06968385538081784;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.0708104284025158;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06622071866445396;  // std dev = 4.429, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.14481466070630244;  // std dev = 4.446, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09926416119818397;  // std dev = 3.498, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0689044032896204;  // std dev = 1.365, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.03632817653585469;  // std dev = 3.621, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.004149915798804203;  // std dev = 9.361, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05525671877644011;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.05613048194530421;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.20453644204744129;  // std dev = 1.235, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.07226419890113212;  // std dev = 6.151, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08476954150503122;  // std dev = 3.496, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06068345841752588;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.031158909463733973;  // std dev = 3.620, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0036372924369971714;  // std dev = 9.361, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.353571765603909;  // std dev = 2.003, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.04257349138032698;  // std dev = 35.925, 5,641.000 (wgt'ed) examples reached here.  /* #neg=3,642 #pos=1,999 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.02754966393710358;  // std dev = 4.421, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.09135482062718234;  // std dev = 4.443, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.19492858600169;  // std dev = 1.581, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.007350370259504686;  // std dev = 3.396, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.003673051921394836;  // std dev = 7.965, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.006975607205240702;  // std dev = 6.113, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), venue(F, A) )
%   | | | then return 0.5500133385848305;  // std dev = 0.289, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2801458545010723;  // std dev = 2.030, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return -0.004414265749127044;  // std dev = 5.578, 145.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=48 */
%   | | | else return 0.03421720019043813;  // std dev = 36.018, 5,657.000 (wgt'ed) examples reached here.  /* #neg=3,615 #pos=2,042 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.06334590023932583;  // std dev = 3.492, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06179440207793501;  // std dev = 1.336, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.030962365414324424;  // std dev = 3.621, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0032318065260859615;  // std dev = 9.361, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
Inference time using transfer learning 2.4020450115203857
Refined model CLL: -0.621351


******************************************
Best model found
******************************************
Results 

CLL : -0.825628 

AUC ROC : 0.503256 

AUC PR : 0.607522 

Precision : 0.75 

Recall : 0.038911 

F1 : 0.073983 

Total Learning Time : 987.4568436145782 

Total Inference Time : 20.540175199508667 

Total revision time: 1014.3774518966675
Best scored revision CLL: -0.621351


Results 

CLL : -0.825628 

AUC ROC : 0.503256 

AUC PR : 0.607522 

Precision : 0.75 

Recall : 0.038911 

F1 : 0.073983 

Total Learning Time : 1014.3992428779602 

Total Inference Time : 20.540175199508667 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos examples: 581
Target test neg examples: 2222

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.6242289543151855
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3233895768107371;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2793007008737935;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23328649407241175;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18916724063245646;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1498110457236774;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11660571223754278;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08968116396383638;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06842666944178562;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051938581046928;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039290221911838154;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
Inference time using transfer learning 0.8833343982696533
Parameter learned model CLL:-0.692509 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(C, A), haswordauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
{'': [nan, 0.24879178701129595]}
{'': [nan, 0.24879178701138563]}
{'': [nan, 0.24879178701132204]}
{'': [nan, 0.24879178701131163]}
{'': [nan, 0.24879178701132562]}
{'': [nan, 0.24879178701133703]}
{'': [nan, 0.24879178701133225]}
{'': [nan, 0.24879178701133212]}
{'': [nan, 0.24879178701138097]}
{'': [nan, 0.24879178701133148]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(C, A), haswordauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 588.2946391105652
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3441551545575258;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.5478041075133061;  // std dev = 4.315, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29690255138011334;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3782052229457276;  // std dev = 4.673, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.4768288077207307;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.247146690498353;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.51313373820162;  // std dev = 1.246, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.33611531358553326;  // std dev = 6.231, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19937367766283512;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.5810353256529529;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.26419583583091694;  // std dev = 6.342, 175.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=111 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordvenue(B, I) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15694231532784036;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.1666854607548882;  // std dev = 4.652, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.2447561390122285;  // std dev = 4.296, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.05142434221559881;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.06821007189820737;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.027832149581508127;  // std dev = 5.247, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1214121850859716;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.11596030658343282;  // std dev = 4.646, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.19396662147540983;  // std dev = 4.288, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.041621302877510855;  // std dev = 7.527, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.22839066228426375;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.017491416206777653;  // std dev = 5.419, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09335578437677157;  // std dev = 0.012, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09285073212259731;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.26016486688406587;  // std dev = 1.189, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.10714674165729128;  // std dev = 6.204, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.034718743328304526;  // std dev = 7.525, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1797059618185123;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.0758329499393164;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.019204361885541265;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07049226145065242;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.056659119005451467;  // std dev = 4.637, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.11912710328127868;  // std dev = 4.286, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.026614411937304492;  // std dev = 7.502, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17192093335745545;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.0677562717892908;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.014257170344382036;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05327696275075745;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.03454921365848071;  // std dev = 4.630, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.09879498498552784;  // std dev = 4.286, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.1368204982310098;  // std dev = 2.864, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.021575227007179787;  // std dev = 7.522, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.06927269119882996;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.012849843349586169;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.22087728032262932;  // std dev = 4.121, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.1644116750573095;  // std dev = 2.840, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.039231798688960276;  // std dev = 33.118, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.04329521758128885;  // std dev = 6.194, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.13150302694089186;  // std dev = 2.853, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.016691923117233273;  // std dev = 7.511, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.006632332665618694;  // std dev = 5.414, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.08522731604003997;  // std dev = 0.025, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
Inference time using transfer learning 1.5094735622406006
Refined model CLL: -0.673337


******************************************
Best model found
******************************************
Results 

CLL : -0.604166 

AUC ROC : 0.558096 

AUC PR : 0.246388 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 588.2946391105652 

Total Inference Time : 4.410651445388794 

Total revision time: 597.6616203784943
Best scored revision CLL: -0.673337


Results 

CLL : -0.604166 

AUC ROC : 0.558096 

AUC PR : 0.246388 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 597.683411359787 

Total Inference Time : 4.410651445388794 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos examples: 747
Target test neg examples: 1068

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.756468057632446
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22286615874989274;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935154405685214;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1642887262433117;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13666278671669155;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11171555888479459;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09002630084157656;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0717310965916087;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665493302668148;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044448905993106524;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469622643034082;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
Inference time using transfer learning 0.8515763282775879
Parameter learned model CLL:-0.657691 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(C, A), haswordauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
{'': [nan, 0.2316985704230787]}
{'': [nan, 0.23169857042309244]}
{'': [nan, 0.23169857042312694]}
{'': [nan, 0.23169857042310815]}
{'': [nan, 0.23169857042316017]}
{'': [nan, 0.23169857042318218]}
{'': [nan, 0.23169857042308678]}
{'': [nan, 0.23169857042320033]}
{'': [nan, 0.2316985704231533]}
{'': [nan, 0.23169857042309308]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(C, A), haswordauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 936.0429894924164
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2517856350625112;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.04548402744779789;  // std dev = 7.596, 379.000 (wgt'ed) examples reached here.  /* #neg=308 #pos=71 */
%   | | | else return -0.015090501520205963;  // std dev = 3.965, 142.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=18 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.050876207826785;  // std dev = 6.541, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.4195923898729339;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.09916548493374269;  // std dev = 4.507, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.21757434129930542;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.1284259102691069;  // std dev = 3.504, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.0729992742672386;  // std dev = 1.359, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.015135770661961982;  // std dev = 7.772, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.035859086286737146;  // std dev = 6.447, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.3505212086862737;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.08436181645466527;  // std dev = 4.507, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.18386514278157123;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.12337168144360362;  // std dev = 3.498, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07886588053340036;  // std dev = 1.360, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.05270648039001929;  // std dev = 3.642, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.015553459590196642;  // std dev = 9.406, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15219117259058526;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.10688794256050979;  // std dev = 3.497, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06907451544507559;  // std dev = 1.360, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.009328866454824692;  // std dev = 7.771, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.029852774519802273;  // std dev = 6.430, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(B, E) )
%   | | | then return 0.43471768300033314;  // std dev = 2.306, 27.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=19 */
%   | | | else return 0.08020441895582457;  // std dev = 5.740, 154.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=56 */
%   | | else return 0.12291099955689866;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( haswordauthor(H, I), haswordtitle(J, I) )
%   | | | then return 0.10133426160257017;  // std dev = 3.486, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.0759307240694131;  // std dev = 1.362, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.008415148473630753;  // std dev = 7.773, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.024799663258505134;  // std dev = 6.420, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09826533597961769;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.08837072471153595;  // std dev = 3.486, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06463173580597083;  // std dev = 1.362, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.005835701557927564;  // std dev = 7.771, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.023233059247596683;  // std dev = 6.418, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07742662906686426;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.08340206259304801;  // std dev = 3.476, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.0701386413363634;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.0053100242873018256;  // std dev = 7.773, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.019065126083185002;  // std dev = 6.410, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.5038749088571697;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.21759353678397297;  // std dev = 2.194, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | else return 0.05925064318868171;  // std dev = 0.488, 5,379.000 (wgt'ed) examples reached here.  /* #neg=3,270 #pos=2,109 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, A) )
%   | | | then return 0.19857650359406823;  // std dev = 1.565, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.005536888232311705;  // std dev = 3.384, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return 0.02681760644968105;  // std dev = 3.610, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.006905051905437052;  // std dev = 9.406, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.221196618960079;  // std dev = 4.220, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return -0.08407715032170492;  // std dev = 4.451, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.04681227080724266;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.19856224897792416;  // std dev = 1.564, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.0026371043501661148;  // std dev = 3.379, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0021499251394619615;  // std dev = 7.770, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.01657160015781687;  // std dev = 6.404, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.030913840226274896;  // std dev = 34.204, 4,955.000 (wgt'ed) examples reached here.  /* #neg=3,030 #pos=1,925 */
%   | | | else return 0.04446923746258032;  // std dev = 8.393, 425.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=100 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return -0.11301763277006117;  // std dev = 4.673, 127.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=28 */
%   | | | else return 0.03915594728907507;  // std dev = 8.104, 335.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=105 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.22943382073533894;  // std dev = 3.246, 43.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   | | | else return 0.45430675320314534;  // std dev = 2.552, 42.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.021353976462741155;  // std dev = 6.483, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.143057540902555;  // std dev = 0.103, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
Inference time using transfer learning 1.5388779640197754
Refined model CLL: -0.639308


******************************************
Best model found
******************************************
Results 

CLL : -0.67755 

AUC ROC : 0.544775 

AUC PR : 0.460019 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 936.0429894924164 

Total Inference Time : 6.877609968185425 

Total revision time: 949.0024721622467
Best scored revision CLL: -0.639308


Results 

CLL : -0.67755 

AUC ROC : 0.544775 

AUC PR : 0.460019 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 949.0242631435394 

Total Inference Time : 6.877609968185425 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos examples: 550
Target test neg examples: 500

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.101542234420776
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111321945071477;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834400110087453;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15602704447107354;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13017937030369744;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10682752122740194;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08647162920053506;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06923052182131084;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0549522535276705;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043329703588355264;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399163325643134;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
Inference time using transfer learning 0.7483994960784912
Parameter learned model CLL:-0.650857 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(C, A), haswordauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
{'': [nan, 0.22838607798553479]}
{'': [nan, 0.22838607798557076]}
{'': [nan, 0.2283860779855225]}
{'': [nan, 0.22838607798565272]}
{'': [nan, 0.22838607798564442]}
{'': [nan, 0.22838607798554508]}
{'': [nan, 0.2283860779856207]}
{'': [nan, 0.22838607798554997]}
{'': [nan, 0.22838607798564564]}
{'': [nan, 0.22838607798561553]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(C, A), haswordauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 1034.3339276313782
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(C, A), haswordauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2282181392517563;  // std dev = 36.707, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.21069130798086477;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.5070851053122791;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.015110960415968286;  // std dev = 7.230, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.08803399257077657;  // std dev = 3.925, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.006909265678023899;  // std dev = 5.536, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.3292781484530182;  // std dev = 1.731, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.1971150153489864;  // std dev = 37.571, 6,063.000 (wgt'ed) examples reached here.  /* #neg=3,826 #pos=2,237 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3046340341990792;  // std dev = 4.674, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.446408274938219;  // std dev = 4.609, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06323004872688665;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.06261940488996087;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.02592113819145858;  // std dev = 9.632, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16823230906882622;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.15200100481996753;  // std dev = 8.210, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.24977258149722978;  // std dev = 4.671, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.365380390989409;  // std dev = 4.604, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.055596679672389133;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.030199742210974677;  // std dev = 8.051, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.002184274323244071;  // std dev = 5.547, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13976981297317798;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.12652255693304806;  // std dev = 8.210, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.18354236436032456;  // std dev = 4.656, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3001173415140894;  // std dev = 4.585, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05815602062904753;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02861666985879213;  // std dev = 8.047, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.004587536566272434;  // std dev = 5.545, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11410948978160065;  // std dev = 36.704, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.10279642028772469;  // std dev = 8.214, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1412868163248815;  // std dev = 4.654, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.2302435168284412;  // std dev = 4.582, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05133122173176716;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.024954877089121544;  // std dev = 8.046, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.004008208436874232;  // std dev = 5.545, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09178056004920433;  // std dev = 36.704, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.08304639747717042;  // std dev = 8.214, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09526461326997704;  // std dev = 4.645, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.18546709000766654;  // std dev = 4.571, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.006929548168005582;  // std dev = 7.207, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.07341836780536337;  // std dev = 3.918, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.004179523466076065;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1271151867312892;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07300914361471765;  // std dev = 36.703, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.06577346827968651;  // std dev = 8.216, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07112594416158742;  // std dev = 4.644, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.14041504467441787;  // std dev = 4.570, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05521315750913891;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02236781902825431;  // std dev = 8.035, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.007159813690745597;  // std dev = 5.541, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.41550920969923033;  // std dev = 2.696, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return -0.026027654310899314;  // std dev = 4.586, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.05648740549973579;  // std dev = 37.166, 5,937.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=2,187 */
%   | | | else return 0.08092694290295273;  // std dev = 6.494, 180.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=105 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.04884819655537751;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.01959686710288029;  // std dev = 8.035, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.006565097107885968;  // std dev = 5.541, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.045039413825081684;  // std dev = 36.673, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.04050417391820006;  // std dev = 8.217, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.024620433032169608;  // std dev = 4.639, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.09483781074317822;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05069308016048188;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.019155625671541453;  // std dev = 8.031, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.008532065179837454;  // std dev = 5.540, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03509928901164777;  // std dev = 36.672, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.03144583667387666;  // std dev = 8.218, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.01710516334693993;  // std dev = 4.635, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.07310807601071699;  // std dev = 4.567, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.045139974890999926;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.01688864494374182;  // std dev = 8.030, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.00794527051751754;  // std dev = 5.540, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
Inference time using transfer learning 1.6444087028503418
Refined model CLL: -0.636057


******************************************
Best model found
******************************************
Results 

CLL : -0.751336 

AUC ROC : 0.640135 

AUC PR : 0.633376 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1034.3339276313782 

Total Inference Time : 24.039731979370117 

Total revision time: 1064.7273063659668
Best scored revision CLL: -0.636057


Results 

CLL : -0.751336 

AUC ROC : 0.640135 

AUC PR : 0.633376 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1064.7490973472595 

Total Inference Time : 24.039731979370117 

Starting experiments for fasttext using wmd 

Run: 1

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.114410877227783
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23749878473433458;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060618178036594;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17453024670666556;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446407501339931;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11767244800090106;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430962074455004;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.074707177635281;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865473052223055;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574473720619161;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549889774086067;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning 0.7409136295318604
Parameter learned model CLL:-0.665378 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
{'': [nan, 0.23544354121679714]}
{'': [nan, 0.23544354121687253]}
{'': [nan, 0.23544354121689864]}
{'': [nan, 0.23544354121683903]}
{'': [nan, 0.2354435412168111]}
{'': [nan, 0.235443541216926]}
{'': [nan, 0.23544354121692726]}
{'': [nan, 0.23544354121684707]}
{'': [nan, 0.23544354121692693]}
{'': [nan, 0.23544354121681993]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true


Refining candidate
***************************
Model training time 976.7667284011841
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2559515161947286;  // std dev = 37.062, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.23063215657601857;  // std dev = 8.346, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5724346493852271;  // std dev = 3.964, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.06760839455897227;  // std dev = 7.001, 296.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=62 */
%   | | | else return 0.04035232493002018;  // std dev = 5.930, 236.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=43 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2219198343638166;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.19893044877511365;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.35788784447346306;  // std dev = 4.780, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5042038727151713;  // std dev = 3.938, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.05742828982964905;  // std dev = 7.665, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return 0.030171111907377375;  // std dev = 5.041, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03673101633396252;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18741251482675653;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.16852367080292122;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2903869442291748;  // std dev = 4.777, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.4096054596694759;  // std dev = 3.930, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.13476937700759767;  // std dev = 3.364, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.03284935612678106;  // std dev = 8.508, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.029720486965848742;  // std dev = 5.925, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15464644444436798;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.13877229675309696;  // std dev = 8.358, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21276715551903763;  // std dev = 4.765, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.33529130189735984;  // std dev = 3.900, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1318216458938585;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.08067015192563701;  // std dev = 1.360, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04638358869390875;  // std dev = 3.519, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.025954567956929027;  // std dev = 9.642, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12507102235802825;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.11301079645083845;  // std dev = 8.359, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4590666853235596;  // std dev = 0.901, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.19125494210527297;  // std dev = 6.073, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10989290830638034;  // std dev = 3.353, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.0242293190045578;  // std dev = 8.498, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07456565614773725;  // std dev = 1.348, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.02420350436413465;  // std dev = 5.770, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.35556530063339636;  // std dev = 1.952, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return 0.09840961446078748;  // std dev = 37.925, 6,015.000 (wgt'ed) examples reached here.  /* #neg=3,634 #pos=2,381 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.11082226745851513;  // std dev = 4.747, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.20570300724483617;  // std dev = 3.883, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10982334156617769;  // std dev = 3.353, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07484620800281402;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.0312409805544325;  // std dev = 3.500, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.019190067433584066;  // std dev = 9.642, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07850740394752892;  // std dev = 37.051, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.06841189496584225;  // std dev = 8.367, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.3546321084197926;  // std dev = 0.886, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.10375634102649128;  // std dev = 6.048, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.08835891470521554;  // std dev = 3.342, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.017433234501252823;  // std dev = 8.490, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.10122557957297419;  // std dev = 0.948, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.017229506963470396;  // std dev = 5.846, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.061208331305635855;  // std dev = 37.051, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.05375011854219354;  // std dev = 8.367, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04146989198645726;  // std dev = 4.722, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.14286206936261037;  // std dev = 3.862, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09298349401226692;  // std dev = 3.337, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.06642266444088117;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.013255741052389771;  // std dev = 8.473, 473.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=89 */
%   | | | else return 0.016568057423728372;  // std dev = 5.776, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04743203462601758;  // std dev = 37.050, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.041498496314884586;  // std dev = 8.370, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.25212340261476474;  // std dev = 0.882, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.05692644454634869;  // std dev = 6.035, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07782510449873808;  // std dev = 3.336, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.058748962375069644;  // std dev = 1.362, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.011337205959674447;  // std dev = 8.473, 473.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=89 */
%   | | | else return 0.014260546571277632;  // std dev = 5.775, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03656135699826165;  // std dev = 37.050, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.03224983874113593;  // std dev = 8.370, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.012168073228384011;  // std dev = 4.711, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.0969372003054619;  // std dev = 3.859, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.06948186795394917;  // std dev = 3.325, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.00953152118358409;  // std dev = 8.478, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.10020434781469736;  // std dev = 0.946, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.011398472456709939;  // std dev = 5.845, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
Inference time using transfer learning 1.6393301486968994
Refined model CLL: -0.650295


******************************************
Best model found
******************************************
Results 

CLL : -0.624404 

AUC ROC : 0.582201 

AUC PR : 0.415046 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 976.7667284011841 

Total Inference Time : 26.261213302612305 

Total revision time: 1009.4559767246246
Best scored revision CLL: -0.650295


Results 

CLL : -0.624404 

AUC ROC : 0.582201 

AUC PR : 0.415046 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1009.4719347953796 

Total Inference Time : 26.261213302612305 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.673930406570435
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19217629976339767;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16713638120911187;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14258842882632106;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11954222017840668;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09871555462348185;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0804912793883634;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495809409335633;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05199278934611344;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041346460903546045;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03271420126321413;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
Inference time using transfer learning 0.768338680267334
Parameter learned model CLL:-0.63853 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
{'': [nan, 0.22245308431952357]}
{'': [nan, 0.22245308431959404]}
{'': [nan, 0.22245308431958877]}
{'': [nan, 0.22245308431962857]}
{'': [nan, 0.22245308431955624]}
{'': [nan, 0.22245308431956373]}
{'': [nan, 0.22245308431964844]}
{'': [nan, 0.2224530843195216]}
{'': [nan, 0.22245308431962652]}
{'': [nan, 0.22245308431955077]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true


Refining candidate
***************************
Model training time 989.0275611877441
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21330135701834016;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.2171232940738674;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.4250279159912295;  // std dev = 6.209, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.004584387893347046;  // std dev = 8.054, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006937862435151973;  // std dev = 6.050, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1852931461937749;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.1887640315870392;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.5861333969918011;  // std dev = 1.247, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.36327055714680573;  // std dev = 6.203, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11168486493253202;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.05972507874716161;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.06486143067461063;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.002023530754329182;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15754756052067012;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.1604230541748988;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2566020382312614;  // std dev = 4.462, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.35738676387641305;  // std dev = 4.468, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.11967205735959607;  // std dev = 3.509, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return 7.307414786427298E-4;  // std dev = 8.034, 522.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=76 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.007861103507426385;  // std dev = 6.183, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.14112743454294419;  // std dev = 0.030, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13136598029894198;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.13380336675051716;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1909692512806417;  // std dev = 4.449, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.29270920720177146;  // std dev = 4.457, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09541040124781616;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.052967205104841625;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04586217411469209;  // std dev = 3.657, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0019582669054105666;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10772301980933437;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.10960511197842084;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.3479087259363992;  // std dev = 1.236, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.17684009850044827;  // std dev = 6.171, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09762510033309299;  // std dev = 3.501, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.084788211639807;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.03934619489576338;  // std dev = 3.625, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0017192181855074367;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08711677196357479;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.08864762197227534;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.10009855544125387;  // std dev = 4.435, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.18097209960421756;  // std dev = 4.451, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08327093135596318;  // std dev = 3.500, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07379442724650433;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0010812108355550542;  // std dev = 7.964, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.00747741660090705;  // std dev = 6.116, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06968385538081776;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.07081042840251583;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06665792392048298;  // std dev = 4.429, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.14441647403549485;  // std dev = 4.446, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.19861510726832965;  // std dev = 1.585, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.014389023993619117;  // std dev = 3.404, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.025916699030951416;  // std dev = 3.627, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0017740638819177844;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.055256718776440096;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.05613048194530421;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.2079031538770808;  // std dev = 1.235, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.07205292444785079;  // std dev = 6.150, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07070280910968628;  // std dev = 3.496, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.059791935316728786;  // std dev = 1.339, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.022059814757354516;  // std dev = 3.626, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0015577202854433142;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04352837330557885;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.044151104462696;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.02768507733246408;  // std dev = 4.421, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.09122646526603324;  // std dev = 4.443, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.062337071783688434;  // std dev = 3.486, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07222677010250828;  // std dev = 1.368, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.002370917738853948;  // std dev = 7.957, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.006955663756609249;  // std dev = 6.111, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03411263494702468;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.03459452826638888;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.19932574260098088;  // std dev = 1.218, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.03570283101960519;  // std dev = 6.136, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.05967831986125241;  // std dev = 3.488, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0029951365488265092;  // std dev = 8.009, 522.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=76 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.00698578989326133;  // std dev = 6.179, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.1217457170456578;  // std dev = 0.030, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
Inference time using transfer learning 2.352398633956909
Refined model CLL: -0.621785


******************************************
Best model found
******************************************
Results 

CLL : -0.826121 

AUC ROC : 0.505937 

AUC PR : 0.608646 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 989.0275611877441 

Total Inference Time : 22.903472900390625 

Total revision time: 1017.8744447231293
Best scored revision CLL: -0.621785


Results 

CLL : -0.826121 

AUC ROC : 0.505937 

AUC PR : 0.608646 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 1017.8904027938843 

Total Inference Time : 22.903472900390625 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos examples: 581
Target test neg examples: 2222

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.5767648220062256
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3233895768107371;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2793007008737935;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23328649407241175;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18916724063245646;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1498110457236774;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11660571223754278;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08968116396383638;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06842666944178562;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051938581046928;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039290221911838154;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
Inference time using transfer learning 0.8933005332946777
Parameter learned model CLL:-0.692509 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
{'': [nan, 0.24879178701129595]}
{'': [nan, 0.24879178701138563]}
{'': [nan, 0.24879178701132204]}
{'': [nan, 0.24879178701131163]}
{'': [nan, 0.24879178701132562]}
{'': [nan, 0.24879178701133703]}
{'': [nan, 0.24879178701133225]}
{'': [nan, 0.24879178701133212]}
{'': [nan, 0.24879178701138097]}
{'': [nan, 0.24879178701133148]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true


Refining candidate
***************************
Model training time 623.9781529903412
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3441551545575258;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.5478041075133061;  // std dev = 4.315, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29690255138011334;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3782052229457276;  // std dev = 4.673, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.4768288077207307;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.7611404710403213;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.24611710135415582;  // std dev = 33.500, 4,493.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,179 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5132324625059774;  // std dev = 1.247, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.33610943713884517;  // std dev = 6.231, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19935342145013596;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.23079568926986874;  // std dev = 4.659, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.31005754192415974;  // std dev = 4.305, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15693073177837294;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.16573595334415053;  // std dev = 4.652, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.24563937733556132;  // std dev = 4.296, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.05142434221559867;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.06821007189820738;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.027832149581508106;  // std dev = 5.247, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.12140760939849335;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.28867229495595115;  // std dev = 1.226, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.14604091638179006;  // std dev = 6.209, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.04162130287751089;  // std dev = 7.527, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.22839066228426388;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07465821730094524;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.02105752645551097;  // std dev = 5.246, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.26322691185116454;  // std dev = 4.041, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.10598858436924168;  // std dev = 2.878, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.09218194015587781;  // std dev = 33.118, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.1063648074183232;  // std dev = 6.202, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.03471874332830439;  // std dev = 7.525, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1797059618185123;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.015948249735960766;  // std dev = 5.415, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09342649776027477;  // std dev = 0.015, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07041411726933794;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.05661508856816432;  // std dev = 4.641, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.12228932705878796;  // std dev = 4.299, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.02659322878595533;  // std dev = 7.502, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17191951349138584;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.06777294304188576;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.014249584286302797;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), venue(F, B) )
%   | | | then return 0.4443849887493057;  // std dev = 0.192, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3451662698197285;  // std dev = 1.173, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.05210091438566858;  // std dev = 33.449, 4,486.000 (wgt'ed) examples reached here.  /* #neg=2,312 #pos=2,174 */
%   | | | else return 0.061553923782775584;  // std dev = 6.310, 175.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=111 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.022429765774212;  // std dev = 7.498, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.13251849744708535;  // std dev = 2.934, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.009773119313054687;  // std dev = 5.416, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.08564686162744155;  // std dev = 0.021, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.04013324853525606;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.01844593995157028;  // std dev = 4.632, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.0849309681250669;  // std dev = 4.285, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.1322594524578573;  // std dev = 2.865, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.01541998406249606;  // std dev = 7.510, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.0826611768832813;  // std dev = 0.949, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.007358069565824472;  // std dev = 5.329, 195.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=35 */
Inference time using transfer learning 1.5040514469146729
Refined model CLL: -0.672746


******************************************
Best model found
******************************************
Results 

CLL : -0.603712 

AUC ROC : 0.560205 

AUC PR : 0.248617 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 623.9781529903412 

Total Inference Time : 4.822577238082886 

Total revision time: 633.6017842292786
Best scored revision CLL: -0.672746


Results 

CLL : -0.603712 

AUC ROC : 0.560205 

AUC PR : 0.248617 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 633.6177423000336 

Total Inference Time : 4.822577238082886 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos examples: 747
Target test neg examples: 1068

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.666497468948364
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22286615874989274;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935154405685214;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1642887262433117;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13666278671669155;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11171555888479459;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09002630084157656;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0717310965916087;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665493302668148;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044448905993106524;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469622643034082;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
Inference time using transfer learning 0.7669632434844971
Parameter learned model CLL:-0.657691 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
{'': [nan, 0.2316985704230787]}
{'': [nan, 0.23169857042309244]}
{'': [nan, 0.23169857042312694]}
{'': [nan, 0.23169857042310815]}
{'': [nan, 0.23169857042316017]}
{'': [nan, 0.23169857042318218]}
{'': [nan, 0.23169857042308678]}
{'': [nan, 0.23169857042320033]}
{'': [nan, 0.2316985704231533]}
{'': [nan, 0.23169857042309308]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true


Refining candidate
***************************
Model training time 282.1085286140442
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2517856350625112;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.018505282538265628;  // std dev = 7.775, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.04094463402424335;  // std dev = 6.456, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.8246556810121737;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.40360304943322656;  // std dev = 2.152, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.1882920446485381;  // std dev = 5.970, 154.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=56 */
%   | | | else return 0.21757434129930542;  // std dev = 35.304, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.040981177934432574;  // std dev = 7.595, 379.000 (wgt'ed) examples reached here.  /* #neg=308 #pos=71 */
%   | | | else return -0.017515285900006304;  // std dev = 3.964, 142.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.04688303243278488;  // std dev = 6.526, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.14608236020820276;  // std dev = 0.034, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1844320240254723;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.12449891425525049;  // std dev = 3.495, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07851498395892939;  // std dev = 1.360, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.011773380137313594;  // std dev = 7.772, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.0322637121486906;  // std dev = 6.432, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.3404883887990547;  // std dev = 4.286, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.02708663058803655;  // std dev = 4.461, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.13255703103955704;  // std dev = 5.947, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   | | | else return 0.15247028216773661;  // std dev = 34.798, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,997 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.10795877819545845;  // std dev = 3.493, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06878481240023597;  // std dev = 1.360, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, N), haswordauthor(P, N) )
%   | | | then return 0.047851266913503894;  // std dev = 3.642, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.013203144553234675;  // std dev = 9.406, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.2713430712436677;  // std dev = 4.279, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.022013666030801408;  // std dev = 4.460, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.12302320191516719;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.10033885663057936;  // std dev = 3.489, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07589146687803956;  // std dev = 1.361, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.008083726571859233;  // std dev = 7.771, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.02555178153163283;  // std dev = 6.420, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.28683149653459145;  // std dev = 4.228, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return -0.01279171806109997;  // std dev = 4.520, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.0640217311156751;  // std dev = 5.715, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   | | | else return 0.09854702306712766;  // std dev = 34.798, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,997 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.08929584905194957;  // std dev = 3.482, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06443523548218064;  // std dev = 1.362, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.006137609924745237;  // std dev = 7.773, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.022519299731318568;  // std dev = 6.417, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | | then return 0.23642865797555362;  // std dev = 1.735, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.49360791100498563;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0.07613521192996271;  // std dev = 0.487, 5,379.000 (wgt'ed) examples reached here.  /* #neg=3,270 #pos=2,109 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.08255518169492163;  // std dev = 3.479, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07005772447508447;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.005037597561687782;  // std dev = 7.771, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.019681297699642806;  // std dev = 6.411, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.060416353132229164;  // std dev = 0.487, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.0022523407479988636;  // std dev = 7.666, 443.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=71 */
%   | | | else return 0.08137919105392327;  // std dev = 3.727, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.025518701780760603;  // std dev = 6.491, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.14032066779302776;  // std dev = 0.101, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | | then return 0.16911872355259128;  // std dev = 1.736, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.3691996523022434;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0.045930142307194444;  // std dev = 0.487, 5,379.000 (wgt'ed) examples reached here.  /* #neg=3,270 #pos=2,109 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.19913708682240916;  // std dev = 1.564, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.008920206374515344;  // std dev = 3.383, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.002069731733181417;  // std dev = 7.765, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.014811036373577809;  // std dev = 6.401, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return 0.19049458640297465;  // std dev = 3.990, 69.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=40 */
%   | | | else return 0.02498161119317266;  // std dev = 1.797, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.02992708349633876;  // std dev = 34.915, 5,292.000 (wgt'ed) examples reached here.  /* #neg=3,316 #pos=1,976 */
%   | | | else return -0.004437047504682806;  // std dev = 9.467, 462.000 (wgt'ed) examples reached here.  /* #neg=329 #pos=133 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.22410666665037812;  // std dev = 3.233, 43.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   | | | else return 0.45165521368472783;  // std dev = 2.548, 42.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.024336122687631707;  // std dev = 6.489, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.1257024274880745;  // std dev = 0.092, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
Inference time using transfer learning 1.486741304397583
Refined model CLL: -0.6391


******************************************
Best model found
******************************************
Results 

CLL : -0.677745 

AUC ROC : 0.538336 

AUC PR : 0.452123 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 282.1085286140442 

Total Inference Time : 6.169632911682129 

Total revision time: 294.1974096298218
Best scored revision CLL: -0.6391


Results 

CLL : -0.677745 

AUC ROC : 0.538336 

AUC PR : 0.452123 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 294.2133677005768 

Total Inference Time : 6.169632911682129 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos examples: 550
Target test neg examples: 500

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.995577573776245
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111321945071477;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834400110087453;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15602704447107354;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13017937030369744;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10682752122740194;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08647162920053506;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06923052182131084;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0549522535276705;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043329703588355264;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399163325643134;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
Inference time using transfer learning 0.7319307327270508
Parameter learned model CLL:-0.650857 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
{'': [nan, 0.22838607798553479]}
{'': [nan, 0.22838607798557076]}
{'': [nan, 0.2283860779855225]}
{'': [nan, 0.22838607798565272]}
{'': [nan, 0.22838607798564442]}
{'': [nan, 0.22838607798554508]}
{'': [nan, 0.2283860779856207]}
{'': [nan, 0.22838607798554997]}
{'': [nan, 0.22838607798564564]}
{'': [nan, 0.22838607798561553]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true


Refining candidate
***************************
Model training time 1032.3810770511627
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2282181392517563;  // std dev = 36.707, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.21069130798086477;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.5070851053122791;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.0607699838194067;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.035677024987153;  // std dev = 8.061, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return 0.0021489350995115234;  // std dev = 5.551, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19815347585533297;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1821443572831206;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.30463403419907914;  // std dev = 4.674, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.446408274938219;  // std dev = 4.609, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06460962383370238;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0343183639209515;  // std dev = 8.054, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.0018846352548022801;  // std dev = 5.549, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16808795298651213;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.15483203266496462;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.24977258149722978;  // std dev = 4.671, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.365380390989409;  // std dev = 4.604, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.011163691670460843;  // std dev = 7.222, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.07982461168953084;  // std dev = 3.922, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.0026584126525626287;  // std dev = 5.534, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.14188324099178215;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13967524500406553;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.12836113163788107;  // std dev = 8.212, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.18354236436032448;  // std dev = 4.656, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3001173415140894;  // std dev = 4.585, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05833777172828767;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.05863410755508213;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.020941711624044224;  // std dev = 9.628, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11398341070029146;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.10525038208708754;  // std dev = 8.213, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14128681632488158;  // std dev = 4.654, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.23024351682844127;  // std dev = 4.582, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.051484558963996466;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02506692843129634;  // std dev = 8.046, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.004206655531656192;  // std dev = 5.544, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09170385491611784;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.0845360523843122;  // std dev = 8.215, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09526461326997696;  // std dev = 4.645, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.18546709000766645;  // std dev = 4.571, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05420329502451898;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.024900507997855918;  // std dev = 8.040, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.007931540200175212;  // std dev = 5.543, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.21031066589636752;  // std dev = 1.723, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.41698354014573813;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.07198665280605894;  // std dev = 37.540, 6,056.000 (wgt'ed) examples reached here.  /* #neg=3,824 #pos=2,232 */
%   | | | else return 0.10691262244843325;  // std dev = 6.532, 182.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then return -0.04797464052971958;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.021447622418278828;  // std dev = 8.041, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.006546011421159362;  // std dev = 5.543, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05753660118486759;  // std dev = 36.699, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.05213884027326941;  // std dev = 8.217, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.04482297757575449;  // std dev = 4.643, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.11393988704989018;  // std dev = 4.570, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0045073922209107895;  // std dev = 7.202, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.06723977011536607;  // std dev = 3.917, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.005589393330614196;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.125718026155443;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.045061139759133145;  // std dev = 36.698, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.040729931742706435;  // std dev = 8.218, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.024127418607919556;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.0949328146191829;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.0505251472946347;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.01900028204347321;  // std dev = 8.031, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.008307041315257708;  // std dev = 5.540, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03509963537571718;  // std dev = 36.698, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.031918918196794155;  // std dev = 8.218, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.01692033143972634;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.07300356017397432;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.04530242964956183;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.044858527953976796;  // std dev = 1.659, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.010924302241489298;  // std dev = 9.613, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
Inference time using transfer learning 1.7148823738098145
Refined model CLL: -0.636639


******************************************
Best model found
******************************************
Results 

CLL : -0.751806 

AUC ROC : 0.643025 

AUC PR : 0.647384 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1032.3810770511627 

Total Inference Time : 25.784732818603516 

Total revision time: 1064.4898128509521
Best scored revision CLL: -0.636639


Results 

CLL : -0.751806 

AUC ROC : 0.643025 

AUC PR : 0.647384 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1064.5057709217072 

Total Inference Time : 25.784732818603516 

Run: 2

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.491332054138184
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23749878473433458;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060618178036594;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17453024670666556;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446407501339931;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11767244800090106;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430962074455004;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.074707177635281;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865473052223055;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574473720619161;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549889774086067;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning 0.7360596656799316
Parameter learned model CLL:-0.665378 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
{'': [nan, 0.23544354121679714]}
{'': [nan, 0.23544354121687253]}
{'': [nan, 0.23544354121689864]}
{'': [nan, 0.23544354121683903]}
{'': [nan, 0.2354435412168111]}
{'': [nan, 0.235443541216926]}
{'': [nan, 0.23544354121692726]}
{'': [nan, 0.23544354121684707]}
{'': [nan, 0.23544354121692693]}
{'': [nan, 0.23544354121681993]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true


Refining candidate
***************************
Model training time 1059.7500233650208
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2559515161947286;  // std dev = 37.062, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.23063215657601857;  // std dev = 8.346, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5724346493852271;  // std dev = 3.964, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.06760839455897227;  // std dev = 7.001, 296.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=62 */
%   | | | else return 0.04035232493002018;  // std dev = 5.930, 236.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=43 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2219198343638166;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.19893044877511365;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3578878444734629;  // std dev = 4.780, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5042038727151713;  // std dev = 3.938, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.05742828982964905;  // std dev = 7.665, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return 0.03017111190737738;  // std dev = 5.041, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03673101633396252;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18741251482675653;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.1685236708029212;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.29038694422917477;  // std dev = 4.777, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.4096054596694761;  // std dev = 3.930, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.13476937700759767;  // std dev = 3.364, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.032849356126781006;  // std dev = 8.508, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.029720486965848773;  // std dev = 5.925, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.154646444444368;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.13877229675309694;  // std dev = 8.358, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21276715551903763;  // std dev = 4.765, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.3352913018973599;  // std dev = 3.900, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13182164589385847;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.08067015192563702;  // std dev = 1.360, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04638358869390878;  // std dev = 3.519, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.025954567956928947;  // std dev = 9.642, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12507102235802825;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.11301079645083854;  // std dev = 8.359, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.16116179168107558;  // std dev = 4.763, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.2558166315289217;  // std dev = 3.895, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10989290830638028;  // std dev = 3.353, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.024229319004557794;  // std dev = 8.498, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07456565614773732;  // std dev = 1.348, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.024203504364134674;  // std dev = 5.770, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09961342423151814;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.0899163307009866;  // std dev = 8.363, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4109643820675695;  // std dev = 0.894, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.14086348930500855;  // std dev = 6.059, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10982334156617767;  // std dev = 3.353, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07484620800281402;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.03124098055443246;  // std dev = 3.500, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.019190067433584205;  // std dev = 9.642, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07835757136245317;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.07134003523012984;  // std dev = 8.364, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07044381976865595;  // std dev = 4.736, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.1705147581123305;  // std dev = 3.870, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.08835891470521562;  // std dev = 3.342, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.017433234501252764;  // std dev = 8.490, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.1012255795729742;  // std dev = 0.948, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.0172295069634704;  // std dev = 5.846, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06110814766171411;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.055718088778832414;  // std dev = 8.366, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.05152505410211288;  // std dev = 4.741, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.13069597758911888;  // std dev = 3.865, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09298349401226699;  // std dev = 3.337, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.06642266444088119;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.01325574105238982;  // std dev = 8.473, 473.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=89 */
%   | | | else return 0.016568057423728442;  // std dev = 5.776, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04732794080126443;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.043536294977156706;  // std dev = 8.367, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.3120139891450769;  // std dev = 0.881, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.054083488028921455;  // std dev = 6.025, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07782510449873815;  // std dev = 3.336, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.05874896237506967;  // std dev = 1.362, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.011337205959674497;  // std dev = 8.473, 473.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=89 */
%   | | | else return 0.014260546571277616;  // std dev = 5.775, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.036494598551081794;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.03356677994741365;  // std dev = 8.369, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.012632088982858967;  // std dev = 4.719, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.09641382221801643;  // std dev = 3.851, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.06948186795394912;  // std dev = 3.325, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.009531521183583986;  // std dev = 8.478, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.10020434781469738;  // std dev = 0.946, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.011398472456710036;  // std dev = 5.845, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
Inference time using transfer learning 1.7396562099456787
Refined model CLL: -0.65044


******************************************
Best model found
******************************************
Results 

CLL : -0.62453 

AUC ROC : 0.582201 

AUC PR : 0.415046 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1059.7500233650208 

Total Inference Time : 27.077628135681152 

Total revision time: 1093.732084274292
Best scored revision CLL: -0.65044


Results 

CLL : -0.62453 

AUC ROC : 0.582201 

AUC PR : 0.415046 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1093.7481617927551 

Total Inference Time : 27.077628135681152 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.915819406509399
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19217629976339767;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16713638120911187;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14258842882632106;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11954222017840668;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09871555462348185;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0804912793883634;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495809409335633;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05199278934611344;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041346460903546045;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03271420126321413;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
Inference time using transfer learning 0.7559456825256348
Parameter learned model CLL:-0.63853 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
{'': [nan, 0.22245308431952357]}
{'': [nan, 0.22245308431959404]}
{'': [nan, 0.22245308431958877]}
{'': [nan, 0.22245308431962857]}
{'': [nan, 0.22245308431955624]}
{'': [nan, 0.22245308431956373]}
{'': [nan, 0.22245308431964844]}
{'': [nan, 0.2224530843195216]}
{'': [nan, 0.22245308431962652]}
{'': [nan, 0.22245308431955077]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true


Refining candidate
***************************
Model training time 916.8283853530884
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21330135701834016;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.2171232940738674;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.38901313263037696;  // std dev = 4.491, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.48605591184369906;  // std dev = 4.483, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001355197131893661;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18529314619377496;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.1887640315870393;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.6007717207169575;  // std dev = 1.260, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.3623742328705786;  // std dev = 6.198, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12034593308451501;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07683979386435784;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.05628962009248209;  // std dev = 3.652, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0011903099343518006;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15754756052067018;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.1604230541748986;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5160684793061486;  // std dev = 1.244, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.295388917185476;  // std dev = 6.190, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1045962743970368;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06726361331927284;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.002576035273896114;  // std dev = 8.036, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006588670209165276;  // std dev = 6.051, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13136598029894217;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.13380336675051696;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1909731998196959;  // std dev = 4.449, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.29265314544791815;  // std dev = 4.458, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08966093877419803;  // std dev = 3.515, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.05929602822686794;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.048355391800502155;  // std dev = 3.652, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001544878203184462;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1077230198093342;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.10960511197842095;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1462677277252741;  // std dev = 4.447, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.22548152447727762;  // std dev = 4.456, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.20126106400581992;  // std dev = 1.599, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.014639403091943117;  // std dev = 3.410, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0015471547206630156;  // std dev = 8.031, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.005670809053919235;  // std dev = 6.052, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08711677196357505;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.08864762197227534;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.30636969718822343;  // std dev = 1.232, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.13119412718719176;  // std dev = 6.161, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07079115090499384;  // std dev = 3.511, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.05833715890804875;  // std dev = 1.336, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0010557891394016759;  // std dev = 7.976, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.005377750234990373;  // std dev = 6.125, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), venue(F, A) )
%   | | | then return 0.6331948142319426;  // std dev = 0.282, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3779404766937958;  // std dev = 2.003, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.03316597119272177;  // std dev = 5.584, 145.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=48 */
%   | | | else return 0.07028652642705592;  // std dev = 36.022, 5,657.000 (wgt'ed) examples reached here.  /* #neg=3,615 #pos=2,042 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09633017359476422;  // std dev = 3.489, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07917768329011671;  // std dev = 1.372, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0028987745075227393;  // std dev = 7.957, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.005910592026456936;  // std dev = 6.116, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.055121385204882634;  // std dev = 34.977, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.054622997706958575;  // std dev = 8.469, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04888334987647655;  // std dev = 4.426, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.12508146746197904;  // std dev = 4.438, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.16807431277728704;  // std dev = 1.594, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.0059370914210834175;  // std dev = 3.391, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.03394395057494683;  // std dev = 3.637, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0021230833923914024;  // std dev = 9.362, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04342132069055534;  // std dev = 34.977, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.04292543196063598;  // std dev = 8.469, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.034525504662459364;  // std dev = 4.422, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.09619122574056999;  // std dev = 4.440, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07668442845190265;  // std dev = 3.482, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0739618325728854;  // std dev = 1.373, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0026600011954683;  // std dev = 7.957, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.0050286137955763525;  // std dev = 6.112, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03403181112796307;  // std dev = 34.977, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.03356008187309683;  // std dev = 8.469, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.18770070020418148;  // std dev = 1.209, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.041139043915174436;  // std dev = 6.140, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.056277925359869266;  // std dev = 3.491, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0015300104360697739;  // std dev = 8.015, 522.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=76 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.006433383875761529;  // std dev = 6.173, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.13858040256296897;  // std dev = 0.034, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
Inference time using transfer learning 2.305001735687256
Refined model CLL: -0.621418


******************************************
Best model found
******************************************
Results 

CLL : -0.825992 

AUC ROC : 0.502576 

AUC PR : 0.607194 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 916.8283853530884 

Total Inference Time : 20.87649416923523 

Total revision time: 943.8560047149658
Best scored revision CLL: -0.621418


Results 

CLL : -0.825992 

AUC ROC : 0.502576 

AUC PR : 0.607194 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 943.872082233429 

Total Inference Time : 20.87649416923523 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos examples: 581
Target test neg examples: 2222

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.5616366863250732
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3233895768107371;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2793007008737935;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23328649407241175;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18916724063245646;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1498110457236774;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11660571223754278;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08968116396383638;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06842666944178562;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051938581046928;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039290221911838154;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
Inference time using transfer learning 0.8894956111907959
Parameter learned model CLL:-0.692509 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
{'': [nan, 0.24879178701129595]}
{'': [nan, 0.24879178701138563]}
{'': [nan, 0.24879178701132204]}
{'': [nan, 0.24879178701131163]}
{'': [nan, 0.24879178701132562]}
{'': [nan, 0.24879178701133703]}
{'': [nan, 0.24879178701133225]}
{'': [nan, 0.24879178701133212]}
{'': [nan, 0.24879178701138097]}
{'': [nan, 0.24879178701133148]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true


Refining candidate
***************************
Model training time 611.0064141750336
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3441551545575258;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.5478041075133061;  // std dev = 4.315, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29690255138011334;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3782052229457276;  // std dev = 4.673, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.4768288077207307;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.247146690498353;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.6984459746020693;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3400192693747403;  // std dev = 6.348, 175.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=111 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordvenue(B, I) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19937367766283512;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.23228051201687583;  // std dev = 4.662, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.3084331950271446;  // std dev = 4.299, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15694231532784036;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.1670534496159236;  // std dev = 4.650, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.24425728659686718;  // std dev = 4.297, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.051424342215598655;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.06821007189820738;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.027832149581508127;  // std dev = 5.247, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1214121850859716;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.125400557484413;  // std dev = 4.649, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.18407014501664665;  // std dev = 4.297, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.04162130287751088;  // std dev = 7.527, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.22839066228426388;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07465821730094524;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.021057526455510952;  // std dev = 5.246, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09285073212259731;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.08645522350652073;  // std dev = 4.641, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.14642194288154894;  // std dev = 4.297, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03471874332830453;  // std dev = 7.525, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1797059618185123;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.015948249735960783;  // std dev = 5.415, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09342649776027477;  // std dev = 0.015, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.5844860419926393;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.31212590057067185;  // std dev = 1.198, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.06910485608090791;  // std dev = 33.473, 4,486.000 (wgt'ed) examples reached here.  /* #neg=2,312 #pos=2,174 */
%   | | | else return 0.08283620373951149;  // std dev = 6.317, 175.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=111 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.026593228785955388;  // std dev = 7.502, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17191951349138584;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.011338247714681957;  // std dev = 5.416, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.08580970317158733;  // std dev = 0.014, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.053267537565978296;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.21045054536738209;  // std dev = 1.178, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.057584292216708265;  // std dev = 6.199, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.13632524966246456;  // std dev = 2.866, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.021204528718556562;  // std dev = 7.524, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.06834364951326545;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.013097194305318981;  // std dev = 5.242, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.04014978645404906;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.026547139659673768;  // std dev = 4.631, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.0751472492685047;  // std dev = 4.291, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.13154062318031012;  // std dev = 2.853, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.016643630543400054;  // std dev = 7.511, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.0723622507398623;  // std dev = 1.348, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.009709861754751636;  // std dev = 5.242, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
Inference time using transfer learning 1.5458786487579346
Refined model CLL: -0.673599


******************************************
Best model found
******************************************
Results 

CLL : -0.605475 

AUC ROC : 0.55863 

AUC PR : 0.247981 

Precision : 0.47619 

Recall : 0.034423 

F1 : 0.064205 

Total Learning Time : 611.0064141750336 

Total Inference Time : 4.268552541732788 

Total revision time: 620.102283000946
Best scored revision CLL: -0.673599


Results 

CLL : -0.605475 

AUC ROC : 0.55863 

AUC PR : 0.247981 

Precision : 0.47619 

Recall : 0.034423 

F1 : 0.064205 

Total Learning Time : 620.1183605194092 

Total Inference Time : 4.268552541732788 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos examples: 747
Target test neg examples: 1068

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.65744161605835
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22286615874989274;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935154405685214;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1642887262433117;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13666278671669155;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11171555888479459;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09002630084157656;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0717310965916087;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665493302668148;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044448905993106524;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469622643034082;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
Inference time using transfer learning 0.7427089214324951
Parameter learned model CLL:-0.657691 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
{'': [nan, 0.2316985704230787]}
{'': [nan, 0.23169857042309244]}
{'': [nan, 0.23169857042312694]}
{'': [nan, 0.23169857042310815]}
{'': [nan, 0.23169857042316017]}
{'': [nan, 0.23169857042318218]}
{'': [nan, 0.23169857042308678]}
{'': [nan, 0.23169857042320033]}
{'': [nan, 0.2316985704231533]}
{'': [nan, 0.23169857042309308]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true


Refining candidate
***************************
Model training time 858.6054248809814
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.4530856439602724;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.132658739021081;  // std dev = 4.507, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.2510675953865885;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.022235622406012474;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.21825179463547345;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.11545680573570644;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06206427265859217;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.057308522353587604;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.0195072795646717;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.18442984568061996;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.11767149769024589;  // std dev = 3.499, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.08788879413761608;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.012866519535122764;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.03272964550999356;  // std dev = 6.429, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.3148905616847196;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.05433699646543532;  // std dev = 4.507, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.1517440978769802;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.09553515798730457;  // std dev = 3.502, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.05953123218416628;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.010057372635391259;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.030045760497051967;  // std dev = 6.437, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.6523402826588393;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.3430920420690735;  // std dev = 2.187, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.09337158237761742;  // std dev = 5.973, 154.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=56 */
%   | | | else return 0.1225119867979437;  // std dev = 35.267, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.09782023613416817;  // std dev = 3.489, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.08101939649353403;  // std dev = 1.367, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.0085832269519376;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.025520518758283272;  // std dev = 6.420, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2513920930395058;  // std dev = 3.554, 61.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=36 */
%   | | | else return 0.01992755696296766;  // std dev = 5.000, 120.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=39 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.07960375951149355;  // std dev = 5.947, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   | | | else return 0.09881325076368426;  // std dev = 34.798, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,997 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.08317126446355949;  // std dev = 3.488, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07084813947430675;  // std dev = 1.367, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.007475300510660796;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.022117131885277287;  // std dev = 6.419, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(A, E) )
%   | | | then return 0.3282974371421552;  // std dev = 2.229, 27.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=19 */
%   | | | else return 0.03166220905069758;  // std dev = 5.637, 154.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=56 */
%   | | else return 0.07742852543249937;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, A) )
%   | | | then return 0.20088656042457229;  // std dev = 1.567, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.00484056123387754;  // std dev = 3.397, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return 0.029112127603577443;  // std dev = 3.616, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.009083541827327965;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.2437417508044152;  // std dev = 4.222, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return -0.060205994168177505;  // std dev = 4.447, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.02998212603700301;  // std dev = 5.606, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   | | | else return 0.060898135503908955;  // std dev = 34.798, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,997 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return 0.20214727382701997;  // std dev = 1.565, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.004225951865138032;  // std dev = 3.388, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.0029452376859180913;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.01961015720466489;  // std dev = 6.412, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | | then return 0.16116444062177704;  // std dev = 1.746, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.406482674754693;  // std dev = 1.229, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.01805278449051485;  // std dev = 5.634, 154.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=56 */
%   | | | else return 0.04669074557509736;  // std dev = 35.279, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.06660324541163101;  // std dev = 3.470, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06929561555565733;  // std dev = 1.341, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.0025544792394455434;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.016922974122978673;  // std dev = 6.412, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(A, D) )
%   | | | then return 0.030945948388052875;  // std dev = 34.181, 4,955.000 (wgt'ed) examples reached here.  /* #neg=3,030 #pos=1,925 */
%   | | | else return 0.04559152939785571;  // std dev = 8.382, 425.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=100 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.11306654267424242;  // std dev = 4.674, 127.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=28 */
%   | | | else return 0.036605471789991274;  // std dev = 8.110, 335.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=105 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.230134567391546;  // std dev = 3.246, 43.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   | | | else return 0.45312720953859087;  // std dev = 2.553, 42.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.023317983934878904;  // std dev = 6.479, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.16524101665165705;  // std dev = 0.134, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
Inference time using transfer learning 1.386117696762085
Refined model CLL: -0.638802


******************************************
Best model found
******************************************
Results 

CLL : -0.677437 

AUC ROC : 0.544766 

AUC PR : 0.46012 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 858.6054248809814 

Total Inference Time : 6.484561443328857 

Total revision time: 871.0213179588318
Best scored revision CLL: -0.638802


Results 

CLL : -0.677437 

AUC ROC : 0.544766 

AUC PR : 0.46012 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 871.0373954772949 

Total Inference Time : 6.484561443328857 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos examples: 550
Target test neg examples: 500

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.064160585403442
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111321945071477;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834400110087453;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15602704447107354;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13017937030369744;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10682752122740194;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08647162920053506;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06923052182131084;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0549522535276705;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043329703588355264;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399163325643134;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
Inference time using transfer learning 0.72501540184021
Parameter learned model CLL:-0.650857 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
{'': [nan, 0.22838607798553479]}
{'': [nan, 0.22838607798557076]}
{'': [nan, 0.2283860779855225]}
{'': [nan, 0.22838607798565272]}
{'': [nan, 0.22838607798564442]}
{'': [nan, 0.22838607798554508]}
{'': [nan, 0.2283860779856207]}
{'': [nan, 0.22838607798554997]}
{'': [nan, 0.22838607798564564]}
{'': [nan, 0.22838607798561553]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true


Refining candidate
***************************
Model training time 928.6530513763428
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2282181392517563;  // std dev = 36.707, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.21069130798086477;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.5070851053122791;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.0607699838194067;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.035677024987153;  // std dev = 8.061, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return 0.0021489350995115234;  // std dev = 5.551, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19815347585533308;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1821443572831206;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.30463403419907914;  // std dev = 4.674, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.446408274938219;  // std dev = 4.609, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.06460962383370238;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.05353224823028762;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.0255033530632892;  // std dev = 9.638, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1680879529865122;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.15483203266496454;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2497725814972297;  // std dev = 4.671, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.36538039098940883;  // std dev = 4.604, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.056750752594560146;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.0318161457508581;  // std dev = 8.051, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.004908839713764325;  // std dev = 5.548, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13967524500406545;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1283611316378811;  // std dev = 8.212, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1835423643603244;  // std dev = 4.656, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3001173415140894;  // std dev = 4.585, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.009876449732165378;  // std dev = 7.217, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.07719286864858146;  // std dev = 3.920, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -4.5099798649666606E-5;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.14464222507507704;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11398341070029144;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.10525038208708755;  // std dev = 8.213, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14128681632488163;  // std dev = 4.654, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.23024351682844135;  // std dev = 4.582, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.0517689337201531;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.05159350961948597;  // std dev = 1.659, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.01827889049862032;  // std dev = 9.628, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.22810840528261486;  // std dev = 1.725, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.4357791751928059;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.09068670108632806;  // std dev = 37.541, 6,056.000 (wgt'ed) examples reached here.  /* #neg=3,824 #pos=2,232 */
%   | | | else return 0.1418527056509818;  // std dev = 6.545, 182.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then return -0.045918039691922985;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.023766007126266548;  // std dev = 8.043, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.0072041862758601;  // std dev = 5.544, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07300286372927395;  // std dev = 36.699, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.06579282616736204;  // std dev = 8.216, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06067932412913759;  // std dev = 4.644, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.15032151880898115;  // std dev = 4.571, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.03855410737110094;  // std dev = 6.058, 238.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=46 */
%   | | | else return -0.0032741789204410437;  // std dev = 5.536, 244.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=36 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.005127747632900584;  // std dev = 5.531, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.12888830020623968;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05753698725129381;  // std dev = 36.699, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.05215194843005949;  // std dev = 8.217, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.044821253529442356;  // std dev = 4.643, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.11391016838293916;  // std dev = 4.570, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0059466643320563485;  // std dev = 7.209, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.0565177726189674;  // std dev = 3.916, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.004461408643232841;  // std dev = 5.531, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.11509602334414047;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04506156904501873;  // std dev = 36.698, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.0407381291949424;  // std dev = 8.218, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.024044364960991937;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.0949863272951096;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05230400388109552;  // std dev = 0.272, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.04534496986388891;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.012293683071021962;  // std dev = 9.614, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.035099820939727765;  // std dev = 36.698, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.03192847156932486;  // std dev = 8.218, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.016918219957477464;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.072986887129812;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04637396200988765;  // std dev = 0.272, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.017194989059778797;  // std dev = 8.031, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.008548719391191074;  // std dev = 5.538, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
Inference time using transfer learning 1.654045820236206
Refined model CLL: -0.636634


******************************************
Best model found
******************************************
Results 

CLL : -0.75211 

AUC ROC : 0.643069 

AUC PR : 0.647396 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 928.6530513763428 

Total Inference Time : 25.45247769355774 

Total revision time: 960.516841173172
Best scored revision CLL: -0.636634


Results 

CLL : -0.75211 

AUC ROC : 0.643069 

AUC PR : 0.647396 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 960.5329186916351 

Total Inference Time : 25.45247769355774 

Run: 3

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.956432342529297
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23749878473433458;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060618178036594;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17453024670666556;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446407501339931;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11767244800090106;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430962074455004;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.074707177635281;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865473052223055;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574473720619161;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549889774086067;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning 0.7261683940887451
Parameter learned model CLL:-0.665378 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
{'': [nan, 0.23544354121679714]}
{'': [nan, 0.23544354121687253]}
{'': [nan, 0.23544354121689864]}
{'': [nan, 0.23544354121683903]}
{'': [nan, 0.2354435412168111]}
{'': [nan, 0.235443541216926]}
{'': [nan, 0.23544354121692726]}
{'': [nan, 0.23544354121684707]}
{'': [nan, 0.23544354121692693]}
{'': [nan, 0.23544354121681993]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true


Refining candidate
***************************
Model training time 960.7873477935791
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2559515161947286;  // std dev = 37.062, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.23063215657601857;  // std dev = 8.346, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5724346493852271;  // std dev = 3.964, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14905802600860327;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.04473174432383054;  // std dev = 8.508, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2219198343638166;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.19893044877511365;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3578878444734629;  // std dev = 4.780, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5042038727151713;  // std dev = 3.938, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.043688297190162526;  // std dev = 8.421, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.08180409716690137;  // std dev = 3.621, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.03579563578659918;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18741251482675658;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.16852367080292127;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2903869442291748;  // std dev = 4.777, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.40960545966947604;  // std dev = 3.930, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13750710216629658;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07786764027423052;  // std dev = 1.361, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.052694590022659825;  // std dev = 3.529, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.03072223161722633;  // std dev = 9.642, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1546464444443679;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.13877229675309688;  // std dev = 8.358, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21276715551903774;  // std dev = 4.765, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.33529130189735995;  // std dev = 3.900, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.03212084929406097;  // std dev = 8.405, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.07218185171731772;  // std dev = 3.621, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.0264228755700035;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11362258592065524;  // std dev = 0.018, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12507102235802825;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.11301079645083849;  // std dev = 8.359, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.16116179168107542;  // std dev = 4.763, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.2558166315289217;  // std dev = 3.895, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11399079917208746;  // std dev = 3.363, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07066317458273073;  // std dev = 1.360, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.04172434941178142;  // std dev = 3.526, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.022228741697258376;  // std dev = 9.638, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09961342423151819;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.08991633070098659;  // std dev = 8.363, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4109643820675695;  // std dev = 0.894, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.14086348930500883;  // std dev = 6.059, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10642639621540456;  // std dev = 3.351, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.019508040066430275;  // std dev = 8.486, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.08017573213872498;  // std dev = 1.350, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.022179047037210416;  // std dev = 5.771, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07835757136245315;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.07134003523012979;  // std dev = 8.364, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07044381976865602;  // std dev = 4.736, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.17051475811233047;  // std dev = 3.870, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09365489482618543;  // std dev = 3.354, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.0658577780149363;  // std dev = 1.362, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.027612935874162834;  // std dev = 3.507, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.016388146578147772;  // std dev = 9.638, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06110814766171418;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.05571808877883244;  // std dev = 8.366, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.28721541417915564;  // std dev = 0.892, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.07735719046949373;  // std dev = 6.045, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.0856721143268228;  // std dev = 3.341, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.01369554162803995;  // std dev = 8.479, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.014592567241674124;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.10377563069066717;  // std dev = 0.037, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04732794080126448;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.043536294977156706;  // std dev = 8.367, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.0297555066268353;  // std dev = 4.732, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.11041812987429422;  // std dev = 3.859, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07558484581578531;  // std dev = 3.347, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.05992748322656553;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.011427593587530264;  // std dev = 8.470, 473.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=89 */
%   | | | else return 0.014490003033793166;  // std dev = 5.774, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03649459855108197;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.03356677994741378;  // std dev = 8.369, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.01225406502569225;  // std dev = 4.721, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.09699635953675384;  // std dev = 3.856, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.06939841390341095;  // std dev = 3.333, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.00921642925072302;  // std dev = 8.474, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.11424172900595923;  // std dev = 0.949, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.012802636285328337;  // std dev = 5.844, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
Inference time using transfer learning 1.6874220371246338
Refined model CLL: -0.650448


******************************************
Best model found
******************************************
Results 

CLL : -0.624446 

AUC ROC : 0.582146 

AUC PR : 0.413928 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 960.7873477935791 

Total Inference Time : 26.02949810028076 

Total revision time: 993.1381366252899
Best scored revision CLL: -0.650448


Results 

CLL : -0.624446 

AUC ROC : 0.582146 

AUC PR : 0.413928 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 993.1538598537445 

Total Inference Time : 26.02949810028076 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.9006805419921875
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19217629976339767;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16713638120911187;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14258842882632106;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11954222017840668;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09871555462348185;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0804912793883634;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495809409335633;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05199278934611344;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041346460903546045;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03271420126321413;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
Inference time using transfer learning 0.7600147724151611
Parameter learned model CLL:-0.63853 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
{'': [nan, 0.22245308431952357]}
{'': [nan, 0.22245308431959404]}
{'': [nan, 0.22245308431958877]}
{'': [nan, 0.22245308431962857]}
{'': [nan, 0.22245308431955624]}
{'': [nan, 0.22245308431956373]}
{'': [nan, 0.22245308431964844]}
{'': [nan, 0.2224530843195216]}
{'': [nan, 0.22245308431962652]}
{'': [nan, 0.22245308431955077]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true


Refining candidate
***************************
Model training time 764.6620981693268
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21330135701834016;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.2171232940738674;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.4250279159912295;  // std dev = 6.209, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001355197131893661;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1852931461937749;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.18876403158703928;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.32507976765547286;  // std dev = 4.477, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.42515523560317653;  // std dev = 4.476, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12034593308451501;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07683979386435784;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0034512830147095;  // std dev = 8.041, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006783280105919428;  // std dev = 6.050, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15754756052067012;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.16042305417489883;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.25823475432072773;  // std dev = 4.469, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.3560556535131383;  // std dev = 4.466, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11114943689428064;  // std dev = 3.514, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.061772009516298104;  // std dev = 1.363, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.048782996064003825;  // std dev = 3.652, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0017651554456613644;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13136598029894192;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.1338033667505171;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.41990355905140664;  // std dev = 1.258, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.23214833259463102;  // std dev = 6.182, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09790896252501656;  // std dev = 3.509, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07420453866651044;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04693695700445052;  // std dev = 3.638, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001549902241963185;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10772301980933435;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.10960511197842085;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.38890237105478825;  // std dev = 1.221, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.17414498903490014;  // std dev = 6.167, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08940856774437693;  // std dev = 3.507, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06076119067979115;  // std dev = 1.365, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.03459633598878927;  // std dev = 3.636, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0013611223952214495;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), venue(F, A) )
%   | | | then return 0.6524577804650762;  // std dev = 0.276, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.397952341325642;  // std dev = 2.002, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.08586724036081278;  // std dev = 35.908, 5,638.000 (wgt'ed) examples reached here.  /* #neg=3,642 #pos=1,996 */
%   | | | else return 0.13690614099949824;  // std dev = 6.288, 164.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=94 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.20042180880514238;  // std dev = 1.590, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.014153799946041712;  // std dev = 3.407, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.02961526976481225;  // std dev = 3.635, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0011955088981004944;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06972797074997712;  // std dev = 34.979, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.06985575459995409;  // std dev = 8.469, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06480165900869746;  // std dev = 4.428, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.1458900537861621;  // std dev = 4.446, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07063487630085276;  // std dev = 3.502, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.05952107833334658;  // std dev = 1.338, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.02526284910433853;  // std dev = 3.635, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001050179483640711;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05530446202220921;  // std dev = 34.978, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.05518139679680054;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.0402752860329265;  // std dev = 4.425, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.11760512812638313;  // std dev = 4.439, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.06974917754420858;  // std dev = 3.489, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07854159684284122;  // std dev = 1.369, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -7.238753353158475E-4;  // std dev = 8.006, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.005171746854847606;  // std dev = 6.052, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04356805498005884;  // std dev = 34.978, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.043391788327047646;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.028610317680501242;  // std dev = 4.421, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.09006778144723838;  // std dev = 4.441, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.05837243548204247;  // std dev = 3.488, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06867085546826919;  // std dev = 1.368, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.002505863511759013;  // std dev = 7.957, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.007584086110339589;  // std dev = 6.116, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), venue(F, B) )
%   | | | then return 0.47538567089173167;  // std dev = 0.244, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2689020710364153;  // std dev = 2.004, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.03310148392705167;  // std dev = 35.908, 5,638.000 (wgt'ed) examples reached here.  /* #neg=3,642 #pos=1,996 */
%   | | | else return 0.04180991710831443;  // std dev = 6.265, 164.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=94 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.16712750929390693;  // std dev = 1.581, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.005460229948559692;  // std dev = 3.386, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.0037216892588025634;  // std dev = 7.952, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.0064474738790551555;  // std dev = 6.122, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
Inference time using transfer learning 2.2759745121002197
Refined model CLL: -0.621238


******************************************
Best model found
******************************************
Results 

CLL : -0.826042 

AUC ROC : 0.506108 

AUC PR : 0.609433 

Precision : 0.75 

Recall : 0.038911 

F1 : 0.073983 

Total Learning Time : 764.6620981693268 

Total Inference Time : 18.217252016067505 

Total revision time: 789.1293592453003
Best scored revision CLL: -0.621238


Results 

CLL : -0.826042 

AUC ROC : 0.506108 

AUC PR : 0.609433 

Precision : 0.75 

Recall : 0.038911 

F1 : 0.073983 

Total Learning Time : 789.1450824737549 

Total Inference Time : 18.217252016067505 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos examples: 581
Target test neg examples: 2222

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.547430992126465
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3233895768107371;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2793007008737935;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23328649407241175;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18916724063245646;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1498110457236774;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11660571223754278;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08968116396383638;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06842666944178562;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051938581046928;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039290221911838154;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
Inference time using transfer learning 0.917426347732544
Parameter learned model CLL:-0.692509 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
{'': [nan, 0.24879178701129595]}
{'': [nan, 0.24879178701138563]}
{'': [nan, 0.24879178701132204]}
{'': [nan, 0.24879178701131163]}
{'': [nan, 0.24879178701132562]}
{'': [nan, 0.24879178701133703]}
{'': [nan, 0.24879178701133225]}
{'': [nan, 0.24879178701133212]}
{'': [nan, 0.24879178701138097]}
{'': [nan, 0.24879178701133148]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true


Refining candidate
***************************
Model training time 612.3744056224823
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3441551545575258;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.5478041075133061;  // std dev = 4.315, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29690255138011334;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.37820522294572756;  // std dev = 4.673, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.4768288077207307;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.247146690498353;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.5131337382016201;  // std dev = 1.246, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.33611531358553326;  // std dev = 6.231, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19937367766283512;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.2304859013575164;  // std dev = 4.659, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.31038115199810856;  // std dev = 4.305, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15694231532784036;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.16605286691456164;  // std dev = 4.652, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.2453097669842213;  // std dev = 4.296, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.05142434221559883;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.06821007189820738;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.02783214958150811;  // std dev = 5.247, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1214121850859716;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.288609621203731;  // std dev = 1.226, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.14604447598759612;  // std dev = 6.209, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.041621302877510896;  // std dev = 7.527, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.22839066228426375;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07465821730094528;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.02105752645551097;  // std dev = 5.246, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09285073212259731;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.08440476038056008;  // std dev = 4.638, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.14848528413842121;  // std dev = 4.298, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.034718743328304415;  // std dev = 7.525, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1797059618185123;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.015948249735960783;  // std dev = 5.415, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09342649776027478;  // std dev = 0.015, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07049226145065242;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.05648116176423916;  // std dev = 4.640, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.11924534094336785;  // std dev = 4.287, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.026593228785955342;  // std dev = 7.502, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17191951349138584;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.011338247714681976;  // std dev = 5.416, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.08580970317158733;  // std dev = 0.014, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.23808682350739446;  // std dev = 4.115, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.14663456036127212;  // std dev = 2.872, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.04504491562411394;  // std dev = 4.958, 100.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=49 */
%   | | | else return 0.05266192660155241;  // std dev = 33.324, 4,459.000 (wgt'ed) examples reached here.  /* #neg=2,272 #pos=2,187 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordauthor(L, J) )
%   | | | then return 0.13632524966246445;  // std dev = 2.866, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.021204528718556697;  // std dev = 7.524, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.06834364951326544;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.013097194305318976;  // std dev = 5.242, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.21509046444372382;  // std dev = 4.087, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.14814610988737514;  // std dev = 2.950, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.039096561143734575;  // std dev = 33.092, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.04476886662219891;  // std dev = 6.193, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.13154062318031012;  // std dev = 2.853, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.016643630543400068;  // std dev = 7.511, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.005983924577030058;  // std dev = 5.417, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.0790882061177535;  // std dev = 0.019, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
Inference time using transfer learning 1.5805768966674805
Refined model CLL: -0.672741


******************************************
Best model found
******************************************
Results 

CLL : -0.602573 

AUC ROC : 0.559597 

AUC PR : 0.252185 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 612.3744056224823 

Total Inference Time : 4.239731788635254 

Total revision time: 621.4317746162415
Best scored revision CLL: -0.672741


Results 

CLL : -0.602573 

AUC ROC : 0.559597 

AUC PR : 0.252185 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 621.447497844696 

Total Inference Time : 4.239731788635254 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos examples: 747
Target test neg examples: 1068

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.344021558761597
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22286615874989274;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935154405685214;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1642887262433117;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13666278671669155;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11171555888479459;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09002630084157656;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0717310965916087;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665493302668148;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044448905993106524;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469622643034082;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
Inference time using transfer learning 0.7605440616607666
Parameter learned model CLL:-0.657691 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
{'': [nan, 0.2316985704230787]}
{'': [nan, 0.23169857042309244]}
{'': [nan, 0.23169857042312694]}
{'': [nan, 0.23169857042310815]}
{'': [nan, 0.23169857042316017]}
{'': [nan, 0.23169857042318218]}
{'': [nan, 0.23169857042308678]}
{'': [nan, 0.23169857042320033]}
{'': [nan, 0.2316985704231533]}
{'': [nan, 0.23169857042309308]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true


Refining candidate
***************************
Model training time 939.4246509075165
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2517856350625112;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.018505282538265628;  // std dev = 7.775, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.04094463402424335;  // std dev = 6.456, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.4195923898729339;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.09916548493374269;  // std dev = 4.507, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.1930767336437534;  // std dev = 5.947, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   | | | else return 0.2183083520155745;  // std dev = 34.798, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,997 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.12800246769009244;  // std dev = 3.503, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07644847710697812;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.014740337475085496;  // std dev = 7.775, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.036952367991686524;  // std dev = 6.442, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1844222960758191;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.11125506497562064;  // std dev = 3.502, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06731420093509295;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.052057311356765515;  // std dev = 3.648, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.01631598687614943;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.3148839007598306;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.05433132411323879;  // std dev = 4.507, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.15173719883008296;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.10450654626176685;  // std dev = 3.495, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07425166290674175;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.010600549644771539;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.028677565239113887;  // std dev = 6.430, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.32226264087633755;  // std dev = 4.298, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.013596467749127664;  // std dev = 4.570, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.12236633102058009;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.0892771958230943;  // std dev = 3.494, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06525405384246863;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.03980546426874351;  // std dev = 3.630, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.012130569492428312;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0982199352241606;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.20512061230739925;  // std dev = 1.573, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.010187373552616516;  // std dev = 3.401, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.03420297649445273;  // std dev = 3.629, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.010560811629034543;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07739231021175794;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.08077352126248877;  // std dev = 3.479, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07385730797478592;  // std dev = 1.369, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.004647948874889906;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.021254915533754453;  // std dev = 6.414, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.21386543340834754;  // std dev = 4.288, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return -0.024430267360276533;  // std dev = 4.576, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.05977710346544511;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.20011917914859068;  // std dev = 1.565, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.00239180769756602;  // std dev = 3.388, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.004036299332581113;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.01836331276436937;  // std dev = 6.413, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(A, E) )
%   | | | then return 0.35740652401700584;  // std dev = 2.260, 27.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=19 */
%   | | | else return 0.0037877387203399024;  // std dev = 5.720, 154.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=56 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.013017662804591365;  // std dev = 5.706, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   | | | else return 0.04749929366630165;  // std dev = 34.798, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,997 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.06543102212245246;  // std dev = 3.470, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.0698226618360542;  // std dev = 1.341, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.002649742549268476;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.016998859510001622;  // std dev = 6.413, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(A, D) )
%   | | | then return 0.030779357260937074;  // std dev = 34.194, 4,955.000 (wgt'ed) examples reached here.  /* #neg=3,030 #pos=1,925 */
%   | | | else return 0.04639304244374736;  // std dev = 8.390, 425.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=100 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.11300108912966503;  // std dev = 4.674, 127.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=28 */
%   | | | else return 0.03673986279325484;  // std dev = 8.109, 335.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=105 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.23264718917269286;  // std dev = 3.234, 43.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   | | | else return 0.4600683110481503;  // std dev = 2.571, 42.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02336824279110508;  // std dev = 6.480, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.16551820195906392;  // std dev = 0.134, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
Inference time using transfer learning 1.4494256973266602
Refined model CLL: -0.63921


******************************************
Best model found
******************************************
Results 

CLL : -0.677503 

AUC ROC : 0.543566 

AUC PR : 0.458612 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 939.4246509075165 

Total Inference Time : 6.344763278961182 

Total revision time: 951.3520774841309
Best scored revision CLL: -0.63921


Results 

CLL : -0.677503 

AUC ROC : 0.543566 

AUC PR : 0.458612 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 951.3678007125854 

Total Inference Time : 6.344763278961182 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos examples: 550
Target test neg examples: 500

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.368907928466797
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111321945071477;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834400110087453;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15602704447107354;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13017937030369744;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10682752122740194;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08647162920053506;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06923052182131084;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0549522535276705;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043329703588355264;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399163325643134;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
Inference time using transfer learning 0.6712300777435303
Parameter learned model CLL:-0.650857 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
{'': [nan, 0.22838607798553479]}
{'': [nan, 0.22838607798557076]}
{'': [nan, 0.2283860779855225]}
{'': [nan, 0.22838607798565272]}
{'': [nan, 0.22838607798564442]}
{'': [nan, 0.22838607798554508]}
{'': [nan, 0.2283860779856207]}
{'': [nan, 0.22838607798554997]}
{'': [nan, 0.22838607798564564]}
{'': [nan, 0.22838607798561553]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true


Refining candidate
***************************
Model training time 1090.8888249397278
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2282181392517563;  // std dev = 36.707, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.21069130798086477;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.5070851053122791;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.0607699838194067;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.0607699838194067;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.02836170105695747;  // std dev = 9.640, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.198153475855333;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1821443572831206;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.30463403419907914;  // std dev = 4.674, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.4464082749382189;  // std dev = 4.609, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05353224823028762;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0329606443652956;  // std dev = 8.057, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.0011242011748237002;  // std dev = 5.550, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1680879529865121;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.15483203266496443;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.24977258149722978;  // std dev = 4.671, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3653803909894089;  // std dev = 4.604, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05687552734234234;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.031836430076870745;  // std dev = 8.051, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.004924301858648661;  // std dev = 5.548, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1396752450040655;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.12836113163788115;  // std dev = 8.212, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.18354236436032442;  // std dev = 4.656, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3001173415140894;  // std dev = 4.585, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.050462921953092495;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.050249947841388885;  // std dev = 1.659, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.020024496211394533;  // std dev = 9.635, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11398341070029172;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.10525038208708752;  // std dev = 8.213, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14128681632488152;  // std dev = 4.654, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.23024351682844135;  // std dev = 4.582, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.008654132714183723;  // std dev = 7.213, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.07483422667255402;  // std dev = 3.919, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.0023901781520625355;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.14708336130398916;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.091703854916118;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.08453605238431222;  // std dev = 8.215, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.0952646132699769;  // std dev = 4.645, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.18546709000766623;  // std dev = 4.571, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.006295838650440727;  // std dev = 7.206, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.07371443570564185;  // std dev = 3.919, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.0032355224372776115;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.12957230072958692;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07291392488816677;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.06763151292090486;  // std dev = 8.216, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07112594416158742;  // std dev = 4.644, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.14041504467441798;  // std dev = 4.570, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0055387472919279064;  // std dev = 7.206, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.06393785701456171;  // std dev = 3.919, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.0029655215351741585;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1156465794953884;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.19563577274163912;  // std dev = 1.723, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.40152927014561823;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.056606973123664146;  // std dev = 37.540, 6,056.000 (wgt'ed) examples reached here.  /* #neg=3,824 #pos=2,232 */
%   | | | else return 0.08052337276723491;  // std dev = 6.525, 182.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then return -0.04778991676637513;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return -0.04756485190826527;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.013299198773604609;  // std dev = 9.615, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.045061040444448086;  // std dev = 36.698, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.04071170569225238;  // std dev = 8.218, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.024122421405833948;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.09493651944485423;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.003059234684668118;  // std dev = 7.197, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.06140019670284385;  // std dev = 3.917, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.0051900207599591235;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.10558388650372394;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03510010944324874;  // std dev = 36.698, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.03189355763414617;  // std dev = 8.218, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.0169415846006288;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.07298314394824709;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04309306036841615;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.04285204539435502;  // std dev = 1.661, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.010560381374786163;  // std dev = 9.609, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
Inference time using transfer learning 1.7184815406799316
Refined model CLL: -0.636596


******************************************
Best model found
******************************************
Results 

CLL : -0.751892 

AUC ROC : 0.643113 

AUC PR : 0.647407 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1090.8888249397278 

Total Inference Time : 24.640785455703735 

Total revision time: 1122.2476124763489
Best scored revision CLL: -0.636596


Results 

CLL : -0.751892 

AUC ROC : 0.643113 

AUC PR : 0.647407 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1122.2633357048035 

Total Inference Time : 24.640785455703735 

Run: 4

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.2854132652282715
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23749878473433458;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060618178036594;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17453024670666556;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446407501339931;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11767244800090106;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430962074455004;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.074707177635281;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865473052223055;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574473720619161;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549889774086067;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning 0.7126555442810059
Parameter learned model CLL:-0.665378 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
{'': [nan, 0.23544354121679714]}
{'': [nan, 0.23544354121687253]}
{'': [nan, 0.23544354121689864]}
{'': [nan, 0.23544354121683903]}
{'': [nan, 0.2354435412168111]}
{'': [nan, 0.235443541216926]}
{'': [nan, 0.23544354121692726]}
{'': [nan, 0.23544354121684707]}
{'': [nan, 0.23544354121692693]}
{'': [nan, 0.23544354121681993]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true


Refining candidate
***************************
Model training time 1071.5073959827423
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2559515161947286;  // std dev = 37.062, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.23063215657601857;  // std dev = 8.346, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5724346493852271;  // std dev = 3.964, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14905802600860327;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.04473174432383054;  // std dev = 8.508, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.22191983436381657;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.19893044877511365;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3578878444734629;  // std dev = 4.780, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5042038727151713;  // std dev = 3.938, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.043688297190162755;  // std dev = 8.421, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.08180409716690136;  // std dev = 3.621, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.03579563578659918;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18741251482675658;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.16852367080292122;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2903869442291748;  // std dev = 4.777, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.409605459669476;  // std dev = 3.930, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.03722742813849731;  // std dev = 8.421, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.07679839156070549;  // std dev = 3.619, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.031124381371230057;  // std dev = 5.925, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15464644444436806;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.13877229675309696;  // std dev = 8.358, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21276715551903774;  // std dev = 4.765, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.33529130189735984;  // std dev = 3.900, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13246612281184025;  // std dev = 3.363, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.08101206520334356;  // std dev = 1.360, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02872710536353657;  // std dev = 8.435, 465.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=88 */
%   | | | else return 0.026939434776364544;  // std dev = 5.849, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12507102235802825;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.1130107964508382;  // std dev = 8.359, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.45876476685087614;  // std dev = 0.900, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.19126976018982186;  // std dev = 6.073, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.042431615349447935;  // std dev = 7.648, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return 0.011760552472553181;  // std dev = 5.024, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.023012767391220677;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.10201500425826569;  // std dev = 0.015, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09961342423151814;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.0899163307009866;  // std dev = 8.363, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.3876145758721107;  // std dev = 0.887, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.14205848111588731;  // std dev = 6.062, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10884184005036439;  // std dev = 3.359, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07424739068099377;  // std dev = 1.358, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.04201311335596967;  // std dev = 3.528, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.017992327311913296;  // std dev = 9.635, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07835757136245303;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.07134003523012984;  // std dev = 8.364, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07161067759080969;  // std dev = 4.729, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.16907744706606406;  // std dev = 3.878, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09207075269871423;  // std dev = 3.359, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.016677713256882148;  // std dev = 8.492, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.016509279615264588;  // std dev = 5.921, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.09350635786061225;  // std dev = 0.026, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06110814766171405;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.055718088778832275;  // std dev = 8.366, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04145456097106714;  // std dev = 4.723, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.14287914245027342;  // std dev = 3.861, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.015578905619583494;  // std dev = 8.380, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.05422879354203312;  // std dev = 3.625, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.01383178522918275;  // std dev = 5.931, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.08588002890370923;  // std dev = 0.024, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04732794080126443;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.043536294977156574;  // std dev = 8.367, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.2538397348930854;  // std dev = 0.883, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.056842938867209127;  // std dev = 6.034, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10076970832516784;  // std dev = 3.347, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.09715566679551178;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.023492146059846782;  // std dev = 3.483, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.010610175839730392;  // std dev = 9.631, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03649459855108182;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.033566779947413916;  // std dev = 8.369, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.012870016197528414;  // std dev = 4.714, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.09607821198782882;  // std dev = 3.857, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.02787735911679569;  // std dev = 7.631, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return -0.010437240222687133;  // std dev = 4.990, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.009895229585174468;  // std dev = 5.922, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.07862268452770049;  // std dev = 0.020, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
Inference time using transfer learning 1.6389131546020508
Refined model CLL: -0.650466


******************************************
Best model found
******************************************
Results 

CLL : -0.624284 

AUC ROC : 0.582695 

AUC PR : 0.415179 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1071.5073959827423 

Total Inference Time : 26.211141347885132 

Total revision time: 1104.438618183136
Best scored revision CLL: -0.650466


Results 

CLL : -0.624284 

AUC ROC : 0.582695 

AUC PR : 0.415179 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1104.4549705982208 

Total Inference Time : 26.211141347885132 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.8983800411224365
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19217629976339767;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16713638120911187;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14258842882632106;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11954222017840668;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09871555462348185;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0804912793883634;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495809409335633;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05199278934611344;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041346460903546045;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03271420126321413;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
Inference time using transfer learning 0.7384207248687744
Parameter learned model CLL:-0.63853 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
{'': [nan, 0.22245308431952357]}
{'': [nan, 0.22245308431959404]}
{'': [nan, 0.22245308431958877]}
{'': [nan, 0.22245308431962857]}
{'': [nan, 0.22245308431955624]}
{'': [nan, 0.22245308431956373]}
{'': [nan, 0.22245308431964844]}
{'': [nan, 0.2224530843195216]}
{'': [nan, 0.22245308431962652]}
{'': [nan, 0.22245308431955077]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true


Refining candidate
***************************
Model training time 931.3162882328033
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21330135701834016;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.2171232940738674;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.4250279159912295;  // std dev = 6.209, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.004584387893347046;  // std dev = 8.054, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006937862435151973;  // std dev = 6.050, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1852931461937749;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.18876403158703942;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.32507976765547286;  // std dev = 4.477, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.42515523560317653;  // std dev = 4.476, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11168486493253202;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.05972507874716161;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.06486143067461063;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0020235307543291026;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15754756052067012;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.16042305417489877;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.25823475432072773;  // std dev = 4.469, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.3560556535131382;  // std dev = 4.466, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11967205735959609;  // std dev = 3.509, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0790632182576007;  // std dev = 1.365, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.001379915207862713;  // std dev = 7.975, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.006339281804750215;  // std dev = 6.121, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13136598029894206;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.13380336675051696;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4199035590514065;  // std dev = 1.258, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.2321483325946309;  // std dev = 6.182, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09601869314251373;  // std dev = 3.513, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.055080209726572585;  // std dev = 1.363, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04834754170580333;  // std dev = 3.652, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0021758449077044217;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10772301980933419;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.1096051119784209;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.14491250821261226;  // std dev = 4.450, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.22664969562564732;  // std dev = 4.458, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09730605579851427;  // std dev = 3.501, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07588016812098027;  // std dev = 1.367, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.038714772341778385;  // std dev = 3.627, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0019099104613947494;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08711677196357485;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.08864762197227534;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.34386803788425124;  // std dev = 1.223, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.12878224981687994;  // std dev = 6.156, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.014719192523239942;  // std dev = 7.442, 410.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=67 */
%   | | | else return -0.008015921387883766;  // std dev = 4.641, 175.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=26 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.008513608503804669;  // std dev = 6.183, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.13862631278322132;  // std dev = 0.026, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06968385538081784;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.0708104284025158;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06623350170952562;  // std dev = 4.428, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.1448370314655894;  // std dev = 4.446, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08347912493314427;  // std dev = 3.502, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06573524821005546;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.032105073742965944;  // std dev = 3.622, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.002499962891475209;  // std dev = 9.359, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05525671877644015;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.05613048194530417;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.2398083831941656;  // std dev = 1.221, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.07003204941755792;  // std dev = 6.145, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.06978101990493306;  // std dev = 3.497, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0017826671220206307;  // std dev = 8.019, 522.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=76 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.006801426675289458;  // std dev = 6.181, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.12203459101099219;  // std dev = 0.022, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.38752893481095346;  // std dev = 2.082, 24.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | | else return 0.0066097332095973755;  // std dev = 5.583, 145.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=48 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.04328923537091845;  // std dev = 35.490, 5,500.000 (wgt'ed) examples reached here.  /* #neg=3,547 #pos=1,953 */
%   | | | else return 0.05260936458087705;  // std dev = 6.145, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.18877242503568342;  // std dev = 1.586, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 7.011904383613855E-4;  // std dev = 3.387, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.028526263376259877;  // std dev = 3.625, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0021897147732673197;  // std dev = 9.357, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.034165166045046984;  // std dev = 34.978, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.03295448524575905;  // std dev = 8.469, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.015435846135299686;  // std dev = 4.416, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.0762349339252876;  // std dev = 4.438, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.05514363324960303;  // std dev = 3.492, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06163733261004351;  // std dev = 1.335, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0031640693808017884;  // std dev = 7.958, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.007427830619534316;  // std dev = 6.114, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
Inference time using transfer learning 2.2098045349121094
Refined model CLL: -0.621437


******************************************
Best model found
******************************************
Results 

CLL : -0.826035 

AUC ROC : 0.502574 

AUC PR : 0.607171 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 931.3162882328033 

Total Inference Time : 20.597476482391357 

Total revision time: 958.0741894245148
Best scored revision CLL: -0.621437


Results 

CLL : -0.826035 

AUC ROC : 0.502574 

AUC PR : 0.607171 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 958.0905418395996 

Total Inference Time : 20.597476482391357 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos examples: 581
Target test neg examples: 2222

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.5962846279144287
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3233895768107371;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2793007008737935;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23328649407241175;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18916724063245646;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1498110457236774;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11660571223754278;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08968116396383638;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06842666944178562;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051938581046928;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039290221911838154;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
Inference time using transfer learning 0.8539688587188721
Parameter learned model CLL:-0.692509 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
{'': [nan, 0.24879178701129595]}
{'': [nan, 0.24879178701138563]}
{'': [nan, 0.24879178701132204]}
{'': [nan, 0.24879178701131163]}
{'': [nan, 0.24879178701132562]}
{'': [nan, 0.24879178701133703]}
{'': [nan, 0.24879178701133225]}
{'': [nan, 0.24879178701133212]}
{'': [nan, 0.24879178701138097]}
{'': [nan, 0.24879178701133148]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true


Refining candidate
***************************
Model training time 671.7336401939392
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3441551545575258;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.5478041075133061;  // std dev = 4.315, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29690255138011334;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3782052229457276;  // std dev = 4.673, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.4768288077207307;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.247146690498353;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.51313373820162;  // std dev = 1.246, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.3361153135855333;  // std dev = 6.231, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19937367766283512;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.5810353256529529;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2641958358309171;  // std dev = 6.342, 175.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=111 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordvenue(B, I) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15694231532784036;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.1666854607548881;  // std dev = 4.652, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.2447561390122285;  // std dev = 4.296, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.051424342215598634;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.06821007189820738;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.027832149581508106;  // std dev = 5.247, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1214121850859716;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.11596030658343279;  // std dev = 4.646, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.1939666214754099;  // std dev = 4.288, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.0416213028775109;  // std dev = 7.527, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.22839066228426388;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.017491416206777657;  // std dev = 5.419, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09335578437677157;  // std dev = 0.012, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09285073212259731;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.08577447420426391;  // std dev = 4.639, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.1470899323526144;  // std dev = 4.294, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.034718743328304484;  // std dev = 7.525, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1797059618185123;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07583294993931636;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.01920436188554127;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07049226145065242;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.05721663723318448;  // std dev = 4.638, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.11852895099474438;  // std dev = 4.288, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.0266144119373046;  // std dev = 7.502, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17192093335745545;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.0677562717892908;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.014257170344382028;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05327696275075745;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.1869631831995593;  // std dev = 1.192, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.05875975947195472;  // std dev = 6.199, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.02242775065199331;  // std dev = 7.498, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1325135809179244;  // std dev = 2.934, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.009804845215688595;  // std dev = 5.416, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.0855191704398398;  // std dev = 0.021, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2247223203433406;  // std dev = 4.116, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.16409143258236225;  // std dev = 2.842, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.039231798688960276;  // std dev = 33.118, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.04143628320209223;  // std dev = 6.192, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.016386697299204684;  // std dev = 7.487, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.12711873070827123;  // std dev = 2.933, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.06113576858539898;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.009438793996367236;  // std dev = 5.243, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
Inference time using transfer learning 1.5198445320129395
Refined model CLL: -0.673362


******************************************
Best model found
******************************************
Results 

CLL : -0.604159 

AUC ROC : 0.558096 

AUC PR : 0.246388 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 671.7336401939392 

Total Inference Time : 4.375500679016113 

Total revision time: 680.8934495449066
Best scored revision CLL: -0.673362


Results 

CLL : -0.604159 

AUC ROC : 0.558096 

AUC PR : 0.246388 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 680.9098019599915 

Total Inference Time : 4.375500679016113 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos examples: 747
Target test neg examples: 1068

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.48021674156189
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22286615874989274;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935154405685214;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1642887262433117;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13666278671669155;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11171555888479459;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09002630084157656;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0717310965916087;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665493302668148;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044448905993106524;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469622643034082;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
Inference time using transfer learning 0.7916274070739746
Parameter learned model CLL:-0.657691 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
{'': [nan, 0.2316985704230787]}
{'': [nan, 0.23169857042309244]}
{'': [nan, 0.23169857042312694]}
{'': [nan, 0.23169857042310815]}
{'': [nan, 0.23169857042316017]}
{'': [nan, 0.23169857042318218]}
{'': [nan, 0.23169857042308678]}
{'': [nan, 0.23169857042320033]}
{'': [nan, 0.2316985704231533]}
{'': [nan, 0.23169857042309308]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true


Refining candidate
***************************
Model training time 853.4622113704681
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2517856350625112;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.022235622406012474;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.21829238097522888;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.12470259009449199;  // std dev = 3.505, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07951514279938432;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.056276641057215464;  // std dev = 3.650, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.0195072795646717;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.38576443858749054;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.06533753364830068;  // std dev = 4.507, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.15924878235830972;  // std dev = 5.947, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   | | | else return 0.18448040073009384;  // std dev = 34.798, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,997 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.10814740147793035;  // std dev = 3.505, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06960532368518532;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, N), haswordauthor(P, N) )
%   | | | then return 0.048925934483807096;  // std dev = 3.650, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.01707792693870001;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15227576540969195;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.1019038718633728;  // std dev = 3.497, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07649398550675916;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.010572788794873458;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.029427202949235436;  // std dev = 6.427, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12331352500662111;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.0889836742193964;  // std dev = 3.495, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06555199038452743;  // std dev = 1.365, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.008013212358272629;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.02689588460666005;  // std dev = 6.425, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09831848792476705;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.08346332170989082;  // std dev = 3.488, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07100569877302423;  // std dev = 1.367, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.0068791226557282144;  // std dev = 7.778, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.02295236540652128;  // std dev = 6.418, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0774589297256208;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.20091467809742022;  // std dev = 1.567, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.004993979869174576;  // std dev = 3.397, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.005983590100707698;  // std dev = 7.778, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.01985490959073334;  // std dev = 6.417, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06048170651034595;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.06677451905230462;  // std dev = 3.480, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.0682990137192613;  // std dev = 1.339, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.005201170732255679;  // std dev = 7.778, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.017136730776048364;  // std dev = 6.417, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.2491353965905114;  // std dev = 4.321, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return -0.06406162572722761;  // std dev = 4.544, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.04602383930665665;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.004153377412768682;  // std dev = 7.667, 443.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=71 */
%   | | | else return 0.07487625699811624;  // std dev = 3.732, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.02726044144787656;  // std dev = 6.478, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.1632236742983235;  // std dev = 0.133, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(A, D) )
%   | | | then return 0.030838720117482326;  // std dev = 34.246, 4,955.000 (wgt'ed) examples reached here.  /* #neg=3,030 #pos=1,925 */
%   | | | else return 0.04507978788596546;  // std dev = 8.381, 425.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=100 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.11311342936646236;  // std dev = 4.674, 127.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=28 */
%   | | | else return 0.03634137424388875;  // std dev = 8.113, 335.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=105 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.23086728589619374;  // std dev = 3.226, 43.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   | | | else return 0.4598929526192027;  // std dev = 2.571, 42.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02372816091107294;  // std dev = 6.486, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.1422466660039251;  // std dev = 0.119, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
Inference time using transfer learning 1.321241855621338
Refined model CLL: -0.640319


******************************************
Best model found
******************************************
Results 

CLL : -0.677834 

AUC ROC : 0.543707 

AUC PR : 0.457876 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 853.4622113704681 

Total Inference Time : 5.875696420669556 

Total revision time: 865.0479550361633
Best scored revision CLL: -0.640319


Results 

CLL : -0.677834 

AUC ROC : 0.543707 

AUC PR : 0.457876 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 865.0643074512482 

Total Inference Time : 5.875696420669556 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos examples: 550
Target test neg examples: 500

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.282940864562988
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111321945071477;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834400110087453;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15602704447107354;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13017937030369744;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10682752122740194;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08647162920053506;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06923052182131084;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0549522535276705;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043329703588355264;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399163325643134;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
Inference time using transfer learning 0.707862377166748
Parameter learned model CLL:-0.650857 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
{'': [nan, 0.22838607798553479]}
{'': [nan, 0.22838607798557076]}
{'': [nan, 0.2283860779855225]}
{'': [nan, 0.22838607798565272]}
{'': [nan, 0.22838607798564442]}
{'': [nan, 0.22838607798554508]}
{'': [nan, 0.2283860779856207]}
{'': [nan, 0.22838607798554997]}
{'': [nan, 0.22838607798564564]}
{'': [nan, 0.22838607798561553]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true


Refining candidate
***************************
Model training time 1054.764446735382
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2282181392517563;  // std dev = 36.707, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.21069130798086477;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.5070851053122791;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.015110960415968286;  // std dev = 7.230, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.08803399257077657;  // std dev = 3.925, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.006909265678023899;  // std dev = 5.536, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19815347585533316;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1821443572831206;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.30463403419907914;  // std dev = 4.674, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.4464082749382189;  // std dev = 4.609, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.011891393393414334;  // std dev = 7.221, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.0862077043203286;  // std dev = 3.924, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.0049837420996485;  // std dev = 5.536, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.30064202036403054;  // std dev = 1.729, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.16718062240703052;  // std dev = 37.571, 6,063.000 (wgt'ed) examples reached here.  /* #neg=3,826 #pos=2,237 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2497725814972297;  // std dev = 4.671, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.36538039098940905;  // std dev = 4.604, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.06474094755843035;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.027410380173145545;  // std dev = 8.058, 450.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=79 */
%   | | | else return 0.003593360157187135;  // std dev = 5.536, 245.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13977190160827788;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.12648107333047384;  // std dev = 8.210, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.18354236436032448;  // std dev = 4.656, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.30011734151408936;  // std dev = 4.585, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.009640682755415486;  // std dev = 7.217, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.0719087811896422;  // std dev = 3.924, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.0011110935950120733;  // std dev = 5.536, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.11267514066695825;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1141107055199962;  // std dev = 36.704, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.10277226757047017;  // std dev = 8.213, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14128681632488152;  // std dev = 4.654, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.23024351682844116;  // std dev = 4.582, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.0699244383053244;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.024424844823989905;  // std dev = 8.040, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -5.217976079154351E-4;  // std dev = 5.543, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09178159890549765;  // std dev = 36.704, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.08302579417280204;  // std dev = 8.214, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.095264613269977;  // std dev = 4.645, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.1854670900076667;  // std dev = 4.571, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.061178622846120474;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.06055801886670429;  // std dev = 1.661, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.01759111636241789;  // std dev = 9.616, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07301088484387039;  // std dev = 36.703, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.0657391268651771;  // std dev = 8.216, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07112594416158732;  // std dev = 4.644, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.14041504467441782;  // std dev = 4.570, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05335457115977223;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.022164815886350595;  // std dev = 8.035, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.00714688498407962;  // std dev = 5.541, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05754297270468713;  // std dev = 36.703, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.05210799909720437;  // std dev = 8.217, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04401048386508491;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.11470565173946222;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05602884374419063;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.019270426293799225;  // std dev = 8.032, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.004995299417293962;  // std dev = 5.541, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04506633104688305;  // std dev = 36.703, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.040694668163384906;  // std dev = 8.218, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.031951072282543784;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.08771320653817362;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.04907826758989594;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.01895682754777288;  // std dev = 8.030, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.008466581778239106;  // std dev = 5.539, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3929787931620604;  // std dev = 2.696, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return -0.0485151752066231;  // std dev = 4.585, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.034158558725319754;  // std dev = 37.166, 5,937.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=2,187 */
%   | | | else return 0.04626225018042711;  // std dev = 6.483, 180.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=105 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.003689143936543949;  // std dev = 7.202, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.0486602463053218;  // std dev = 3.918, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.00426280930401827;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.10156850785469863;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning 1.6542057991027832
Refined model CLL: -0.636033


******************************************
Best model found
******************************************
Results 

CLL : -0.750631 

AUC ROC : 0.639949 

AUC PR : 0.633314 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1054.764446735382 

Total Inference Time : 23.917059898376465 

Total revision time: 1085.2148928642273
Best scored revision CLL: -0.636033


Results 

CLL : -0.750631 

AUC ROC : 0.639949 

AUC PR : 0.633314 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1085.2312452793121 

Total Inference Time : 23.917059898376465 

Run: 5

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.396468162536621
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23749878473433458;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060618178036594;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17453024670666556;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446407501339931;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11767244800090106;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430962074455004;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.074707177635281;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865473052223055;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574473720619161;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549889774086067;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning 0.6738355159759521
Parameter learned model CLL:-0.665378 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
{'': [nan, 0.23544354121679714]}
{'': [nan, 0.23544354121687253]}
{'': [nan, 0.23544354121689864]}
{'': [nan, 0.23544354121683903]}
{'': [nan, 0.2354435412168111]}
{'': [nan, 0.235443541216926]}
{'': [nan, 0.23544354121692726]}
{'': [nan, 0.23544354121684707]}
{'': [nan, 0.23544354121692693]}
{'': [nan, 0.23544354121681993]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true


Refining candidate
***************************
Model training time 936.4188456535339
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2559515161947286;  // std dev = 37.062, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.23063215657601857;  // std dev = 8.346, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5724346493852271;  // std dev = 3.964, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.06760839455897227;  // std dev = 7.001, 296.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=62 */
%   | | | else return 0.04035232493002018;  // std dev = 5.930, 236.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=43 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2219198343638166;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.19893044877511365;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3578878444734629;  // std dev = 4.780, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5042038727151713;  // std dev = 3.938, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.05742828982964905;  // std dev = 7.665, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return 0.03017111190737738;  // std dev = 5.041, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03673101633396252;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18741251482675653;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.16852367080292122;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2903869442291748;  // std dev = 4.777, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.4096054596694759;  // std dev = 3.930, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.05284992116913148;  // std dev = 7.665, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return 0.02357841271514246;  // std dev = 5.037, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02972048696584876;  // std dev = 5.925, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15464644444436806;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.13877229675309694;  // std dev = 8.358, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21276715551903777;  // std dev = 4.765, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.33529130189735995;  // std dev = 3.900, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13064124507449784;  // std dev = 3.365, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.08097143726536256;  // std dev = 1.357, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.029606408210112043;  // std dev = 8.443, 465.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=88 */
%   | | | else return 0.025714780883981228;  // std dev = 5.849, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), venue(F, B) )
%   | | | then return 0.6940002417232961;  // std dev = 0.148, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3317163407222325;  // std dev = 2.161, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.12348371480823794;  // std dev = 37.902, 6,009.000 (wgt'ed) examples reached here.  /* #neg=3,632 #pos=2,377 */
%   | | | else return 0.19780870203901926;  // std dev = 6.156, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.12695993476588724;  // std dev = 3.356, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.022195831555845567;  // std dev = 8.494, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.021910234944790132;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.10192606574533425;  // std dev = 0.015, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09970993851974715;  // std dev = 37.047, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.08770734189916297;  // std dev = 8.361, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.38721048443453976;  // std dev = 0.888, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.14246971901819322;  // std dev = 6.072, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10841024526732754;  // std dev = 3.358, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07393270094950595;  // std dev = 1.359, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.03957115689403282;  // std dev = 3.520, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.018282568028822607;  // std dev = 9.639, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07848150275857449;  // std dev = 37.045, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.06868870051772819;  // std dev = 8.366, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07365850451817452;  // std dev = 4.738, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.16721644627234059;  // std dev = 3.888, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10326823396597914;  // std dev = 3.346, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.015741721108361594;  // std dev = 8.486, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.10074978858358231;  // std dev = 0.951, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.017149730928771235;  // std dev = 5.847, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06118839616904481;  // std dev = 37.045, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.05397263774292774;  // std dev = 8.366, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.042196303890627784;  // std dev = 4.740, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.14245048304421443;  // std dev = 3.859, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.0918319177986422;  // std dev = 3.341, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.06579212260860232;  // std dev = 1.359, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.022192706203387272;  // std dev = 3.508, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.013477830826994205;  // std dev = 9.639, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04741502222812187;  // std dev = 37.044, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.041712188122295296;  // std dev = 8.369, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.030804958891885656;  // std dev = 4.732, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.10947319213405206;  // std dev = 3.870, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07679699170866973;  // std dev = 3.340, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.05822240390136714;  // std dev = 1.359, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.011963868739410589;  // std dev = 8.480, 473.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=89 */
%   | | | else return 0.013143602252556322;  // std dev = 5.771, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.036548641410753945;  // std dev = 37.044, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.03241663131517485;  // std dev = 8.369, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.013345572867138306;  // std dev = 4.737, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.09589595700658925;  // std dev = 3.849, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.08165049251701852;  // std dev = 3.329, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.008258441499121234;  // std dev = 8.475, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.08705504875358204;  // std dev = 1.350, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.013702593408881653;  // std dev = 5.764, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
Inference time using transfer learning 1.612576961517334
Refined model CLL: -0.650223


******************************************
Best model found
******************************************
Results 

CLL : -0.624322 

AUC ROC : 0.583246 

AUC PR : 0.417048 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 936.4188456535339 

Total Inference Time : 25.796859979629517 

Total revision time: 968.940623998642
Best scored revision CLL: -0.650223


Results 

CLL : -0.624322 

AUC ROC : 0.583246 

AUC PR : 0.417048 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 968.9567577838898 

Total Inference Time : 25.796859979629517 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.04201078414917
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19217629976339767;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16713638120911187;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14258842882632106;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11954222017840668;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09871555462348185;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0804912793883634;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495809409335633;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05199278934611344;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041346460903546045;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03271420126321413;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
Inference time using transfer learning 0.7462873458862305
Parameter learned model CLL:-0.63853 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
{'': [nan, 0.22245308431952357]}
{'': [nan, 0.22245308431959404]}
{'': [nan, 0.22245308431958877]}
{'': [nan, 0.22245308431962857]}
{'': [nan, 0.22245308431955624]}
{'': [nan, 0.22245308431956373]}
{'': [nan, 0.22245308431964844]}
{'': [nan, 0.2224530843195216]}
{'': [nan, 0.22245308431962652]}
{'': [nan, 0.22245308431955077]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true


Refining candidate
***************************
Model training time 917.6011910438538
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21330135701834016;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.2171232940738674;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.43131966680682676;  // std dev = 6.334, 164.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=94 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001355197131893661;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1852931461937749;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.18876403158703928;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.32707187705684776;  // std dev = 4.484, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.42326701029401653;  // std dev = 4.471, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12034593308451501;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07683979386435784;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0034512830147095225;  // std dev = 8.041, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006783280105919416;  // std dev = 6.050, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15754756052067012;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.1604230541748988;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5076785126518801;  // std dev = 1.224, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.29589051475892847;  // std dev = 6.196, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11114943689428061;  // std dev = 3.514, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.061772009516298104;  // std dev = 1.363, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0018777726564382946;  // std dev = 8.036, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006035082404866406;  // std dev = 6.051, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1313659802989419;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.13380336675051707;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1935132607145862;  // std dev = 4.460, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.29025754890501504;  // std dev = 4.453, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09574303520256384;  // std dev = 3.514, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0546833441027837;  // std dev = 1.363, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.048445596284080766;  // std dev = 3.652, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.002187681149411184;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.41834438413173153;  // std dev = 2.002, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.10683594804882257;  // std dev = 35.925, 5,641.000 (wgt'ed) examples reached here.  /* #neg=3,642 #pos=1,999 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.14712207613662384;  // std dev = 4.455, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.22469922259939845;  // std dev = 4.453, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09745470397483391;  // std dev = 3.501, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07596926131024226;  // std dev = 1.367, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -3.9732286178935686E-4;  // std dev = 7.967, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.006633113863690018;  // std dev = 6.121, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08716328008135382;  // std dev = 34.985, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.08760503851479631;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.32666660156632443;  // std dev = 1.211, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.12994325434519033;  // std dev = 6.162, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.20427072369932836;  // std dev = 1.589, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.019347245275037877;  // std dev = 3.409, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.034395172444036455;  // std dev = 3.636, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0021992559104227986;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06972212787326941;  // std dev = 34.985, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.06997336076946824;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06707006115793383;  // std dev = 4.436, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.14422290416232084;  // std dev = 4.442, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07747531998849497;  // std dev = 3.494, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0011969963389382471;  // std dev = 8.019, 522.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=76 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.007513170486931178;  // std dev = 6.183, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.1396608863507786;  // std dev = 0.029, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.2966359392310786;  // std dev = 2.003, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.4990670523418332;  // std dev = 0.494, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.020913521403741153;  // std dev = 5.593, 145.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=48 */
%   | | | else return 0.055677880514096806;  // std dev = 36.019, 5,657.000 (wgt'ed) examples reached here.  /* #neg=3,615 #pos=2,042 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.06516641736726651;  // std dev = 3.492, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0010474057032682782;  // std dev = 8.019, 522.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=76 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.006585557692265128;  // std dev = 6.183, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.12371502952512937;  // std dev = 0.027, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.043489483624803364;  // std dev = 34.972, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.042183667726930316;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.1967917469480171;  // std dev = 1.202, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.056975238384931376;  // std dev = 6.152, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.1815651540310717;  // std dev = 1.584, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.005719869670460028;  // std dev = 3.390, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0015060508411056282;  // std dev = 7.964, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.007073668774560643;  // std dev = 6.108, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.034091056308460356;  // std dev = 34.971, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.03291306561302229;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.018898765979075256;  // std dev = 4.425, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.07820350226768787;  // std dev = 4.436, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.05219016400196556;  // std dev = 3.488, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07345225495420986;  // std dev = 1.335, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0013160485281805397;  // std dev = 7.964, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.0062173114288264116;  // std dev = 6.108, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
Inference time using transfer learning 2.1135451793670654
Refined model CLL: -0.62131


******************************************
Best model found
******************************************
Results 

CLL : -0.825993 

AUC ROC : 0.5025 

AUC PR : 0.607175 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 917.6011910438538 

Total Inference Time : 19.77892017364502 

Total revision time: 943.7696325778961
Best scored revision CLL: -0.62131


Results 

CLL : -0.825993 

AUC ROC : 0.5025 

AUC PR : 0.607175 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 943.7857663631439 

Total Inference Time : 19.77892017364502 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos examples: 581
Target test neg examples: 2222

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.588099718093872
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3233895768107371;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2793007008737935;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23328649407241175;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18916724063245646;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1498110457236774;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11660571223754278;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08968116396383638;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06842666944178562;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051938581046928;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039290221911838154;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
Inference time using transfer learning 0.8676519393920898
Parameter learned model CLL:-0.692509 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
{'': [nan, 0.24879178701129595]}
{'': [nan, 0.24879178701138563]}
{'': [nan, 0.24879178701132204]}
{'': [nan, 0.24879178701131163]}
{'': [nan, 0.24879178701132562]}
{'': [nan, 0.24879178701133703]}
{'': [nan, 0.24879178701133225]}
{'': [nan, 0.24879178701133212]}
{'': [nan, 0.24879178701138097]}
{'': [nan, 0.24879178701133148]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true


Refining candidate
***************************
Model training time 604.1184992790222
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3441551545575258;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.5478041075133061;  // std dev = 4.315, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29690255138011334;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3782052229457276;  // std dev = 4.673, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.4768288077207307;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.247146690498353;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.30731711772328363;  // std dev = 4.671, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.38658450978812625;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19937367766283512;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.6176437836000427;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.263447906124053;  // std dev = 6.337, 175.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=111 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordvenue(B, I) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15694231532784036;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.16700851790614243;  // std dev = 4.649, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.24433870625504567;  // std dev = 4.297, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.05142434221559886;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.06821007189820738;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.02783214958150811;  // std dev = 5.247, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1214121850859716;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.3053961476457515;  // std dev = 1.196, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.14508529309128132;  // std dev = 6.209, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.04162130287751091;  // std dev = 7.527, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.22839066228426375;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07465821730094528;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.021057526455510962;  // std dev = 5.246, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09285073212259731;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.2586899615296321;  // std dev = 1.188, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.10728364585044314;  // std dev = 6.205, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.034718743328304304;  // std dev = 7.525, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1797059618185123;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.015948249735960773;  // std dev = 5.415, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09342649776027476;  // std dev = 0.015, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.25144854659639143;  // std dev = 4.123, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.134066362431126;  // std dev = 2.840, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06956916656562182;  // std dev = 33.118, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.08069635627265186;  // std dev = 6.205, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.026593228785955318;  // std dev = 7.502, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17191951349138584;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.06777294304188575;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.014249584286302797;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05322932229509617;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.03448845329264468;  // std dev = 4.636, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.10019868528573445;  // std dev = 4.290, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.13682433256477536;  // std dev = 2.864, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.021577358070322485;  // std dev = 7.522, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.06923665802894202;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.01280206484300586;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.04012158479721527;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.018009783129373735;  // std dev = 4.632, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.0846454727342017;  // std dev = 4.285, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.1315028928406824;  // std dev = 2.853, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.016676853046868848;  // std dev = 7.511, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.09260619927480304;  // std dev = 0.944, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.007154010552115007;  // std dev = 5.329, 195.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=35 */
Inference time using transfer learning 1.512923002243042
Refined model CLL: -0.673331


******************************************
Best model found
******************************************
Results 

CLL : -0.604157 

AUC ROC : 0.558189 

AUC PR : 0.246405 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 604.1184992790222 

Total Inference Time : 4.3138206005096436 

Total revision time: 613.2516446113586
Best scored revision CLL: -0.673331


Results 

CLL : -0.604157 

AUC ROC : 0.558189 

AUC PR : 0.246405 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 613.2677783966064 

Total Inference Time : 4.3138206005096436 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos examples: 747
Target test neg examples: 1068

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.589612245559692
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22286615874989274;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935154405685214;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1642887262433117;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13666278671669155;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11171555888479459;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09002630084157656;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0717310965916087;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665493302668148;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044448905993106524;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469622643034082;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
Inference time using transfer learning 0.8639907836914062
Parameter learned model CLL:-0.657691 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
{'': [nan, 0.2316985704230787]}
{'': [nan, 0.23169857042309244]}
{'': [nan, 0.23169857042312694]}
{'': [nan, 0.23169857042310815]}
{'': [nan, 0.23169857042316017]}
{'': [nan, 0.23169857042318218]}
{'': [nan, 0.23169857042308678]}
{'': [nan, 0.23169857042320033]}
{'': [nan, 0.2316985704231533]}
{'': [nan, 0.23169857042309308]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true


Refining candidate
***************************
Model training time 884.6627731323242
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2517856350625112;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.022235622406012474;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.21829238097522888;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.12470259009449204;  // std dev = 3.505, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07951514279938432;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.05627664105721549;  // std dev = 3.650, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.0195072795646717;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.18446442968974686;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.10814740147793035;  // std dev = 3.505, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06960532368518532;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.012961686416434436;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.03306261730857289;  // std dev = 6.439, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15231694286666383;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.09262847396831722;  // std dev = 3.504, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06138231358907974;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.011325454491608319;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.028806427832842547;  // std dev = 6.438, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12334450536867779;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.10092894137824444;  // std dev = 3.488, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07883746065855282;  // std dev = 1.367, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.007248039400036617;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.02671118662003648;  // std dev = 6.419, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09833997009753306;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.08600512582845696;  // std dev = 3.486, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06905188963505379;  // std dev = 1.367, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.00630623806469303;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.023170617738530935;  // std dev = 6.418, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07747250093577741;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.20269049685996976;  // std dev = 1.565, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.006495394781981302;  // std dev = 3.396, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.005577878886915618;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.02006621120606673;  // std dev = 6.418, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.26178922837233154;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return -0.058637676566859344;  // std dev = 4.507, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.05977117979868857;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.06921214455213442;  // std dev = 3.477, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06386609749954526;  // std dev = 1.368, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.003613460629762609;  // std dev = 7.775, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.01875228610071523;  // std dev = 6.414, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04688953258021671;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.06584111633350075;  // std dev = 3.471, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07014767083935271;  // std dev = 1.340, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.00328241631175441;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.015492952851664058;  // std dev = 6.411, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(A, D) )
%   | | | then return 0.03094637958800224;  // std dev = 34.278, 4,955.000 (wgt'ed) examples reached here.  /* #neg=3,030 #pos=1,925 */
%   | | | else return 0.0452402412794783;  // std dev = 8.383, 425.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=100 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.11330880490143282;  // std dev = 4.674, 127.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=28 */
%   | | | else return 0.03647841915961364;  // std dev = 8.111, 335.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=105 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.06499531088508395;  // std dev = 7.103, 293.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=75 */
%   | | | else return -0.10458576344308769;  // std dev = 1.683, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordvenue(B, K) )
%   | | | then return 0.45608971526209613;  // std dev = 2.558, 42.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | | | else return -0.1655989532610688;  // std dev = 0.147, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
Inference time using transfer learning 1.2322659492492676
Refined model CLL: -0.64119


******************************************
Best model found
******************************************
Results 

CLL : -0.678491 

AUC ROC : 0.5414 

AUC PR : 0.454388 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 884.6627731323242 

Total Inference Time : 5.699861526489258 

Total revision time: 896.2613456249237
Best scored revision CLL: -0.64119


Results 

CLL : -0.678491 

AUC ROC : 0.5414 

AUC PR : 0.454388 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 896.2774794101715 

Total Inference Time : 5.699861526489258 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos examples: 550
Target test neg examples: 500

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.170567274093628
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111321945071477;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834400110087453;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15602704447107354;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13017937030369744;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10682752122740194;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08647162920053506;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06923052182131084;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0549522535276705;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043329703588355264;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399163325643134;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
Inference time using transfer learning 0.7235519886016846
Parameter learned model CLL:-0.650857 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), haswordauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
{'': [nan, 0.22838607798553479]}
{'': [nan, 0.22838607798557076]}
{'': [nan, 0.2283860779855225]}
{'': [nan, 0.22838607798565272]}
{'': [nan, 0.22838607798564442]}
{'': [nan, 0.22838607798554508]}
{'': [nan, 0.2283860779856207]}
{'': [nan, 0.22838607798554997]}
{'': [nan, 0.22838607798564564]}
{'': [nan, 0.22838607798561553]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
2;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
3;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
4;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
6;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
7;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
8;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C), haswordauthor(B, C).;true;true


Refining candidate
***************************
Model training time 1058.1438264846802
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2282181392517563;  // std dev = 36.707, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.21069130798086477;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.5070851053122791;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.0607699838194067;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.035677024987153;  // std dev = 8.061, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return 0.0021489350995115234;  // std dev = 5.551, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19815347585533297;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1821443572831206;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.30463403419907936;  // std dev = 4.674, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.4464082749382189;  // std dev = 4.609, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05353224823028762;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.06460962383370238;  // std dev = 1.659, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.025503353063289113;  // std dev = 9.638, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1680879529865122;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1548320326649644;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.24977258149722978;  // std dev = 4.671, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.365380390989409;  // std dev = 4.604, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.012633830585707412;  // std dev = 7.221, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.08124188427332006;  // std dev = 3.921, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -2.6944231755726954E-4;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1452506109490275;  // std dev = 9.13e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13967524500406553;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1283611316378811;  // std dev = 8.212, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.18354236436032448;  // std dev = 4.656, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3001173415140894;  // std dev = 4.585, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05825894151600661;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.028483075957793702;  // std dev = 8.047, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.004327896390130729;  // std dev = 5.545, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11398341070029153;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.10525038208708748;  // std dev = 8.213, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14128681632488146;  // std dev = 4.654, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.23024351682844135;  // std dev = 4.582, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.052049728228978076;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.05141805097824692;  // std dev = 1.659, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.018286100068487608;  // std dev = 9.628, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0917038549161182;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.08453605238431225;  // std dev = 8.215, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09526461326997694;  // std dev = 4.645, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.18546709000766648;  // std dev = 4.571, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0064092509933773795;  // std dev = 7.206, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.07388302157086062;  // std dev = 3.919, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.0034924130669291985;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1296970391695251;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07291392488816677;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.06763151292090491;  // std dev = 8.216, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07112594416158728;  // std dev = 4.644, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.14041504467441787;  // std dev = 4.570, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.04687051454422042;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.046810415274356636;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.01454646927955035;  // std dev = 9.620, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05748051249156733;  // std dev = 36.704, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.05333152949010154;  // std dev = 8.217, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.044010483865084875;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.11470565173946216;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.04173163646986451;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.019916001004062597;  // std dev = 8.036, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.008387789796415067;  // std dev = 5.541, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.40448748754744573;  // std dev = 2.701, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return -0.03569350778647774;  // std dev = 4.593, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.04400620229461824;  // std dev = 37.166, 5,937.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=2,187 */
%   | | | else return 0.06106626491535113;  // std dev = 6.487, 180.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=105 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0048410066107292165;  // std dev = 7.201, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.05949090873248853;  // std dev = 3.916, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.006963086791018505;  // std dev = 5.531, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.11637875856740543;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), haswordauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03501767665230225;  // std dev = 36.674, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.03287802848216267;  // std dev = 8.218, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.017394958733351853;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.07289071895718198;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.03119320809691732;  // std dev = 6.045, 238.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=46 */
%   | | | else return -0.005443876554099875;  // std dev = 5.535, 244.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=36 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.006050079230502918;  // std dev = 5.531, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1049348115071339;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning 1.6645376682281494
Refined model CLL: -0.636049


******************************************
Best model found
******************************************
Results 

CLL : -0.751937 

AUC ROC : 0.635567 

AUC PR : 0.628726 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1058.1438264846802 

Total Inference Time : 25.67817711830139 

Total revision time: 1090.2742493152618
Best scored revision CLL: -0.636049


Results 

CLL : -0.751937 

AUC ROC : 0.635567 

AUC PR : 0.628726 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1090.2903831005096 

Total Inference Time : 25.67817711830139 

