Starting experiment 2_uwcse_imdb 

Loading pre-trained trees.
Starting experiments for fasttext using euclidean 

Run: 1

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos examples: 56
Target test neg examples: 3308

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.5882208347320557
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.7377785647291406;  // std dev = 3.382, 108.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=95 */
%   | | | else return 0.7470378239884012;  // std dev = 2.309, 54.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=48 */
%   else return 0.08804843258694806;  // std dev = 11.871, 796.000 (wgt'ed) examples reached here.  /* #neg=613 #pos=183 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1529107598098285;  // std dev = 7.21e-09, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
%   else return 0.24857590653417574;  // std dev = 13.189, 769.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=326 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.13413731411045762;  // std dev = 1.13e-07, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20055783594450977;  // std dev = 13.243, 787.000 (wgt'ed) examples reached here.  /* #neg=461 #pos=326 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11930799328163715;  // std dev = 0.000, 171.000 (wgt'ed) examples reached here.  /* #neg=171 */
%   else return 0.1593995538404434;  // std dev = 13.253, 801.000 (wgt'ed) examples reached here.  /* #neg=475 #pos=326 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4304812806078561;  // std dev = 4.147, 116.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=95 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04107240740847029;  // std dev = 0.416, 865.000 (wgt'ed) examples reached here.  /* #neg=634 #pos=231 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11132920575258617;  // std dev = 1.12e-07, 203.000 (wgt'ed) examples reached here.  /* #neg=203 */
%   else return 0.11079078074016109;  // std dev = 12.943, 792.000 (wgt'ed) examples reached here.  /* #neg=466 #pos=326 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.10078211740569896;  // std dev = 0.000, 211.000 (wgt'ed) examples reached here.  /* #neg=211 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0933927968562898;  // std dev = 12.882, 778.000 (wgt'ed) examples reached here.  /* #neg=452 #pos=326 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09200912681400945;  // std dev = 1.19e-07, 199.000 (wgt'ed) examples reached here.  /* #neg=199 */
%   else return 0.08758177040910092;  // std dev = 12.695, 751.000 (wgt'ed) examples reached here.  /* #neg=425 #pos=326 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09159686676528435;  // std dev = 6.168, 371.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=143 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 2.55454094646504E-4;  // std dev = 11.183, 578.000 (wgt'ed) examples reached here.  /* #neg=395 #pos=183 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.091974690980853;  // std dev = 3.73e-09, 184.000 (wgt'ed) examples reached here.  /* #neg=184 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.031048130142305452;  // std dev = 12.969, 821.000 (wgt'ed) examples reached here.  /* #neg=495 #pos=326 */
Inference time using transfer learning 1.248621940612793
Parameter learned model CLL:-0.337274 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [3.382, 13, 95], 'true,false,false,false': [2.309, 6, 48], 'false': [11.871, 613, 183]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.21e-09, 213, 0], 'false': [13.189, 443, 326]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.13e-07, 187, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.243, 461, 326]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 171, 0], 'false': [13.253, 475, 326]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [4.147, 21, 95], 'true,false': [0.0, 0, 0], 'false': [0.416, 634, 231]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.12e-07, 203, 0], 'false': [12.943, 466, 326]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 211, 0], 'true,false,false': [0.0, 0, 0], 'false': [12.882, 452, 326]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.19e-07, 199, 0], 'false': [12.695, 425, 326]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [6.168, 228, 143], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.183, 395, 183]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [3.73e-09, 184, 0], 'true,false': [0.0, 0, 0], 'false': [12.969, 495, 326]}]
{'': [0.10352842554489174, 0.17704571854246165], 'true': [nan, 0.10352842554489174], 'true,false': [nan, 0.10352842554489174], 'true,false,false': [0.10588134430727199, 0.0987654320987658]}
{'': [5.003822082817607e-17, 0.2261923223182032], 'true': [nan, 5.003822082817607e-17], 'true,false': [nan, 5.003822082817607e-17]}
{'': [6.886944965589207e-17, 0.2228277768917212], 'true': [nan, 6.886944965589207e-17], 'true,false': [nan, 6.886944965589207e-17], 'true,false,false': [6.886944965589207e-17, nan]}
{'': [-9.60894781546919e-17, 0.21926244930213076], 'true': [nan, -9.60894781546919e-17], 'true,false': [nan, -9.60894781546919e-17]}
{'': [0.14826099881094115, 0.17282797085199283], 'true': [0.14826099881094115, nan], 'true,true': [nan, 0.14826099881094115], 'true,true,false': [nan, 0.14826099881094115]}
{'': [6.125368411725002e-17, 0.21153129913404664], 'true': [nan, 6.125368411725002e-17], 'true,false': [nan, 6.125368411725002e-17], 'true,false,false': [nan, 6.125368411725002e-17]}
{'': [-2.1046881983415288e-17, 0.2132849956171484], 'true': [nan, -2.1046881983415288e-17], 'true,false': [-2.1046881983415288e-17, nan]}
{'': [7.141133022714575e-17, 0.2145915823823782], 'true': [nan, 7.141133022714575e-17], 'true,false': [nan, 7.141133022714575e-17], 'true,false,false': [nan, 7.141133022714575e-17]}
{'': [0.10255529391726946, 0.21636773984985355], 'false': [nan, 0.21636773984985783], 'true': [0.10255529391726946, nan], 'true,true': [nan, 0.10255529391726946], 'true,true,false': [nan, 0.10255529391726946]}
{'': [1.3274405729213829e-17, 0.20485106331511438], 'true': [1.3274405729213829e-17, nan], 'true,true': [nan, 1.3274405729213829e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 3.0766708850860596
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1.05e-06, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048766;  // std dev = 5.58e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.14185106490048846;  // std dev = 0.000, 609.000 (wgt'ed) examples reached here.  /* #neg=609 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.1254446385283917;  // std dev = 0.000, 206.000 (wgt'ed) examples reached here.  /* #neg=206 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.12544463852839155;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return -0.12544463852839213;  // std dev = 0.000, 400.000 (wgt'ed) examples reached here.  /* #neg=400 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360649;  // std dev = 0.000, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.11231637819360628;  // std dev = 4.34e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.11231637819360628;  // std dev = 0.000, 402.000 (wgt'ed) examples reached here.  /* #neg=402 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.1015963294878365;  // std dev = 0.000, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831163;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.10159632948783624;  // std dev = 3.49e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.10159632948783652;  // std dev = 0.000, 401.000 (wgt'ed) examples reached here.  /* #neg=401 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.09269127618926165;  // std dev = 0.000, 583.000 (wgt'ed) examples reached here.  /* #neg=583 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839675;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948756;  // std dev = 3.86e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.08518475138839679;  // std dev = 1.67e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.08518475138839675;  // std dev = 4.71e-08, 403.000 (wgt'ed) examples reached here.  /* #neg=403 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109144;  // std dev = 5.37e-08, 212.000 (wgt'ed) examples reached here.  /* #neg=212 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.46e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.07877675473109175;  // std dev = 1.97e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.07877675473109144;  // std dev = 0.000, 408.000 (wgt'ed) examples reached here.  /* #neg=408 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.07324622576333668;  // std dev = 1.06e-07, 181.000 (wgt'ed) examples reached here.  /* #neg=181 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1770964977452765;  // std dev = 2.76e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.07324622576333704;  // std dev = 1.05e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.07324622576333718;  // std dev = 2.11e-08, 416.000 (wgt'ed) examples reached here.  /* #neg=416 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.06842697784420271;  // std dev = 1.05e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.06842697784420279;  // std dev = 2.98e-08, 619.000 (wgt'ed) examples reached here.  /* #neg=619 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202625;  // std dev = 0.000, 212.000 (wgt'ed) examples reached here.  /* #neg=212 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080118;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return -0.06419184008202593;  // std dev = 1.29e-07, 433.000 (wgt'ed) examples reached here.  /* #neg=433 */
Inference time using transfer learning 0.9300994873046875
Refined model CLL: -0.064216


******************************************
Best model found
******************************************
Results 

CLL : -0.063421 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.0766708850860596 

Total Inference Time : 1.4937729835510254 

Total revision time: 10.65294337272644
Best scored revision CLL: -0.064216


Results 

CLL : -0.063421 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 10.668171167373657 

Total Inference Time : 1.4937729835510254 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos examples: 58
Target test neg examples: 3423

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.5489797592163086
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.6550239350995104;  // std dev = 4.552, 128.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=102 */
%   | | | else return 0.7308762078267851;  // std dev = 2.472, 55.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=48 */
%   else return 0.08037115732173315;  // std dev = 11.633, 783.000 (wgt'ed) examples reached here.  /* #neg=609 #pos=174 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1519189772403992;  // std dev = 1.00e-08, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
%   else return 0.2562423939843543;  // std dev = 13.104, 754.000 (wgt'ed) examples reached here.  /* #neg=430 #pos=324 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.13336272843715855;  // std dev = 0.000, 227.000 (wgt'ed) examples reached here.  /* #neg=227 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.21197903007836164;  // std dev = 13.094, 763.000 (wgt'ed) examples reached here.  /* #neg=439 #pos=324 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11868830926399107;  // std dev = 9.41e-09, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   else return 0.18708777301275367;  // std dev = 12.908, 739.000 (wgt'ed) examples reached here.  /* #neg=415 #pos=324 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4360279517765011;  // std dev = 4.332, 125.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=102 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03290130908811642;  // std dev = 0.409, 855.000 (wgt'ed) examples reached here.  /* #neg=633 #pos=222 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11000426346097213;  // std dev = 3.65e-08, 214.000 (wgt'ed) examples reached here.  /* #neg=214 */
%   else return 0.13042482311509124;  // std dev = 12.538, 739.000 (wgt'ed) examples reached here.  /* #neg=415 #pos=324 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.0996874838725727;  // std dev = 3.48e-09, 252.000 (wgt'ed) examples reached here.  /* #neg=252 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10280686466155022;  // std dev = 12.524, 738.000 (wgt'ed) examples reached here.  /* #neg=414 #pos=324 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09109072483143904;  // std dev = 1.04e-07, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
%   else return 0.06620887257594865;  // std dev = 12.723, 760.000 (wgt'ed) examples reached here.  /* #neg=436 #pos=324 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09763063802853059;  // std dev = 6.157, 388.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=150 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.03330358175813528;  // std dev = 11.103, 597.000 (wgt'ed) examples reached here.  /* #neg=423 #pos=174 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0916336351359771;  // std dev = 0.000, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.036940671511751476;  // std dev = 12.738, 794.000 (wgt'ed) examples reached here.  /* #neg=470 #pos=324 */
Inference time using transfer learning 1.136829137802124
Parameter learned model CLL:-0.324871 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [4.552, 26, 102], 'true,false,false,false': [2.472, 7, 48], 'false': [11.633, 609, 174]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1e-08, 241, 0], 'false': [13.104, 430, 324]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 227, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.094, 439, 324]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [9.41e-09, 183, 0], 'false': [12.908, 415, 324]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [4.332, 23, 102], 'true,false': [0.0, 0, 0], 'false': [0.409, 633, 222]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.65e-08, 214, 0], 'false': [12.538, 415, 324]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [3.48e-09, 252, 0], 'true,false,false': [0.0, 0, 0], 'false': [12.524, 414, 324]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.04e-07, 221, 0], 'false': [12.723, 436, 324]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [6.157, 238, 150], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.103, 423, 174]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 221, 0], 'true,false': [0.0, 0, 0], 'false': [12.738, 470, 324]}]
{'': [0.1478097285675948, 0.17283950617284016], 'true': [nan, 0.1478097285675948], 'true,false': [nan, 0.1478097285675948], 'true,false,false': [0.16186523437500278, 0.11107438016528964]}
{'': [1.0319085374109339e-16, 0.22773707158649853], 'true': [nan, 1.0319085374109339e-16], 'true,false': [nan, 1.0319085374109339e-16]}
{'': [-2.191100947277842e-16, 0.2247214315036809], 'true': [nan, -2.191100947277842e-16], 'true,false': [nan, -2.191100947277842e-16], 'true,false,false': [-2.191100947277842e-16, nan]}
{'': [8.736181177378281e-17, 0.22546143681902464], 'true': [nan, 8.736181177378281e-17], 'true,false': [nan, 8.736181177378281e-17]}
{'': [0.1501440000000018, 0.16702028752344655], 'true': [0.1501440000000018, nan], 'true,true': [nan, 0.1501440000000018], 'true,true,false': [nan, 0.1501440000000018]}
{'': [6.22554967079527e-18, 0.21273459753562005], 'true': [nan, 6.22554967079527e-18], 'true,false': [nan, 6.22554967079527e-18], 'true,false,false': [nan, 6.22554967079527e-18]}
{'': [1.2335811384723961e-17, 0.2125225969942611], 'true': [nan, 1.2335811384723961e-17], 'true,false': [1.2335811384723961e-17, nan]}
{'': [4.9231609236771645e-17, 0.21298169481741824], 'true': [nan, 4.9231609236771645e-17], 'true,false': [nan, 4.9231609236771645e-17], 'true,false,false': [nan, 4.9231609236771645e-17]}
{'': [0.09770612087759697, 0.2065099366177576], 'false': [nan, 0.20650993661776193], 'true': [0.09770612087759697, nan], 'true,true': [nan, 0.09770612087759697], 'true,true,false': [nan, 0.09770612087759697]}
{'': [-6.028360314706732e-17, 0.2043658140458518], 'true': [-6.028360314706732e-17, nan], 'true,true': [nan, -6.028360314706732e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 3.4316821098327637
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1.04e-06, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048766;  // std dev = 6.32e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.14185106490048863;  // std dev = 0.000, 629.000 (wgt'ed) examples reached here.  /* #neg=629 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.1254446385283918;  // std dev = 0.000, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.1254446385283921;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #neg=392 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360676;  // std dev = 0.000, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.11231637819360633;  // std dev = 2.79e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return -0.11231637819360674;  // std dev = 0.000, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783658;  // std dev = 0.000, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831163;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.10159632948783621;  // std dev = 3.80e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.10159632948783645;  // std dev = 0.000, 378.000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.09269127618926168;  // std dev = 0.000, 584.000 (wgt'ed) examples reached here.  /* #neg=584 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839675;  // std dev = 0.000, 215.000 (wgt'ed) examples reached here.  /* #neg=215 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948756;  // std dev = 3.86e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.08518475138839673;  // std dev = 2.98e-08, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109139;  // std dev = 6.83e-08, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.07877675473109175;  // std dev = 2.11e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.0787767547310914;  // std dev = 5.16e-08, 376.000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.0732462257633366;  // std dev = 7.60e-08, 209.000 (wgt'ed) examples reached here.  /* #neg=209 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527653;  // std dev = 2.73e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return -0.07324622576333711;  // std dev = 0.000, 393.000 (wgt'ed) examples reached here.  /* #neg=393 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.0684269778442027;  // std dev = 1.05e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.06842697784420262;  // std dev = 3.65e-08, 614.000 (wgt'ed) examples reached here.  /* #neg=614 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202625;  // std dev = 0.000, 216.000 (wgt'ed) examples reached here.  /* #neg=216 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080118;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.06419184008202601;  // std dev = 9.66e-08, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
Inference time using transfer learning 0.9495069980621338
Refined model CLL: -0.064225


******************************************
Best model found
******************************************
Results 

CLL : -0.063422 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.4316821098327637 

Total Inference Time : 1.5939486026763916 

Total revision time: 11.283058166503906
Best scored revision CLL: -0.064225


Results 

CLL : -0.063422 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 11.298285961151123 

Total Inference Time : 1.5939486026763916 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos examples: 178
Target test neg examples: 3543

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.06367826461792
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.7617633929308381;  // std dev = 2.689, 83.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=75 */
%   | | | else return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return 0.08848601375119738;  // std dev = 9.730, 534.000 (wgt'ed) examples reached here.  /* #neg=411 #pos=123 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15296744789528594;  // std dev = 1.02e-08, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   else return 0.26132664635667485;  // std dev = 10.348, 469.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=204 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.13418155890995107;  // std dev = 0.000, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20461414312556117;  // std dev = 10.455, 488.000 (wgt'ed) examples reached here.  /* #neg=284 #pos=204 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11934337066054317;  // std dev = 3.95e-09, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
%   else return 0.1944918459027135;  // std dev = 10.156, 460.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=204 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5308433386099292;  // std dev = 2.165, 80.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=75 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03541416649011959;  // std dev = 0.414, 507.000 (wgt'ed) examples reached here.  /* #neg=378 #pos=129 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11080031631480476;  // std dev = 0.000, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   else return 0.11784370040518896;  // std dev = 9.906, 472.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=204 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.10034541477962126;  // std dev = 6.59e-09, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0902771244296358;  // std dev = 9.913, 476.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=204 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09164291267409347;  // std dev = 1.01e-07, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
%   else return 0.04565519256912778;  // std dev = 10.120, 511.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=204 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08895564927003438;  // std dev = 3.788, 219.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=81 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02438257011272847;  // std dev = 8.992, 359.000 (wgt'ed) examples reached here.  /* #neg=236 #pos=123 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.09141945814980502;  // std dev = 5.10e-09, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.050052030478293624;  // std dev = 9.902, 478.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=204 */
Inference time using transfer learning 1.2387669086456299
Parameter learned model CLL:-0.317784 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [2.689, 8, 75], 'true,false,false,false': [0.926, 1, 6], 'false': [9.73, 411, 123]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.02e-08, 138, 0], 'false': [10.348, 265, 204]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 146, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [10.455, 284, 204]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [3.95e-09, 150, 0], 'false': [10.156, 256, 204]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [2.165, 5, 75], 'true,false': [0.0, 0, 0], 'false': [0.414, 378, 129]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 131, 0], 'false': [9.906, 268, 204]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [6.59e-09, 137, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.913, 272, 204]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.01e-07, 153, 0], 'false': [10.12, 307, 204]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [3.788, 138, 81], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.992, 236, 123]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [5.1e-09, 127, 0], 'true,false': [0.0, 0, 0], 'false': [9.902, 274, 204]}]
{'': [0.09000000000000025, 0.1772819088498931], 'true': [nan, 0.09000000000000025], 'true,false': [nan, 0.09000000000000025], 'true,false,false': [0.08709536942952427, 0.12244897959183662]}
{'': [1.0297720808117394e-16, 0.22829845776964786], 'true': [nan, 1.0297720808117394e-16], 'true,false': [nan, 1.0297720808117394e-16]}
{'': [-3.650048300137501e-17, 0.22399501260782945], 'true': [nan, -3.650048300137501e-17], 'true,false': [nan, -3.650048300137501e-17], 'true,false,false': [-3.650048300137501e-17, nan]}
{'': [1.1842378929335004e-17, 0.22421840288299272], 'true': [nan, 1.1842378929335004e-17], 'true,false': [nan, 1.1842378929335004e-17]}
{'': [0.058593750000001596, 0.17112597696936985], 'true': [0.058593750000001596, nan], 'true,true': [nan, 0.058593750000001596], 'true,true,false': [nan, 0.058593750000001596]}
{'': [-1.6949969841605444e-17, 0.20788193839641247], 'true': [nan, -1.6949969841605444e-17], 'true,false': [nan, -1.6949969841605444e-17], 'true,false,false': [nan, -1.6949969841605444e-17]}
{'': [4.3760615569166756e-17, 0.20646024636095908], 'true': [nan, 4.3760615569166756e-17], 'true,false': [4.3760615569166756e-17, nan]}
{'': [6.675850867027085e-17, 0.20040476402237195], 'true': [nan, 6.675850867027085e-17], 'true,false': [nan, 6.675850867027085e-17], 'true,false,false': [nan, 6.675850867027085e-17]}
{'': [0.06552710163320251, 0.22523102707148712], 'false': [nan, 0.22523102707148437], 'true': [0.06552710163320251, nan], 'true,true': [nan, 0.06552710163320251], 'true,true,false': [nan, 0.06552710163320251]}
{'': [2.6225740739176926e-17, 0.20513884708926894], 'true': [2.6225740739176926e-17, nan], 'true,true': [nan, 2.6225740739176926e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 2.2370104789733887
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.14185106490048746;  // std dev = 2.58e-07, 388.000 (wgt'ed) examples reached here.  /* #neg=388 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.12544463852839152;  // std dev = 0.000, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.7194734122109571;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.125444638528392;  // std dev = 0.000, 256.000 (wgt'ed) examples reached here.  /* #neg=256 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360617;  // std dev = 9.77e-08, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462833;  // std dev = 6.36e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.11231637819360685;  // std dev = 0.000, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783642;  // std dev = 0.000, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831014;  // std dev = 2.53e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.1015963294878366;  // std dev = 0.000, 253.000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601491;  // std dev = 4.00e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.09269127618926055;  // std dev = 1.92e-07, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839679;  // std dev = 7.74e-08, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948845;  // std dev = 4.46e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.08518475138839682;  // std dev = 1.58e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return -0.08518475138839678;  // std dev = 9.19e-08, 261.000 (wgt'ed) examples reached here.  /* #neg=261 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109153;  // std dev = 7.88e-08, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.20975771563253498;  // std dev = 3.04e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.07877675473109175;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.07877675473109144;  // std dev = 5.37e-08, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.07324622576333725;  // std dev = 0.000, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527791;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.07324622576333677;  // std dev = 1.20e-07, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367166;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.06842697784420275;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.0684269778442033;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202626;  // std dev = 0.000, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   else if ( actor(B) )
%   | then return -0.06419184008202625;  // std dev = 2.58e-08, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.13400703000801098;  // std dev = 1.38e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.06419184008202618;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
Inference time using transfer learning 0.9770617485046387
Refined model CLL: -0.063572


******************************************
Best model found
******************************************
Results 

CLL : -0.06581 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.2370104789733887 

Total Inference Time : 1.4746253490447998 

Total revision time: 9.268222570419312
Best scored revision CLL: -0.063572


Results 

CLL : -0.06581 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 9.283450365066528 

Total Inference Time : 1.4746253490447998 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos examples: 45
Target test neg examples: 1891

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.6742100715637207
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.7186140513785801;  // std dev = 3.936, 129.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=111 */
%   | | | else return 0.6717082571334108;  // std dev = 2.992, 59.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=48 */
%   else return 0.08064893509951085;  // std dev = 11.764, 800.000 (wgt'ed) examples reached here.  /* #neg=622 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15195476947911168;  // std dev = 1.60e-08, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
%   else return 0.23710803708551864;  // std dev = 13.545, 819.000 (wgt'ed) examples reached here.  /* #neg=482 #pos=337 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.13339069890812016;  // std dev = 1.21e-07, 194.000 (wgt'ed) examples reached here.  /* #neg=194 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23070519656545277;  // std dev = 13.105, 762.000 (wgt'ed) examples reached here.  /* #neg=425 #pos=337 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1187106973654891;  // std dev = 0.000, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
%   else return 0.17408379889174977;  // std dev = 13.260, 790.000 (wgt'ed) examples reached here.  /* #neg=453 #pos=337 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4364954518982346;  // std dev = 4.365, 134.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=111 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.019107654939720446;  // std dev = 0.408, 908.000 (wgt'ed) examples reached here.  /* #neg=682 #pos=226 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10867962703173475;  // std dev = 1.30e-07, 219.000 (wgt'ed) examples reached here.  /* #neg=219 */
%   else return 0.12192125745314704;  // std dev = 12.908, 785.000 (wgt'ed) examples reached here.  /* #neg=448 #pos=337 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.09859099221296566;  // std dev = 0.000, 209.000 (wgt'ed) examples reached here.  /* #neg=209 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11109216054429198;  // std dev = 12.686, 759.000 (wgt'ed) examples reached here.  /* #neg=422 #pos=337 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09016924494548216;  // std dev = 1.23e-07, 220.000 (wgt'ed) examples reached here.  /* #neg=220 */
%   else return 0.06398381473991634;  // std dev = 12.948, 805.000 (wgt'ed) examples reached here.  /* #neg=468 #pos=337 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09794255249393659;  // std dev = 6.204, 423.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=159 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.02939238503247504;  // std dev = 11.250, 616.000 (wgt'ed) examples reached here.  /* #neg=438 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.09080899224484183;  // std dev = 0.000, 216.000 (wgt'ed) examples reached here.  /* #neg=216 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07224251991127034;  // std dev = 12.552, 758.000 (wgt'ed) examples reached here.  /* #neg=421 #pos=337 */
Inference time using transfer learning 0.9806497097015381
Parameter learned model CLL:-0.323065 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [3.936, 18, 111], 'true,false,false,false': [2.992, 11, 48], 'false': [11.764, 622, 178]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.6e-08, 237, 0], 'false': [13.545, 482, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.21e-07, 194, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.105, 425, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 244, 0], 'false': [13.26, 453, 337]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [4.365, 23, 111], 'true,false': [0.0, 0, 0], 'false': [0.408, 682, 226]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.3e-07, 219, 0], 'false': [12.908, 448, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 209, 0], 'true,false,false': [0.0, 0, 0], 'false': [12.686, 422, 337]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.23e-07, 220, 0], 'false': [12.948, 468, 337]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [6.204, 264, 159], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.25, 438, 178]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 216, 0], 'true,false': [0.0, 0, 0], 'false': [12.552, 421, 337]}]
{'': [0.13046061566320188, 0.17299375000000064], 'true': [nan, 0.13046061566320188], 'true,false': [nan, 0.13046061566320188], 'true,false,false': [0.12006489994592004, 0.1516805515656423]}
{'': [2.585835905456061e-16, 0.22402274480121911], 'true': [nan, 2.585835905456061e-16], 'true,false': [nan, 2.585835905456061e-16]}
{'': [7.55409480672787e-17, 0.22536922297429063], 'true': [nan, 7.55409480672787e-17], 'true,false': [nan, 7.55409480672787e-17], 'true,false,false': [7.55409480672787e-17, nan]}
{'': [-1.6198335933055563e-16, 0.2225788564870635], 'true': [nan, -1.6198335933055563e-16], 'true,false': [nan, -1.6198335933055563e-16]}
{'': [0.14218088661171868, 0.16677061235157248], 'true': [0.14218088661171868, nan], 'true,true': [nan, 0.14218088661171868], 'true,true,false': [nan, 0.14218088661171868]}
{'': [7.705657522512502e-17, 0.21224899914209652], 'true': [nan, 7.705657522512502e-17], 'true,false': [nan, 7.705657522512502e-17], 'true,false,false': [nan, 7.705657522512502e-17]}
{'': [-8.286832145527484e-17, 0.21204817412499385], 'true': [nan, -8.286832145527484e-17], 'true,false': [-8.286832145527484e-17, nan]}
{'': [6.863196879500968e-17, 0.20827650714860726], 'true': [nan, 6.863196879500968e-17], 'true,false': [nan, 6.863196879500968e-17], 'true,false,false': [nan, 6.863196879500968e-17]}
{'': [0.09098290777561724, 0.20546255692359275], 'false': [nan, 0.2054625569235954], 'true': [0.09098290777561724, nan], 'true,true': [nan, 0.09098290777561724], 'true,true,false': [nan, 0.09098290777561724]}
{'': [-1.7475732795025613e-17, 0.20784510530049508], 'true': [-1.7475732795025613e-17, nan], 'true,true': [nan, -1.7475732795025613e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 3.2190096378326416
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 5.37e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.14185106490048857;  // std dev = 0.000, 630.000 (wgt'ed) examples reached here.  /* #neg=630 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.12544463852839188;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #neg=259 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.1254446385283921;  // std dev = 0.000, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360661;  // std dev = 0.000, 201.000 (wgt'ed) examples reached here.  /* #neg=201 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.11231637819360626;  // std dev = 4.71e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.11231637819360667;  // std dev = 0.000, 395.000 (wgt'ed) examples reached here.  /* #neg=395 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783658;  // std dev = 0.000, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.1015963294878362;  // std dev = 4.08e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.10159632948783646;  // std dev = 0.000, 379.000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.09269127618926176;  // std dev = 0.000, 604.000 (wgt'ed) examples reached here.  /* #neg=604 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839675;  // std dev = 3.65e-08, 248.000 (wgt'ed) examples reached here.  /* #neg=248 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.08518475138839679;  // std dev = 2.24e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return -0.08518475138839673;  // std dev = 5.16e-08, 413.000 (wgt'ed) examples reached here.  /* #neg=413 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109139;  // std dev = 6.32e-08, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return -0.07877675473109139;  // std dev = 7.30e-08, 450.000 (wgt'ed) examples reached here.  /* #neg=450 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.0732462257633366;  // std dev = 8.56e-08, 222.000 (wgt'ed) examples reached here.  /* #neg=222 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 7.45e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.07324622576333703;  // std dev = 0.000, 352.000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0684269778442027;  // std dev = 1.39e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.0684269778442029;  // std dev = 0.000, 677.000 (wgt'ed) examples reached here.  /* #neg=677 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202625;  // std dev = 0.000, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080119;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.06419184008202587;  // std dev = 1.36e-07, 398.000 (wgt'ed) examples reached here.  /* #neg=398 */
Inference time using transfer learning 0.8117456436157227
Refined model CLL: -0.064062


******************************************
Best model found
******************************************
Results 

CLL : -0.063847 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.2190096378326416 

Total Inference Time : 1.6617000102996826 

Total revision time: 11.697615623474121
Best scored revision CLL: -0.064062


Results 

CLL : -0.063847 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 11.712843418121338 

Total Inference Time : 1.6617000102996826 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos examples: 45
Target test neg examples: 2071

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.762613534927368
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.747979443574087;  // std dev = 3.401, 118.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=105 */
%   | | | else return 0.66584124279182;  // std dev = 2.842, 52.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=42 */
%   else return 0.08901163254787041;  // std dev = 12.089, 823.000 (wgt'ed) examples reached here.  /* #neg=633 #pos=190 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15303556390912834;  // std dev = 4.56e-09, 227.000 (wgt'ed) examples reached here.  /* #neg=227 */
%   else return 0.2477256319634524;  // std dev = 13.453, 797.000 (wgt'ed) examples reached here.  /* #neg=460 #pos=337 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.1342347190465435;  // std dev = 2.08e-07, 209.000 (wgt'ed) examples reached here.  /* #neg=209 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.21300290721186638;  // std dev = 13.349, 790.000 (wgt'ed) examples reached here.  /* #neg=453 #pos=337 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11938587382850917;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #neg=195 */
%   else return 0.16978551593199767;  // std dev = 13.357, 803.000 (wgt'ed) examples reached here.  /* #neg=466 #pos=337 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4861966273157929;  // std dev = 3.515, 119.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=105 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05016365428627736;  // std dev = 0.422, 839.000 (wgt'ed) examples reached here.  /* #neg=607 #pos=232 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11229791815570182;  // std dev = 1.28e-07, 216.000 (wgt'ed) examples reached here.  /* #neg=216 */
%   else return 0.09740837764817598;  // std dev = 13.167, 834.000 (wgt'ed) examples reached here.  /* #neg=497 #pos=337 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.10158111444494111;  // std dev = 5.59e-09, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0726574011738224;  // std dev = 13.190, 846.000 (wgt'ed) examples reached here.  /* #neg=509 #pos=337 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09267853660529707;  // std dev = 9.77e-08, 199.000 (wgt'ed) examples reached here.  /* #neg=199 */
%   else return 0.07581765258279619;  // std dev = 13.012, 798.000 (wgt'ed) examples reached here.  /* #neg=461 #pos=337 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09425825837496993;  // std dev = 6.042, 389.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=147 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.023732356297877937;  // std dev = 11.618, 656.000 (wgt'ed) examples reached here.  /* #neg=466 #pos=190 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.09281145968767181;  // std dev = 5.10e-09, 209.000 (wgt'ed) examples reached here.  /* #neg=209 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06514439327906726;  // std dev = 12.752, 792.000 (wgt'ed) examples reached here.  /* #neg=455 #pos=337 */
Inference time using transfer learning 0.9856469631195068
Parameter learned model CLL:-0.331202 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [3.401, 13, 105], 'true,false,false,false': [2.842, 10, 42], 'false': [12.089, 633, 190]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [4.56e-09, 227, 0], 'false': [13.453, 460, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [2.08e-07, 209, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.349, 453, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 195, 0], 'false': [13.357, 466, 337]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [3.515, 14, 105], 'true,false': [0.0, 0, 0], 'false': [0.422, 607, 232]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.28e-07, 216, 0], 'false': [13.167, 497, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [5.59e-09, 226, 0], 'true,false,false': [0.0, 0, 0], 'false': [13.19, 509, 337]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [9.77e-08, 199, 0], 'false': [13.012, 461, 337]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [6.042, 242, 147], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.618, 466, 190]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [5.1e-09, 209, 0], 'true,false': [0.0, 0, 0], 'false': [12.752, 455, 337]}]
{'': [0.11698961937716808, 0.1775651123752273], 'true': [nan, 0.11698961937716808], 'true,false': [nan, 0.11698961937716808], 'true,false,false': [0.09803217466245599, 0.15532544378698293]}
{'': [1.5650721051984587e-17, 0.22708018655736142], 'true': [nan, 1.5650721051984587e-17], 'true,false': [nan, 1.5650721051984587e-17]}
{'': [2.0610838926055537e-16, 0.22554852687102003], 'true': [nan, 2.0610838926055537e-16], 'true,false': [nan, 2.0610838926055537e-16], 'true,false,false': [2.0610838926055537e-16, nan]}
{'': [-7.97083197166779e-17, 0.22218639617879596], 'true': [nan, -7.97083197166779e-17], 'true,false': [nan, -7.97083197166779e-17]}
{'': [0.10380622837370307, 0.17786790654359746], 'true': [0.10380622837370307, nan], 'true,true': [nan, 0.10380622837370307], 'true,true,false': [nan, 0.10380622837370307]}
{'': [7.607083687246443e-17, 0.20787093936263512], 'true': [nan, 7.607083687246443e-17], 'true,false': [nan, 7.607083687246443e-17], 'true,false,false': [nan, 7.607083687246443e-17]}
{'': [3.1439944060181424e-17, 0.20563589382076206], 'true': [nan, 3.1439944060181424e-17], 'true,false': [3.1439944060181424e-17, nan]}
{'': [4.797948749636355e-17, 0.2121863855977299], 'true': [nan, 4.797948749636355e-17], 'true,false': [nan, 4.797948749636355e-17], 'true,false,false': [nan, 4.797948749636355e-17]}
{'': [0.09384726726527619, 0.20574620761451465], 'false': [nan, 0.2057462076145159], 'true': [0.09384726726527619, nan], 'true,true': [nan, 0.09384726726527619], 'true,true,false': [nan, 0.09384726726527619]}
{'': [2.656035944079322e-17, 0.20530502319089367], 'true': [2.656035944079322e-17, nan], 'true,true': [nan, 2.656035944079322e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 3.2226619720458984
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 5.37e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.1418510649004887;  // std dev = 0.000, 641.000 (wgt'ed) examples reached here.  /* #neg=641 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.12544463852839166;  // std dev = 0.000, 200.000 (wgt'ed) examples reached here.  /* #neg=200 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.12544463852839213;  // std dev = 0.000, 437.000 (wgt'ed) examples reached here.  /* #neg=437 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360658;  // std dev = 0.000, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.11231637819360632;  // std dev = 2.79e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.11231637819360657;  // std dev = 0.000, 408.000 (wgt'ed) examples reached here.  /* #neg=408 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783653;  // std dev = 0.000, 200.000 (wgt'ed) examples reached here.  /* #neg=200 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10159632948783624;  // std dev = 3.16e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.10159632948783646;  // std dev = 0.000, 390.000 (wgt'ed) examples reached here.  /* #neg=390 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926103;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.0926912761892617;  // std dev = 0.000, 607.000 (wgt'ed) examples reached here.  /* #neg=607 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839675;  // std dev = 0.000, 197.000 (wgt'ed) examples reached here.  /* #neg=197 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.08518475138839679;  // std dev = 1.67e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.08518475138839673;  // std dev = 6.32e-08, 446.000 (wgt'ed) examples reached here.  /* #neg=446 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109144;  // std dev = 5.77e-08, 204.000 (wgt'ed) examples reached here.  /* #neg=204 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07877675473109176;  // std dev = 1.49e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.07877675473109139;  // std dev = 5.58e-08, 413.000 (wgt'ed) examples reached here.  /* #neg=413 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.07324622576333664;  // std dev = 5.77e-08, 194.000 (wgt'ed) examples reached here.  /* #neg=194 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 1.18e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return -0.07324622576333724;  // std dev = 0.000, 457.000 (wgt'ed) examples reached here.  /* #neg=457 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0684269778442027;  // std dev = 1.49e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.06842697784420262;  // std dev = 6.32e-08, 651.000 (wgt'ed) examples reached here.  /* #neg=651 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202625;  // std dev = 0.000, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080119;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.06419184008202583;  // std dev = 1.46e-07, 414.000 (wgt'ed) examples reached here.  /* #neg=414 */
Inference time using transfer learning 0.7945981025695801
Refined model CLL: -0.064087


******************************************
Best model found
******************************************
Results 

CLL : -0.063719 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.2226619720458984 

Total Inference Time : 1.4464750289916992 

Total revision time: 11.19675588607788
Best scored revision CLL: -0.064087


Results 

CLL : -0.063719 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 11.211983680725098 

Total Inference Time : 1.4464750289916992 

Run: 2

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos examples: 56
Target test neg examples: 3308

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.496762990951538
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.6771144523408901;  // std dev = 4.147, 116.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=95 */
%   | | | else return 0.7308762078267851;  // std dev = 2.472, 55.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=48 */
%   else return 0.0970523293553857;  // std dev = 11.802, 766.000 (wgt'ed) examples reached here.  /* #neg=583 #pos=183 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15408067435000483;  // std dev = 0.000, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
%   else return 0.2480194171765089;  // std dev = 13.257, 771.000 (wgt'ed) examples reached here.  /* #neg=445 #pos=326 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.13504979868248887;  // std dev = 1.67e-07, 171.000 (wgt'ed) examples reached here.  /* #neg=171 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19383744013793994;  // std dev = 13.367, 805.000 (wgt'ed) examples reached here.  /* #neg=479 #pos=326 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12003717839187787;  // std dev = 0.000, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
%   else return 0.18890151837039842;  // std dev = 12.987, 748.000 (wgt'ed) examples reached here.  /* #neg=422 #pos=326 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.42569215728027854;  // std dev = 4.303, 118.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=95 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.028488753748376894;  // std dev = 0.412, 893.000 (wgt'ed) examples reached here.  /* #neg=662 #pos=231 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11069844736341264;  // std dev = 1.32e-07, 202.000 (wgt'ed) examples reached here.  /* #neg=202 */
%   else return 0.11523712355732312;  // std dev = 12.919, 780.000 (wgt'ed) examples reached here.  /* #neg=454 #pos=326 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.10026126338536871;  // std dev = 0.000, 201.000 (wgt'ed) examples reached here.  /* #neg=201 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10121231901575249;  // std dev = 12.793, 759.000 (wgt'ed) examples reached here.  /* #neg=433 #pos=326 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09157231661001108;  // std dev = 1.22e-07, 212.000 (wgt'ed) examples reached here.  /* #neg=212 */
%   else return 0.06312731101509995;  // std dev = 12.950, 794.000 (wgt'ed) examples reached here.  /* #neg=468 #pos=326 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10210349587591697;  // std dev = 6.213, 359.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=143 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.03359012694555682;  // std dev = 11.445, 644.000 (wgt'ed) examples reached here.  /* #neg=461 #pos=183 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.09245214822470482;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.055814000151545654;  // std dev = 12.780, 778.000 (wgt'ed) examples reached here.  /* #neg=452 #pos=326 */
Inference time using transfer learning 1.2692670822143555
Parameter learned model CLL:-0.336689 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [4.147, 21, 95], 'true,false,false,false': [2.472, 7, 48], 'false': [11.802, 583, 183]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 185, 0], 'false': [13.257, 445, 326]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.67e-07, 171, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.367, 479, 326]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 168, 0], 'false': [12.987, 422, 326]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [4.303, 23, 95], 'true,false': [0.0, 0, 0], 'false': [0.412, 662, 231]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.32e-07, 202, 0], 'false': [12.919, 454, 326]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 201, 0], 'true,false,false': [0.0, 0, 0], 'false': [12.793, 433, 326]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.22e-07, 212, 0], 'false': [12.95, 468, 326]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [6.213, 216, 143], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.445, 461, 183]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 178, 0], 'true,false': [0.0, 0, 0], 'false': [12.78, 452, 326]}]
{'': [0.13693102151089745, 0.18182856246889742], 'true': [nan, 0.13693102151089745], 'true,false': [nan, 0.13693102151089745], 'true,false,false': [0.1482609988109414, 0.11107438016528964]}
{'': [-2.880578658486893e-17, 0.2279481041062896], 'true': [nan, -2.880578658486893e-17], 'true,false': [nan, -2.880578658486893e-17]}
{'': [1.6361181415528622e-16, 0.22195373470026114], 'true': [nan, 1.6361181415528622e-16], 'true,false': [nan, 1.6361181415528622e-16], 'true,false,false': [1.6361181415528622e-16, nan]}
{'': [-3.172065784643304e-17, 0.22549148986350612], 'true': [nan, -3.172065784643304e-17], 'true,false': [nan, -3.172065784643304e-17]}
{'': [0.15692329790289952, 0.16953683053199703], 'true': [0.15692329790289952, nan], 'true,true': [nan, 0.15692329790289952], 'true,true,false': [nan, 0.15692329790289952]}
{'': [8.57399959611507e-17, 0.21397109277438423], 'true': [nan, 8.57399959611507e-17], 'true,false': [nan, 8.57399959611507e-17], 'true,false,false': [nan, 8.57399959611507e-17]}
{'': [-3.9769182971647396e-17, 0.21561017742729974], 'true': [nan, -3.9769182971647396e-17], 'true,false': [-3.9769182971647396e-17, nan]}
{'': [7.017447419800517e-17, 0.21120442279190496], 'true': [nan, 7.017447419800517e-17], 'true,false': [nan, 7.017447419800517e-17], 'true,false,false': [nan, 7.017447419800517e-17]}
{'': [0.10753587983583603, 0.2034137378959133], 'false': [nan, 0.20341373789591413], 'true': [0.10753587983583603, nan], 'true,true': [nan, 0.10753587983583603], 'true,true,false': [nan, 0.10753587983583603]}
{'': [-3.118604001756058e-17, 0.20993512737823733], 'true': [-3.118604001756058e-17, nan], 'true,true': [nan, -3.118604001756058e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 3.1622867584228516
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1.05e-06, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048766;  // std dev = 5.96e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.14185106490048816;  // std dev = 0.000, 572.000 (wgt'ed) examples reached here.  /* #neg=572 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.1254446385283916;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #neg=194 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.12544463852839213;  // std dev = 0.000, 408.000 (wgt'ed) examples reached here.  /* #neg=408 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360654;  // std dev = 0.000, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.11231637819360632;  // std dev = 2.98e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return -0.11231637819360676;  // std dev = 0.000, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783652;  // std dev = 0.000, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831163;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.1015963294878362;  // std dev = 3.94e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.10159632948783649;  // std dev = 0.000, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.09269127618926158;  // std dev = 0.000, 557.000 (wgt'ed) examples reached here.  /* #neg=557 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839675;  // std dev = 8.43e-08, 207.000 (wgt'ed) examples reached here.  /* #neg=207 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948756;  // std dev = 3.86e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.08518475138839675;  // std dev = 5.58e-08, 406.000 (wgt'ed) examples reached here.  /* #neg=406 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109146;  // std dev = 7.74e-08, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.46e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.07877675473109175;  // std dev = 1.97e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.07877675473109143;  // std dev = 0.000, 421.000 (wgt'ed) examples reached here.  /* #neg=421 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.07324622576333667;  // std dev = 1.13e-07, 194.000 (wgt'ed) examples reached here.  /* #neg=194 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1770964977452765;  // std dev = 2.76e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.07324622576333704;  // std dev = 7.45e-09, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.07324622576333711;  // std dev = 6.66e-08, 378.000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.0684269778442027;  // std dev = 1.67e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.06842697784420358;  // std dev = 0.000, 573.000 (wgt'ed) examples reached here.  /* #neg=573 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202623;  // std dev = 0.000, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080118;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.06419184008202596;  // std dev = 0.000, 414.000 (wgt'ed) examples reached here.  /* #neg=414 */
Inference time using transfer learning 0.9100053310394287
Refined model CLL: -0.064216


******************************************
Best model found
******************************************
Results 

CLL : -0.063421 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.1622867584228516 

Total Inference Time : 1.3611199855804443 

Total revision time: 10.415352582931519
Best scored revision CLL: -0.064216


Results 

CLL : -0.063421 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 10.431383609771729 

Total Inference Time : 1.3611199855804443 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos examples: 58
Target test neg examples: 3423

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.6639442443847656
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.7451054568386413;  // std dev = 3.396, 115.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=102 */
%   | | | else return 0.6717082571334108;  // std dev = 2.992, 59.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=48 */
%   else return 0.07619404788146575;  // std dev = 11.664, 798.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=174 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15138158226321335;  // std dev = 1.34e-08, 210.000 (wgt'ed) examples reached here.  /* #neg=210 */
%   else return 0.2585644348336011;  // std dev = 13.037, 745.000 (wgt'ed) examples reached here.  /* #neg=421 #pos=324 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.13294262183141495;  // std dev = 2.18e-07, 203.000 (wgt'ed) examples reached here.  /* #neg=203 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.21778378234940404;  // std dev = 12.971, 747.000 (wgt'ed) examples reached here.  /* #neg=423 #pos=324 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11835194702611433;  // std dev = 1.36e-08, 210.000 (wgt'ed) examples reached here.  /* #neg=210 */
%   else return 0.16593848344196652;  // std dev = 13.069, 773.000 (wgt'ed) examples reached here.  /* #neg=449 #pos=324 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3924106998298051;  // std dev = 4.620, 129.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=102 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.030140265529949497;  // std dev = 0.410, 865.000 (wgt'ed) examples reached here.  /* #neg=643 #pos=222 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10945288396772423;  // std dev = 1.50e-07, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
%   else return 0.12199179174497488;  // std dev = 12.679, 759.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=324 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.09923132677028343;  // std dev = 8.74e-09, 202.000 (wgt'ed) examples reached here.  /* #neg=202 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09960199995652734;  // std dev = 12.687, 746.000 (wgt'ed) examples reached here.  /* #neg=422 #pos=324 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09070756039637681;  // std dev = 6.14e-08, 210.000 (wgt'ed) examples reached here.  /* #neg=210 */
%   else return 0.07897157500471388;  // std dev = 12.618, 749.000 (wgt'ed) examples reached here.  /* #neg=425 #pos=324 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08262296315171178;  // std dev = 6.318, 416.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=150 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.00542665180822845;  // std dev = 10.916, 552.000 (wgt'ed) examples reached here.  /* #neg=378 #pos=174 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.09004294804868575;  // std dev = 1.32e-09, 224.000 (wgt'ed) examples reached here.  /* #neg=224 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05918315517778547;  // std dev = 12.474, 750.000 (wgt'ed) examples reached here.  /* #neg=426 #pos=324 */
Inference time using transfer learning 1.1394639015197754
Parameter learned model CLL:-0.33057 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [3.396, 13, 102], 'true,false,false,false': [2.992, 11, 48], 'false': [11.664, 624, 174]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.34e-08, 210, 0], 'false': [13.037, 421, 324]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [2.18e-07, 203, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [12.971, 423, 324]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.36e-08, 210, 0], 'false': [13.069, 449, 324]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [4.62, 27, 102], 'true,false': [0.0, 0, 0], 'false': [0.41, 643, 222]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.5e-07, 225, 0], 'false': [12.679, 435, 324]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [8.74e-09, 202, 0], 'true,false,false': [0.0, 0, 0], 'false': [12.687, 422, 324]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.14e-08, 210, 0], 'false': [12.618, 425, 324]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [6.318, 266, 150], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.916, 378, 174]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [1.32e-09, 224, 0], 'true,false': [0.0, 0, 0], 'false': [12.474, 426, 324]}]
{'': [0.11890606420928022, 0.1705014415738601], 'true': [nan, 0.11890606420928022], 'true,false': [nan, 0.11890606420928022], 'true,false,false': [0.10026465028355633, 0.1516805515656423]}
{'': [1.7763568394002506e-16, 0.22814694051924406], 'true': [nan, 1.7763568394002506e-16], 'true,false': [nan, 1.7763568394002506e-16]}
{'': [2.340765785909197e-16, 0.2252323872788951], 'true': [nan, 2.340765785909197e-16], 'true,false': [nan, 2.340765785909197e-16], 'true,false,false': [2.340765785909197e-16, nan]}
{'': [1.860945260324072e-16, 0.22097036150209337], 'true': [nan, 1.860945260324072e-16], 'true,false': [nan, 1.860945260324072e-16]}
{'': [0.16549486208761488, 0.16845672150641444], 'true': [0.16549486208761488, nan], 'true,true': [nan, 0.16549486208761488], 'true,true,false': [nan, 0.16549486208761488]}
{'': [1.0066022089934752e-16, 0.2117908191404697], 'true': [nan, 1.0066022089934752e-16], 'true,false': [nan, 1.0066022089934752e-16], 'true,false,false': [nan, 1.0066022089934752e-16]}
{'': [7.584691950409486e-17, 0.215771060084481], 'true': [nan, 7.584691950409486e-17], 'true,false': [7.584691950409486e-17, nan]}
{'': [1.797503944631206e-17, 0.21256736540166468], 'true': [nan, 1.797503944631206e-17], 'true,false': [nan, 1.797503944631206e-17], 'true,false,false': [nan, 1.797503944631206e-17]}
{'': [0.09594046572307063, 0.21585538752363026], 'false': [nan, 0.21585538752362982], 'true': [0.09594046572307063, nan], 'true,true': [nan, 0.09594046572307063], 'true,true,false': [nan, 0.09594046572307063]}
{'': [1.982541115402065e-18, 0.20745743489487695], 'true': [1.982541115402065e-18, nan], 'true,true': [nan, 1.982541115402065e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 3.145158529281616
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1.04e-06, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048766;  // std dev = 5.58e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.14185106490048868;  // std dev = 0.000, 644.000 (wgt'ed) examples reached here.  /* #neg=644 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.1254446385283918;  // std dev = 0.000, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.12544463852839208;  // std dev = 0.000, 386.000 (wgt'ed) examples reached here.  /* #neg=386 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360672;  // std dev = 0.000, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.1123163781936063;  // std dev = 3.65e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.11231637819360663;  // std dev = 0.000, 405.000 (wgt'ed) examples reached here.  /* #neg=405 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783655;  // std dev = 0.000, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831163;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.10159632948783626;  // std dev = 3.16e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.10159632948783646;  // std dev = 0.000, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.09269127618926172;  // std dev = 0.000, 601.000 (wgt'ed) examples reached here.  /* #neg=601 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839675;  // std dev = 2.98e-08, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948756;  // std dev = 3.86e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.08518475138839672;  // std dev = 0.000, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.0787767547310914;  // std dev = 6.99e-08, 201.000 (wgt'ed) examples reached here.  /* #neg=201 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return -0.07877675473109139;  // std dev = 6.32e-08, 425.000 (wgt'ed) examples reached here.  /* #neg=425 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.0732462257633366;  // std dev = 8.16e-08, 214.000 (wgt'ed) examples reached here.  /* #neg=214 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527653;  // std dev = 2.73e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.07324622576333702;  // std dev = 0.000, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.06842697784420268;  // std dev = 1.97e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.06842697784420257;  // std dev = 0.000, 568.000 (wgt'ed) examples reached here.  /* #neg=568 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202625;  // std dev = 0.000, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080118;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return -0.06419184008202597;  // std dev = 1.06e-07, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
Inference time using transfer learning 0.979823112487793
Refined model CLL: -0.064225


******************************************
Best model found
******************************************
Results 

CLL : -0.063422 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.145158529281616 

Total Inference Time : 1.3887958526611328 

Total revision time: 11.161814451217651
Best scored revision CLL: -0.064225


Results 

CLL : -0.063422 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 11.177845478057861 

Total Inference Time : 1.3887958526611328 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos examples: 178
Target test neg examples: 3543

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 1.9254679679870605
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.7617633929308381;  // std dev = 2.689, 83.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=75 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.08978735317860807;  // std dev = 9.722, 531.000 (wgt'ed) examples reached here.  /* #neg=408 #pos=123 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15313613653006308;  // std dev = 3.23e-09, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   else return 0.24293894879331052;  // std dev = 10.509, 490.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=204 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.13431320126297347;  // std dev = 9.66e-08, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22905817986980853;  // std dev = 10.228, 464.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=204 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11944861727305459;  // std dev = 1.86e-09, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   else return 0.1921707300124007;  // std dev = 10.171, 459.000 (wgt'ed) examples reached here.  /* #neg=255 #pos=204 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.474794705592311;  // std dev = 2.970, 85.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=75 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.02324712182950054;  // std dev = 0.414, 517.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=129 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10969469072427171;  // std dev = 0.000, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
%   else return 0.1108878241567644;  // std dev = 10.017, 484.000 (wgt'ed) examples reached here.  /* #neg=280 #pos=204 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.0994314189550187;  // std dev = 0.000, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09269452522760564;  // std dev = 9.919, 481.000 (wgt'ed) examples reached here.  /* #neg=277 #pos=204 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09087566695749538;  // std dev = 0.000, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   else return 0.07391744839803588;  // std dev = 9.943, 476.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=204 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0734140968875307;  // std dev = 3.999, 234.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=81 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.01739128824677767;  // std dev = 9.249, 404.000 (wgt'ed) examples reached here.  /* #neg=281 #pos=123 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.08944330862713079;  // std dev = 6.18e-09, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0642964920693553;  // std dev = 9.805, 469.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=204 */
Inference time using transfer learning 1.2029616832733154
Parameter learned model CLL:-0.314836 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [2.689, 8, 75], 'true,false,false,false': [0.0, 0, 6], 'false': [9.722, 408, 123]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [3.23e-09, 142, 0], 'false': [10.509, 286, 204]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [9.66e-08, 129, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [10.228, 260, 204]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.86e-09, 125, 0], 'false': [10.171, 255, 204]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [2.97, 10, 75], 'true,false': [0.0, 0, 0], 'false': [0.414, 388, 129]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 170, 0], 'false': [10.017, 280, 204]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 144, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.919, 277, 204]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 141, 0], 'false': [9.943, 272, 204]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [3.999, 153, 81], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.249, 281, 123]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [6.18e-09, 136, 0], 'true,false': [0.0, 0, 0], 'false': [9.805, 265, 204]}]
{'': [0.08180785254387087, 0.17798206134891034], 'true': [nan, 0.08180785254387087], 'true,false': [nan, 0.08180785254387087], 'true,false,false': [0.08709536942952427, -1.4802973661668753e-16]}
{'': [6.254777603522009e-18, 0.2254004948418816], 'true': [nan, 6.254777603522009e-18], 'true,false': [nan, 6.254777603522009e-18]}
{'': [7.229359230117299e-17, 0.2254500616510073], 'true': [nan, 7.229359230117299e-17], 'true,false': [nan, 7.229359230117299e-17], 'true,false,false': [7.229359230117299e-17, nan]}
{'': [5.3290705182007515e-18, 0.22538362445754254], 'true': [nan, 5.3290705182007515e-18], 'true,false': [nan, 5.3290705182007515e-18]}
{'': [0.10380622837370297, 0.17111125866358828], 'true': [0.10380622837370297, nan], 'true,true': [nan, 0.10380622837370297], 'true,true,false': [nan, 0.10380622837370297]}
{'': [-5.4858078863831267e-17, 0.2073267581534933], 'true': [nan, -5.4858078863831267e-17], 'true,false': [nan, -5.4858078863831267e-17], 'true,false,false': [nan, -5.4858078863831267e-17]}
{'': [-1.850371707708594e-17, 0.20456102714568827], 'true': [nan, -1.850371707708594e-17], 'true,false': [-1.850371707708594e-17, nan]}
{'': [-5.196788625904988e-17, 0.20770065803947876], 'true': [nan, -5.196788625904988e-17], 'true,false': [nan, -5.196788625904988e-17], 'true,false,false': [nan, -5.196788625904988e-17]}
{'': [0.06833853024407158, 0.21176232722282035], 'false': [nan, 0.21176232722282054], 'true': [0.06833853024407158, nan], 'true,true': [nan, 0.06833853024407158], 'true,true,false': [nan, 0.06833853024407158]}
{'': [3.918434204559376e-17, 0.20498192087280867], 'true': [3.918434204559376e-17, nan], 'true,true': [nan, 3.918434204559376e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;genre(B, E).;true;true
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 2.331333637237549
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995127;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995105;  // std dev = 6.95e-07, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.14185106490048746;  // std dev = 2.70e-07, 402.000 (wgt'ed) examples reached here.  /* #neg=402 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.12544463852839127;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.7194734122109568;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.12544463852839197;  // std dev = 0.000, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360618;  // std dev = 9.88e-08, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 6.08e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.11987434285147659;  // std dev = 0.140, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return -0.11231637819360688;  // std dev = 0.000, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783669;  // std dev = 0.000, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.4175135841583101;  // std dev = 2.53e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.10090855417542581;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return -0.10159632948783659;  // std dev = 0.000, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601486;  // std dev = 3.95e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.0921151105329845;  // std dev = 1.29e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.09269127618926071;  // std dev = 1.74e-07, 379.000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.0851847513883968;  // std dev = 6.23e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948834;  // std dev = 2.31e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.10684456535171656;  // std dev = 0.209, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.08518475138839678;  // std dev = 9.19e-08, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109153;  // std dev = 7.88e-08, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.20975771563253495;  // std dev = 2.86e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.0853794414104047;  // std dev = 0.146, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return -0.07877675473109144;  // std dev = 5.96e-08, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.07324622576333714;  // std dev = 3.80e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527764;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.07934623673938838;  // std dev = 0.137, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return -0.07324622576333668;  // std dev = 1.24e-07, 239.000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420328;  // std dev = 0.000, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.07775416184096656;  // std dev = 0.126, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202626;  // std dev = 0.000, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.13400703000801092;  // std dev = 1.19e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.06125386615502355;  // std dev = 3.73e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.0642456291923483;  // std dev = 0.015, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
Inference time using transfer learning 1.0120115280151367
Refined model CLL: -0.06358


******************************************
Best model found
******************************************
Results 

CLL : -0.068229 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.331333637237549 

Total Inference Time : 1.4228999614715576 

Total revision time: 9.27873706817627
Best scored revision CLL: -0.06358


Results 

CLL : -0.068229 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 9.29476809501648 

Total Inference Time : 1.4228999614715576 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos examples: 45
Target test neg examples: 1891

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.754844903945923
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.7391013160518914;  // std dev = 3.635, 126.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=111 */
%   | | | else return 0.7993254056877476;  // std dev = 1.680, 51.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=48 */
%   else return 0.07312478051013875;  // std dev = 11.821, 828.000 (wgt'ed) examples reached here.  /* #neg=650 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15098770997392824;  // std dev = 0.000, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
%   else return 0.2539854818494348;  // std dev = 13.278, 781.000 (wgt'ed) examples reached here.  /* #neg=444 #pos=337 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.13263453476622902;  // std dev = 0.000, 211.000 (wgt'ed) examples reached here.  /* #neg=211 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2218926546504437;  // std dev = 13.090, 770.000 (wgt'ed) examples reached here.  /* #neg=433 #pos=337 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11810515391810458;  // std dev = 0.000, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
%   else return 0.181003238355164;  // std dev = 13.049, 773.000 (wgt'ed) examples reached here.  /* #neg=436 #pos=337 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4098714560850671;  // std dev = 4.590, 137.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=111 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04117343222495747;  // std dev = 0.411, 846.000 (wgt'ed) examples reached here.  /* #neg=620 #pos=226 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11032465513045485;  // std dev = 0.000, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
%   else return 0.11647847246272876;  // std dev = 12.786, 787.000 (wgt'ed) examples reached here.  /* #neg=450 #pos=337 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.09995237634873415;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0939969386407083;  // std dev = 12.748, 782.000 (wgt'ed) examples reached here.  /* #neg=445 #pos=337 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09131310934836849;  // std dev = 0.000, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
%   else return 0.0600924647954694;  // std dev = 12.930, 806.000 (wgt'ed) examples reached here.  /* #neg=469 #pos=337 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09334308956192558;  // std dev = 6.261, 411.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=159 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.015788982348042803;  // std dev = 11.137, 587.000 (wgt'ed) examples reached here.  /* #neg=409 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.091481686806572;  // std dev = 8.64e-09, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04341501159277556;  // std dev = 12.853, 805.000 (wgt'ed) examples reached here.  /* #neg=468 #pos=337 */
Inference time using transfer learning 0.9867498874664307
Parameter learned model CLL:-0.320729 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [3.635, 15, 111], 'true,false,false,false': [1.68, 3, 48], 'false': [11.821, 650, 178]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 231, 0], 'false': [13.278, 444, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 211, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.09, 433, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 231, 0], 'false': [13.049, 436, 337]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [4.59, 26, 111], 'true,false': [0.0, 0, 0], 'false': [0.411, 620, 226]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 230, 0], 'false': [12.786, 450, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 228, 0], 'true,false,false': [0.0, 0, 0], 'false': [12.748, 445, 337]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 221, 0], 'false': [12.93, 469, 337]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [6.261, 252, 159], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.137, 409, 178]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [8.64e-09, 226, 0], 'true,false': [0.0, 0, 0], 'false': [12.853, 468, 337]}]
{'': [0.09135305946567686, 0.16876123130061435], 'true': [nan, 0.09135305946567686], 'true,false': [nan, 0.09135305946567686], 'true,false,false': [0.10487528344671523, 0.05536332179930846]}
{'': [-3.075942579048053e-17, 0.22575326717693786], 'true': [nan, -3.075942579048053e-17], 'true,false': [nan, -3.075942579048053e-17]}
{'': [-2.946563477678141e-17, 0.22254417907856489], 'true': [nan, -2.946563477678141e-17], 'true,false': [nan, -2.946563477678141e-17], 'true,false,false': [-2.946563477678141e-17, nan]}
{'': [-1.7109930595954793e-16, 0.220280449387881], 'true': [nan, -1.7109930595954793e-16], 'true,false': [nan, -1.7109930595954793e-16]}
{'': [0.1537641856252329, 0.16872884854065068], 'true': [0.1537641856252329, nan], 'true,true': [nan, 0.1537641856252329], 'true,true,false': [nan, 0.1537641856252329]}
{'': [-8.49561966669685e-17, 0.20772595381674638], 'true': [nan, -8.49561966669685e-17], 'true,false': [nan, -8.49561966669685e-17], 'true,false,false': [nan, -8.49561966669685e-17]}
{'': [-1.0712678307786598e-16, 0.20781716846479123], 'true': [nan, -1.0712678307786598e-16], 'true,false': [-1.0712678307786598e-16, nan]}
{'': [-1.406617406764904e-17, 0.20742674755633103], 'true': [nan, -1.406617406764904e-17], 'true,false': [nan, -1.406617406764904e-17], 'true,false,false': [nan, -1.406617406764904e-17]}
{'': [0.09537468697967057, 0.21128424205311733], 'false': [nan, 0.2112842420531158], 'true': [0.09537468697967057, nan], 'true,true': [nan, 0.09537468697967057], 'true,true,false': [nan, 0.09537468697967057]}
{'': [7.270487063916955e-17, 0.20520922985395484], 'true': [7.270487063916955e-17, nan], 'true,true': [nan, 7.270487063916955e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 3.0457959175109863
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 6.50e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.14185106490048863;  // std dev = 0.000, 626.000 (wgt'ed) examples reached here.  /* #neg=626 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.12544463852839183;  // std dev = 0.000, 239.000 (wgt'ed) examples reached here.  /* #neg=239 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.12544463852839155;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.12544463852839208;  // std dev = 0.000, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.1123163781936068;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.11231637819360632;  // std dev = 2.98e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return -0.11231637819360672;  // std dev = 0.000, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783656;  // std dev = 0.000, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10159632948783627;  // std dev = 2.79e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return -0.10159632948783645;  // std dev = 0.000, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.09269127618926175;  // std dev = 0.000, 616.000 (wgt'ed) examples reached here.  /* #neg=616 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839675;  // std dev = 1.49e-08, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.08518475138839673;  // std dev = 5.16e-08, 411.000 (wgt'ed) examples reached here.  /* #neg=411 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109139;  // std dev = 5.37e-08, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07877675473109175;  // std dev = 2.11e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.0787767547310914;  // std dev = 5.58e-08, 392.000 (wgt'ed) examples reached here.  /* #neg=392 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.0732462257633366;  // std dev = 8.43e-08, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 1.05e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.07324622576333714;  // std dev = 0.000, 405.000 (wgt'ed) examples reached here.  /* #neg=405 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06842697784420268;  // std dev = 1.67e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.0684269778442028;  // std dev = 0.000, 623.000 (wgt'ed) examples reached here.  /* #neg=623 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202625;  // std dev = 0.000, 248.000 (wgt'ed) examples reached here.  /* #neg=248 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080119;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.06419184008202589;  // std dev = 1.33e-07, 414.000 (wgt'ed) examples reached here.  /* #neg=414 */
Inference time using transfer learning 0.7979481220245361
Refined model CLL: -0.064062


******************************************
Best model found
******************************************
Results 

CLL : -0.063847 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.0457959175109863 

Total Inference Time : 1.646099328994751 

Total revision time: 11.753987312316895
Best scored revision CLL: -0.064062


Results 

CLL : -0.063847 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 11.770018339157104 

Total Inference Time : 1.646099328994751 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos examples: 45
Target test neg examples: 2071

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.710130214691162
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.7331489350995106;  // std dev = 3.623, 120.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=105 */
%   | | | else return 0.7711924133603816;  // std dev = 1.911, 46.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=42 */
%   else return 0.07628900398584809;  // std dev = 12.188, 871.000 (wgt'ed) examples reached here.  /* #neg=681 #pos=190 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15139378122186004;  // std dev = 1.29e-08, 205.000 (wgt'ed) examples reached here.  /* #neg=205 */
%   else return 0.23451006426147175;  // std dev = 13.600, 824.000 (wgt'ed) examples reached here.  /* #neg=487 #pos=337 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.13295216144478525;  // std dev = 2.11e-07, 198.000 (wgt'ed) examples reached here.  /* #neg=198 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1954622740153519;  // std dev = 13.553, 834.000 (wgt'ed) examples reached here.  /* #neg=497 #pos=337 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11835958710571147;  // std dev = 0.000, 212.000 (wgt'ed) examples reached here.  /* #neg=212 */
%   else return 0.15564579884081803;  // std dev = 13.565, 849.000 (wgt'ed) examples reached here.  /* #neg=512 #pos=337 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4580389704146811;  // std dev = 4.099, 125.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=105 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04737701053953917;  // std dev = 0.418, 865.000 (wgt'ed) examples reached here.  /* #neg=633 #pos=232 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11115082363373247;  // std dev = 1.05e-07, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
%   else return 0.12991475527628135;  // std dev = 12.920, 788.000 (wgt'ed) examples reached here.  /* #neg=451 #pos=337 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.10063486516038113;  // std dev = 0.000, 210.000 (wgt'ed) examples reached here.  /* #neg=210 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07052628344915154;  // std dev = 13.315, 856.000 (wgt'ed) examples reached here.  /* #neg=519 #pos=337 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0918856694898694;  // std dev = 6.66e-08, 216.000 (wgt'ed) examples reached here.  /* #neg=216 */
%   else return 0.08347871355714845;  // std dev = 12.929, 799.000 (wgt'ed) examples reached here.  /* #neg=462 #pos=337 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08929099057729122;  // std dev = 6.404, 364.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=147 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.004573648100033484;  // std dev = 11.500, 625.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=190 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.09166939163683482;  // std dev = 1.32e-09, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06833609372084452;  // std dev = 12.745, 786.000 (wgt'ed) examples reached here.  /* #neg=449 #pos=337 */
Inference time using transfer learning 1.0270886421203613
Parameter learned model CLL:-0.330517 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [3.623, 15, 105], 'true,false,false,false': [1.911, 4, 42], 'false': [12.188, 681, 190]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.29e-08, 205, 0], 'false': [13.6, 487, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [2.11e-07, 198, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.553, 497, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 212, 0], 'false': [13.565, 512, 337]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [4.099, 20, 105], 'true,false': [0.0, 0, 0], 'false': [0.418, 633, 232]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.05e-07, 178, 0], 'false': [12.92, 451, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 210, 0], 'true,false,false': [0.0, 0, 0], 'false': [13.315, 519, 337]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.66e-08, 216, 0], 'false': [12.929, 462, 337]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [6.404, 217, 147], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.5, 435, 190]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [1.32e-09, 196, 0], 'true,false': [0.0, 0, 0], 'false': [12.745, 449, 337]}]
{'': [0.10135723617361553, 0.17055497923260193], 'true': [nan, 0.10135723617361553], 'true,false': [nan, 0.10135723617361553], 'true,false,false': [0.10937500000000284, 0.07939508506616362]}
{'': [1.6897052862587749e-16, 0.22445702838861692], 'true': [nan, 1.6897052862587749e-16], 'true,false': [nan, 1.6897052862587749e-16]}
{'': [2.2428747972225386e-16, 0.2202324883107166], 'true': [nan, 2.2428747972225386e-16], 'true,false': [nan, 2.2428747972225386e-16], 'true,false,false': [2.2428747972225386e-16, nan]}
{'': [-7.331661483373675e-17, 0.21674735221157967], 'true': [nan, -7.331661483373675e-17], 'true,false': [nan, -7.331661483373675e-17]}
{'': [0.13440000000000113, 0.17494275271540638], 'true': [0.13440000000000113, nan], 'true,true': [nan, 0.13440000000000113], 'true,true,false': [nan, 0.13440000000000113]}
{'': [6.237208003512116e-17, 0.21184079493361463], 'true': [nan, 6.237208003512116e-17], 'true,false': [nan, 6.237208003512116e-17], 'true,false,false': [nan, 6.237208003512116e-17]}
{'': [-3.595007889262412e-17, 0.20711130331395733], 'true': [nan, -3.595007889262412e-17], 'true,false': [-3.595007889262412e-17, nan]}
{'': [2.05596856412066e-17, 0.20922453950047828], 'true': [nan, 2.05596856412066e-17], 'true,false': [nan, 2.05596856412066e-17], 'true,false,false': [nan, 2.05596856412066e-17]}
{'': [0.11266287011084057, 0.21158399999999933], 'false': [nan, 0.21158399999999988], 'true': [0.11266287011084057, nan], 'true,true': [nan, 0.11266287011084057], 'true,true,false': [nan, 0.11266287011084057]}
{'': [2.2657612747452172e-18, 0.2066490302020232], 'true': [2.2657612747452172e-18, nan], 'true,true': [nan, 2.2657612747452172e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 3.1691088676452637
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 5.77e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.1418510649004883;  // std dev = 0.000, 578.000 (wgt'ed) examples reached here.  /* #neg=578 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.12544463852839172;  // std dev = 0.000, 211.000 (wgt'ed) examples reached here.  /* #neg=211 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.12544463852839155;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return -0.12544463852839213;  // std dev = 0.000, 400.000 (wgt'ed) examples reached here.  /* #neg=400 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360654;  // std dev = 0.000, 190.000 (wgt'ed) examples reached here.  /* #neg=190 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.11231637819360625;  // std dev = 5.37e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return -0.11231637819360642;  // std dev = 0.000, 436.000 (wgt'ed) examples reached here.  /* #neg=436 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783655;  // std dev = 0.000, 211.000 (wgt'ed) examples reached here.  /* #neg=211 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10159632948783621;  // std dev = 4.21e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.10159632948783646;  // std dev = 0.000, 406.000 (wgt'ed) examples reached here.  /* #neg=406 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.09269127618926172;  // std dev = 0.000, 609.000 (wgt'ed) examples reached here.  /* #neg=609 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839675;  // std dev = 1.49e-08, 223.000 (wgt'ed) examples reached here.  /* #neg=223 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.0851847513883968;  // std dev = 1.97e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return -0.08518475138839675;  // std dev = 5.58e-08, 432.000 (wgt'ed) examples reached here.  /* #neg=432 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109146;  // std dev = 6.32e-08, 186.000 (wgt'ed) examples reached here.  /* #neg=186 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07877675473109176;  // std dev = 1.83e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.07877675473109143;  // std dev = 3.65e-08, 431.000 (wgt'ed) examples reached here.  /* #neg=431 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.07324622576333664;  // std dev = 1.17e-07, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 1.05e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.0732462257633372;  // std dev = 0.000, 440.000 (wgt'ed) examples reached here.  /* #neg=440 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0684269778442027;  // std dev = 1.18e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.06842697784420275;  // std dev = 5.96e-08, 622.000 (wgt'ed) examples reached here.  /* #neg=622 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202625;  // std dev = 0.000, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080119;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.06419184008202597;  // std dev = 1.16e-07, 421.000 (wgt'ed) examples reached here.  /* #neg=421 */
Inference time using transfer learning 0.7958164215087891
Refined model CLL: -0.064087


******************************************
Best model found
******************************************
Results 

CLL : -0.063719 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.1691088676452637 

Total Inference Time : 1.4643070697784424 

Total revision time: 11.236046314239502
Best scored revision CLL: -0.064087


Results 

CLL : -0.063719 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 11.252077341079712 

Total Inference Time : 1.4643070697784424 

Run: 3

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos examples: 56
Target test neg examples: 3308

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.605130672454834
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.6771144523408901;  // std dev = 4.147, 116.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=95 */
%   | | | else return 0.6857351419960642;  // std dev = 2.877, 58.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=48 */
%   else return 0.09893840878372158;  // std dev = 11.787, 760.000 (wgt'ed) examples reached here.  /* #neg=577 #pos=183 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15432666602321726;  // std dev = 1.05e-08, 191.000 (wgt'ed) examples reached here.  /* #neg=191 */
%   else return 0.2364413938746166;  // std dev = 13.401, 796.000 (wgt'ed) examples reached here.  /* #neg=470 #pos=326 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.13524149424467685;  // std dev = 0.000, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.21359420360374579;  // std dev = 13.183, 770.000 (wgt'ed) examples reached here.  /* #neg=444 #pos=326 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12019025374660092;  // std dev = 7.68e-09, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
%   else return 0.16988569758491986;  // std dev = 13.215, 782.000 (wgt'ed) examples reached here.  /* #neg=456 #pos=326 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.44924264479972936;  // std dev = 4.065, 115.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=95 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.032937276148416614;  // std dev = 0.416, 877.000 (wgt'ed) examples reached here.  /* #neg=646 #pos=231 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11126516126562681;  // std dev = 0.000, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
%   else return 0.13524212047925546;  // std dev = 12.703, 744.000 (wgt'ed) examples reached here.  /* #neg=418 #pos=326 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.10072925384669058;  // std dev = 0.000, 176.000 (wgt'ed) examples reached here.  /* #neg=176 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08817567889182414;  // std dev = 12.914, 779.000 (wgt'ed) examples reached here.  /* #neg=453 #pos=326 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09196480877119002;  // std dev = 7.30e-08, 197.000 (wgt'ed) examples reached here.  /* #neg=197 */
%   else return 0.0743336176433681;  // std dev = 12.800, 773.000 (wgt'ed) examples reached here.  /* #neg=447 #pos=326 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13524108534587553;  // std dev = 5.701, 328.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=143 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.02460640190301035;  // std dev = 11.349, 618.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=183 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.09564307063155865;  // std dev = 5.27e-09, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044582542487251325;  // std dev = 12.806, 791.000 (wgt'ed) examples reached here.  /* #neg=465 #pos=326 */
Inference time using transfer learning 1.2945663928985596
Parameter learned model CLL:-0.340412 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [4.147, 21, 95], 'true,false,false,false': [2.877, 10, 48], 'false': [11.787, 577, 183]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.05e-08, 191, 0], 'false': [13.401, 470, 326]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 182, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.183, 444, 326]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.68e-09, 165, 0], 'false': [13.215, 456, 326]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [4.065, 20, 95], 'true,false': [0.0, 0, 0], 'false': [0.416, 646, 231]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 187, 0], 'false': [12.703, 418, 326]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 176, 0], 'true,false,false': [0.0, 0, 0], 'false': [12.914, 453, 326]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.3e-08, 197, 0], 'false': [12.8, 447, 326]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [5.701, 185, 143], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.349, 435, 183]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [5.27e-09, 196, 0], 'true,false': [0.0, 0, 0], 'false': [12.806, 465, 326]}]
{'': [0.14641960628881479, 0.18280990304709208], 'true': [nan, 0.14641960628881479], 'true,false': [nan, 0.14641960628881479], 'true,false,false': [0.1482609988109414, 0.14268727705112988]}
{'': [1.1160357106179584e-16, 0.22562767191186503], 'true': [nan, 1.1160357106179584e-16], 'true,false': [nan, 1.1160357106179584e-16]}
{'': [-1.3176273259287572e-16, 0.22571331181765808], 'true': [nan, -1.3176273259287572e-16], 'true,false': [nan, -1.3176273259287572e-16], 'true,false,false': [-1.3176273259287572e-16, nan]}
{'': [5.921189464667501e-17, 0.22331498417913348], 'true': [nan, 5.921189464667501e-17], 'true,false': [nan, 5.921189464667501e-17]}
{'': [0.1436672967863909, 0.17329018399700583], 'true': [0.1436672967863909, nan], 'true,true': [nan, 0.1436672967863909], 'true,true,false': [nan, 0.1436672967863909]}
{'': [-7.836868409118753e-17, 0.21688167615297993], 'true': [nan, -7.836868409118753e-17], 'true,false': [nan, -7.836868409118753e-17], 'true,false,false': [nan, -7.836868409118753e-17]}
{'': [-5.046468293750712e-18, 0.2140788460871409], 'true': [nan, -5.046468293750712e-18], 'true,false': [-5.046468293750712e-18, nan]}
{'': [2.7051119381729703e-17, 0.2119448284435266], 'true': [nan, 2.7051119381729703e-17], 'true,false': [nan, 2.7051119381729703e-17], 'true,false,false': [nan, 2.7051119381729703e-17]}
{'': [0.09910137608676597, 0.20843152040719687], 'false': [nan, 0.2084315204072009], 'true': [0.09910137608676597, nan], 'true,true': [nan, 0.09910137608676597], 'true,true,false': [nan, 0.09910137608676597]}
{'': [2.832201593431522e-17, 0.20732620157039047], 'true': [2.832201593431522e-17, nan], 'true,true': [nan, 2.832201593431522e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 3.0065970420837402
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1.05e-06, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048768;  // std dev = 5.37e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.14185106490048865;  // std dev = 0.000, 627.000 (wgt'ed) examples reached here.  /* #neg=627 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.12544463852839155;  // std dev = 0.000, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.12544463852839213;  // std dev = 0.000, 412.000 (wgt'ed) examples reached here.  /* #neg=412 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360665;  // std dev = 0.000, 209.000 (wgt'ed) examples reached here.  /* #neg=209 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.11231637819360629;  // std dev = 3.94e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.11231637819360674;  // std dev = 0.000, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783653;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #neg=202 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831163;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.10159632948783619;  // std dev = 4.47e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.10159632948783648;  // std dev = 0.000, 395.000 (wgt'ed) examples reached here.  /* #neg=395 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.09269127618926155;  // std dev = 0.000, 557.000 (wgt'ed) examples reached here.  /* #neg=557 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839675;  // std dev = 0.000, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948756;  // std dev = 3.86e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.08518475138839679;  // std dev = 1.67e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.08518475138839675;  // std dev = 5.16e-08, 407.000 (wgt'ed) examples reached here.  /* #neg=407 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109146;  // std dev = 6.66e-08, 173.000 (wgt'ed) examples reached here.  /* #neg=173 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.46e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.07877675473109177;  // std dev = 1.05e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.0787767547310914;  // std dev = 5.58e-08, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.07324622576333668;  // std dev = 1.07e-07, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1770964977452765;  // std dev = 2.76e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.0732462257633372;  // std dev = 0.000, 467.000 (wgt'ed) examples reached here.  /* #neg=467 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.0684269778442027;  // std dev = 1.58e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.06842697784420246;  // std dev = 8.43e-08, 568.000 (wgt'ed) examples reached here.  /* #neg=568 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202623;  // std dev = 0.000, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080118;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.06419184008202594;  // std dev = 1.25e-07, 419.000 (wgt'ed) examples reached here.  /* #neg=419 */
Inference time using transfer learning 0.8928117752075195
Refined model CLL: -0.064216


******************************************
Best model found
******************************************
Results 

CLL : -0.063421 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.0065970420837402 

Total Inference Time : 1.4050207138061523 

Total revision time: 10.411402225494385
Best scored revision CLL: -0.064216


Results 

CLL : -0.063421 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 10.427309274673462 

Total Inference Time : 1.4050207138061523 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos examples: 58
Target test neg examples: 3423

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.6592540740966797
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.7081489350995106;  // std dev = 3.912, 120.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=102 */
%   | | | else return 0.7152917922423695;  // std dev = 2.619, 56.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=48 */
%   else return 0.07564893509951086;  // std dev = 11.669, 800.000 (wgt'ed) examples reached here.  /* #neg=626 #pos=174 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15131156754837885;  // std dev = 0.000, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
%   else return 0.25443464815185696;  // std dev = 13.106, 753.000 (wgt'ed) examples reached here.  /* #neg=429 #pos=324 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.1328878673583568;  // std dev = 1.72e-07, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2004634748290153;  // std dev = 13.205, 782.000 (wgt'ed) examples reached here.  /* #neg=458 #pos=324 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11830809340892408;  // std dev = 1.03e-08, 205.000 (wgt'ed) examples reached here.  /* #neg=205 */
%   else return 0.17359417605157382;  // std dev = 13.058, 766.000 (wgt'ed) examples reached here.  /* #neg=442 #pos=324 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.47821744533769767;  // std dev = 3.719, 118.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=102 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05282673332419094;  // std dev = 0.413, 818.000 (wgt'ed) examples reached here.  /* #neg=596 #pos=222 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11164652575133624;  // std dev = 8.43e-08, 222.000 (wgt'ed) examples reached here.  /* #neg=222 */
%   else return 0.12481378859568552;  // std dev = 12.637, 740.000 (wgt'ed) examples reached here.  /* #neg=416 #pos=324 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.1010439671925183;  // std dev = 5.59e-09, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10863514847432945;  // std dev = 12.453, 726.000 (wgt'ed) examples reached here.  /* #neg=402 #pos=324 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0922285961708533;  // std dev = 1.18e-07, 201.000 (wgt'ed) examples reached here.  /* #neg=201 */
%   else return 0.05818386618502824;  // std dev = 12.726, 781.000 (wgt'ed) examples reached here.  /* #neg=457 #pos=324 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0849604345300727;  // std dev = 6.189, 408.000 (wgt'ed) examples reached here.  /* #neg=258 #pos=150 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.02510053298340788;  // std dev = 11.072, 589.000 (wgt'ed) examples reached here.  /* #neg=415 #pos=174 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.09162188843707268;  // std dev = 9.03e-09, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.046538832250408044;  // std dev = 12.608, 777.000 (wgt'ed) examples reached here.  /* #neg=453 #pos=324 */
Inference time using transfer learning 1.1470746994018555
Parameter learned model CLL:-0.325152 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [3.912, 18, 102], 'true,false,false,false': [2.619, 8, 48], 'false': [11.669, 626, 174]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 218, 0], 'false': [13.106, 429, 324]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.72e-07, 217, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.205, 458, 324]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.03e-08, 205, 0], 'false': [13.058, 442, 324]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [3.719, 16, 102], 'true,false': [0.0, 0, 0], 'false': [0.413, 596, 222]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [8.43e-08, 222, 0], 'false': [12.637, 416, 324]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [5.59e-09, 208, 0], 'true,false,false': [0.0, 0, 0], 'false': [12.453, 402, 324]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.18e-07, 201, 0], 'false': [12.726, 457, 324]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [6.189, 258, 150], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.072, 415, 174]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [9.03e-09, 243, 0], 'true,false': [0.0, 0, 0], 'false': [12.608, 453, 324]}]
{'': [0.12590392561984026, 0.17019375000000067], 'true': [nan, 0.12590392561984026], 'true,false': [nan, 0.12590392561984026], 'true,false,false': [0.12750000000000264, 0.12244897959183706]}
{'': [-6.518740695046791e-17, 0.22811635161891136], 'true': [nan, -6.518740695046791e-17], 'true,false': [nan, -6.518740695046791e-17]}
{'': [1.371151016587751e-16, 0.22298867997863878], 'true': [nan, 1.371151016587751e-16], 'true,false': [nan, 1.371151016587751e-16], 'true,false,false': [1.371151016587751e-16, nan]}
{'': [1.0614815259830765e-16, 0.22260857024154027], 'true': [nan, 1.0614815259830765e-16], 'true,false': [nan, 1.0614815259830765e-16]}
{'': [0.11720769893708631, 0.17040749606059954], 'true': [0.11720769893708631, nan], 'true,true': [nan, 0.11720769893708631], 'true,true,false': [nan, 0.11720769893708631]}
{'': [3.200642953874325e-17, 0.21581873343478952], 'true': [nan, 3.200642953874325e-17], 'true,false': [nan, 3.200642953874325e-17], 'true,false,false': [nan, 3.200642953874325e-17]}
{'': [2.9890619893754213e-17, 0.2135919815381357], 'true': [nan, 2.9890619893754213e-17], 'true,false': [2.9890619893754213e-17, nan]}
{'': [6.959607020038295e-17, 0.2073744863010727], 'true': [nan, 6.959607020038295e-17], 'true,false': [nan, 6.959607020038295e-17], 'true,false,false': [nan, 6.959607020038295e-17]}
{'': [0.09387046282469637, 0.20814537027162275], 'false': [nan, 0.20814537027161878], 'true': [0.09387046282469637, nan], 'true,true': [nan, 0.09387046282469637], 'true,true,false': [nan, 0.09387046282469637]}
{'': [8.22387425648264e-17, 0.20456893156225184], 'true': [8.22387425648264e-17, nan], 'true,true': [nan, 8.22387425648264e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 3.0168673992156982
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1.04e-06, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048768;  // std dev = 4.47e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.1418510649004881;  // std dev = 0.000, 562.000 (wgt'ed) examples reached here.  /* #neg=562 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.12544463852839177;  // std dev = 0.000, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.125444638528392;  // std dev = 0.000, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.1123163781936067;  // std dev = 0.000, 216.000 (wgt'ed) examples reached here.  /* #neg=216 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.1123163781936063;  // std dev = 3.33e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.11231637819360674;  // std dev = 0.000, 384.000 (wgt'ed) examples reached here.  /* #neg=384 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783653;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #neg=204 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831163;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.10159632948783621;  // std dev = 3.49e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.10159632948783652;  // std dev = 0.000, 379.000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.0926912761892616;  // std dev = 0.000, 561.000 (wgt'ed) examples reached here.  /* #neg=561 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839675;  // std dev = 3.94e-08, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948756;  // std dev = 3.86e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.08518475138839679;  // std dev = 1.67e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return -0.08518475138839675;  // std dev = 5.96e-08, 412.000 (wgt'ed) examples reached here.  /* #neg=412 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109144;  // std dev = 5.58e-08, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return -0.07877675473109146;  // std dev = 0.000, 377.000 (wgt'ed) examples reached here.  /* #neg=377 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.07324622576333661;  // std dev = 1.24e-07, 205.000 (wgt'ed) examples reached here.  /* #neg=205 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527653;  // std dev = 2.73e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.0732462257633371;  // std dev = 7.30e-08, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.0684269778442027;  // std dev = 1.39e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.06842697784420361;  // std dev = 0.000, 600.000 (wgt'ed) examples reached here.  /* #neg=600 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202625;  // std dev = 0.000, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080118;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.06419184008202608;  // std dev = 7.15e-08, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
Inference time using transfer learning 0.9723320007324219
Refined model CLL: -0.064225


******************************************
Best model found
******************************************
Results 

CLL : -0.063422 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.0168673992156982 

Total Inference Time : 1.3338768482208252 

Total revision time: 10.602535009384155
Best scored revision CLL: -0.064225


Results 

CLL : -0.063422 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 10.618442058563232 

Total Inference Time : 1.3338768482208252 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos examples: 178
Target test neg examples: 3543

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.0438320636749268
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.7840748610254387;  // std dev = 2.357, 81.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=75 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.09979922979499321;  // std dev = 9.658, 509.000 (wgt'ed) examples reached here.  /* #neg=386 #pos=123 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.154439045159986;  // std dev = 6.45e-09, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   else return 0.2566481212489825;  // std dev = 10.340, 473.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=204 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.13532904934284073;  // std dev = 0.000, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23271993911524855;  // std dev = 10.154, 454.000 (wgt'ed) examples reached here.  /* #neg=250 #pos=204 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12026015646958622;  // std dev = 6.59e-09, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
%   else return 0.19084840019056484;  // std dev = 10.099, 456.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=204 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5206477344698706;  // std dev = 2.165, 80.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=75 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.013038179823690746;  // std dev = 0.409, 533.000 (wgt'ed) examples reached here.  /* #neg=404 #pos=129 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10937015651321098;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   else return 0.12534850489109922;  // std dev = 9.785, 459.000 (wgt'ed) examples reached here.  /* #neg=255 #pos=204 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.0991628546098654;  // std dev = 8.01e-09, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09016429342672574;  // std dev = 9.824, 472.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=204 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09065002216574006;  // std dev = 7.15e-08, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   else return 0.0839914319000129;  // std dev = 9.749, 452.000 (wgt'ed) examples reached here.  /* #neg=248 #pos=204 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07131819759689208;  // std dev = 3.751, 230.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=81 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.009015507992118406;  // std dev = 9.138, 383.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=123 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.08906901023492798;  // std dev = 5.10e-09, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07543443484256783;  // std dev = 9.581, 440.000 (wgt'ed) examples reached here.  /* #neg=236 #pos=204 */
Inference time using transfer learning 1.2159521579742432
Parameter learned model CLL:-0.327334 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [2.357, 6, 75], 'true,false,false,false': [0.0, 0, 6], 'false': [9.658, 386, 123]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [6.45e-09, 130, 0], 'false': [10.34, 269, 204]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 145, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [10.154, 250, 204]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [6.59e-09, 146, 0], 'false': [10.099, 252, 204]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [2.165, 5, 75], 'true,false': [0.0, 0, 0], 'false': [0.409, 404, 129]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 130, 0], 'false': [9.785, 255, 204]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [8.01e-09, 151, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.824, 268, 204]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.15e-08, 135, 0], 'false': [9.749, 248, 204]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [3.751, 149, 81], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.138, 260, 123]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [5.1e-09, 135, 0], 'true,false': [0.0, 0, 0], 'false': [9.581, 236, 204]}]
{'': [0.06420927467300822, 0.18325542976906878], 'true': [nan, 0.06420927467300822], 'true,false': [nan, 0.06420927467300822], 'true,false,false': [0.06858710562414162, -1.4802973661668753e-16]}
{'': [4.4408920985006264e-17, 0.2260496156053795], 'true': [nan, 4.4408920985006264e-17], 'true,false': [nan, 4.4408920985006264e-17]}
{'': [-3.981489467621251e-17, 0.22708435077787772], 'true': [nan, -3.981489467621251e-17], 'true,false': [nan, -3.981489467621251e-17], 'true,false,false': [-3.981489467621251e-17, nan]}
{'': [4.258389683493751e-17, 0.22366629339160393], 'true': [nan, 4.258389683493751e-17], 'true,false': [nan, 4.258389683493751e-17]}
{'': [0.05859375000000098, 0.16726361674009835], 'true': [0.05859375000000098, nan], 'true,true': [nan, 0.05859375000000098], 'true,true,false': [nan, 0.05859375000000098]}
{'': [-1.1614640873001638e-16, 0.20860012440758], 'true': [nan, -1.1614640873001638e-16], 'true,false': [nan, -1.1614640873001638e-16], 'true,false,false': [nan, -1.1614640873001638e-16]}
{'': [6.323124511110163e-17, 0.20446728546660278], 'true': [nan, 6.323124511110163e-17], 'true,false': [6.323124511110163e-17, nan]}
{'': [3.782982157982015e-17, 0.21025064115837935], 'true': [nan, 3.782982157982015e-17], 'true,false': [nan, 3.782982157982015e-17], 'true,false,false': [nan, 3.782982157982015e-17]}
{'': [0.06117750034977012, 0.2180122572244668], 'false': [nan, 0.21801225722446832], 'true': [0.06117750034977012, nan], 'true,true': [nan, 0.06117750034977012], 'true,true,false': [nan, 0.06117750034977012]}
{'': [2.4671622769447922e-17, 0.20861485773393926], 'true': [2.4671622769447922e-17, nan], 'true,true': [nan, 2.4671622769447922e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;genre(B, E).;true;true
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 2.257646083831787
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995127;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.7152917922423694;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995105;  // std dev = 6.95e-07, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.14185106490048754;  // std dev = 2.27e-07, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.1254446385283915;  // std dev = 0.000, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.7202943098951811;  // std dev = 0.067, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.1333928527782058;  // std dev = 0.123, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.12544463852839202;  // std dev = 0.000, 262.000 (wgt'ed) examples reached here.  /* #neg=262 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360615;  // std dev = 1.03e-07, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5561915069854887;  // std dev = 0.084, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.1188228955673552;  // std dev = 0.113, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.11231637819360686;  // std dev = 0.000, 252.000 (wgt'ed) examples reached here.  /* #neg=252 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783644;  // std dev = 0.000, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.4181453651324789;  // std dev = 0.085, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.11375103421193154;  // std dev = 0.143, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.10159632948783653;  // std dev = 0.000, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926074;  // std dev = 1.71e-07, 380.000 (wgt'ed) examples reached here.  /* #neg=380 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3211529156781501;  // std dev = 0.077, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.0905940681768955;  // std dev = 0.002, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.0851847513883968;  // std dev = 7.15e-08, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25548086874591586;  // std dev = 0.068, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.08329387605586121;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.08518545042308522;  // std dev = 0.000163, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109154;  // std dev = 7.22e-08, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.20998041732505665;  // std dev = 0.059, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.07715066479524804;  // std dev = 3.73e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return -0.07877796293418923;  // std dev = 0.000215, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.0732462257633373;  // std dev = 0.000, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   else if ( actor(B) )
%   | then return -0.0732460962978222;  // std dev = 0.000, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.17726283565845505;  // std dev = 0.052, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.07557956019762171;  // std dev = 0.081, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842690611282556;  // std dev = 1.05e-06, 376.000 (wgt'ed) examples reached here.  /* #neg=376 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15151701939955495;  // std dev = 0.281, 205.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=204 */
%   | else return -0.06704049823971593;  // std dev = 0.001, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184439101969;  // std dev = 0.000, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   else if ( actor(B) )
%   | then return -0.06419173759809728;  // std dev = 0.000, 223.000 (wgt'ed) examples reached here.  /* #neg=223 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.134265904747699;  // std dev = 0.042, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.06288628648867545;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
Inference time using transfer learning 0.9880681037902832
Refined model CLL: -0.063756


******************************************
Best model found
******************************************
Results 

CLL : -0.070942 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.257646083831787 

Total Inference Time : 1.380021095275879 

Total revision time: 9.313511371612549
Best scored revision CLL: -0.063756


Results 

CLL : -0.070942 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 9.329418420791626 

Total Inference Time : 1.380021095275879 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos examples: 45
Target test neg examples: 1891

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.7351884841918945
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.6803711573217325;  // std dev = 4.442, 135.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=111 */
%   | | | else return 0.7993254056877476;  // std dev = 1.680, 51.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=48 */
%   else return 0.06609286033315546;  // std dev = 11.874, 856.000 (wgt'ed) examples reached here.  /* #neg=678 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1500884957439155;  // std dev = 6.18e-09, 211.000 (wgt'ed) examples reached here.  /* #neg=211 */
%   else return 0.25436153367898834;  // std dev = 13.323, 787.000 (wgt'ed) examples reached here.  /* #neg=450 #pos=337 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.13193060036863996;  // std dev = 0.000, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.24184633365638888;  // std dev = 12.920, 739.000 (wgt'ed) examples reached here.  /* #neg=402 #pos=337 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11754088425681884;  // std dev = 0.000, 214.000 (wgt'ed) examples reached here.  /* #neg=214 */
%   else return 0.16617241116185513;  // std dev = 13.259, 800.000 (wgt'ed) examples reached here.  /* #neg=463 #pos=337 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4469477226353216;  // std dev = 4.285, 133.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=111 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399178688416159;  // std dev = 0.410, 863.000 (wgt'ed) examples reached here.  /* #neg=637 #pos=226 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10914782649472457;  // std dev = 1.38e-07, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
%   else return 0.10754539380526475;  // std dev = 12.980, 803.000 (wgt'ed) examples reached here.  /* #neg=466 #pos=337 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.09897879476569549;  // std dev = 0.000, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08634770205297744;  // std dev = 12.967, 797.000 (wgt'ed) examples reached here.  /* #neg=460 #pos=337 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09049532432561624;  // std dev = 7.60e-08, 222.000 (wgt'ed) examples reached here.  /* #neg=222 */
%   else return 0.07572089733377861;  // std dev = 12.802, 787.000 (wgt'ed) examples reached here.  /* #neg=450 #pos=337 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10490023573861387;  // std dev = 5.939, 418.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=159 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.02843628300581584;  // std dev = 11.254, 617.000 (wgt'ed) examples reached here.  /* #neg=439 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0916879483423662;  // std dev = 1.02e-08, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07877385703124412;  // std dev = 12.422, 745.000 (wgt'ed) examples reached here.  /* #neg=408 #pos=337 */
Inference time using transfer learning 0.9386355876922607
Parameter learned model CLL:-0.323758 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [4.442, 24, 111], 'true,false,false,false': [1.68, 3, 48], 'false': [11.874, 678, 178]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [6.18e-09, 211, 0], 'false': [13.323, 450, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 225, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [12.92, 402, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 214, 0], 'false': [13.259, 463, 337]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [4.285, 22, 111], 'true,false': [0.0, 0, 0], 'false': [0.41, 637, 226]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.38e-07, 226, 0], 'false': [12.98, 466, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 244, 0], 'true,false,false': [0.0, 0, 0], 'false': [12.967, 460, 337]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.6e-08, 222, 0], 'false': [12.802, 450, 337]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [5.939, 259, 159], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.254, 439, 178]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [1.02e-08, 242, 0], 'true,false': [0.0, 0, 0], 'false': [12.422, 408, 337]}]
{'': [0.12408949011446997, 0.16470324919206972], 'true': [nan, 0.12408949011446997], 'true,false': [nan, 0.12408949011446997], 'true,false,false': [0.14617283950617627, 0.05536332179930846]}
{'': [4.2093763966830577e-17, 0.22553485232522977], 'true': [nan, 4.2093763966830577e-17], 'true,false': [nan, 4.2093763966830577e-17]}
{'': [-9.86864910777917e-18, 0.22587665267098908], 'true': [nan, -9.86864910777917e-18], 'true,false': [nan, -9.86864910777917e-18], 'true,false,false': [-9.86864910777917e-18, nan]}
{'': [-7.055622960234639e-17, 0.21976406468768592], 'true': [nan, -7.055622960234639e-17], 'true,false': [nan, -7.055622960234639e-17]}
{'': [0.13805189665894022, 0.167739136830507], 'true': [0.13805189665894022, nan], 'true,true': [nan, 0.13805189665894022], 'true,true,false': [nan, 0.13805189665894022]}
{'': [8.449484966173757e-17, 0.20982196105063416], 'true': [nan, 8.449484966173757e-17], 'true,false': [nan, 8.449484966173757e-17], 'true,false,false': [nan, 8.449484966173757e-17]}
{'': [-1.2740264217009993e-17, 0.21095390155277863], 'true': [nan, -1.2740264217009993e-17], 'true,false': [-1.2740264217009993e-17, nan]}
{'': [2.600522400022889e-17, 0.2082376242602583], 'true': [nan, 2.600522400022889e-17], 'true,false': [nan, 2.600522400022889e-17], 'true,false,false': [nan, 2.600522400022889e-17]}
{'': [0.08438832975265265, 0.2052646648576628], 'false': [nan, 0.20526466485766548], 'true': [0.08438832975265265, nan], 'true,true': [nan, 0.08438832975265265], 'true,true,false': [nan, 0.08438832975265265]}
{'': [1.0276444525455995e-16, 0.20712446393920678], 'true': [1.0276444525455995e-16, nan], 'true,true': [nan, 1.0276444525455995e-16]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 3.413883686065674
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 4.59e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.14185106490048885;  // std dev = 0.000, 662.000 (wgt'ed) examples reached here.  /* #neg=662 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.12544463852839186;  // std dev = 0.000, 248.000 (wgt'ed) examples reached here.  /* #neg=248 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.12544463852839208;  // std dev = 0.000, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360675;  // std dev = 0.000, 227.000 (wgt'ed) examples reached here.  /* #neg=227 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.11231637819360628;  // std dev = 4.59e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.11231637819360654;  // std dev = 0.000, 416.000 (wgt'ed) examples reached here.  /* #neg=416 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783653;  // std dev = 0.000, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10159632948783624;  // std dev = 2.98e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.10159632948783645;  // std dev = 0.000, 369.000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926101;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.09269127618926189;  // std dev = 0.000, 650.000 (wgt'ed) examples reached here.  /* #neg=650 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839673;  // std dev = 2.98e-08, 235.000 (wgt'ed) examples reached here.  /* #neg=235 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.0851847513883968;  // std dev = 1.83e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.08518475138839672;  // std dev = 5.16e-08, 404.000 (wgt'ed) examples reached here.  /* #neg=404 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109139;  // std dev = 6.50e-08, 212.000 (wgt'ed) examples reached here.  /* #neg=212 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07877675473109179;  // std dev = 7.45e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.0787767547310914;  // std dev = 2.98e-08, 402.000 (wgt'ed) examples reached here.  /* #neg=402 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.07324622576333661;  // std dev = 6.99e-08, 204.000 (wgt'ed) examples reached here.  /* #neg=204 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 1.05e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0684269778442027;  // std dev = 1.05e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.06842697784420236;  // std dev = 2.01e-07, 634.000 (wgt'ed) examples reached here.  /* #neg=634 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202625;  // std dev = 0.000, 220.000 (wgt'ed) examples reached here.  /* #neg=220 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080119;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.06419184008202602;  // std dev = 9.31e-08, 369.000 (wgt'ed) examples reached here.  /* #neg=369 */
Inference time using transfer learning 0.803152322769165
Refined model CLL: -0.064062


******************************************
Best model found
******************************************
Results 

CLL : -0.063847 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.413883686065674 

Total Inference Time : 1.4097340106964111 

Total revision time: 11.800439596176147
Best scored revision CLL: -0.064062


Results 

CLL : -0.063847 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 11.816346645355225 

Total Inference Time : 1.4097340106964111 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos examples: 45
Target test neg examples: 2071

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.5857203006744385
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.6721024234716034;  // std dev = 4.420, 129.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=105 */
%   | | | else return 0.7331489350995121;  // std dev = 2.291, 48.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=42 */
%   else return 0.08353446297614174;  // std dev = 12.132, 843.000 (wgt'ed) examples reached here.  /* #neg=653 #pos=190 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15232698519252377;  // std dev = 1.58e-08, 191.000 (wgt'ed) examples reached here.  /* #neg=191 */
%   else return 0.23599932913120572;  // std dev = 13.642, 825.000 (wgt'ed) examples reached here.  /* #neg=488 #pos=337 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.1336814996051308;  // std dev = 0.000, 200.000 (wgt'ed) examples reached here.  /* #neg=200 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.201997579828206;  // std dev = 13.545, 823.000 (wgt'ed) examples reached here.  /* #neg=486 #pos=337 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11894341021922039;  // std dev = 9.77e-09, 203.000 (wgt'ed) examples reached here.  /* #neg=203 */
%   else return 0.18905147866708355;  // std dev = 13.242, 778.000 (wgt'ed) examples reached here.  /* #neg=441 #pos=337 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.48331461068851805;  // std dev = 3.825, 122.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=105 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04470268927835143;  // std dev = 0.417, 860.000 (wgt'ed) examples reached here.  /* #neg=628 #pos=232 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1113807103062558;  // std dev = 0.000, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
%   else return 0.11523403496552972;  // std dev = 13.017, 806.000 (wgt'ed) examples reached here.  /* #neg=469 #pos=337 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.10082462670486016;  // std dev = 7.45e-09, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07255385657175158;  // std dev = 13.260, 842.000 (wgt'ed) examples reached here.  /* #neg=505 #pos=337 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09204476183723512;  // std dev = 0.000, 190.000 (wgt'ed) examples reached here.  /* #neg=190 */
%   else return 0.055694706380751954;  // std dev = 13.243, 848.000 (wgt'ed) examples reached here.  /* #neg=511 #pos=337 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10059403003155638;  // std dev = 6.153, 377.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=147 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.003769279847015198;  // std dev = 11.421, 606.000 (wgt'ed) examples reached here.  /* #neg=416 #pos=190 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.09276174201384184;  // std dev = 0.000, 203.000 (wgt'ed) examples reached here.  /* #neg=203 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043410031270761255;  // std dev = 13.158, 826.000 (wgt'ed) examples reached here.  /* #neg=489 #pos=337 */
Inference time using transfer learning 1.1079766750335693
Parameter learned model CLL:-0.32792 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [4.42, 24, 105], 'true,false,false,false': [2.291, 6, 42], 'false': [12.132, 653, 190]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.58e-08, 191, 0], 'false': [13.642, 488, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 200, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.545, 486, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [9.77e-09, 203, 0], 'false': [13.242, 441, 337]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [3.825, 17, 105], 'true,false': [0.0, 0, 0], 'false': [0.417, 628, 232]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 221, 0], 'false': [13.017, 469, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [7.45e-09, 196, 0], 'true,false,false': [0.0, 0, 0], 'false': [13.26, 505, 337]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 190, 0], 'false': [13.243, 511, 337]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [6.153, 230, 147], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.421, 416, 190]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 203, 0], 'true,false': [0.0, 0, 0], 'false': [13.158, 489, 337]}]
{'': [0.14076414823327169, 0.1745868917004039], 'true': [nan, 0.14076414823327169], 'true,false': [nan, 0.14076414823327169], 'true,false,false': [0.15143320713899702, 0.10937500000000089]}
{'': [2.5575818368328216e-16, 0.2255891790120197], 'true': [nan, 2.5575818368328216e-16], 'true,false': [nan, 2.5575818368328216e-16]}
{'': [-9.992007221626409e-17, 0.22291348247876577], 'true': [nan, -9.992007221626409e-17], 'true,false': [nan, -9.992007221626409e-17], 'true,false,false': [-9.992007221626409e-17, nan]}
{'': [9.625578932710717e-17, 0.22539030748789057], 'true': [nan, 9.625578932710717e-17], 'true,false': [nan, 9.625578932710717e-17]}
{'': [0.11992743886052237, 0.17420731373816647], 'true': [0.11992743886052237, nan], 'true,true': [nan, 0.11992743886052237], 'true,true,false': [nan, 0.11992743886052237]}
{'': [-1.607562750588462e-16, 0.21022860157897466], 'true': [nan, -1.607562750588462e-16], 'true,false': [nan, -1.607562750588462e-16], 'true,false,false': [nan, -1.607562750588462e-16]}
{'': [5.551115123125783e-17, 0.20880941597728356], 'true': [nan, 5.551115123125783e-17], 'true,false': [5.551115123125783e-17, nan]}
{'': [-1.9867148861713328e-17, 0.2068196816470301], 'true': [nan, -1.9867148861713328e-17], 'true,false': [nan, -1.9867148861713328e-17], 'true,false,false': [nan, -1.9867148861713328e-17]}
{'': [0.10042553590284425, 0.21522944373645467], 'false': [nan, 0.2152294437364534], 'true': [0.10042553590284425, nan], 'true,true': [nan, 0.10042553590284425], 'true,true,false': [nan, 0.10042553590284425]}
{'': [-1.859486839273661e-17, 0.20960960187018016], 'true': [-1.859486839273661e-17, nan], 'true,true': [nan, -1.859486839273661e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 3.0960469245910645
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 5.96e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.1418510649004886;  // std dev = 0.000, 620.000 (wgt'ed) examples reached here.  /* #neg=620 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.1254446385283916;  // std dev = 0.000, 192.000 (wgt'ed) examples reached here.  /* #neg=192 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.12544463852839213;  // std dev = 0.000, 422.000 (wgt'ed) examples reached here.  /* #neg=422 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360658;  // std dev = 0.000, 197.000 (wgt'ed) examples reached here.  /* #neg=197 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.11231637819360635;  // std dev = 1.49e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return -0.11231637819360646;  // std dev = 0.000, 443.000 (wgt'ed) examples reached here.  /* #neg=443 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783655;  // std dev = 0.000, 214.000 (wgt'ed) examples reached here.  /* #neg=214 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10159632948783626;  // std dev = 2.36e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return -0.1015963294878364;  // std dev = 0.000, 412.000 (wgt'ed) examples reached here.  /* #neg=412 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926103;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.09269127618926187;  // std dev = 0.000, 651.000 (wgt'ed) examples reached here.  /* #neg=651 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839675;  // std dev = 0.000, 179.000 (wgt'ed) examples reached here.  /* #neg=179 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.08518475138839679;  // std dev = 1.97e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.08518475138839675;  // std dev = 5.96e-08, 383.000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109146;  // std dev = 6.50e-08, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return -0.0787767547310914;  // std dev = 4.71e-08, 400.000 (wgt'ed) examples reached here.  /* #neg=400 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.0732462257633366;  // std dev = 8.16e-08, 214.000 (wgt'ed) examples reached here.  /* #neg=214 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 1.18e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return -0.07324622576333722;  // std dev = 0.000, 436.000 (wgt'ed) examples reached here.  /* #neg=436 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06842697784420268;  // std dev = 2.24e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.06842697784420287;  // std dev = 0.000, 665.000 (wgt'ed) examples reached here.  /* #neg=665 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202625;  // std dev = 0.000, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080119;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return -0.06419184008202586;  // std dev = 1.41e-07, 399.000 (wgt'ed) examples reached here.  /* #neg=399 */
Inference time using transfer learning 0.7775130271911621
Refined model CLL: -0.064087


******************************************
Best model found
******************************************
Results 

CLL : -0.063719 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.0960469245910645 

Total Inference Time : 1.398867130279541 

Total revision time: 10.816042184829712
Best scored revision CLL: -0.064087


Results 

CLL : -0.063719 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 10.831949234008789 

Total Inference Time : 1.398867130279541 

Run: 4

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos examples: 56
Target test neg examples: 3308

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.461669921875
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.7297085681270339;  // std dev = 3.493, 109.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=95 */
%   | | | else return 0.7470378239884012;  // std dev = 2.309, 54.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=48 */
%   else return 0.07996711691769255;  // std dev = 11.933, 825.000 (wgt'ed) examples reached here.  /* #neg=642 #pos=183 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15186692815654365;  // std dev = 0.000, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
%   else return 0.23376033044108743;  // std dev = 13.384, 799.000 (wgt'ed) examples reached here.  /* #neg=473 #pos=326 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.1333220515471387;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1929838693570931;  // std dev = 13.371, 811.000 (wgt'ed) examples reached here.  /* #neg=485 #pos=326 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11865574920586268;  // std dev = 0.000, 176.000 (wgt'ed) examples reached here.  /* #neg=176 */
%   else return 0.17059889918751933;  // std dev = 13.206, 787.000 (wgt'ed) examples reached here.  /* #neg=461 #pos=326 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.45678931402726203;  // std dev = 3.890, 113.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=95 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04299826084644695;  // std dev = 0.418, 861.000 (wgt'ed) examples reached here.  /* #neg=630 #pos=231 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1109691846203505;  // std dev = 0.000, 203.000 (wgt'ed) examples reached here.  /* #neg=203 */
%   else return 0.11447024177127214;  // std dev = 12.915, 790.000 (wgt'ed) examples reached here.  /* #neg=464 #pos=326 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.10048488527887006;  // std dev = 0.000, 181.000 (wgt'ed) examples reached here.  /* #neg=181 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08009278236770441;  // std dev = 13.006, 815.000 (wgt'ed) examples reached here.  /* #neg=489 #pos=326 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09175989724091638;  // std dev = 1.16e-07, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
%   else return 0.09074276945414284;  // std dev = 12.685, 756.000 (wgt'ed) examples reached here.  /* #neg=430 #pos=326 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12381045080059226;  // std dev = 5.742, 337.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=143 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.015111239981268183;  // std dev = 11.349, 618.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=183 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.09446616903565551;  // std dev = 8.23e-09, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04967489193228901;  // std dev = 12.737, 794.000 (wgt'ed) examples reached here.  /* #neg=468 #pos=326 */
Inference time using transfer learning 1.4118964672088623
Parameter learned model CLL:-0.334593 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [3.493, 14, 95], 'true,false,false,false': [2.309, 6, 48], 'false': [11.933, 642, 183]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 213, 0], 'false': [13.384, 473, 326]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 178, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.371, 485, 326]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 176, 0], 'false': [13.206, 461, 326]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [3.89, 18, 95], 'true,false': [0.0, 0, 0], 'false': [0.418, 630, 231]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 203, 0], 'false': [12.915, 464, 326]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 181, 0], 'true,false,false': [0.0, 0, 0], 'false': [13.006, 489, 326]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.16e-07, 172, 0], 'false': [12.685, 430, 326]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [5.742, 194, 143], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.349, 435, 183]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [8.23e-09, 196, 0], 'true,false': [0.0, 0, 0], 'false': [12.737, 468, 326]}]
{'': [0.10764424705484361, 0.1726148760330584], 'true': [nan, 0.10764424705484361], 'true,false': [nan, 0.10764424705484361], 'true,false,false': [0.11194343910445428, 0.0987654320987658]}
{'': [-3.3358813885450714e-17, 0.2242047787960831], 'true': [nan, -3.3358813885450714e-17], 'true,false': [nan, -3.3358813885450714e-17]}
{'': [-8.482602884776477e-17, 0.22043904619354787], 'true': [nan, -8.482602884776477e-17], 'true,false': [nan, -8.482602884776477e-17], 'true,false,false': [-8.482602884776477e-17, nan]}
{'': [-4.0371746350005693e-17, 0.22160002495580058], 'true': [nan, -4.0371746350005693e-17], 'true,false': [nan, -4.0371746350005693e-17]}
{'': [0.13391808285691842, 0.17452893860356844], 'true': [0.13391808285691842, nan], 'true,true': [nan, 0.13391808285691842], 'true,true,false': [nan, 0.13391808285691842]}
{'': [-6.562894726848217e-17, 0.21113936546129275], 'true': [nan, -6.562894726848217e-17], 'true,false': [nan, -6.562894726848217e-17], 'true,false,false': [nan, -6.562894726848217e-17]}
{'': [-8.955390143385241e-17, 0.20756897016433068], 'true': [nan, -8.955390143385241e-17], 'true,false': [-8.955390143385241e-17, nan]}
{'': [7.874837732806343e-17, 0.2128279314539583], 'true': [nan, 7.874837732806343e-17], 'true,false': [nan, 7.874837732806343e-17], 'true,false,false': [nan, 7.874837732806343e-17]}
{'': [0.09783017540626128, 0.2084315204071981], 'false': [nan, 0.20843152040720073], 'true': [0.09783017540626128, nan], 'true,true': [nan, 0.09783017540626128], 'true,true,false': [nan, 0.09783017540626128]}
{'': [7.023859951710174e-17, 0.2043093028905444], 'true': [7.023859951710174e-17, nan], 'true,true': [nan, 7.023859951710174e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 3.0550320148468018
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1.05e-06, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048766;  // std dev = 5.77e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.1418510649004881;  // std dev = 0.000, 553.000 (wgt'ed) examples reached here.  /* #neg=553 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.12544463852839163;  // std dev = 0.000, 198.000 (wgt'ed) examples reached here.  /* #neg=198 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.12544463852839213;  // std dev = 0.000, 412.000 (wgt'ed) examples reached here.  /* #neg=412 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.1123163781936065;  // std dev = 0.000, 180.000 (wgt'ed) examples reached here.  /* #neg=180 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.11231637819360628;  // std dev = 4.21e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.11231637819360658;  // std dev = 0.000, 412.000 (wgt'ed) examples reached here.  /* #neg=412 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783645;  // std dev = 0.000, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831163;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.1015963294878362;  // std dev = 4.21e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.10159632948783637;  // std dev = 4.21e-08, 437.000 (wgt'ed) examples reached here.  /* #neg=437 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.09269127618926186;  // std dev = 0.000, 644.000 (wgt'ed) examples reached here.  /* #neg=644 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839675;  // std dev = 7.15e-08, 173.000 (wgt'ed) examples reached here.  /* #neg=173 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948756;  // std dev = 3.86e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.08518475138839679;  // std dev = 1.67e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.08518475138839675;  // std dev = 4.21e-08, 417.000 (wgt'ed) examples reached here.  /* #neg=417 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109144;  // std dev = 7.30e-08, 210.000 (wgt'ed) examples reached here.  /* #neg=210 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.46e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.07877675473109175;  // std dev = 1.97e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.07877675473109144;  // std dev = 0.000, 409.000 (wgt'ed) examples reached here.  /* #neg=409 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.07324622576333663;  // std dev = 1.19e-07, 199.000 (wgt'ed) examples reached here.  /* #neg=199 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1770964977452765;  // std dev = 2.76e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.07324622576333704;  // std dev = 7.45e-09, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.07324622576333717;  // std dev = 3.65e-08, 409.000 (wgt'ed) examples reached here.  /* #neg=409 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.0684269778442027;  // std dev = 1.67e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.06842697784420353;  // std dev = 0.000, 527.000 (wgt'ed) examples reached here.  /* #neg=527 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202623;  // std dev = 0.000, 197.000 (wgt'ed) examples reached here.  /* #neg=197 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080118;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.06419184008202598;  // std dev = 1.04e-07, 396.000 (wgt'ed) examples reached here.  /* #neg=396 */
Inference time using transfer learning 0.9070074558258057
Refined model CLL: -0.064216


******************************************
Best model found
******************************************
Results 

CLL : -0.063421 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.0550320148468018 

Total Inference Time : 1.4176363945007324 

Total revision time: 10.544251680374146
Best scored revision CLL: -0.064216


Results 

CLL : -0.063421 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 10.559903144836426 

Total Inference Time : 1.4176363945007324 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos examples: 58
Target test neg examples: 3423

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.541017770767212
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.6874172277824374;  // std dev = 4.173, 123.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=102 */
%   | | | else return 0.7152917922423695;  // std dev = 2.619, 56.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=48 */
%   else return 0.07322928120581489;  // std dev = 11.687, 809.000 (wgt'ed) examples reached here.  /* #neg=635 #pos=174 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15100110645072837;  // std dev = 9.50e-09, 252.000 (wgt'ed) examples reached here.  /* #neg=252 */
%   else return 0.24404024161154947;  // std dev = 13.221, 778.000 (wgt'ed) examples reached here.  /* #neg=454 #pos=324 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.13264501598458603;  // std dev = 6.66e-08, 229.000 (wgt'ed) examples reached here.  /* #neg=229 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.21669541951130256;  // std dev = 13.036, 759.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=324 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11811355157222793;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
%   else return 0.1876603966613482;  // std dev = 12.885, 742.000 (wgt'ed) examples reached here.  /* #neg=418 #pos=324 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.493317254834239;  // std dev = 3.509, 116.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=102 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.030164140140777573;  // std dev = 0.406, 875.000 (wgt'ed) examples reached here.  /* #neg=653 #pos=222 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1092557142255815;  // std dev = 0.000, 206.000 (wgt'ed) examples reached here.  /* #neg=206 */
%   else return 0.13126248135694504;  // std dev = 12.493, 735.000 (wgt'ed) examples reached here.  /* #neg=411 #pos=324 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.09906811898755555;  // std dev = 1.32e-09, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10254430940714161;  // std dev = 12.453, 740.000 (wgt'ed) examples reached here.  /* #neg=416 #pos=324 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09057040453596707;  // std dev = 1.49e-08, 207.000 (wgt'ed) examples reached here.  /* #neg=207 */
%   else return 0.06762297368430241;  // std dev = 12.657, 757.000 (wgt'ed) examples reached here.  /* #neg=433 #pos=324 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10376650846941997;  // std dev = 5.860, 381.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=150 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.037673243691683025;  // std dev = 11.163, 613.000 (wgt'ed) examples reached here.  /* #neg=439 #pos=174 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.09166322188879797;  // std dev = 9.94e-09, 209.000 (wgt'ed) examples reached here.  /* #neg=209 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07101035980068535;  // std dev = 12.307, 724.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=324 */
Inference time using transfer learning 1.148627758026123
Parameter learned model CLL:-0.329317 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [4.173, 21, 102], 'true,false,false,false': [2.619, 8, 48], 'false': [11.687, 635, 174]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [9.5e-09, 252, 0], 'false': [13.221, 454, 324]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [6.66e-08, 229, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.036, 435, 324]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 228, 0], 'false': [12.885, 418, 324]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [3.509, 14, 102], 'true,false': [0.0, 0, 0], 'false': [0.406, 653, 222]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 206, 0], 'false': [12.493, 411, 324]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [1.32e-09, 218, 0], 'true,false,false': [0.0, 0, 0], 'false': [12.453, 416, 324]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.49e-08, 207, 0], 'false': [12.657, 433, 324]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [5.86, 231, 150], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.163, 439, 174]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [9.94e-09, 209, 0], 'true,false': [0.0, 0, 0], 'false': [12.307, 400, 324]}]
{'': [0.1357635529477912, 0.16882079082509716], 'true': [nan, 0.1357635529477912], 'true,false': [nan, 0.1357635529477912], 'true,false,false': [0.1415823914336731, 0.12244897959183706]}
{'': [9.163745600080657e-17, 0.2246813216354375], 'true': [nan, 9.163745600080657e-17], 'true,false': [nan, 9.163745600080657e-17]}
{'': [1.9392541914849895e-17, 0.22390452159343865], 'true': [nan, 1.9392541914849895e-17], 'true,false': [nan, 1.9392541914849895e-17], 'true,false,false': [1.9392541914849895e-17, nan]}
{'': [-6.427606984671959e-17, 0.2237470930661764], 'true': [nan, -6.427606984671959e-17], 'true,false': [nan, -6.427606984671959e-17]}
{'': [0.10612366230677954, 0.16507459198668953], 'true': [0.10612366230677954, nan], 'true,true': [nan, 0.10612366230677954], 'true,true,false': [nan, 0.10612366230677954]}
{'': [-6.251741303714473e-17, 0.21235018298070676], 'true': [nan, -6.251741303714473e-17], 'true,false': [nan, -6.251741303714473e-17], 'true,false,false': [nan, -6.251741303714473e-17]}
{'': [2.0371064672021222e-18, 0.2095716952864281], 'true': [nan, 2.0371064672021222e-18], 'true,false': [2.0371064672021222e-18, nan]}
{'': [1.0726792508455618e-18, 0.211634548945523], 'true': [nan, 1.0726792508455618e-18], 'true,false': [nan, 1.0726792508455618e-18], 'true,false,false': [nan, 1.0726792508455618e-18]}
{'': [0.09013932359988719, 0.2032791422389784], 'false': [nan, 0.20327914223898147], 'true': [0.09013932359988719, nan], 'true,true': [nan, 0.09013932359988719], 'true,true,false': [nan, 0.09013932359988719]}
{'': [9.880453711975077e-17, 0.20919726917147186], 'true': [9.880453711975077e-17, nan], 'true,true': [nan, 9.880453711975077e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 2.9529311656951904
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1.04e-06, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048768;  // std dev = 4.94e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.14185106490048804;  // std dev = 0.000, 551.000 (wgt'ed) examples reached here.  /* #neg=551 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.12544463852839186;  // std dev = 0.000, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.12544463852839208;  // std dev = 0.000, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360675;  // std dev = 0.000, 227.000 (wgt'ed) examples reached here.  /* #neg=227 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.11231637819360626;  // std dev = 4.71e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.11231637819360674;  // std dev = 0.000, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783656;  // std dev = 0.000, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831163;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.10159632948783631;  // std dev = 1.83e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return -0.10159632948783649;  // std dev = 0.000, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.09269127618926168;  // std dev = 0.000, 586.000 (wgt'ed) examples reached here.  /* #neg=586 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839675;  // std dev = 0.000, 205.000 (wgt'ed) examples reached here.  /* #neg=205 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948756;  // std dev = 3.86e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.08518475138839679;  // std dev = 2.24e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return -0.08518475138839675;  // std dev = 2.98e-08, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109144;  // std dev = 5.58e-08, 209.000 (wgt'ed) examples reached here.  /* #neg=209 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return -0.07877675473109146;  // std dev = 4.21e-08, 383.000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.07324622576333661;  // std dev = 1.26e-07, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527653;  // std dev = 2.73e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.07324622576333704;  // std dev = 1.05e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.07324622576333711;  // std dev = 6.32e-08, 395.000 (wgt'ed) examples reached here.  /* #neg=395 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.06842697784420268;  // std dev = 1.83e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.06842697784420362;  // std dev = 0.000, 587.000 (wgt'ed) examples reached here.  /* #neg=587 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202625;  // std dev = 0.000, 219.000 (wgt'ed) examples reached here.  /* #neg=219 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080118;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return -0.06419184008202615;  // std dev = 0.000, 328.000 (wgt'ed) examples reached here.  /* #neg=328 */
Inference time using transfer learning 0.9579513072967529
Refined model CLL: -0.064225


******************************************
Best model found
******************************************
Results 

CLL : -0.063422 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.9529311656951904 

Total Inference Time : 1.346010684967041 

Total revision time: 10.351078510284424
Best scored revision CLL: -0.064225


Results 

CLL : -0.063422 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 10.366729974746704 

Total Inference Time : 1.346010684967041 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos examples: 178
Target test neg examples: 3543

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 1.9199864864349365
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.8075160237071076;  // std dev = 1.949, 79.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=75 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.0880554771555868;  // std dev = 9.732, 535.000 (wgt'ed) examples reached here.  /* #neg=412 #pos=123 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15291167228840896;  // std dev = 4.93e-09, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   else return 0.2749768625488244;  // std dev = 10.154, 453.000 (wgt'ed) examples reached here.  /* #neg=249 #pos=204 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.13413802632055882;  // std dev = 1.15e-07, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2226086356456099;  // std dev = 10.193, 463.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=204 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11930856276908873;  // std dev = 3.23e-09, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   else return 0.16175329666490587;  // std dev = 10.339, 489.000 (wgt'ed) examples reached here.  /* #neg=285 #pos=204 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5084503764919381;  // std dev = 2.357, 81.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=75 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.025995304887420884;  // std dev = 0.413, 517.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=129 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1098467448161764;  // std dev = 7.45e-08, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   else return 0.09311063808845972;  // std dev = 10.097, 506.000 (wgt'ed) examples reached here.  /* #neg=302 #pos=204 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.09955720581094547;  // std dev = 0.000, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11944641181011642;  // std dev = 9.649, 450.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=204 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09098132027617481;  // std dev = 4.71e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else return 0.07292530203659622;  // std dev = 9.842, 474.000 (wgt'ed) examples reached here.  /* #neg=270 #pos=204 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06826367498557856;  // std dev = 3.762, 241.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=81 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.007001198210127128;  // std dev = 9.080, 373.000 (wgt'ed) examples reached here.  /* #neg=250 #pos=123 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.08911986311603076;  // std dev = 4.93e-09, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05670857146575546;  // std dev = 9.777, 468.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=204 */
Inference time using transfer learning 1.152047872543335
Parameter learned model CLL:-0.319448 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.949, 4, 75], 'true,false,false,false': [0.0, 0, 6], 'false': [9.732, 412, 123]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [4.93e-09, 132, 0], 'false': [10.154, 249, 204]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.15e-07, 130, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [10.193, 259, 204]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [3.23e-09, 147, 0], 'false': [10.339, 285, 204]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [2.357, 6, 75], 'true,false': [0.0, 0, 0], 'false': [0.413, 388, 129]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.45e-08, 137, 0], 'false': [10.097, 302, 204]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 141, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.649, 246, 204]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.71e-08, 120, 0], 'false': [9.842, 270, 204]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [3.762, 160, 81], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.08, 250, 123]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [4.93e-09, 155, 0], 'true,false': [0.0, 0, 0], 'false': [9.777, 264, 204]}]
{'': [0.04484429065743912, 0.17704952397589346], 'true': [nan, 0.04484429065743912], 'true,false': [nan, 0.04484429065743912], 'true,false,false': [0.04806921967633292, -1.4802973661668753e-16]}
{'': [2.0185873175002847e-17, 0.22760569643879835], 'true': [nan, 2.0185873175002847e-17], 'true,false': [nan, 2.0185873175002847e-17]}
{'': [1.0248212535001446e-16, 0.22439323082827306], 'true': [nan, 1.0248212535001446e-16], 'true,false': [nan, 1.0248212535001446e-16], 'true,false,false': [1.0248212535001446e-16, nan]}
{'': [9.063045098980869e-18, 0.21861250022970244], 'true': [nan, 9.063045098980869e-18], 'true,false': [nan, 9.063045098980869e-18]}
{'': [0.06858710562414237, 0.17044921481743394], 'true': [0.06858710562414237, nan], 'true,true': [nan, 0.06858710562414237], 'true,true,false': [nan, 0.06858710562414237]}
{'': [4.0519088489969217e-17, 0.20147776425935487], 'true': [nan, 4.0519088489969217e-17], 'true,false': [nan, 4.0519088489969217e-17], 'true,false,false': [nan, 4.0519088489969217e-17]}
{'': [-3.622004193812568e-17, 0.20689741570792322], 'true': [nan, -3.622004193812568e-17], 'true,false': [-3.622004193812568e-17, nan]}
{'': [1.850371707708594e-17, 0.20434928775460445], 'true': [nan, 1.850371707708594e-17], 'true,false': [nan, 1.850371707708594e-17], 'true,false,false': [nan, 1.850371707708594e-17]}
{'': [0.05872453264377509, 0.22101790424713477], 'false': [nan, 0.22101790424713813], 'true': [0.05872453264377509, nan], 'true,true': [nan, 0.05872453264377509], 'true,true,false': [nan, 0.05872453264377509]}
{'': [2.4353279249842144e-17, 0.20424590037702817], 'true': [2.4353279249842144e-17, nan], 'true,true': [nan, 2.4353279249842144e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;genre(B, E).;true;true
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 2.5032694339752197
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995127;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995105;  // std dev = 6.95e-07, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.14185106490048752;  // std dev = 2.48e-07, 388.000 (wgt'ed) examples reached here.  /* #neg=388 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.1254446385283914;  // std dev = 0.000, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.7194734122109568;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.1340603023762055;  // std dev = 0.151, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return -0.12544463852839188;  // std dev = 0.000, 229.000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.1123163781936062;  // std dev = 9.66e-08, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.555366436746283;  // std dev = 6.14e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.11146024926161194;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return -0.11231637819360679;  // std dev = 0.000, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783644;  // std dev = 0.000, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831;  // std dev = 2.67e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.1008902679796953;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.10159632948783658;  // std dev = 0.000, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601489;  // std dev = 4.17e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.09209978364794631;  // std dev = 9.13e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.09269127618926086;  // std dev = 1.53e-07, 402.000 (wgt'ed) examples reached here.  /* #neg=402 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.0851847513883968;  // std dev = 7.15e-08, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948834;  // std dev = 2.31e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.09525238197140054;  // std dev = 0.111, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.08518475138839678;  // std dev = 8.30e-08, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109153;  // std dev = 7.67e-08, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.20975771563253495;  // std dev = 2.86e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.07758550604702606;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return -0.07877675473109144;  // std dev = 5.58e-08, 251.000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.07324622576333728;  // std dev = 0.000, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1770964977452777;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.07221183017197538;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.07324622576333684;  // std dev = 1.14e-07, 265.000 (wgt'ed) examples reached here.  /* #neg=265 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.08044600365253915;  // std dev = 0.128, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.06842697784420325;  // std dev = 0.000, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202626;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.13400703000801092;  // std dev = 8.43e-08, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.06262860835451481;  // std dev = 5.27e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
Inference time using transfer learning 0.9702572822570801
Refined model CLL: -0.063624


******************************************
Best model found
******************************************
Results 

CLL : -0.068107 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.5032694339752197 

Total Inference Time : 1.5087039470672607 

Total revision time: 9.392666101455688
Best scored revision CLL: -0.063624


Results 

CLL : -0.068107 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 9.408317565917969 

Total Inference Time : 1.5087039470672607 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos examples: 45
Target test neg examples: 1891

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.7424495220184326
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.7321646831310065;  // std dev = 3.740, 127.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=111 */
%   | | | else return 0.8181489350995121;  // std dev = 1.386, 50.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=48 */
%   else return 0.07981767731619827;  // std dev = 11.770, 803.000 (wgt'ed) examples reached here.  /* #neg=625 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15184768083448819;  // std dev = 4.93e-09, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
%   else return 0.2518321521524237;  // std dev = 13.298, 784.000 (wgt'ed) examples reached here.  /* #neg=447 #pos=337 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.13330700890123362;  // std dev = 0.000, 212.000 (wgt'ed) examples reached here.  /* #neg=212 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.21858320637317516;  // std dev = 13.149, 773.000 (wgt'ed) examples reached here.  /* #neg=436 #pos=337 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11864370778179982;  // std dev = 0.000, 215.000 (wgt'ed) examples reached here.  /* #neg=215 */
%   else return 0.1768201776402753;  // std dev = 13.108, 781.000 (wgt'ed) examples reached here.  /* #neg=444 #pos=337 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4574729170534789;  // std dev = 4.028, 130.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=111 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0322395874506372;  // std dev = 0.406, 878.000 (wgt'ed) examples reached here.  /* #neg=652 #pos=226 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10990213467052594;  // std dev = 0.000, 216.000 (wgt'ed) examples reached here.  /* #neg=216 */
%   else return 0.11664844321758273;  // std dev = 12.785, 785.000 (wgt'ed) examples reached here.  /* #neg=448 #pos=337 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.09960302019056304;  // std dev = 2.28e-09, 227.000 (wgt'ed) examples reached here.  /* #neg=227 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08933137567681872;  // std dev = 12.778, 793.000 (wgt'ed) examples reached here.  /* #neg=456 #pos=337 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09101979659821388;  // std dev = 0.000, 219.000 (wgt'ed) examples reached here.  /* #neg=219 */
%   else return 0.06255653566073824;  // std dev = 12.863, 808.000 (wgt'ed) examples reached here.  /* #neg=471 #pos=337 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09676282676528618;  // std dev = 6.117, 409.000 (wgt'ed) examples reached here.  /* #neg=250 #pos=159 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.004275895846612204;  // std dev = 11.068, 571.000 (wgt'ed) examples reached here.  /* #neg=393 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0914960646513144;  // std dev = 6.59e-09, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0781026751456332;  // std dev = 12.358, 739.000 (wgt'ed) examples reached here.  /* #neg=402 #pos=337 */
Inference time using transfer learning 0.9793672561645508
Parameter learned model CLL:-0.327786 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [3.74, 16, 111], 'true,false,false,false': [1.386, 2, 48], 'false': [11.77, 625, 178]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [4.93e-09, 246, 0], 'false': [13.298, 447, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 212, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.149, 436, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 215, 0], 'false': [13.108, 444, 337]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [4.028, 19, 111], 'true,false': [0.0, 0, 0], 'false': [0.406, 652, 226]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 216, 0], 'false': [12.785, 448, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.28e-09, 227, 0], 'true,false,false': [0.0, 0, 0], 'false': [12.778, 456, 337]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 219, 0], 'false': [12.863, 471, 337]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [6.117, 250, 159], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.068, 393, 178]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [6.59e-09, 218, 0], 'true,false': [0.0, 0, 0], 'false': [12.358, 402, 337]}]
{'': [0.09135305946567686, 0.17253171094075984], 'true': [nan, 0.09135305946567686], 'true,false': [nan, 0.09135305946567686], 'true,false,false': [0.11011222022444384, 0.0384000000000006]}
{'': [2.5273369666263725e-17, 0.22554274508495978], 'true': [nan, 2.5273369666263725e-17], 'true,false': [nan, 2.5273369666263725e-17]}
{'': [-3.561092720495785e-17, 0.22365864919065898], 'true': [nan, -3.561092720495785e-17], 'true,false': [nan, -3.561092720495785e-17], 'true,false,false': [-3.561092720495785e-17, nan]}
{'': [-4.7507217797913675e-17, 0.2199949336287282], 'true': [nan, -4.7507217797913675e-17], 'true,false': [nan, -4.7507217797913675e-17]}
{'': [0.12479289940828447, 0.1646204131322902], 'true': [0.12479289940828447, nan], 'true,true': [nan, 0.12479289940828447], 'true,true,false': [nan, 0.12479289940828447]}
{'': [-9.251858538542972e-17, 0.20822264160402293], 'true': [nan, -9.251858538542972e-17], 'true,false': [nan, -9.251858538542972e-17], 'true,false,false': [nan, -9.251858538542972e-17]}
{'': [3.912680262996147e-18, 0.20590644529248256], 'true': [nan, 3.912680262996147e-18], 'true,false': [3.912680262996147e-18, nan]}
{'': [-8.719559828106252e-17, 0.20476224616509756], 'true': [nan, -8.719559828106252e-17], 'true,false': [nan, -8.719559828106252e-17], 'true,false,false': [nan, -8.719559828106252e-17]}
{'': [0.09147941846923424, 0.21455583806944145], 'false': [nan, 0.21455583806944567], 'true': [0.09147941846923424, nan], 'true,true': [nan, 0.09147941846923424], 'true,true,false': [nan, 0.09147941846923424]}
{'': [4.379778904484563e-17, 0.2066586750400111], 'true': [4.379778904484563e-17, nan], 'true,true': [nan, 4.379778904484563e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 3.367279291152954
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 5.58e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.14185106490048863;  // std dev = 0.000, 626.000 (wgt'ed) examples reached here.  /* #neg=626 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.12544463852839177;  // std dev = 0.000, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.12544463852839208;  // std dev = 0.000, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360686;  // std dev = 0.000, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.11231637819360626;  // std dev = 4.83e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.11231637819360675;  // std dev = 0.000, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783655;  // std dev = 0.000, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.10159632948783642;  // std dev = 0.000, 409.000 (wgt'ed) examples reached here.  /* #neg=409 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926104;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.09269127618926175;  // std dev = 0.000, 602.000 (wgt'ed) examples reached here.  /* #neg=602 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839675;  // std dev = 3.65e-08, 253.000 (wgt'ed) examples reached here.  /* #neg=253 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.08518475138839679;  // std dev = 7.45e-09, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.08518475138839672;  // std dev = 5.58e-08, 408.000 (wgt'ed) examples reached here.  /* #neg=408 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109139;  // std dev = 6.50e-08, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07877675473109177;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return -0.07877675473109139;  // std dev = 5.96e-08, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.0732462257633366;  // std dev = 7.60e-08, 209.000 (wgt'ed) examples reached here.  /* #neg=209 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 7.45e-09, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.0732462257633371;  // std dev = 0.000, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06842697784420268;  // std dev = 1.49e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.06842697784420275;  // std dev = 0.000, 646.000 (wgt'ed) examples reached here.  /* #neg=646 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202625;  // std dev = 0.000, 216.000 (wgt'ed) examples reached here.  /* #neg=216 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080119;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.06419184008202623;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return -0.06419184008202584;  // std dev = 1.46e-07, 419.000 (wgt'ed) examples reached here.  /* #neg=419 */
Inference time using transfer learning 0.7871427536010742
Refined model CLL: -0.064062


******************************************
Best model found
******************************************
Results 

CLL : -0.063847 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.367279291152954 

Total Inference Time : 1.4323854446411133 

Total revision time: 11.67437195777893
Best scored revision CLL: -0.064062


Results 

CLL : -0.063847 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 11.690023422241211 

Total Inference Time : 1.4323854446411133 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos examples: 45
Target test neg examples: 2071

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.66475772857666
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.7188046728044286;  // std dev = 3.825, 122.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=105 */
%   | | | else return 0.7331489350995121;  // std dev = 2.291, 48.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=42 */
%   else return 0.08734073244571096;  // std dev = 12.102, 829.000 (wgt'ed) examples reached here.  /* #neg=639 #pos=190 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15281911459134467;  // std dev = 0.000, 214.000 (wgt'ed) examples reached here.  /* #neg=214 */
%   else return 0.23561656783608237;  // std dev = 13.602, 822.000 (wgt'ed) examples reached here.  /* #neg=485 #pos=337 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.13406577884822024;  // std dev = 0.000, 192.000 (wgt'ed) examples reached here.  /* #neg=192 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20156538619608796;  // std dev = 13.492, 821.000 (wgt'ed) examples reached here.  /* #neg=484 #pos=337 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11925079050202542;  // std dev = 0.000, 216.000 (wgt'ed) examples reached here.  /* #neg=216 */
%   else return 0.18900318049736414;  // std dev = 13.183, 775.000 (wgt'ed) examples reached here.  /* #neg=438 #pos=337 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.42578327807461847;  // std dev = 4.420, 129.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=105 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.040337772990357255;  // std dev = 0.414, 879.000 (wgt'ed) examples reached here.  /* #neg=647 #pos=232 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11120836938874837;  // std dev = 0.000, 219.000 (wgt'ed) examples reached here.  /* #neg=219 */
%   else return 0.11881025029130869;  // std dev = 13.036, 795.000 (wgt'ed) examples reached here.  /* #neg=458 #pos=337 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.10068237263053001;  // std dev = 8.12e-09, 198.000 (wgt'ed) examples reached here.  /* #neg=198 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08418782493038757;  // std dev = 13.156, 813.000 (wgt'ed) examples reached here.  /* #neg=476 #pos=337 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09192550307018114;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #neg=204 */
%   else return 0.06029726350895984;  // std dev = 13.173, 830.000 (wgt'ed) examples reached here.  /* #neg=493 #pos=337 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10454566636595482;  // std dev = 6.122, 367.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=147 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.012120602582515181;  // std dev = 11.519, 630.000 (wgt'ed) examples reached here.  /* #neg=440 #pos=190 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.09298441308506014;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #neg=202 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07360718471340105;  // std dev = 12.721, 766.000 (wgt'ed) examples reached here.  /* #neg=429 #pos=337 */
Inference time using transfer learning 1.0179991722106934
Parameter learned model CLL:-0.335106 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [3.825, 17, 105], 'true,false,false,false': [2.291, 6, 42], 'false': [12.102, 639, 190]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 214, 0], 'false': [13.602, 485, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 192, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.492, 484, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 216, 0], 'false': [13.183, 438, 337]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [4.42, 24, 105], 'true,false': [0.0, 0, 0], 'false': [0.414, 647, 232]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 219, 0], 'false': [13.036, 458, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [8.12e-09, 198, 0], 'true,false,false': [0.0, 0, 0], 'false': [13.156, 476, 337]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 204, 0], 'false': [13.173, 493, 337]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [6.122, 220, 147], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.519, 440, 190]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 202, 0], 'true,false': [0.0, 0, 0], 'false': [12.721, 429, 337]}]
{'': [0.11698961937716808, 0.17666291737541903], 'true': [nan, 0.11698961937716808], 'true,false': [nan, 0.11698961937716808], 'true,false,false': [0.1199274388605242, 0.10937500000000089]}
{'': [-1.4526282565188963e-16, 0.22506359906301263], 'true': [nan, -1.4526282565188963e-16], 'true,false': [nan, -1.4526282565188963e-16]}
{'': [-1.2027416100105862e-16, 0.22171509880471788], 'true': [nan, -1.2027416100105862e-16], 'true,false': [nan, -1.2027416100105862e-16], 'true,false,false': [-1.2027416100105862e-16, nan]}
{'': [-1.4391779948844622e-16, 0.22426081385937668], 'true': [nan, -1.4391779948844622e-16], 'true,false': [nan, -1.4391779948844622e-16]}
{'': [0.1514332071389934, 0.17131939967453524], 'true': [0.1514332071389934, nan], 'true,true': [nan, 0.1514332071389934], 'true,true,false': [nan, 0.1514332071389934]}
{'': [-3.447267839018751e-17, 0.21374645453739982], 'true': [nan, -3.447267839018751e-17], 'true,false': [nan, -3.447267839018751e-17], 'true,false,false': [nan, -3.447267839018751e-17]}
{'': [6.728624391667616e-17, 0.21287967554414206], 'true': [nan, 6.728624391667616e-17], 'true,false': [6.728624391667616e-17, nan]}
{'': [-1.6326809185664067e-17, 0.20908070281593003], 'true': [nan, -1.6326809185664067e-17], 'true,false': [nan, -1.6326809185664067e-17], 'true,false,false': [nan, -1.6326809185664067e-17]}
{'': [0.10212559866269295, 0.21063240110859552], 'false': [nan, 0.2106324011085927], 'true': [0.10212559866269295, nan], 'true,true': [nan, 0.10212559866269295], 'true,true,false': [nan, 0.10212559866269295]}
{'': [-1.0992307174506501e-17, 0.21126158529284017], 'true': [-1.0992307174506501e-17, nan], 'true,true': [nan, -1.0992307174506501e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 2.9956541061401367
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 5.96e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.14185106490048857;  // std dev = 0.000, 629.000 (wgt'ed) examples reached here.  /* #neg=629 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.12544463852839158;  // std dev = 0.000, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.12544463852839213;  // std dev = 0.000, 434.000 (wgt'ed) examples reached here.  /* #neg=434 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360661;  // std dev = 0.000, 201.000 (wgt'ed) examples reached here.  /* #neg=201 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.11231637819360628;  // std dev = 4.34e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.11231637819360656;  // std dev = 0.000, 420.000 (wgt'ed) examples reached here.  /* #neg=420 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.1015963294878365;  // std dev = 0.000, 190.000 (wgt'ed) examples reached here.  /* #neg=190 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10159632948783624;  // std dev = 2.98e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.10159632948783649;  // std dev = 0.000, 400.000 (wgt'ed) examples reached here.  /* #neg=400 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.09269127618926175;  // std dev = 0.000, 612.000 (wgt'ed) examples reached here.  /* #neg=612 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839675;  // std dev = 0.000, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return -0.08518475138839675;  // std dev = 5.16e-08, 384.000 (wgt'ed) examples reached here.  /* #neg=384 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109144;  // std dev = 4.94e-08, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return -0.07877675473109139;  // std dev = 5.16e-08, 421.000 (wgt'ed) examples reached here.  /* #neg=421 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.07324622576333661;  // std dev = 1.25e-07, 206.000 (wgt'ed) examples reached here.  /* #neg=206 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 1.05e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return -0.07324622576333717;  // std dev = 0.000, 415.000 (wgt'ed) examples reached here.  /* #neg=415 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0684269778442027;  // std dev = 1.39e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.06842697784420262;  // std dev = 6.99e-08, 638.000 (wgt'ed) examples reached here.  /* #neg=638 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202623;  // std dev = 0.000, 197.000 (wgt'ed) examples reached here.  /* #neg=197 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080119;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.0641918400820259;  // std dev = 1.28e-07, 381.000 (wgt'ed) examples reached here.  /* #neg=381 */
Inference time using transfer learning 0.7873868942260742
Refined model CLL: -0.064087


******************************************
Best model found
******************************************
Results 

CLL : -0.063719 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.9956541061401367 

Total Inference Time : 1.379624605178833 

Total revision time: 10.89878797531128
Best scored revision CLL: -0.064087


Results 

CLL : -0.063719 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 10.91443943977356 

Total Inference Time : 1.379624605178833 

Run: 5

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos examples: 56
Target test neg examples: 3308

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.5533571243286133
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.6988568997012807;  // std dev = 3.890, 113.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=95 */
%   | | | else return 0.6450341810011518;  // std dev = 3.198, 61.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=48 */
%   else return 0.07168452436438809;  // std dev = 11.997, 857.000 (wgt'ed) examples reached here.  /* #neg=674 #pos=183 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15080317572286;  // std dev = 0.000, 169.000 (wgt'ed) examples reached here.  /* #neg=169 */
%   else return 0.2509143708257233;  // std dev = 13.261, 771.000 (wgt'ed) examples reached here.  /* #neg=445 #pos=326 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.13249013986543162;  // std dev = 0.000, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2034981731966031;  // std dev = 13.307, 789.000 (wgt'ed) examples reached here.  /* #neg=463 #pos=326 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1179894512981041;  // std dev = 0.000, 206.000 (wgt'ed) examples reached here.  /* #neg=206 */
%   else return 0.17531424093611297;  // std dev = 13.177, 775.000 (wgt'ed) examples reached here.  /* #neg=449 #pos=326 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41403825213966144;  // std dev = 4.377, 119.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=95 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.022994577319462032;  // std dev = 0.411, 920.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=231 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.108456634805233;  // std dev = 1.19e-07, 204.000 (wgt'ed) examples reached here.  /* #neg=204 */
%   else return 0.10168037639625307;  // std dev = 13.148, 823.000 (wgt'ed) examples reached here.  /* #neg=497 #pos=326 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.09840619785531969;  // std dev = 0.000, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09735848778949587;  // std dev = 12.983, 782.000 (wgt'ed) examples reached here.  /* #neg=456 #pos=326 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09001379547754561;  // std dev = 0.000, 177.000 (wgt'ed) examples reached here.  /* #neg=177 */
%   else return 0.08715188891995974;  // std dev = 12.790, 767.000 (wgt'ed) examples reached here.  /* #neg=441 #pos=326 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10568896525940169;  // std dev = 6.302, 352.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=143 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.03460331893339146;  // std dev = 11.497, 659.000 (wgt'ed) examples reached here.  /* #neg=476 #pos=183 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.09130604753326443;  // std dev = 3.73e-09, 195.000 (wgt'ed) examples reached here.  /* #neg=195 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06262181079190465;  // std dev = 12.747, 776.000 (wgt'ed) examples reached here.  /* #neg=450 #pos=326 */
Inference time using transfer learning 1.2589445114135742
Parameter learned model CLL:-0.332574 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [3.89, 18, 95], 'true,false,false,false': [3.198, 13, 48], 'false': [11.997, 674, 183]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 169, 0], 'false': [13.261, 445, 326]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 187, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.307, 463, 326]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 206, 0], 'false': [13.177, 449, 326]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [4.377, 24, 95], 'true,false': [0.0, 0, 0], 'false': [0.411, 689, 231]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.19e-07, 204, 0], 'false': [13.148, 497, 326]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 193, 0], 'true,false,false': [0.0, 0, 0], 'false': [12.983, 456, 326]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 177, 0], 'false': [12.79, 441, 326]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [6.302, 209, 143], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.497, 476, 183]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [3.73e-09, 195, 0], 'true,false': [0.0, 0, 0], 'false': [12.747, 450, 326]}]
{'': [0.14641960628881479, 0.16793814138217958], 'true': [nan, 0.14641960628881479], 'true,false': [nan, 0.14641960628881479], 'true,false,false': [0.13391808285692106, 0.16769685568395612]}
{'': [-1.0510987215386097e-17, 0.2280932987905927], 'true': [nan, -1.0510987215386097e-17], 'true,false': [nan, -1.0510987215386097e-17]}
{'': [-7.599387548236365e-17, 0.22443880355823323], 'true': [nan, -7.599387548236365e-17], 'true,false': [nan, -7.599387548236365e-17], 'true,false,false': [-7.599387548236365e-17, nan]}
{'': [-9.054246026069237e-17, 0.22404416216778456], 'true': [nan, -9.054246026069237e-17], 'true,false': [nan, -9.054246026069237e-17]}
{'': [0.16100557870207066, 0.16912217728466963], 'true': [0.16100557870207066, nan], 'true,true': [nan, 0.16100557870207066], 'true,true,false': [nan, 0.16100557870207066]}
{'': [6.966105252550002e-17, 0.21004783324037002], 'true': [nan, 6.966105252550002e-17], 'true,false': [nan, 6.966105252550002e-17], 'true,false,false': [nan, 6.966105252550002e-17]}
{'': [-4.947107778122459e-17, 0.21555571613790045], 'true': [nan, -4.947107778122459e-17], 'true,false': [-4.947107778122459e-17, nan]}
{'': [-5.268855032119387e-17, 0.2132629755578415], 'true': [nan, -5.268855032119387e-17], 'true,false': [nan, -5.268855032119387e-17], 'true,false,false': [nan, -5.268855032119387e-17]}
{'': [0.11284447197382139, 0.20057980892556224], 'false': [nan, 0.2005798089255577], 'true': [0.11284447197382139, nan], 'true,true': [nan, 0.11284447197382139], 'true,true,false': [nan, 0.11284447197382139]}
{'': [1.25255930983351e-17, 0.20940030117207636], 'true': [1.25255930983351e-17, nan], 'true,true': [nan, 1.25255930983351e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 3.203453779220581
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1.05e-06, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048768;  // std dev = 4.94e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.14185106490048824;  // std dev = 0.000, 571.000 (wgt'ed) examples reached here.  /* #neg=571 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.12544463852839172;  // std dev = 0.000, 214.000 (wgt'ed) examples reached here.  /* #neg=214 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.1254446385283921;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #neg=392 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360646;  // std dev = 0.000, 179.000 (wgt'ed) examples reached here.  /* #neg=179 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.11231637819360632;  // std dev = 3.16e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.11231637819360633;  // std dev = 0.000, 462.000 (wgt'ed) examples reached here.  /* #neg=462 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783653;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #neg=202 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831163;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.10159632948783616;  // std dev = 5.05e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return -0.10159632948783653;  // std dev = 0.000, 393.000 (wgt'ed) examples reached here.  /* #neg=393 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.09269127618926166;  // std dev = 0.000, 585.000 (wgt'ed) examples reached here.  /* #neg=585 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839675;  // std dev = 7.45e-08, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948756;  // std dev = 3.86e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.08518475138839675;  // std dev = 6.32e-08, 409.000 (wgt'ed) examples reached here.  /* #neg=409 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109146;  // std dev = 7.74e-08, 192.000 (wgt'ed) examples reached here.  /* #neg=192 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.46e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.07877675473109173;  // std dev = 2.36e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.07877675473109144;  // std dev = 2.98e-08, 417.000 (wgt'ed) examples reached here.  /* #neg=417 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.07324622576333671;  // std dev = 9.94e-08, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
%   else if ( actor(B) )
%   | then return -0.0732462257633372;  // std dev = 2.98e-08, 390.000 (wgt'ed) examples reached here.  /* #neg=390 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.17110026484686666;  // std dev = 0.700, 334.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=326 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1535214664410795;  // std dev = 2.49e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.0684269778442027;  // std dev = 1.39e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.06858185919345353;  // std dev = 0.039, 559.000 (wgt'ed) examples reached here.  /* #neg=559 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06418253679410087;  // std dev = 0.000, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.13461380447998245;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.06426144739656801;  // std dev = 0.023, 414.000 (wgt'ed) examples reached here.  /* #neg=414 */
Inference time using transfer learning 0.9272494316101074
Refined model CLL: -0.064394


******************************************
Best model found
******************************************
Results 

CLL : -0.063434 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.203453779220581 

Total Inference Time : 1.3770837783813477 

Total revision time: 10.91945219039917
Best scored revision CLL: -0.064394


Results 

CLL : -0.063434 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 10.935160636901855 

Total Inference Time : 1.3770837783813477 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos examples: 58
Target test neg examples: 3423

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.698136568069458
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.6807295802608009;  // std dev = 4.254, 124.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=102 */
%   | | | else return 0.7470378239884012;  // std dev = 2.309, 54.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=48 */
%   else return 0.08559991549166789;  // std dev = 11.594, 765.000 (wgt'ed) examples reached here.  /* #neg=591 #pos=174 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1525938751576749;  // std dev = 0.000, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
%   else return 0.26838925403185687;  // std dev = 12.931, 729.000 (wgt'ed) examples reached here.  /* #neg=405 #pos=324 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.1338899297616268;  // std dev = 1.52e-07, 216.000 (wgt'ed) examples reached here.  /* #neg=216 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20148007886589342;  // std dev = 13.160, 775.000 (wgt'ed) examples reached here.  /* #neg=451 #pos=324 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11911015053331034;  // std dev = 6.59e-09, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
%   else return 0.17821143327369177;  // std dev = 12.977, 750.000 (wgt'ed) examples reached here.  /* #neg=426 #pos=324 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.47280814990002834;  // std dev = 3.817, 119.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=102 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0429123334336441;  // std dev = 0.409, 835.000 (wgt'ed) examples reached here.  /* #neg=613 #pos=222 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11134439522939818;  // std dev = 0.000, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
%   else return 0.12338742614267115;  // std dev = 12.546, 745.000 (wgt'ed) examples reached here.  /* #neg=421 #pos=324 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.10079465437461388;  // std dev = 9.68e-09, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1080536061241113;  // std dev = 12.378, 727.000 (wgt'ed) examples reached here.  /* #neg=403 #pos=324 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0920196366373177;  // std dev = 9.88e-08, 212.000 (wgt'ed) examples reached here.  /* #neg=212 */
%   else return 0.06744838057138432;  // std dev = 12.608, 754.000 (wgt'ed) examples reached here.  /* #neg=430 #pos=324 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09448772468659265;  // std dev = 6.002, 393.000 (wgt'ed) examples reached here.  /* #neg=243 #pos=150 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.03591481932533508;  // std dev = 11.111, 599.000 (wgt'ed) examples reached here.  /* #neg=425 #pos=174 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.09222605813456518;  // std dev = 4.17e-09, 203.000 (wgt'ed) examples reached here.  /* #neg=203 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.054930478876528785;  // std dev = 12.426, 755.000 (wgt'ed) examples reached here.  /* #neg=431 #pos=324 */
Inference time using transfer learning 1.3599016666412354
Parameter learned model CLL:-0.33034 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [4.254, 22, 102], 'true,false,false,false': [2.309, 6, 48], 'false': [11.594, 591, 174]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 237, 0], 'false': [12.931, 405, 324]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.52e-07, 216, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.16, 451, 324]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [6.59e-09, 208, 0], 'false': [12.977, 426, 324]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [3.817, 17, 102], 'true,false': [0.0, 0, 0], 'false': [0.409, 613, 222]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 213, 0], 'false': [12.546, 421, 324]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [9.68e-09, 237, 0], 'true,false,false': [0.0, 0, 0], 'false': [12.378, 403, 324]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [9.88e-08, 212, 0], 'false': [12.608, 430, 324]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [6.002, 243, 150], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.111, 425, 174]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [4.17e-09, 203, 0], 'true,false': [0.0, 0, 0], 'false': [12.426, 431, 324]}]
{'': [0.132559020325722, 0.17571703191080423], 'true': [nan, 0.132559020325722], 'true,false': [nan, 0.132559020325722], 'true,false,false': [0.14594172736732838, 0.0987654320987658]}
{'': [-3.37282944189921e-17, 0.2293588518519752], 'true': [nan, -3.37282944189921e-17], 'true,false': [nan, -3.37282944189921e-17]}
{'': [1.0691036533427433e-16, 0.22347486421039217], 'true': [nan, 1.0691036533427433e-16], 'true,false': [nan, 1.0691036533427433e-16], 'true,false,false': [1.0691036533427433e-16, nan]}
{'': [4.056584128438072e-17, 0.22454132023086687], 'true': [nan, 4.056584128438072e-17], 'true,false': [nan, 4.056584128438072e-17]}
{'': [0.122448979591836, 0.16766475687533403], 'true': [0.122448979591836, nan], 'true,true': [nan, 0.122448979591836], 'true,true,false': [nan, 0.122448979591836]}
{'': [-7.714225711010478e-17, 0.2112793527993382], 'true': [nan, -7.714225711010478e-17], 'true,false': [nan, -7.714225711010478e-17], 'true,false,false': [nan, -7.714225711010478e-17]}
{'': [9.36897067194225e-17, 0.21075010556104076], 'true': [nan, 9.36897067194225e-17], 'true,false': [9.36897067194225e-17, nan]}
{'': [4.6084729324063104e-17, 0.21082773183453338], 'true': [nan, 4.6084729324063104e-17], 'true,false': [nan, 4.6084729324063104e-17], 'true,false,false': [nan, 4.6084729324063104e-17]}
{'': [0.09167567341343838, 0.2061031045063979], 'false': [nan, 0.2061031045063979], 'true': [0.09167567341343838, nan], 'true,true': [nan, 0.09167567341343838], 'true,true,false': [nan, 0.09167567341343838]}
{'': [1.640723681712054e-17, 0.2045234107186238], 'true': [1.640723681712054e-17, nan], 'true,true': [nan, 1.640723681712054e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 3.1671977043151855
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1.04e-06, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048766;  // std dev = 6.83e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.14185106490048835;  // std dev = 0.000, 583.000 (wgt'ed) examples reached here.  /* #neg=583 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.12544463852839174;  // std dev = 0.000, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.12544463852839202;  // std dev = 0.000, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360674;  // std dev = 0.000, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.11231637819360638;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return -0.11231637819360663;  // std dev = 0.000, 397.000 (wgt'ed) examples reached here.  /* #neg=397 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783655;  // std dev = 0.000, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831163;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.10159632948783619;  // std dev = 4.34e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.10159632948783652;  // std dev = 0.000, 393.000 (wgt'ed) examples reached here.  /* #neg=393 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.09269127618926162;  // std dev = 0.000, 582.000 (wgt'ed) examples reached here.  /* #neg=582 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839675;  // std dev = 0.000, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948756;  // std dev = 3.86e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.08518475138839679;  // std dev = 1.67e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.08518475138839675;  // std dev = 4.21e-08, 394.000 (wgt'ed) examples reached here.  /* #neg=394 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109144;  // std dev = 5.16e-08, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return -0.07877675473109146;  // std dev = 2.98e-08, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.07324622576333661;  // std dev = 1.27e-07, 211.000 (wgt'ed) examples reached here.  /* #neg=211 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527653;  // std dev = 2.73e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.0732462257633371;  // std dev = 0.000, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.06842697784420268;  // std dev = 2.24e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.06842697784420276;  // std dev = 0.000, 594.000 (wgt'ed) examples reached here.  /* #neg=594 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202625;  // std dev = 0.000, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080118;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.06419184008202604;  // std dev = 9.54e-08, 386.000 (wgt'ed) examples reached here.  /* #neg=386 */
Inference time using transfer learning 0.9469304084777832
Refined model CLL: -0.064225


******************************************
Best model found
******************************************
Results 

CLL : -0.063422 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.1671977043151855 

Total Inference Time : 1.315718412399292 

Total revision time: 10.94712519645691
Best scored revision CLL: -0.064225


Results 

CLL : -0.063422 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 10.962833642959595 

Total Inference Time : 1.315718412399292 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos examples: 178
Target test neg examples: 3543

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 1.9972193241119385
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.7302419583553267;  // std dev = 3.097, 86.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=75 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.08891816586874277;  // std dev = 9.727, 533.000 (wgt'ed) examples reached here.  /* #neg=410 #pos=123 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1530234495548206;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else return 0.2594947170547888;  // std dev = 10.381, 472.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=204 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.1342252649056697;  // std dev = 1.01e-07, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2167427611926034;  // std dev = 10.361, 475.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=204 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11937831517171324;  // std dev = 0.000, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
%   else return 0.18172451882185547;  // std dev = 10.279, 473.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=204 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5508855469616588;  // std dev = 1.949, 79.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=75 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.013596958287897934;  // std dev = 0.406, 544.000 (wgt'ed) examples reached here.  /* #neg=415 #pos=129 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10869780767609212;  // std dev = 0.000, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   else return 0.12734004755218375;  // std dev = 9.821, 467.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=204 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.09860605591499019;  // std dev = 5.89e-09, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0868927615220674;  // std dev = 9.965, 482.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=204 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09018191465475531;  // std dev = 2.58e-08, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
%   else return 0.06428685081850861;  // std dev = 9.957, 490.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=204 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08582939646935432;  // std dev = 3.832, 216.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=81 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.007831450777049278;  // std dev = 9.103, 377.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=123 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.08982543073185;  // std dev = 3.73e-09, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08608542392151011;  // std dev = 9.571, 438.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=204 */
Inference time using transfer learning 1.2258198261260986
Parameter learned model CLL:-0.321838 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [3.097, 11, 75], 'true,false,false,false': [0.0, 0, 6], 'false': [9.727, 410, 123]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 111, 0], 'false': [10.381, 268, 204]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.01e-07, 140, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [10.361, 271, 204]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 152, 0], 'false': [10.279, 269, 204]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.949, 4, 75], 'true,false': [0.0, 0, 0], 'false': [0.406, 415, 129]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 132, 0], 'false': [9.821, 263, 204]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [5.89e-09, 122, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.965, 278, 204]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.58e-08, 146, 0], 'false': [9.957, 286, 204]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [3.832, 135, 81], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.103, 254, 123]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [3.73e-09, 139, 0], 'true,false': [0.0, 0, 0], 'false': [9.571, 234, 204]}]
{'': [0.1052693761814749, 0.1775147928994087], 'true': [nan, 0.1052693761814749], 'true,false': [nan, 0.1052693761814749], 'true,false,false': [0.1115467820443473, -1.4802973661668753e-16]}
{'': [-7.601527015451522e-17, 0.22830371385334708], 'true': [nan, -7.601527015451522e-17], 'true,false': [nan, -7.601527015451522e-17]}
{'': [7.2957513046796e-17, 0.22602003946263446], 'true': [nan, 7.2957513046796e-17], 'true,false': [nan, 7.2957513046796e-17], 'true,false,false': [7.2957513046796e-17, nan]}
{'': [-1.1978722107797742e-16, 0.22338541153767147], 'true': [nan, -1.1978722107797742e-16], 'true,false': [nan, -1.1978722107797742e-16]}
{'': [0.04806921967633328, 0.16517168668045323], 'true': [0.04806921967633328, nan], 'true,true': [nan, 0.04806921967633328], 'true,true,false': [nan, 0.04806921967633328]}
{'': [-1.5139404881252134e-17, 0.20651854039104106], 'true': [nan, -1.5139404881252134e-17], 'true,false': [nan, -1.5139404881252134e-17], 'true,false,false': [nan, -1.5139404881252134e-17]}
{'': [3.45807171604557e-17, 0.20601575862646604], 'true': [nan, 3.45807171604557e-17], 'true,false': [3.45807171604557e-17, nan]}
{'': [4.562560375171876e-18, 0.20231420341062695], 'true': [nan, 4.562560375171876e-18], 'true,false': [nan, 4.562560375171876e-18], 'true,false,false': [nan, 4.562560375171876e-18]}
{'': [0.06797128384291685, 0.21981439396604557], 'false': [nan, 0.21981439396604485], 'true': [0.06797128384291685, nan], 'true,true': [nan, 0.06797128384291685], 'true,true,false': [nan, 0.06797128384291685]}
{'': [1.2779545607196047e-17, 0.20912645731936108], 'true': [1.2779545607196047e-17, nan], 'true,true': [nan, 1.2779545607196047e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;genre(B, E).;true;true
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 2.4117445945739746
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995127;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0.7152917922423694;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995105;  // std dev = 6.95e-07, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.1418510649004875;  // std dev = 2.53e-07, 394.000 (wgt'ed) examples reached here.  /* #neg=394 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.12544463852839133;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.7202943098951811;  // std dev = 0.067, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.13250971786155977;  // std dev = 0.124, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return -0.12544463852839197;  // std dev = 0.000, 251.000 (wgt'ed) examples reached here.  /* #neg=251 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360624;  // std dev = 9.31e-08, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   else if ( actor(B) )
%   | then return -0.11231637819360694;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #neg=269 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.5561915069854887;  // std dev = 0.084, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.11161390682868016;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783642;  // std dev = 0.000, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.418145365132479;  // std dev = 0.085, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.10101705587634567;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return -0.10159686395183816;  // std dev = 9.03e-05, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3211529156781501;  // std dev = 0.077, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.09781249919775067;  // std dev = 0.098, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.092691556087713;  // std dev = 8.33e-05, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518472957638633;  // std dev = 0.000, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2554808687459158;  // std dev = 0.068, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.08433881254936794;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.08545596199924033;  // std dev = 0.068, 253.000 (wgt'ed) examples reached here.  /* #neg=253 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877673600150827;  // std dev = 2.36e-08, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2099804173250567;  // std dev = 0.059, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.07804987680589483;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return -0.07875720610767105;  // std dev = 5.09e-05, 268.000 (wgt'ed) examples reached here.  /* #neg=268 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.07324620951550413;  // std dev = 3.94e-08, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1772628356584551;  // std dev = 0.052, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.07261529303926474;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.07346450290390064;  // std dev = 0.060, 257.000 (wgt'ed) examples reached here.  /* #neg=257 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15287204158485035;  // std dev = 0.047, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.06787442556378516;  // std dev = 3.73e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.06840709664748598;  // std dev = 0.000285, 397.000 (wgt'ed) examples reached here.  /* #neg=397 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419302097799923;  // std dev = 0.000, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.13410848868662822;  // std dev = 0.042, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.06370409890607609;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.06416525930432236;  // std dev = 7.27e-05, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
Inference time using transfer learning 0.990175724029541
Refined model CLL: -0.063701


******************************************
Best model found
******************************************
Results 

CLL : -0.069481 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.4117445945739746 

Total Inference Time : 1.3358144760131836 

Total revision time: 9.334322929382324
Best scored revision CLL: -0.063701


Results 

CLL : -0.069481 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 9.35003137588501 

Total Inference Time : 1.3358144760131836 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos examples: 45
Target test neg examples: 1891

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.9080448150634766
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.7605879594897544;  // std dev = 3.291, 123.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=111 */
%   | | | else return 0.7152917922423695;  // std dev = 2.619, 56.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=48 */
%   else return 0.0708132122799169;  // std dev = 11.838, 837.000 (wgt'ed) examples reached here.  /* #neg=659 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15069162806894745;  // std dev = 0.000, 235.000 (wgt'ed) examples reached here.  /* #neg=235 */
%   else return 0.24189321609891415;  // std dev = 13.434, 807.000 (wgt'ed) examples reached here.  /* #neg=470 #pos=337 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.13240283957916876;  // std dev = 2.25e-07, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20707853467197984;  // std dev = 13.318, 804.000 (wgt'ed) examples reached here.  /* #neg=467 #pos=337 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11791948731499695;  // std dev = 1.39e-08, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
%   else return 0.19319658871002418;  // std dev = 12.981, 762.000 (wgt'ed) examples reached here.  /* #neg=425 #pos=337 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4584903661807239;  // std dev = 3.936, 129.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=111 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04560420683031816;  // std dev = 0.412, 845.000 (wgt'ed) examples reached here.  /* #neg=619 #pos=226 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11060299563859131;  // std dev = 0.000, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
%   else return 0.11652820039900351;  // std dev = 12.821, 786.000 (wgt'ed) examples reached here.  /* #neg=449 #pos=337 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.10018240181250729;  // std dev = 9.13e-09, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09841912162367215;  // std dev = 12.770, 768.000 (wgt'ed) examples reached here.  /* #neg=431 #pos=337 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09150615016391238;  // std dev = 1.35e-07, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
%   else return 0.0710143498486571;  // std dev = 12.769, 787.000 (wgt'ed) examples reached here.  /* #neg=450 #pos=337 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09412302982732823;  // std dev = 6.128, 414.000 (wgt'ed) examples reached here.  /* #neg=255 #pos=159 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0278310970785417;  // std dev = 11.228, 610.000 (wgt'ed) examples reached here.  /* #neg=432 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.09172393131049238;  // std dev = 0.000, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05320244923801935;  // std dev = 12.712, 785.000 (wgt'ed) examples reached here.  /* #neg=448 #pos=337 */
Inference time using transfer learning 0.9291460514068604
Parameter learned model CLL:-0.321651 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [3.291, 12, 111], 'true,false,false,false': [2.619, 8, 48], 'false': [11.838, 659, 178]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 235, 0], 'false': [13.434, 470, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [2.25e-07, 238, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.318, 467, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.39e-08, 246, 0], 'false': [12.981, 425, 337]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [3.936, 18, 111], 'true,false': [0.0, 0, 0], 'false': [0.412, 619, 226]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 208, 0], 'false': [12.821, 449, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [9.13e-09, 218, 0], 'true,false,false': [0.0, 0, 0], 'false': [12.77, 431, 337]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.35e-07, 217, 0], 'false': [12.769, 450, 337]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [6.128, 255, 159], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.228, 432, 178]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 236, 0], 'true,false': [0.0, 0, 0], 'false': [12.712, 448, 337]}]
{'': [0.0992478387066631, 0.16743818239174216], 'true': [nan, 0.0992478387066631], 'true,false': [nan, 0.0992478387066631], 'true,false,false': [0.08804283164783179, 0.12244897959183706]}
{'': [-1.7385620130300324e-16, 0.22363408485341382], 'true': [nan, -1.7385620130300324e-16], 'true,false': [nan, -1.7385620130300324e-16]}
{'': [2.1271499967608042e-16, 0.22060122180481198], 'true': [nan, 2.1271499967608042e-16], 'true,false': [nan, 2.1271499967608042e-16], 'true,false,false': [2.1271499967608042e-16, nan]}
{'': [1.967712352587676e-16, 0.221148331720896], 'true': [nan, 1.967712352587676e-16], 'true,false': [nan, 1.967712352587676e-16]}
{'': [0.12006489994591742, 0.16990433973240807], 'true': [0.12006489994591742, nan], 'true,true': [nan, 0.12006489994591742], 'true,true,false': [nan, 0.12006489994591742]}
{'': [-2.135044278125301e-18, 0.2091190925755227], 'true': [nan, -2.135044278125301e-18], 'true,false': [nan, -2.135044278125301e-18], 'true,false,false': [nan, -2.135044278125301e-18]}
{'': [8.352136515528701e-17, 0.21234647673705176], 'true': [nan, 8.352136515528701e-17], 'true,false': [8.352136515528701e-17, nan]}
{'': [8.390625623895192e-17, 0.20717409885841281], 'true': [nan, 8.390625623895192e-17], 'true,false': [nan, 8.390625623895192e-17], 'true,false,false': [nan, 8.390625623895192e-17]}
{'': [0.09069743696244165, 0.20665412523515622], 'false': [nan, 0.2066541252351519], 'true': [0.09069743696244165, nan], 'true,true': [nan, 0.09069743696244165], 'true,true,false': [nan, 0.09069743696244165]}
{'': [-8.938236215202531e-17, 0.2058586701203922], 'true': [-8.938236215202531e-17, nan], 'true,true': [nan, -8.938236215202531e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 3.295663356781006
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 3.94e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.14185106490048885;  // std dev = 0.000, 655.000 (wgt'ed) examples reached here.  /* #neg=655 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.12544463852839177;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.1254446385283921;  // std dev = 0.000, 388.000 (wgt'ed) examples reached here.  /* #neg=388 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360682;  // std dev = 0.000, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.1123163781936063;  // std dev = 3.33e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.11231637819360668;  // std dev = 0.000, 386.000 (wgt'ed) examples reached here.  /* #neg=386 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783652;  // std dev = 0.000, 229.000 (wgt'ed) examples reached here.  /* #neg=229 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10159632948783623;  // std dev = 3.33e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.10159632948783646;  // std dev = 0.000, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.09269127618926178;  // std dev = 0.000, 614.000 (wgt'ed) examples reached here.  /* #neg=614 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839673;  // std dev = 4.47e-08, 257.000 (wgt'ed) examples reached here.  /* #neg=257 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.08518475138839672;  // std dev = 5.16e-08, 405.000 (wgt'ed) examples reached here.  /* #neg=405 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109139;  // std dev = 6.83e-08, 207.000 (wgt'ed) examples reached here.  /* #neg=207 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.0787767547310914;  // std dev = 5.96e-08, 386.000 (wgt'ed) examples reached here.  /* #neg=386 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.0732462257633366;  // std dev = 8.30e-08, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 7.45e-09, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.07324622576333718;  // std dev = 0.000, 414.000 (wgt'ed) examples reached here.  /* #neg=414 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06842697784420268;  // std dev = 2.11e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.06842697784420244;  // std dev = 1.93e-07, 669.000 (wgt'ed) examples reached here.  /* #neg=669 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202625;  // std dev = 0.000, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080119;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.06419184008202586;  // std dev = 1.37e-07, 396.000 (wgt'ed) examples reached here.  /* #neg=396 */
Inference time using transfer learning 0.7879090309143066
Refined model CLL: -0.064062


******************************************
Best model found
******************************************
Results 

CLL : -0.063847 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.295663356781006 

Total Inference Time : 1.4949462413787842 

Total revision time: 11.8537757396698
Best scored revision CLL: -0.064062


Results 

CLL : -0.063847 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 11.869484186172485 

Total Inference Time : 1.4949462413787842 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos examples: 45
Target test neg examples: 2071

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.6330924034118652
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.7188046728044286;  // std dev = 3.825, 122.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=105 */
%   | | | else return 0.7914822684328453;  // std dev = 1.673, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   else return 0.08326741851183293;  // std dev = 12.134, 844.000 (wgt'ed) examples reached here.  /* #neg=654 #pos=190 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15229250668470593;  // std dev = 1.09e-08, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   else return 0.2375263049214056;  // std dev = 13.548, 819.000 (wgt'ed) examples reached here.  /* #neg=482 #pos=337 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.13365456826031544;  // std dev = 1.21e-07, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.21484273496235978;  // std dev = 13.329, 790.000 (wgt'ed) examples reached here.  /* #neg=453 #pos=337 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11892186224862215;  // std dev = 0.000, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
%   else return 0.17884545324210155;  // std dev = 13.243, 789.000 (wgt'ed) examples reached here.  /* #neg=452 #pos=337 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4712904147728247;  // std dev = 3.825, 122.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=105 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.035545162655227364;  // std dev = 0.412, 887.000 (wgt'ed) examples reached here.  /* #neg=655 #pos=232 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11045947477739193;  // std dev = 0.000, 186.000 (wgt'ed) examples reached here.  /* #neg=186 */
%   else return 0.1183018390241163;  // std dev = 12.979, 790.000 (wgt'ed) examples reached here.  /* #neg=453 #pos=337 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.10006380527393721;  // std dev = 1.09e-08, 216.000 (wgt'ed) examples reached here.  /* #neg=216 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06756274574689801;  // std dev = 13.263, 848.000 (wgt'ed) examples reached here.  /* #neg=511 #pos=337 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09140663051142041;  // std dev = 7.74e-08, 206.000 (wgt'ed) examples reached here.  /* #neg=206 */
%   else return 0.07367118366787806;  // std dev = 12.955, 808.000 (wgt'ed) examples reached here.  /* #neg=471 #pos=337 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09047030187134311;  // std dev = 5.990, 395.000 (wgt'ed) examples reached here.  /* #neg=248 #pos=147 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0188649344398254;  // std dev = 11.588, 648.000 (wgt'ed) examples reached here.  /* #neg=458 #pos=190 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.09132889679717394;  // std dev = 0.000, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06974508665551435;  // std dev = 12.726, 776.000 (wgt'ed) examples reached here.  /* #neg=439 #pos=337 */
Inference time using transfer learning 1.026893138885498
Parameter learned model CLL:-0.331484 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [3.825, 17, 105], 'true,false,false,false': [1.673, 3, 42], 'false': [12.134, 654, 190]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.09e-08, 196, 0], 'false': [13.548, 482, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.21e-07, 208, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.329, 453, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 226, 0], 'false': [13.243, 452, 337]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [3.825, 17, 105], 'true,false': [0.0, 0, 0], 'false': [0.412, 655, 232]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 186, 0], 'false': [12.979, 453, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [1.09e-08, 216, 0], 'true,false,false': [0.0, 0, 0], 'false': [13.263, 511, 337]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.74e-08, 206, 0], 'false': [12.955, 471, 337]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [5.99, 248, 147], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.588, 458, 190]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 185, 0], 'true,false': [0.0, 0, 0], 'false': [12.726, 439, 337]}]
{'': [0.10541790670157236, 0.17444015183845873], 'true': [nan, 0.10541790670157236], 'true,false': [nan, 0.10541790670157236], 'true,false,false': [0.1199274388605242, 0.062222222222223345]}
{'': [1.1781958628675131e-16, 0.22411346007687954], 'true': [nan, 1.1781958628675131e-16], 'true,false': [nan, 1.1781958628675131e-16]}
{'': [7.045646117813493e-17, 0.2248875951080982], 'true': [nan, 7.045646117813493e-17], 'true,false': [nan, 7.045646117813493e-17], 'true,false,false': [7.045646117813493e-17, nan]}
{'': [-1.3558475875953238e-16, 0.22229420793580412], 'true': [nan, -1.3558475875953238e-16], 'true,false': [nan, -1.3558475875953238e-16]}
{'': [0.11992743886052155, 0.17013534591202759], 'true': [0.11992743886052155, nan], 'true,true': [nan, 0.11992743886052155], 'true,true,false': [nan, 0.11992743886052155]}
{'': [-4.5363951543823603e-17, 0.2132477938025897], 'true': [nan, -4.5363951543823603e-17], 'true,false': [nan, -4.5363951543823603e-17], 'true,false,false': [nan, -4.5363951543823603e-17]}
{'': [1.192461767189983e-16, 0.20745029587041355], 'true': [nan, 1.192461767189983e-16], 'true,false': [1.192461767189983e-16, nan]}
{'': [2.910293365522255e-17, 0.20771250169529615], 'true': [nan, 2.910293365522255e-17], 'true,false': [nan, 2.910293365522255e-17], 'true,false,false': [nan, 2.910293365522255e-17]}
{'': [0.09084496130902402, 0.20723784484072813], 'false': [nan, 0.2072378448407255], 'true': [0.09084496130902402, nan], 'true,true': [nan, 0.09084496130902402], 'true,true,false': [nan, 0.09084496130902402]}
{'': [-9.601928861622976e-18, 0.2087005752095669], 'true': [-9.601928861622976e-18, nan], 'true,true': [nan, -9.601928861622976e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 3.216343402862549
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 6.14e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.14185106490048852;  // std dev = 0.000, 608.000 (wgt'ed) examples reached here.  /* #neg=608 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.12544463852839172;  // std dev = 0.000, 216.000 (wgt'ed) examples reached here.  /* #neg=216 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.12544463852839216;  // std dev = 0.000, 416.000 (wgt'ed) examples reached here.  /* #neg=416 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360679;  // std dev = 0.000, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.1123163781936063;  // std dev = 3.65e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.11231637819360667;  // std dev = 0.000, 386.000 (wgt'ed) examples reached here.  /* #neg=386 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783655;  // std dev = 0.000, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10159632948783631;  // std dev = 1.83e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return -0.10159632948783648;  // std dev = 0.000, 395.000 (wgt'ed) examples reached here.  /* #neg=395 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.09269127618926157;  // std dev = 0.000, 566.000 (wgt'ed) examples reached here.  /* #neg=566 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839675;  // std dev = 0.000, 192.000 (wgt'ed) examples reached here.  /* #neg=192 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.08518475138839675;  // std dev = 5.58e-08, 411.000 (wgt'ed) examples reached here.  /* #neg=411 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109144;  // std dev = 5.96e-08, 200.000 (wgt'ed) examples reached here.  /* #neg=200 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return -0.07877675473109139;  // std dev = 7.88e-08, 431.000 (wgt'ed) examples reached here.  /* #neg=431 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.0732462257633366;  // std dev = 1.32e-07, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.07324622576333718;  // std dev = 0.000, 422.000 (wgt'ed) examples reached here.  /* #neg=422 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0684269778442027;  // std dev = 1.39e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.06842697784420257;  // std dev = 5.16e-08, 593.000 (wgt'ed) examples reached here.  /* #neg=593 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202625;  // std dev = 0.000, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080119;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.06419184008202596;  // std dev = 1.17e-07, 420.000 (wgt'ed) examples reached here.  /* #neg=420 */
Inference time using transfer learning 0.7849633693695068
Refined model CLL: -0.064087


******************************************
Best model found
******************************************
Results 

CLL : -0.063719 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.216343402862549 

Total Inference Time : 1.5347492694854736 

Total revision time: 11.186156272888184
Best scored revision CLL: -0.064087


Results 

CLL : -0.063719 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 11.20186471939087 

Total Inference Time : 1.5347492694854736 

Starting experiments for fasttext using softcosine 

Run: 1

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos examples: 56
Target test neg examples: 3308

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 1.746098279953003
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6660585396192835;  // std dev = 5.241, 177.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=143 */
%   else return 0.08632848622170536;  // std dev = 11.885, 802.000 (wgt'ed) examples reached here.  /* #neg=619 #pos=183 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15268810974639788;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return 0.1829980250682112;  // std dev = 14.038, 926.000 (wgt'ed) examples reached here.  /* #neg=600 #pos=326 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, F) )
%   | | | then return -0.13396350663255832;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1689299515314891;  // std dev = 13.840, 892.000 (wgt'ed) examples reached here.  /* #neg=566 #pos=326 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11916899960270348;  // std dev = 3.73e-09, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return 0.11908065828195866;  // std dev = 14.044, 952.000 (wgt'ed) examples reached here.  /* #neg=626 #pos=326 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08770564389064439;  // std dev = 0.448, 992.000 (wgt'ed) examples reached here.  /* #neg=666 #pos=326 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D), genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.23958478901865912;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return 0.09645999804340875;  // std dev = 13.809, 918.000 (wgt'ed) examples reached here.  /* #neg=592 #pos=326 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, E) )
%   | | then return -0.19868363846908857;  // std dev = 1.29e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0837269755632326;  // std dev = 13.725, 903.000 (wgt'ed) examples reached here.  /* #neg=577 #pos=326 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(A, C), genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1689305526900787;  // std dev = 1.05e-07, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else return 0.05827576602533654;  // std dev = 13.783, 930.000 (wgt'ed) examples reached here.  /* #neg=604 #pos=326 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, D) )
%   | | | then return 0.4241123183401705;  // std dev = 3.890, 113.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=95 */
%   | | | else return -0.09946456185304593;  // std dev = 5.320, 285.000 (wgt'ed) examples reached here.  /* #neg=237 #pos=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B), genre(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.024647192420570677;  // std dev = 11.201, 604.000 (wgt'ed) examples reached here.  /* #neg=421 #pos=183 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E), genre(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1345142490205874;  // std dev = 3.73e-09, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044429988104527876;  // std dev = 13.330, 905.000 (wgt'ed) examples reached here.  /* #neg=579 #pos=326 */
Inference time using transfer learning 1.0604066848754883
Parameter learned model CLL:-0.34554 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [5.241, 34, 143], 'false': [11.885, 619, 183]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 36, 0], 'false': [14.038, 600, 326]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'genre(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 42, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.84, 566, 326]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [3.73e-09, 23, 0], 'false': [14.044, 626, 326]}]
['workedunder(A, B)', {'': 'female(A), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.448, 666, 326]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(B, C)', 'true,false': 'genre(A, D), genre(B, D)', 'true,false,false': 'genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 67, 0], 'false': [13.809, 592, 326]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(A, C)', 'true,false': 'genre(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [1.29e-08, 76, 0], 'true,false,false': [0.0, 0, 0], 'false': [13.725, 577, 326]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(A, C), genre(B, C)', 'true,false': 'genre(B, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.05e-07, 77, 0], 'false': [13.783, 604, 326]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E)', 'true,true,false': 'genre(B, D)', 'false': 'female(B), genre(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [3.89, 18, 95], 'true,true,false,false': [5.32, 237, 48], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.201, 421, 183]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E), genre(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [3.73e-09, 66, 0], 'true,false': [0.0, 0, 0], 'false': [13.33, 579, 326]}]
{'': [0.1551916754444815, 0.17611364357186893], 'true': [nan, 0.1551916754444779], 'true,false': [nan, 0.1551916754444815], 'true,false,false': [nan, 0.1551916754444815]}
{'': [-1.850371707708594e-17, 0.21282429424845073], 'true': [nan, -1.850371707708594e-17], 'true,false': [nan, -1.850371707708594e-17]}
{'': [-1.850371707708594e-17, 0.2147434076883095], 'true': [nan, -1.850371707708594e-17], 'true,false': [nan, -1.850371707708594e-17], 'true,false,false': [-1.850371707708594e-17, nan]}
{'': [1.4481169886415085e-17, 0.20719124078685555], 'true': [nan, 1.4481169886415085e-17], 'true,false': [nan, 1.4481169886415085e-17]}
{'': [nan, 0.2008559489937195]}
{'': [0.0, 0.20772291930224263], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [1.6361181415528622e-16, 0.20859860798939267], 'true': [nan, 1.6361181415528622e-16], 'true,false': [1.6361181415528622e-16, nan]}
{'': [1.4418480839287747e-16, 0.20426269859509505], 'true': [nan, 1.4418480839287747e-16], 'true,false': [nan, 1.4418480839287747e-16], 'true,false,false': [nan, 1.4418480839287747e-16]}
{'': [0.16487551635637437, 0.20773133235265479], 'false': [nan, 0.207731332352653], 'true': [0.16487551635637437, nan], 'true,true': [nan, 0.16487551635637437], 'true,true,false': [0.13391808285691906, 0.09931820715625979]}
{'': [1.3457248783335231e-17, 0.19633065869541805], 'true': [1.3457248783335231e-17, nan], 'true,true': [nan, 1.3457248783335231e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- female(B), director(A).;true;true
2;;workedunder(A, B) :- female(B), director(A).;true;true
3;;workedunder(A, B) :- female(B), director(A).;true;true
5;;workedunder(A, B) :- female(B), female(A).;true;true
6;;workedunder(A, B) :- female(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), female(B).;true;true
9;;workedunder(A, B) :- female(A), female(B).;true;true


Refining candidate
***************************
Model training time 3.208127021789551
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1.05e-06, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048766;  // std dev = 5.58e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.14185106490048785;  // std dev = 0.000, 533.000 (wgt'ed) examples reached here.  /* #neg=533 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.12544463852839138;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return -0.12544463852839227;  // std dev = 0.000, 586.000 (wgt'ed) examples reached here.  /* #neg=586 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.11231637819360639;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.11231637819360626;  // std dev = 5.05e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.11231637819360567;  // std dev = 0.000, 587.000 (wgt'ed) examples reached here.  /* #neg=587 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.10159632948783634;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831163;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.10159632948783619;  // std dev = 4.83e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.10159632948783567;  // std dev = 3.00e-07, 517.000 (wgt'ed) examples reached here.  /* #neg=517 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.09269127618926168;  // std dev = 0.000, 587.000 (wgt'ed) examples reached here.  /* #neg=587 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.08518475138839678;  // std dev = 3.16e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948756;  // std dev = 3.86e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.08518475138839678;  // std dev = 1.43e-07, 562.000 (wgt'ed) examples reached here.  /* #neg=562 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.07877675473109162;  // std dev = 4.34e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.46e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.07877675473109196;  // std dev = 0.000, 496.000 (wgt'ed) examples reached here.  /* #neg=496 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1770964977452765;  // std dev = 2.76e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return -0.07324622576333721;  // std dev = 0.000, 500.000 (wgt'ed) examples reached here.  /* #neg=500 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.06842697784420267;  // std dev = 2.98e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return -0.06842697784420361;  // std dev = 0.000, 586.000 (wgt'ed) examples reached here.  /* #neg=586 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.06419184008202619;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080118;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.0641918400820256;  // std dev = 2.17e-07, 526.000 (wgt'ed) examples reached here.  /* #neg=526 */
Inference time using transfer learning 0.9096496105194092
Refined model CLL: -0.064216


******************************************
Best model found
******************************************
Results 

CLL : -0.063421 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.208127021789551 

Total Inference Time : 1.5013456344604492 

Total revision time: 8.191594362258911
Best scored revision CLL: -0.064216


Results 

CLL : -0.063421 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 8.231124639511108 

Total Inference Time : 1.5013456344604492 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos examples: 58
Target test neg examples: 3423

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 1.7054457664489746
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7056065622181535;  // std dev = 4.783, 177.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=150 */
%   else return 0.0716458676148482;  // std dev = 11.698, 815.000 (wgt'ed) examples reached here.  /* #neg=641 #pos=174 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15079822534534146;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return 0.18915862831827435;  // std dev = 13.844, 901.000 (wgt'ed) examples reached here.  /* #neg=577 #pos=324 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, F) )
%   | | | then return -0.1324862658209019;  // std dev = 1.83e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13265435465302217;  // std dev = 14.104, 982.000 (wgt'ed) examples reached here.  /* #neg=658 #pos=324 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11798634674459663;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return 0.12651694574289957;  // std dev = 13.866, 941.000 (wgt'ed) examples reached here.  /* #neg=617 #pos=324 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08972703124711127;  // std dev = 0.444, 994.000 (wgt'ed) examples reached here.  /* #neg=670 #pos=324 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D), genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.2332057909328886;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else return 0.11001521254310624;  // std dev = 13.537, 889.000 (wgt'ed) examples reached here.  /* #neg=565 #pos=324 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, E) )
%   | | then return -0.1941130167527593;  // std dev = 1.02e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10303964472228765;  // std dev = 13.342, 855.000 (wgt'ed) examples reached here.  /* #neg=531 #pos=324 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(A, C), genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1655339181452484;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else return 0.06485042004447884;  // std dev = 13.534, 896.000 (wgt'ed) examples reached here.  /* #neg=572 #pos=324 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, D) )
%   | | | then return 0.426304427098147;  // std dev = 3.817, 119.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=102 */
%   | | | else return -0.08361257606816487;  // std dev = 5.141, 267.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B), genre(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03504596693871469;  // std dev = 10.836, 552.000 (wgt'ed) examples reached here.  /* #neg=378 #pos=174 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E), genre(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.13391677586793993;  // std dev = 9.50e-09, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03820210552189353;  // std dev = 13.181, 888.000 (wgt'ed) examples reached here.  /* #neg=564 #pos=324 */
Inference time using transfer learning 0.9612669944763184
Parameter learned model CLL:-0.339385 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.783, 27, 150], 'false': [11.698, 641, 174]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 31, 0], 'false': [13.844, 577, 324]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'genre(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.83e-08, 33, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [14.104, 658, 324]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 33, 0], 'false': [13.866, 617, 324]}]
['workedunder(A, B)', {'': 'female(A), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.444, 670, 324]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(B, C)', 'true,false': 'genre(A, D), genre(B, D)', 'true,false,false': 'genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 101, 0], 'false': [13.537, 565, 324]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(A, C)', 'true,false': 'genre(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [1.02e-08, 95, 0], 'true,false,false': [0.0, 0, 0], 'false': [13.342, 531, 324]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(A, C), genre(B, C)', 'true,false': 'genre(B, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 110, 0], 'false': [13.534, 572, 324]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E)', 'true,true,false': 'genre(B, D)', 'false': 'female(B), genre(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [3.817, 17, 102], 'true,true,false,false': [5.141, 219, 48], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.836, 378, 174]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E), genre(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [9.5e-09, 104, 0], 'true,false': [0.0, 0, 0], 'false': [13.181, 564, 324]}]
{'': [0.12927319735708684, 0.16791599232187956], 'true': [nan, 0.1292731973570834], 'true,false': [nan, 0.12927319735708684], 'true,false,false': [nan, 0.12927319735708684]}
{'': [-1.4325458382260084e-17, 0.2126997949306235], 'true': [nan, -1.4325458382260084e-17], 'true,false': [nan, -1.4325458382260084e-17]}
{'': [1.0092936587501423e-17, 0.2025559139513022], 'true': [nan, 1.0092936587501423e-17], 'true,false': [nan, 1.0092936587501423e-17], 'true,false,false': [1.0092936587501423e-17, nan]}
{'': [-2.0185873175002847e-17, 0.20431425330454983], 'true': [nan, -2.0185873175002847e-17], 'true,false': [nan, -2.0185873175002847e-17]}
{'': [nan, 0.19688853004885595]}
{'': [-1.582892233128936e-16, 0.20612912575037048], 'true': [nan, -1.582892233128936e-16], 'true,false': [nan, -1.582892233128936e-16], 'true,false,false': [nan, -1.582892233128936e-16]}
{'': [1.0284171175475134e-16, 0.20818727734965672], 'true': [nan, 1.0284171175475134e-16], 'true,false': [1.0284171175475134e-16, nan]}
{'': [-4.4408920985006264e-17, 0.2044390576692822], 'true': [nan, -4.4408920985006264e-17], 'true,false': [nan, -4.4408920985006264e-17], 'true,false,false': [nan, -4.4408920985006264e-17]}
{'': [0.16168178882262382, 0.21270604236784862], 'false': [nan, 0.21270604236784993], 'true': [0.16168178882262382, nan], 'true,true': [nan, 0.16168178882262382], 'true,true,false': [0.12244897959183543, 0.09900740000719378]}
{'': [8.967185968126265e-17, 0.19564878208283043], 'true': [8.967185968126265e-17, nan], 'true,true': [nan, 8.967185968126265e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- female(B), director(A).;true;true
2;;workedunder(A, B) :- female(B), director(A).;true;true
3;;workedunder(A, B) :- female(B), director(A).;true;true
5;;workedunder(A, B) :- female(B), female(A).;true;true
6;;workedunder(A, B) :- female(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), female(B).;true;true
9;;workedunder(A, B) :- female(A), female(B).;true;true


Refining candidate
***************************
Model training time 3.2119579315185547
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1.04e-06, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048768;  // std dev = 5.37e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.1418510649004881;  // std dev = 0.000, 563.000 (wgt'ed) examples reached here.  /* #neg=563 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.12544463852839136;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.12544463852839227;  // std dev = 0.000, 550.000 (wgt'ed) examples reached here.  /* #neg=550 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.11231637819360639;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.11231637819360629;  // std dev = 3.80e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.11231637819360582;  // std dev = 0.000, 566.000 (wgt'ed) examples reached here.  /* #neg=566 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.10159632948783634;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831163;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.10159632948783623;  // std dev = 3.33e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.1015963294878354;  // std dev = 3.73e-07, 579.000 (wgt'ed) examples reached here.  /* #neg=579 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09269127618926101;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.09269127618926169;  // std dev = 0.000, 580.000 (wgt'ed) examples reached here.  /* #neg=580 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.08518475138839678;  // std dev = 4.08e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948756;  // std dev = 3.86e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.0851847513883968;  // std dev = 1.83e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return -0.08518475138839678;  // std dev = 1.32e-07, 489.000 (wgt'ed) examples reached here.  /* #neg=489 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.07877675473109157;  // std dev = 5.67e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return -0.07877675473109194;  // std dev = 0.000, 500.000 (wgt'ed) examples reached here.  /* #neg=500 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527653;  // std dev = 2.73e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.07324622576333704;  // std dev = 1.18e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return -0.07324622576333718;  // std dev = 0.000, 495.000 (wgt'ed) examples reached here.  /* #neg=495 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.06842697784420268;  // std dev = 1.49e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.06842697784420364;  // std dev = 0.000, 605.000 (wgt'ed) examples reached here.  /* #neg=605 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080118;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return -0.06419184008202564;  // std dev = 2.06e-07, 512.000 (wgt'ed) examples reached here.  /* #neg=512 */
Inference time using transfer learning 0.9660210609436035
Refined model CLL: -0.064225


******************************************
Best model found
******************************************
Results 

CLL : -0.063422 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.2119579315185547 

Total Inference Time : 1.5069105625152588 

Total revision time: 8.116587400436401
Best scored revision CLL: -0.064225


Results 

CLL : -0.063422 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 8.156117677688599 

Total Inference Time : 1.5069105625152588 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos examples: 178
Target test neg examples: 3543

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 1.5182077884674072
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8110901115701004;  // std dev = 1.952, 85.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=81 */
%   else return 0.087199214429121;  // std dev = 9.738, 537.000 (wgt'ed) examples reached here.  /* #neg=414 #pos=123 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15280079380025066;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0.18404694321120993;  // std dev = 10.998, 574.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=204 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, F) )
%   | | | then return -0.13405147726272007;  // std dev = 3.73e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14985648210166388;  // std dev = 11.013, 586.000 (wgt'ed) examples reached here.  /* #neg=382 #pos=204 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11923935366286316;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.13007815794709673;  // std dev = 10.912, 581.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=204 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08395326700169228;  // std dev = 0.442, 628.000 (wgt'ed) examples reached here.  /* #neg=424 #pos=204 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D), genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.2377842439916892;  // std dev = 7.88e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return 0.09981665302143884;  // std dev = 10.794, 568.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=204 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, E) )
%   | | then return -0.19739590477558144;  // std dev = 1.12e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10167903831458747;  // std dev = 10.576, 536.000 (wgt'ed) examples reached here.  /* #neg=332 #pos=204 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(A, C), genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.16797517407934828;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return 0.05901710208008609;  // std dev = 10.771, 568.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=204 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, D) )
%   | | | then return 0.4943606087751276;  // std dev = 1.949, 79.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=75 */
%   | | | else return -0.1956581970537029;  // std dev = 2.014, 131.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B), genre(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.01827560674255968;  // std dev = 9.221, 407.000 (wgt'ed) examples reached here.  /* #neg=284 #pos=123 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E), genre(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12306939748797176;  // std dev = 5.74e-09, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04002727650181511;  // std dev = 10.262, 557.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=204 */
Inference time using transfer learning 1.0852618217468262
Parameter learned model CLL:-0.326791 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.952, 4, 81], 'false': [9.738, 414, 123]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 7, 0], 'false': [10.998, 370, 204]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'genre(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [3.73e-09, 6, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [11.013, 382, 204]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 4, 0], 'false': [10.912, 377, 204]}]
['workedunder(A, B)', {'': 'female(A), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.442, 424, 204]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(B, C)', 'true,false': 'genre(A, D), genre(B, D)', 'true,false,false': 'genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.88e-08, 49, 0], 'false': [10.794, 364, 204]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(A, C)', 'true,false': 'genre(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [1.12e-08, 63, 0], 'true,false,false': [0.0, 0, 0], 'false': [10.576, 332, 204]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(A, C), genre(B, C)', 'true,false': 'genre(B, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 55, 0], 'false': [10.771, 364, 204]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E)', 'true,true,false': 'genre(B, D)', 'false': 'female(B), genre(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [1.949, 4, 75], 'true,true,false,false': [2.014, 125, 6], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.221, 284, 123]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E), genre(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [5.74e-09, 55, 0], 'true,false': [0.0, 0, 0], 'false': [10.262, 353, 204]}]
{'': [0.04484429065743912, 0.17658624886863744], 'true': [nan, 0.044844290657438536], 'true,false': [nan, 0.04484429065743912], 'true,false,false': [nan, 0.04484429065743912]}
{'': [-7.93016446160826e-18, 0.21073428088042986], 'true': [nan, -7.93016446160826e-18], 'true,false': [nan, -7.93016446160826e-18]}
{'': [2.3129646346357427e-18, 0.20698297929398166], 'true': [nan, 2.3129646346357427e-18], 'true,false': [nan, 2.3129646346357427e-18], 'true,false,false': [2.3129646346357427e-18, nan]}
{'': [0.0, 0.20495111140832992], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [nan, 0.19560406017548587]}
{'': [1.2688263138573217e-16, 0.20512491648523973], 'true': [nan, 1.2688263138573217e-16], 'true,false': [nan, 1.2688263138573217e-16], 'true,false,false': [nan, 1.2688263138573217e-16]}
{'': [1.1278456123176193e-16, 0.20867019770093828], 'true': [nan, 1.1278456123176193e-16], 'true,false': [1.1278456123176193e-16, nan]}
{'': [-6.45947941600091e-17, 0.20424582281775058], 'true': [nan, -6.45947941600091e-17], 'true,false': [nan, -6.45947941600091e-17], 'true,false,false': [nan, -6.45947941600091e-17]}
{'': [0.14913736250029574, 0.20891481723533706], 'false': [nan, 0.20891481723533567], 'true': [0.14913736250029574, nan], 'true,true': [nan, 0.14913736250029574], 'true,true,false': [0.04806921967633395, 0.030972804451889543]}
{'': [3.229739708000455e-17, 0.18904797742924717], 'true': [3.229739708000455e-17, nan], 'true,true': [nan, 3.229739708000455e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- female(B), director(A).;true;true
2;;workedunder(A, B) :- female(B), director(A).;true;true
3;;workedunder(A, B) :- female(B), director(A).;true;true
5;;workedunder(A, B) :- female(B), female(A).;true;true
6;;workedunder(A, B) :- female(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), female(B).;true;true
9;;workedunder(A, B) :- female(A), female(B).;true;true


Refining candidate
***************************
Model training time 2.426478385925293
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.14185106490048754;  // std dev = 2.27e-07, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.1254446385283914;  // std dev = 7.45e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.7194734122109571;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return -0.12544463852839227;  // std dev = 0.000, 421.000 (wgt'ed) examples reached here.  /* #neg=421 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462833;  // std dev = 6.36e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.11231637819360636;  // std dev = 0.000, 394.000 (wgt'ed) examples reached here.  /* #neg=394 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.10159632948783634;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831014;  // std dev = 2.53e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.10159632948783631;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return -0.10159632948783644;  // std dev = 0.000, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601491;  // std dev = 4.00e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.09269127618926094;  // std dev = 9.13e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.09269127618926065;  // std dev = 1.79e-07, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.08518475138839679;  // std dev = 1.05e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948845;  // std dev = 4.46e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.08518475138839685;  // std dev = 1.05e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.08518475138839679;  // std dev = 1.03e-07, 321.000 (wgt'ed) examples reached here.  /* #neg=321 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.07877675473109175;  // std dev = 1.05e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.20975771563253498;  // std dev = 3.04e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.07877675473109176;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return -0.07877675473109143;  // std dev = 3.65e-08, 319.000 (wgt'ed) examples reached here.  /* #neg=319 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527791;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.07324622576333704;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.07324622576333707;  // std dev = 8.02e-08, 329.000 (wgt'ed) examples reached here.  /* #neg=329 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367166;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.06842697784420276;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.06842697784420332;  // std dev = 0.000, 386.000 (wgt'ed) examples reached here.  /* #neg=386 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.06419184008202615;  // std dev = 9.13e-09, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.13400703000801098;  // std dev = 1.38e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return -0.06419184008202598;  // std dev = 1.13e-07, 326.000 (wgt'ed) examples reached here.  /* #neg=326 */
Inference time using transfer learning 0.9862790107727051
Refined model CLL: -0.063555


******************************************
Best model found
******************************************
Results 

CLL : -0.065435 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.426478385925293 

Total Inference Time : 1.3365612030029297 

Total revision time: 7.040625095367432
Best scored revision CLL: -0.063555


Results 

CLL : -0.065435 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 7.080155372619629 

Total Inference Time : 1.3365612030029297 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos examples: 45
Target test neg examples: 1891

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 1.8488047122955322
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6735335504841247;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=159 */
%   else return 0.06805459547686914;  // std dev = 11.859, 848.000 (wgt'ed) examples reached here.  /* #neg=670 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15033891029570154;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return 0.19105383299443726;  // std dev = 14.136, 934.000 (wgt'ed) examples reached here.  /* #neg=597 #pos=337 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, F) )
%   | | | then return -0.1321267126977873;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14825040257049302;  // std dev = 14.238, 976.000 (wgt'ed) examples reached here.  /* #neg=639 #pos=337 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11769814037208183;  // std dev = 2.28e-09, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return 0.12828879990116837;  // std dev = 14.142, 964.000 (wgt'ed) examples reached here.  /* #neg=627 #pos=337 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08952835021622331;  // std dev = 0.444, 1,028.000 (wgt'ed) examples reached here.  /* #neg=691 #pos=337 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D), genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.2359841273603784;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else return 0.10124474800109022;  // std dev = 13.908, 942.000 (wgt'ed) examples reached here.  /* #neg=605 #pos=337 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, E) )
%   | | then return -0.19610662178531746;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08767582205670665;  // std dev = 13.812, 927.000 (wgt'ed) examples reached here.  /* #neg=590 #pos=337 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(A, C), genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.16701739819152894;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else return 0.06695097027189637;  // std dev = 13.818, 937.000 (wgt'ed) examples reached here.  /* #neg=600 #pos=337 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, D) )
%   | | | then return 0.4250611258725546;  // std dev = 4.117, 131.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=111 */
%   | | | else return -0.07747761209079197;  // std dev = 5.137, 269.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B), genre(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.015430564377179684;  // std dev = 11.117, 611.000 (wgt'ed) examples reached here.  /* #neg=433 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E), genre(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.13570745784801777;  // std dev = 8.74e-09, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03662616981342557;  // std dev = 13.479, 946.000 (wgt'ed) examples reached here.  /* #neg=609 #pos=337 */
Inference time using transfer learning 0.8012573719024658
Parameter learned model CLL:-0.332755 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [5.418, 36, 159], 'false': [11.859, 670, 178]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 37, 0], 'false': [14.136, 597, 337]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'genre(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 36, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [14.238, 639, 337]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.28e-09, 48, 0], 'false': [14.142, 627, 337]}]
['workedunder(A, B)', {'': 'female(A), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.444, 691, 337]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(B, C)', 'true,false': 'genre(A, D), genre(B, D)', 'true,false,false': 'genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 105, 0], 'false': [13.908, 605, 337]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(A, C)', 'true,false': 'genre(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 95, 0], 'true,false,false': [0.0, 0, 0], 'false': [13.812, 590, 337]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(A, C), genre(B, C)', 'true,false': 'genre(B, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 98, 0], 'false': [13.818, 600, 337]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E)', 'true,true,false': 'genre(B, D)', 'false': 'female(B), genre(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [4.117, 20, 111], 'true,true,false,false': [5.137, 221, 48], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.117, 433, 178]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E), genre(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [8.74e-09, 91, 0], 'true,false': [0.0, 0, 0], 'false': [13.479, 609, 337]}]
{'': [0.15053254437870403, 0.1658452741189041], 'true': [nan, 0.15053254437870067], 'true,false': [nan, 0.15053254437870403], 'true,false,false': [nan, 0.15053254437870403]}
{'': [-6.00120553851436e-18, 0.21393352538821628], 'true': [nan, -6.00120553851436e-18], 'true,false': [nan, -6.00120553851436e-18]}
{'': [-1.850371707708594e-17, 0.20771161340199903], 'true': [nan, -1.850371707708594e-17], 'true,false': [nan, -1.850371707708594e-17], 'true,false,false': [-1.850371707708594e-17, nan]}
{'': [4.625929269271485e-18, 0.20747749842432026], 'true': [nan, 4.625929269271485e-18], 'true,false': [nan, 4.625929269271485e-18]}
{'': [nan, 0.19755899718784925]}
{'': [-6.767073673905717e-17, 0.20534424506859722], 'true': [nan, -6.767073673905717e-17], 'true,false': [nan, -6.767073673905717e-17], 'true,false,false': [nan, -6.767073673905717e-17]}
{'': [-4.674623261579606e-17, 0.20579091170146627], 'true': [nan, -4.674623261579606e-17], 'true,false': [-4.674623261579606e-17, nan]}
{'': [-7.703588334133739e-17, 0.20377193880979735], 'true': [nan, -7.703588334133739e-17], 'true,false': [nan, -7.703588334133739e-17], 'true,false,false': [nan, -7.703588334133739e-17]}
{'': [0.16396281852260608, 0.20227856124591712], 'false': [nan, 0.2022785612459167], 'true': [0.16396281852260608, nan], 'true,true': [nan, 0.16396281852260608], 'true,true,false': [0.12936309072897703, 0.098103952604668]}
{'': [7.564156871072495e-17, 0.1920614025510695], 'true': [7.564156871072495e-17, nan], 'true,true': [nan, 7.564156871072495e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- female(B), director(A).;true;true
2;;workedunder(A, B) :- female(B), director(A).;true;true
3;;workedunder(A, B) :- female(B), director(A).;true;true
5;;workedunder(A, B) :- female(B), female(A).;true;true
6;;workedunder(A, B) :- female(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), female(B).;true;true
9;;workedunder(A, B) :- female(A), female(B).;true;true


Refining candidate
***************************
Model training time 3.2039616107940674
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 4.08e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return -0.14185106490048857;  // std dev = 0.000, 619.000 (wgt'ed) examples reached here.  /* #neg=619 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.12544463852839136;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.1254446385283923;  // std dev = 0.000, 598.000 (wgt'ed) examples reached here.  /* #neg=598 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.1123163781936062;  // std dev = 2.98e-08, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.11231637819360632;  // std dev = 3.16e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.11231637819360567;  // std dev = 0.000, 587.000 (wgt'ed) examples reached here.  /* #neg=587 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.10159632948783633;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10159632948783624;  // std dev = 2.79e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.10159632948783531;  // std dev = 3.92e-07, 608.000 (wgt'ed) examples reached here.  /* #neg=608 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926103;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.09269127618926187;  // std dev = 0.000, 646.000 (wgt'ed) examples reached here.  /* #neg=646 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.08518475138839678;  // std dev = 3.94e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.08518475138839678;  // std dev = 1.37e-07, 533.000 (wgt'ed) examples reached here.  /* #neg=533 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.07877675473109158;  // std dev = 4.83e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return -0.07877675473109215;  // std dev = 0.000, 534.000 (wgt'ed) examples reached here.  /* #neg=534 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return -0.07324622576333716;  // std dev = 2.11e-08, 474.000 (wgt'ed) examples reached here.  /* #neg=474 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0684269778442027;  // std dev = 1.67e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.06842697784420364;  // std dev = 0.000, 598.000 (wgt'ed) examples reached here.  /* #neg=598 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.06419184008202619;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080119;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.06419184008202561;  // std dev = 2.10e-07, 517.000 (wgt'ed) examples reached here.  /* #neg=517 */
Inference time using transfer learning 0.8064868450164795
Refined model CLL: -0.064062


******************************************
Best model found
******************************************
Results 

CLL : -0.063847 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.2039616107940674 

Total Inference Time : 1.5724570751190186 

Total revision time: 8.568319082260132
Best scored revision CLL: -0.064062


Results 

CLL : -0.063847 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 8.607849359512329 

Total Inference Time : 1.5724570751190186 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos examples: 45
Target test neg examples: 2071

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 1.921374797821045
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7177980579065271;  // std dev = 4.542, 171.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=147 */
%   else return 0.08624017159410854;  // std dev = 12.110, 833.000 (wgt'ed) examples reached here.  /* #neg=643 #pos=190 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15267668444039986;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return 0.17439708162149573;  // std dev = 14.293, 980.000 (wgt'ed) examples reached here.  /* #neg=643 #pos=337 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, F) )
%   | | | then return -0.13395458639323896;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15250808347025743;  // std dev = 14.198, 968.000 (wgt'ed) examples reached here.  /* #neg=631 #pos=337 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11916186522580005;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return 0.11796087453056232;  // std dev = 14.274, 995.000 (wgt'ed) examples reached here.  /* #neg=658 #pos=337 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10000076035478218;  // std dev = 0.450, 994.000 (wgt'ed) examples reached here.  /* #neg=657 #pos=337 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D), genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.23705513286983657;  // std dev = 2.98e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else return 0.09421391952058687;  // std dev = 14.004, 960.000 (wgt'ed) examples reached here.  /* #neg=623 #pos=337 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, E) )
%   | | then return -0.1968739243767014;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08599015219703644;  // std dev = 13.885, 930.000 (wgt'ed) examples reached here.  /* #neg=593 #pos=337 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(A, C), genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1675875589566703;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else return 0.07395445138275496;  // std dev = 13.792, 920.000 (wgt'ed) examples reached here.  /* #neg=583 #pos=337 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, D) )
%   | | | then return 0.43098057944873686;  // std dev = 3.825, 122.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=105 */
%   | | | else return -0.09751291292838156;  // std dev = 4.852, 266.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=42 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B), genre(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.00253737038458422;  // std dev = 11.640, 686.000 (wgt'ed) examples reached here.  /* #neg=496 #pos=190 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E), genre(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.13378228298157652;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04815353140722211;  // std dev = 13.393, 930.000 (wgt'ed) examples reached here.  /* #neg=593 #pos=337 */
Inference time using transfer learning 0.8477082252502441
Parameter learned model CLL:-0.339756 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.542, 24, 147], 'false': [12.11, 643, 190]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 31, 0], 'false': [14.293, 643, 337]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'genre(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 32, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [14.198, 631, 337]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 39, 0], 'false': [14.274, 658, 337]}]
['workedunder(A, B)', {'': 'female(A), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.45, 657, 337]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(B, C)', 'true,false': 'genre(A, D), genre(B, D)', 'true,false,false': 'genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.98e-08, 89, 0], 'false': [14.004, 623, 337]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(A, C)', 'true,false': 'genre(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 78, 0], 'true,false,false': [0.0, 0, 0], 'false': [13.885, 593, 337]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(A, C), genre(B, C)', 'true,false': 'genre(B, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 98, 0], 'false': [13.792, 583, 337]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E)', 'true,true,false': 'genre(B, D)', 'false': 'female(B), genre(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [3.825, 17, 105], 'true,true,false,false': [4.852, 224, 42], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.64, 496, 190]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E), genre(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 80, 0], 'true,false': [0.0, 0, 0], 'false': [13.393, 593, 337]}]
{'': [0.12065250846414824, 0.17606562432896378], 'true': [nan, 0.12065250846414508], 'true,false': [nan, 0.12065250846414824], 'true,false,false': [nan, 0.12065250846414824]}
{'': [-2.5069552168955147e-17, 0.20846376030224212], 'true': [nan, -2.5069552168955147e-17], 'true,false': [nan, -2.5069552168955147e-17]}
{'': [-1.734723475976807e-17, 0.2082575427481221], 'true': [nan, -1.734723475976807e-17], 'true,false': [nan, -1.734723475976807e-17], 'true,false,false': [-1.734723475976807e-17, nan]}
{'': [-8.540177112501205e-18, 0.2047592188025648], 'true': [nan, -8.540177112501205e-18], 'true,false': [nan, -8.540177112501205e-18]}
{'': [nan, 0.20280427443586638]}
{'': [9.979532805619384e-18, 0.204281154441096], 'true': [nan, 9.979532805619384e-18], 'true,false': [nan, 9.979532805619384e-18], 'true,false,false': [nan, 9.979532805619384e-18]}
{'': [-7.401486830834377e-17, 0.20730616203351884], 'true': [nan, -7.401486830834377e-17], 'true,false': [-7.401486830834377e-17, nan]}
{'': [-2.718913529694261e-17, 0.20675436438675304], 'true': [nan, -2.718913529694261e-17], 'true,false': [nan, -2.718913529694261e-17], 'true,false,false': [nan, -2.718913529694261e-17]}
{'': [0.15859779496383147, 0.19751191870790746], 'false': [nan, 0.1975119187079081], 'true': [0.15859779496383147, nan], 'true,true': [nan, 0.15859779496383147], 'true,true,false': [0.11992743886052135, 0.08851099995836886]}
{'': [-1.6653345369377347e-17, 0.19286132217738167], 'true': [-1.6653345369377347e-17, nan], 'true,true': [nan, -1.6653345369377347e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- female(B), director(A).;true;true
2;;workedunder(A, B) :- female(B), director(A).;true;true
3;;workedunder(A, B) :- female(B), director(A).;true;true
5;;workedunder(A, B) :- female(B), female(A).;true;true
6;;workedunder(A, B) :- female(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), female(B).;true;true
9;;workedunder(A, B) :- female(A), female(B).;true;true


Refining candidate
***************************
Model training time 3.1791255474090576
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 5.96e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.14185106490048846;  // std dev = 0.000, 603.000 (wgt'ed) examples reached here.  /* #neg=603 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.12544463852839136;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.1254446385283915;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else return -0.1254446385283923;  // std dev = 0.000, 597.000 (wgt'ed) examples reached here.  /* #neg=597 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.1123163781936064;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.1123163781936063;  // std dev = 3.49e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.11231637819360592;  // std dev = 0.000, 541.000 (wgt'ed) examples reached here.  /* #neg=541 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.10159632948783633;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10159632948783626;  // std dev = 2.98e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return -0.10159632948783558;  // std dev = 3.20e-07, 528.000 (wgt'ed) examples reached here.  /* #neg=528 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.09269127618926201;  // std dev = 0.000, 689.000 (wgt'ed) examples reached here.  /* #neg=689 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.08518475138839678;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.08518475138839679;  // std dev = 1.67e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.08518475138839678;  // std dev = 1.40e-07, 570.000 (wgt'ed) examples reached here.  /* #neg=570 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.07877675473109154;  // std dev = 5.58e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07877675473109173;  // std dev = 2.36e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.07877675473109196;  // std dev = 0.000, 499.000 (wgt'ed) examples reached here.  /* #neg=499 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.07324622576333703;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 1.29e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return -0.07324622576333721;  // std dev = 0.000, 511.000 (wgt'ed) examples reached here.  /* #neg=511 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06842697784420271;  // std dev = 9.13e-09, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.06842697784420362;  // std dev = 0.000, 604.000 (wgt'ed) examples reached here.  /* #neg=604 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.06419184008202619;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080119;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.06419184008202551;  // std dev = 2.32e-07, 544.000 (wgt'ed) examples reached here.  /* #neg=544 */
Inference time using transfer learning 0.8096523284912109
Refined model CLL: -0.064087


******************************************
Best model found
******************************************
Results 

CLL : -0.063719 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.1791255474090576 

Total Inference Time : 1.540541648864746 

Total revision time: 8.512059688568115
Best scored revision CLL: -0.064087


Results 

CLL : -0.063719 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 8.551589965820312 

Total Inference Time : 1.540541648864746 

Run: 2

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos examples: 56
Target test neg examples: 3308

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 1.8055148124694824
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.684738530475232;  // std dev = 4.980, 173.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=143 */
%   else return 0.0744609918370993;  // std dev = 11.976, 846.000 (wgt'ed) examples reached here.  /* #neg=663 #pos=183 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15115907936035597;  // std dev = 4.56e-09, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return 0.16407727454232973;  // std dev = 14.239, 981.000 (wgt'ed) examples reached here.  /* #neg=655 #pos=326 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, F) )
%   | | | then return -0.13276859858286735;  // std dev = 2.36e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16800792407164053;  // std dev = 13.874, 903.000 (wgt'ed) examples reached here.  /* #neg=577 #pos=326 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11821255825104549;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return 0.12869176766984372;  // std dev = 13.969, 935.000 (wgt'ed) examples reached here.  /* #neg=609 #pos=326 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09007170940790096;  // std dev = 0.445, 1,001.000 (wgt'ed) examples reached here.  /* #neg=675 #pos=326 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D), genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.23600823127786055;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else return 0.10307683487669428;  // std dev = 13.711, 912.000 (wgt'ed) examples reached here.  /* #neg=586 #pos=326 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, E) )
%   | | then return -0.19612389790430781;  // std dev = 1.15e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07605540197609191;  // std dev = 13.747, 938.000 (wgt'ed) examples reached here.  /* #neg=612 #pos=326 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(A, C), genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1670302404821;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return 0.07694050690167151;  // std dev = 13.590, 886.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=326 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, D) )
%   | | | then return 0.45610966419103416;  // std dev = 3.382, 108.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=95 */
%   | | | else return -0.06466474867739255;  // std dev = 5.115, 227.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B), genre(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02336364273812394;  // std dev = 11.212, 609.000 (wgt'ed) examples reached here.  /* #neg=426 #pos=183 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E), genre(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.13722672541868464;  // std dev = 4.56e-09, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.024309062407197636;  // std dev = 13.495, 952.000 (wgt'ed) examples reached here.  /* #neg=626 #pos=326 */
Inference time using transfer learning 1.0364291667938232
Parameter learned model CLL:-0.342856 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.98, 30, 143], 'false': [11.976, 663, 183]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [4.56e-09, 27, 0], 'false': [14.239, 655, 326]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'genre(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [2.36e-08, 37, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.874, 577, 326]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 34, 0], 'false': [13.969, 609, 326]}]
['workedunder(A, B)', {'': 'female(A), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.445, 675, 326]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(B, C)', 'true,false': 'genre(A, D), genre(B, D)', 'true,false,false': 'genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 79, 0], 'false': [13.711, 586, 326]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(A, C)', 'true,false': 'genre(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [1.15e-08, 83, 0], 'true,false,false': [0.0, 0, 0], 'false': [13.747, 612, 326]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(A, C), genre(B, C)', 'true,false': 'genre(B, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 71, 0], 'false': [13.59, 560, 326]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E)', 'true,true,false': 'genre(B, D)', 'false': 'female(B), genre(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [3.382, 13, 95], 'true,true,false,false': [5.115, 179, 48], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.212, 426, 183]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E), genre(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [4.56e-09, 70, 0], 'true,false': [0.0, 0, 0], 'false': [13.495, 626, 326]}]
{'': [0.14333923619232697, 0.1695211508475434], 'true': [nan, 0.14333923619232342], 'true,false': [nan, 0.14333923619232697], 'true,false,false': [nan, 0.14333923619232697]}
{'': [2.05596856412066e-17, 0.20666518760259606], 'true': [nan, 2.05596856412066e-17], 'true,false': [nan, 2.05596856412066e-17]}
{'': [1.50030138462859e-17, 0.21317131497846803], 'true': [nan, 1.50030138462859e-17], 'true,false': [nan, 1.50030138462859e-17], 'true,false,false': [1.50030138462859e-17, nan]}
{'': [-2.938825653419532e-17, 0.2086896196621162], 'true': [nan, -2.938825653419532e-17], 'true,false': [nan, -2.938825653419532e-17]}
{'': [nan, 0.19768586678880165]}
{'': [-1.349131776759684e-16, 0.2061401355792678], 'true': [nan, -1.349131776759684e-16], 'true,false': [nan, -1.349131776759684e-16], 'true,false,false': [nan, -1.349131776759684e-16]}
{'': [1.284113377879699e-16, 0.20146495368138784], 'true': [nan, 1.284113377879699e-16], 'true,false': [1.284113377879699e-16, nan]}
{'': [-5.629299843169808e-17, 0.2084573503568585], 'true': [nan, -5.629299843169808e-17], 'true,false': [nan, -5.629299843169808e-17], 'true,false,false': [nan, -5.629299843169808e-17]}
{'': [0.17148781784626738, 0.20640124426118808], 'false': [nan, 0.20640124426118883], 'true': [0.17148781784626738, nan], 'true,true': [nan, 0.17148781784626738], 'true,true,false': [0.10588134430726949, 0.11526789785025544]}
{'': [1.9032394707859827e-17, 0.19129066997573885], 'true': [1.9032394707859827e-17, nan], 'true,true': [nan, 1.9032394707859827e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- female(B), director(A).;true;true
2;;workedunder(A, B) :- female(B), director(A).;true;true
3;;workedunder(A, B) :- female(B), director(A).;true;true
5;;workedunder(A, B) :- female(B), female(A).;true;true
6;;workedunder(A, B) :- female(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), female(B).;true;true
9;;workedunder(A, B) :- female(A), female(B).;true;true


Refining candidate
***************************
Model training time 3.081610679626465
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1.05e-06, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048766;  // std dev = 5.77e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.14185106490048824;  // std dev = 0.000, 584.000 (wgt'ed) examples reached here.  /* #neg=584 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.12544463852839136;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.12544463852839147;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return -0.1254446385283923;  // std dev = 0.000, 586.000 (wgt'ed) examples reached here.  /* #neg=586 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.1123163781936064;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.1123163781936063;  // std dev = 3.65e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.11231637819360593;  // std dev = 0.000, 541.000 (wgt'ed) examples reached here.  /* #neg=541 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.10159632948783631;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831163;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.10159632948783619;  // std dev = 4.83e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.10159632948783562;  // std dev = 3.08e-07, 526.000 (wgt'ed) examples reached here.  /* #neg=526 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.09269127618926175;  // std dev = 0.000, 612.000 (wgt'ed) examples reached here.  /* #neg=612 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.08518475138839678;  // std dev = 1.05e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948756;  // std dev = 3.86e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.08518475138839679;  // std dev = 1.67e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.08518475138839678;  // std dev = 1.30e-07, 508.000 (wgt'ed) examples reached here.  /* #neg=508 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.0787767547310916;  // std dev = 3.87e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.46e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return -0.07877675473109183;  // std dev = 0.000, 483.000 (wgt'ed) examples reached here.  /* #neg=483 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.07324622576333703;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1770964977452765;  // std dev = 2.76e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return -0.07324622576333718;  // std dev = 0.000, 497.000 (wgt'ed) examples reached here.  /* #neg=497 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.0684269778442027;  // std dev = 1.39e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.06842697784420362;  // std dev = 0.000, 610.000 (wgt'ed) examples reached here.  /* #neg=610 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.06419184008202618;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080118;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.06419184008202564;  // std dev = 2.04e-07, 507.000 (wgt'ed) examples reached here.  /* #neg=507 */
Inference time using transfer learning 0.9514670372009277
Refined model CLL: -0.064216


******************************************
Best model found
******************************************
Results 

CLL : -0.063421 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.081610679626465 

Total Inference Time : 1.4440875053405762 

Total revision time: 7.991422891616821
Best scored revision CLL: -0.064216


Results 

CLL : -0.063421 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 8.014222621917725 

Total Inference Time : 1.4440875053405762 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos examples: 58
Target test neg examples: 3423

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 1.7322678565979004
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7104216623722368;  // std dev = 4.707, 176.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=150 */
%   else return 0.06804037056392569;  // std dev = 11.725, 829.000 (wgt'ed) examples reached here.  /* #neg=655 #pos=174 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1503370932552943;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return 0.17971448608614515;  // std dev = 13.944, 927.000 (wgt'ed) examples reached here.  /* #neg=603 #pos=324 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, F) )
%   | | | then return -0.1321252899029122;  // std dev = 1.05e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14344288527711238;  // std dev = 14.001, 954.000 (wgt'ed) examples reached here.  /* #neg=630 #pos=324 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11769699962831782;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return 0.14731800415795251;  // std dev = 13.652, 880.000 (wgt'ed) examples reached here.  /* #neg=556 #pos=324 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09585464134462739;  // std dev = 0.446, 965.000 (wgt'ed) examples reached here.  /* #neg=641 #pos=324 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D), genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.23764586063004572;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else return 0.10775670394247583;  // std dev = 13.507, 880.000 (wgt'ed) examples reached here.  /* #neg=556 #pos=324 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, E) )
%   | | then return -0.19729685773146993;  // std dev = 1.26e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08577128581278039;  // std dev = 13.474, 885.000 (wgt'ed) examples reached here.  /* #neg=561 #pos=324 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(A, C), genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.16790163892437573;  // std dev = 7.60e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else return 0.08401685063941708;  // std dev = 13.268, 849.000 (wgt'ed) examples reached here.  /* #neg=525 #pos=324 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, D) )
%   | | | then return 0.4637735672672902;  // std dev = 3.151, 113.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=102 */
%   | | | else return -0.07302869255130759;  // std dev = 5.030, 242.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B), genre(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.01911083935674059;  // std dev = 10.915, 576.000 (wgt'ed) examples reached here.  /* #neg=402 #pos=174 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E), genre(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.13687367224922253;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04548929585997179;  // std dev = 12.995, 862.000 (wgt'ed) examples reached here.  /* #neg=538 #pos=324 */
Inference time using transfer learning 0.9468154907226562
Parameter learned model CLL:-0.34525 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.707, 26, 150], 'false': [11.725, 655, 174]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 36, 0], 'false': [13.944, 603, 324]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'genre(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.05e-08, 30, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [14.001, 630, 324]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 36, 0], 'false': [13.652, 556, 324]}]
['workedunder(A, B)', {'': 'female(A), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.446, 641, 324]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(B, C)', 'true,false': 'genre(A, D), genre(B, D)', 'true,false,false': 'genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 102, 0], 'false': [13.507, 556, 324]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(A, C)', 'true,false': 'genre(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [1.26e-08, 93, 0], 'true,false,false': [0.0, 0, 0], 'false': [13.474, 561, 324]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(A, C), genre(B, C)', 'true,false': 'genre(B, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.6e-08, 83, 0], 'false': [13.268, 525, 324]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E)', 'true,true,false': 'genre(B, D)', 'false': 'female(B), genre(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [3.151, 11, 102], 'true,true,false,false': [5.03, 194, 48], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.915, 402, 174]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E), genre(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 87, 0], 'true,false': [0.0, 0, 0], 'false': [12.995, 538, 324]}]
{'': [0.12590392561984026, 0.16583702078310295], 'true': [nan, 0.12590392561983646], 'true,false': [nan, 0.12590392561984026], 'true,false,false': [nan, 0.12590392561984026]}
{'': [-2.1587669923266933e-17, 0.20975051607337147], 'true': [nan, -2.1587669923266933e-17], 'true,false': [nan, -2.1587669923266933e-17]}
{'': [3.7007434154171884e-18, 0.20546898553046164], 'true': [nan, 3.7007434154171884e-18], 'true,false': [nan, 3.7007434154171884e-18], 'true,false,false': [3.7007434154171884e-18, nan]}
{'': [-1.696174065399545e-17, 0.21178479541502346], 'true': [nan, -1.696174065399545e-17], 'true,false': [nan, -1.696174065399545e-17]}
{'': [nan, 0.19889820246487602]}
{'': [-1.9156789444512506e-16, 0.20731894372822784], 'true': [nan, -1.9156789444512506e-16], 'true,false': [nan, -1.9156789444512506e-16], 'true,false,false': [nan, -1.9156789444512506e-16]}
{'': [1.5758004220486094e-16, 0.20514461610647314], 'true': [nan, 1.5758004220486094e-16], 'true,false': [1.5758004220486094e-16, nan]}
{'': [6.955614130181704e-17, 0.20735468595913334], 'true': [nan, 6.955614130181704e-17], 'true,false': [nan, 6.955614130181704e-17], 'true,false,false': [nan, 6.955614130181704e-17]}
{'': [0.16176570219749564, 0.2068344398133451], 'false': [nan, 0.20683443981334484], 'true': [0.16176570219749564, nan], 'true,true': [nan, 0.16176570219749564], 'true,true,false': [0.08786905787454093, 0.10454805226823313]}
{'': [-2.2970131543968756e-17, 0.195899341153326], 'true': [-2.2970131543968756e-17, nan], 'true,true': [nan, -2.2970131543968756e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- female(B), director(A).;true;true
2;;workedunder(A, B) :- female(B), director(A).;true;true
3;;workedunder(A, B) :- female(B), director(A).;true;true
5;;workedunder(A, B) :- female(B), female(A).;true;true
6;;workedunder(A, B) :- female(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), female(B).;true;true
9;;workedunder(A, B) :- female(A), female(B).;true;true


Refining candidate
***************************
Model training time 3.0771360397338867
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1.04e-06, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048766;  // std dev = 5.77e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.14185106490048838;  // std dev = 0.000, 592.000 (wgt'ed) examples reached here.  /* #neg=592 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.12544463852839136;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.12544463852839227;  // std dev = 0.000, 551.000 (wgt'ed) examples reached here.  /* #neg=551 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.1123163781936064;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.11231637819360632;  // std dev = 3.16e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.11231637819360585;  // std dev = 0.000, 561.000 (wgt'ed) examples reached here.  /* #neg=561 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.10159632948783633;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831163;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.10159632948783626;  // std dev = 2.58e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.10159632948783542;  // std dev = 3.58e-07, 561.000 (wgt'ed) examples reached here.  /* #neg=561 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09269127618926103;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.09269127618926173;  // std dev = 0.000, 601.000 (wgt'ed) examples reached here.  /* #neg=601 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.08518475138839678;  // std dev = 4.34e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948756;  // std dev = 3.86e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.08518475138839678;  // std dev = 1.30e-07, 503.000 (wgt'ed) examples reached here.  /* #neg=503 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.07877675473109157;  // std dev = 5.27e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return -0.07877675473109194;  // std dev = 0.000, 505.000 (wgt'ed) examples reached here.  /* #neg=505 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527653;  // std dev = 2.73e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.07324622576333704;  // std dev = 7.45e-09, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.07324622576333722;  // std dev = 0.000, 538.000 (wgt'ed) examples reached here.  /* #neg=538 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.0684269778442027;  // std dev = 1.97e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.06842697784420367;  // std dev = 0.000, 628.000 (wgt'ed) examples reached here.  /* #neg=628 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.06419184008202619;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080118;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return -0.0641918400820257;  // std dev = 1.90e-07, 497.000 (wgt'ed) examples reached here.  /* #neg=497 */
Inference time using transfer learning 0.9640510082244873
Refined model CLL: -0.064225


******************************************
Best model found
******************************************
Results 

CLL : -0.063422 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.0771360397338867 

Total Inference Time : 1.4382598400115967 

Total revision time: 8.012135982513428
Best scored revision CLL: -0.064225


Results 

CLL : -0.063422 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 8.034935712814331 

Total Inference Time : 1.4382598400115967 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos examples: 178
Target test neg examples: 3543

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 1.3668088912963867
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7581489350995118;  // std dev = 2.846, 90.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=81 */
%   else return 0.07818471327482515;  // std dev = 9.795, 559.000 (wgt'ed) examples reached here.  /* #neg=436 #pos=123 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1516374910004528;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0.16687744727962434;  // std dev = 11.196, 611.000 (wgt'ed) examples reached here.  /* #neg=407 #pos=204 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, F) )
%   | | | then return -0.13314271264889818;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16417690250801417;  // std dev = 10.981, 570.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=204 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11851217518488891;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.1377910719096029;  // std dev = 10.926, 572.000 (wgt'ed) examples reached here.  /* #neg=368 #pos=204 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10036514826755728;  // std dev = 0.451, 597.000 (wgt'ed) examples reached here.  /* #neg=393 #pos=204 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D), genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.2400136425409585;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return 0.09980547145269893;  // std dev = 10.827, 566.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=204 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, E) )
%   | | then return -0.1989900796770603;  // std dev = 6.45e-09, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11748142232948232;  // std dev = 10.468, 511.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=204 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(A, C), genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.169157721164634;  // std dev = 5.16e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return 0.05543303652381208;  // std dev = 10.799, 569.000 (wgt'ed) examples reached here.  /* #neg=365 #pos=204 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, D) )
%   | | | then return 0.46444848200550903;  // std dev = 2.530, 82.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=75 */
%   | | | else return -0.20446800241685553;  // std dev = 2.044, 128.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B), genre(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.022671680023322514;  // std dev = 9.160, 394.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=123 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E), genre(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12290170661115513;  // std dev = 3.48e-09, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0176444106655643;  // std dev = 10.505, 590.000 (wgt'ed) examples reached here.  /* #neg=386 #pos=204 */
Inference time using transfer learning 1.0436029434204102
Parameter learned model CLL:-0.327214 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.846, 9, 81], 'false': [9.795, 436, 123]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.63e-09, 9, 0], 'false': [11.196, 407, 204]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'genre(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 13, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [10.981, 366, 204]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 11, 0], 'false': [10.926, 368, 204]}]
['workedunder(A, B)', {'': 'female(A), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.451, 393, 204]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(B, C)', 'true,false': 'genre(A, D), genre(B, D)', 'true,false,false': 'genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 61, 0], 'false': [10.827, 362, 204]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(A, C)', 'true,false': 'genre(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [6.45e-09, 61, 0], 'true,false,false': [0.0, 0, 0], 'false': [10.468, 307, 204]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(A, C), genre(B, C)', 'true,false': 'genre(B, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [5.16e-08, 70, 0], 'false': [10.799, 365, 204]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E)', 'true,true,false': 'genre(B, D)', 'false': 'female(B), genre(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [2.53, 7, 75], 'true,true,false,false': [2.044, 122, 6], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.16, 271, 123]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E), genre(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [3.48e-09, 62, 0], 'true,false': [0.0, 0, 0], 'false': [10.505, 386, 204]}]
{'': [0.09000000000000025, 0.17162003449809782], 'true': [nan, 0.08999999999999898], 'true,false': [nan, 0.09000000000000025], 'true,false,false': [nan, 0.09000000000000025]}
{'': [6.1679056923619804e-18, 0.20516278871604313], 'true': [nan, 6.1679056923619804e-18], 'true,false': [nan, 6.1679056923619804e-18]}
{'': [-8.540177112501205e-18, 0.21153456554329506], 'true': [nan, -8.540177112501205e-18], 'true,false': [nan, -8.540177112501205e-18], 'true,false,false': [-8.540177112501205e-18, nan]}
{'': [-1.0092936587501423e-17, 0.2087116018834265], 'true': [nan, -1.0092936587501423e-17], 'true,false': [nan, -1.0092936587501423e-17]}
{'': [nan, 0.20297182346245132]}
{'': [-5.0961056868039973e-17, 0.20711243039575913], 'true': [nan, -5.0961056868039973e-17], 'true,false': [nan, -5.0961056868039973e-17], 'true,false,false': [nan, -5.0961056868039973e-17]}
{'': [4.3680905886891404e-17, 0.21443873880691922], 'true': [nan, 4.3680905886891404e-17], 'true,false': [4.3680905886891404e-17, nan]}
{'': [3.8064789415719653e-17, 0.20496981336490533], 'true': [nan, 3.8064789415719653e-17], 'true,false': [nan, 3.8064789415719653e-17], 'true,false,false': [nan, 3.8064789415719653e-17]}
{'': [0.15688368817557755, 0.2129434245358083], 'false': [nan, 0.2129434245358085], 'true': [0.15688368817557755, nan], 'true,true': [nan, 0.15688368817557755], 'true,true,false': [0.07807852468768642, 0.03264996233585552]}
{'': [1.2534776084477573e-17, 0.18703821081388], 'true': [1.2534776084477573e-17, nan], 'true,true': [nan, 1.2534776084477573e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- female(B), director(A).;true;true
2;;workedunder(A, B) :- female(B), director(A).;true;true
3;;workedunder(A, B) :- female(B), director(A).;true;true
5;;workedunder(A, B) :- female(B), female(A).;true;true
6;;workedunder(A, B) :- female(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), female(B).;true;true
9;;workedunder(A, B) :- female(A), female(B).;true;true


Refining candidate
***************************
Model training time 2.394286632537842
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048743;  // std dev = 2.70e-07, 376.000 (wgt'ed) examples reached here.  /* #neg=376 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | else return 0.8500844189704783;  // std dev = 0.089, 124.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=123 */
%   | else return -0.1418510649004877;  // std dev = 2.36e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.1254446385283914;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.7204530638945171;  // std dev = 0.011, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.12544463852839224;  // std dev = 0.000, 395.000 (wgt'ed) examples reached here.  /* #neg=395 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.11231637819360642;  // std dev = 3.73e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5563248053803858;  // std dev = 0.014, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.1126853877458226;  // std dev = 0.142, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.10159632948783634;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41822526995667636;  // std dev = 0.014, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.10159632948783634;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.10188869279278304;  // std dev = 0.132, 405.000 (wgt'ed) examples reached here.  /* #neg=405 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32119469994264904;  // std dev = 0.012, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.09269127618926104;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.09297007191442734;  // std dev = 0.123, 370.000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.08511151420773425;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( actor(B) )
%   | then return -0.08511333039282744;  // std dev = 0.000168, 312.000 (wgt'ed) examples reached here.  /* #neg=312 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.25550188403126994;  // std dev = 0.011, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.08518475138839685;  // std dev = 1.05e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.07871386364170391;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.20999066009575684;  // std dev = 0.009, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.07977135604984009;  // std dev = 0.234, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.0731916652532224;  // std dev = 2.79e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17726740682680217;  // std dev = 0.008, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.0731206428087886;  // std dev = 0.000109, 323.000 (wgt'ed) examples reached here.  /* #neg=323 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06832598904681769;  // std dev = 0.000438, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15287354655775204;  // std dev = 0.007, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.06415289542602796;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.13410830152990302;  // std dev = 0.007, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.0641918400820262;  // std dev = 6.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return -0.06409479379873809;  // std dev = 0.000131, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
Inference time using transfer learning 1.0097858905792236
Refined model CLL: -0.063739


******************************************
Best model found
******************************************
Results 

CLL : -0.071155 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.394286632537842 

Total Inference Time : 1.4886069297790527 

Total revision time: 6.900940179824829
Best scored revision CLL: -0.063739


Results 

CLL : -0.071155 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 6.923739910125732 

Total Inference Time : 1.4886069297790527 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos examples: 45
Target test neg examples: 1891

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 1.7962262630462646
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.731775308725883;  // std dev = 4.483, 182.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=159 */
%   else return 0.06780735677206659;  // std dev = 11.861, 849.000 (wgt'ed) examples reached here.  /* #neg=671 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15030733146516032;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return 0.17421326807851586;  // std dev = 14.227, 979.000 (wgt'ed) examples reached here.  /* #neg=642 #pos=337 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, F) )
%   | | | then return -0.13210198510481105;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15359331058757747;  // std dev = 14.130, 960.000 (wgt'ed) examples reached here.  /* #neg=623 #pos=337 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11767831440155199;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return 0.11398611288705289;  // std dev = 14.236, 1,006.000 (wgt'ed) examples reached here.  /* #neg=669 #pos=337 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09045490439889446;  // std dev = 0.442, 1,032.000 (wgt'ed) examples reached here.  /* #neg=695 #pos=337 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D), genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.23148499242935222;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else return 0.11420271067685803;  // std dev = 13.733, 909.000 (wgt'ed) examples reached here.  /* #neg=572 #pos=337 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, E) )
%   | | then return -0.19287596526896744;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09506313784107538;  // std dev = 13.647, 907.000 (wgt'ed) examples reached here.  /* #neg=570 #pos=337 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(A, C), genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.16461187527596227;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else return 0.0816428608631396;  // std dev = 13.546, 894.000 (wgt'ed) examples reached here.  /* #neg=557 #pos=337 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, D) )
%   | | | then return 0.45612358305316714;  // std dev = 3.411, 124.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=111 */
%   | | | else return -0.09429585306672374;  // std dev = 5.133, 275.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B), genre(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.024456310301894504;  // std dev = 11.035, 585.000 (wgt'ed) examples reached here.  /* #neg=407 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E), genre(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.13202017341512692;  // std dev = 1.00e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03598081229452422;  // std dev = 13.340, 926.000 (wgt'ed) examples reached here.  /* #neg=589 #pos=337 */
Inference time using transfer learning 0.8281786441802979
Parameter learned model CLL:-0.336135 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.483, 23, 159], 'false': [11.861, 671, 178]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 23, 0], 'false': [14.227, 642, 337]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'genre(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 30, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [14.13, 623, 337]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 31, 0], 'false': [14.236, 669, 337]}]
['workedunder(A, B)', {'': 'female(A), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.442, 695, 337]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(B, C)', 'true,false': 'genre(A, D), genre(B, D)', 'true,false,false': 'genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 90, 0], 'false': [13.733, 572, 337]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(A, C)', 'true,false': 'genre(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 110, 0], 'true,false,false': [0.0, 0, 0], 'false': [13.647, 570, 337]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(A, C), genre(B, C)', 'true,false': 'genre(B, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 107, 0], 'false': [13.546, 557, 337]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E)', 'true,true,false': 'genre(B, D)', 'false': 'female(B), genre(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [3.411, 13, 111], 'true,true,false,false': [5.133, 227, 48], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.035, 407, 178]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E), genre(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [1e-08, 100, 0], 'true,false': [0.0, 0, 0], 'false': [13.34, 589, 337]}]
{'': [0.11040333293081142, 0.16570176789432922], 'true': [nan, 0.11040333293080767], 'true,false': [nan, 0.11040333293081142], 'true,false,false': [nan, 0.11040333293081142]}
{'': [-1.4481169886415085e-17, 0.2067460453403728], 'true': [nan, -1.4481169886415085e-17], 'true,false': [nan, -1.4481169886415085e-17]}
{'': [-1.850371707708594e-17, 0.20796159272408313], 'true': [nan, -1.850371707708594e-17], 'true,false': [nan, -1.850371707708594e-17], 'true,false,false': [-1.850371707708594e-17, nan]}
{'': [-2.1488187573390126e-17, 0.20144349842726117], 'true': [nan, -2.1488187573390126e-17], 'true,false': [nan, -2.1488187573390126e-17]}
{'': [nan, 0.195393386155821]}
{'': [-9.86864910777917e-18, 0.20747973990680996], 'true': [nan, -9.86864910777917e-18], 'true,false': [nan, -9.86864910777917e-18], 'true,false,false': [nan, -9.86864910777917e-18]}
{'': [-1.291895883200182e-16, 0.2053465582379383], 'true': [nan, -1.291895883200182e-16], 'true,false': [-1.291895883200182e-16, nan]}
{'': [-1.7431539078226756e-16, 0.2052443840705887], 'true': [nan, -1.7431539078226756e-16], 'true,false': [nan, -1.7431539078226756e-16], 'true,false,false': [nan, -1.7431539078226756e-16]}
{'': [0.16008044666159676, 0.20817343526309512], 'false': [nan, 0.20817343526309523], 'true': [0.16008044666159676, nan], 'true,true': [nan, 0.16008044666159676], 'true,true,false': [0.09384755463059327, 0.0957919938766315]}
{'': [9.769962616701378e-17, 0.19218197142766272], 'true': [9.769962616701378e-17, nan], 'true,true': [nan, 9.769962616701378e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- female(B), director(A).;true;true
2;;workedunder(A, B) :- female(B), director(A).;true;true
3;;workedunder(A, B) :- female(B), director(A).;true;true
5;;workedunder(A, B) :- female(B), female(A).;true;true
6;;workedunder(A, B) :- female(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), female(B).;true;true
9;;workedunder(A, B) :- female(A), female(B).;true;true


Refining candidate
***************************
Model training time 3.3520052433013916
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 4.59e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.14185106490048838;  // std dev = 0.000, 603.000 (wgt'ed) examples reached here.  /* #neg=603 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.12544463852839136;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.1254446385283923;  // std dev = 0.000, 596.000 (wgt'ed) examples reached here.  /* #neg=596 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.1123163781936064;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.11231637819360629;  // std dev = 4.08e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.11231637819360575;  // std dev = 0.000, 534.000 (wgt'ed) examples reached here.  /* #neg=534 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.10159632948783633;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.1015963294878362;  // std dev = 4.21e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.10159632948783544;  // std dev = 3.59e-07, 557.000 (wgt'ed) examples reached here.  /* #neg=557 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.09269127618926194;  // std dev = 0.000, 649.000 (wgt'ed) examples reached here.  /* #neg=649 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.08518475138839678;  // std dev = 3.80e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.0851847513883968;  // std dev = 2.24e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return -0.08518475138839678;  // std dev = 1.33e-07, 523.000 (wgt'ed) examples reached here.  /* #neg=523 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.07877675473109155;  // std dev = 5.67e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07877675473109172;  // std dev = 2.69e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.07877675473109187;  // std dev = 0.000, 481.000 (wgt'ed) examples reached here.  /* #neg=481 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 1.05e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return -0.0732462257633372;  // std dev = 0.000, 528.000 (wgt'ed) examples reached here.  /* #neg=528 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0684269778442027;  // std dev = 1.05e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.06842697784420364;  // std dev = 0.000, 614.000 (wgt'ed) examples reached here.  /* #neg=614 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080119;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return -0.06419184008202565;  // std dev = 2.05e-07, 527.000 (wgt'ed) examples reached here.  /* #neg=527 */
Inference time using transfer learning 0.8034837245941162
Refined model CLL: -0.064062


******************************************
Best model found
******************************************
Results 

CLL : -0.063847 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.3520052433013916 

Total Inference Time : 1.5148272514343262 

Total revision time: 8.663612127304077
Best scored revision CLL: -0.064062


Results 

CLL : -0.063847 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 8.68641185760498 

Total Inference Time : 1.5148272514343262 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos examples: 45
Target test neg examples: 2071

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 1.9578418731689453
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6703036312321061;  // std dev = 5.255, 181.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=147 */
%   else return 0.08706459775011313;  // std dev = 12.104, 830.000 (wgt'ed) examples reached here.  /* #neg=640 #pos=190 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15278336812066023;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else return 0.1766340242705628;  // std dev = 14.344, 975.000 (wgt'ed) examples reached here.  /* #neg=638 #pos=337 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, F) )
%   | | | then return -0.1340378741181768;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15511531218538693;  // std dev = 14.238, 963.000 (wgt'ed) examples reached here.  /* #neg=626 #pos=337 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11922847515763332;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return 0.12392681758521946;  // std dev = 14.264, 980.000 (wgt'ed) examples reached here.  /* #neg=643 #pos=337 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09734858808018924;  // std dev = 0.449, 1,007.000 (wgt'ed) examples reached here.  /* #neg=670 #pos=337 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D), genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.2386835190563979;  // std dev = 1.12e-07, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else return 0.10240086384340842;  // std dev = 13.980, 937.000 (wgt'ed) examples reached here.  /* #neg=600 #pos=337 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, E) )
%   | | then return -0.19803928874597831;  // std dev = 5.89e-09, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08025824957290481;  // std dev = 13.976, 946.000 (wgt'ed) examples reached here.  /* #neg=609 #pos=337 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(A, C), genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.16845266022003175;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else return 0.07599798452503348;  // std dev = 13.815, 914.000 (wgt'ed) examples reached here.  /* #neg=577 #pos=337 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, D) )
%   | | | then return 0.399152801518177;  // std dev = 4.344, 128.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=105 */
%   | | | else return -0.08729073150265636;  // std dev = 4.887, 235.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=42 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B), genre(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.013810252748002303;  // std dev = 11.481, 642.000 (wgt'ed) examples reached here.  /* #neg=452 #pos=190 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E), genre(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.13559406791590348;  // std dev = 6.72e-09, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04447883483287505;  // std dev = 13.513, 930.000 (wgt'ed) examples reached here.  /* #neg=593 #pos=337 */
Inference time using transfer learning 0.8544163703918457
Parameter learned model CLL:-0.344661 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [5.255, 34, 147], 'false': [12.104, 640, 190]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 39, 0], 'false': [14.344, 638, 337]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'genre(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 36, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [14.238, 626, 337]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 30, 0], 'false': [14.264, 643, 337]}]
['workedunder(A, B)', {'': 'female(A), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.449, 670, 337]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(B, C)', 'true,false': 'genre(A, D), genre(B, D)', 'true,false,false': 'genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.12e-07, 79, 0], 'false': [13.98, 600, 337]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(A, C)', 'true,false': 'genre(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [5.89e-09, 82, 0], 'true,false,false': [0.0, 0, 0], 'false': [13.976, 609, 337]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(A, C), genre(B, C)', 'true,false': 'genre(B, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 73, 0], 'false': [13.815, 577, 337]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E)', 'true,true,false': 'genre(B, D)', 'false': 'female(B), genre(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [4.344, 23, 105], 'true,true,false,false': [4.887, 193, 42], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.481, 452, 190]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E), genre(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [6.72e-09, 85, 0], 'true,false': [0.0, 0, 0], 'false': [13.513, 593, 337]}]
{'': [0.1525594456823716, 0.17651328204383857], 'true': [nan, 0.15255944568236868], 'true,false': [nan, 0.1525594456823716], 'true,false,false': [nan, 0.1525594456823716]}
{'': [-1.9927079929169476e-17, 0.2110377964998946], 'true': [nan, -1.9927079929169476e-17], 'true,false': [nan, -1.9927079929169476e-17]}
{'': [-3.0839528461809902e-18, 0.21050110259725735], 'true': [nan, -3.0839528461809902e-18], 'true,false': [nan, -3.0839528461809902e-18], 'true,false,false': [-3.0839528461809902e-18, nan]}
{'': [-2.4054832200211726e-17, 0.207621868937154], 'true': [nan, -2.4054832200211726e-17], 'true,false': [nan, -2.4054832200211726e-17]}
{'': [nan, 0.20176839844264124]}
{'': [1.573987072886298e-16, 0.20857469689299282], 'true': [nan, 1.573987072886298e-16], 'true,false': [nan, 1.573987072886298e-16], 'true,false,false': [nan, 1.573987072886298e-16]}
{'': [3.791005449939559e-17, 0.20648284621014612], 'true': [nan, 3.791005449939559e-17], 'true,false': [3.791005449939559e-17, nan]}
{'': [-3.650048300137501e-17, 0.20880716554857273], 'true': [nan, -3.650048300137501e-17], 'true,false': [nan, -3.650048300137501e-17], 'true,false,false': [nan, -3.650048300137501e-17]}
{'': [0.17179611514711035, 0.20532868378656668], 'false': [nan, 0.20532868378656646], 'true': [0.17179611514711035, nan], 'true,true': [nan, 0.17179611514711035], 'true,true,false': [0.14739990234374858, 0.1016454337368312]}
{'': [4.179663151530001e-17, 0.19633653329235556], 'true': [4.179663151530001e-17, nan], 'true,true': [nan, 4.179663151530001e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- female(B), director(A).;true;true
2;;workedunder(A, B) :- female(B), director(A).;true;true
3;;workedunder(A, B) :- female(B), director(A).;true;true
5;;workedunder(A, B) :- female(B), female(A).;true;true
6;;workedunder(A, B) :- female(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), female(B).;true;true
9;;workedunder(A, B) :- female(A), female(B).;true;true


Refining candidate
***************************
Model training time 3.4129574298858643
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 5.58e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.1418510649004887;  // std dev = 0.000, 640.000 (wgt'ed) examples reached here.  /* #neg=640 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.1254446385283913;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.1254446385283923;  // std dev = 0.000, 588.000 (wgt'ed) examples reached here.  /* #neg=588 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.11231637819360621;  // std dev = 2.69e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.11231637819360629;  // std dev = 3.80e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.11231637819360568;  // std dev = 0.000, 577.000 (wgt'ed) examples reached here.  /* #neg=577 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.10159632948783633;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10159632948783624;  // std dev = 2.98e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.1015963294878354;  // std dev = 3.70e-07, 580.000 (wgt'ed) examples reached here.  /* #neg=580 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.09269127618926185;  // std dev = 0.000, 622.000 (wgt'ed) examples reached here.  /* #neg=622 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.08518475138839678;  // std dev = 1.05e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.08518475138839679;  // std dev = 2.24e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return -0.08518475138839678;  // std dev = 1.35e-07, 525.000 (wgt'ed) examples reached here.  /* #neg=525 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.07877675473109157;  // std dev = 4.83e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07877675473109173;  // std dev = 2.24e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.0787767547310923;  // std dev = 0.000, 570.000 (wgt'ed) examples reached here.  /* #neg=570 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 1.05e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return -0.0732462257633372;  // std dev = 0.000, 505.000 (wgt'ed) examples reached here.  /* #neg=505 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0684269778442027;  // std dev = 1.39e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.0684269778442036;  // std dev = 0.000, 615.000 (wgt'ed) examples reached here.  /* #neg=615 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.06419184008202618;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080119;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.06419184008202554;  // std dev = 2.31e-07, 570.000 (wgt'ed) examples reached here.  /* #neg=570 */
Inference time using transfer learning 0.8057458400726318
Refined model CLL: -0.064087


******************************************
Best model found
******************************************
Results 

CLL : -0.063719 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.4129574298858643 

Total Inference Time : 1.478214979171753 

Total revision time: 8.824620962142944
Best scored revision CLL: -0.064087


Results 

CLL : -0.063719 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 8.847420692443848 

Total Inference Time : 1.478214979171753 

Run: 3

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos examples: 56
Target test neg examples: 3308

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 1.7724523544311523
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7632122262387503;  // std dev = 3.685, 158.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=143 */
%   else return 0.08213914317784615;  // std dev = 11.917, 817.000 (wgt'ed) examples reached here.  /* #neg=634 #pos=183 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15214690404103862;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else return 0.16235542155644442;  // std dev = 14.140, 978.000 (wgt'ed) examples reached here.  /* #neg=652 #pos=326 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, F) )
%   | | | then return -0.13354082453924032;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1486660493098181;  // std dev = 13.991, 944.000 (wgt'ed) examples reached here.  /* #neg=618 #pos=326 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11883084649035067;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return 0.12394570643587359;  // std dev = 13.941, 948.000 (wgt'ed) examples reached here.  /* #neg=622 #pos=326 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09640846165404862;  // std dev = 0.445, 979.000 (wgt'ed) examples reached here.  /* #neg=653 #pos=326 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D), genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.2338881410159363;  // std dev = 6.66e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else return 0.1008449731097352;  // std dev = 13.655, 916.000 (wgt'ed) examples reached here.  /* #neg=590 #pos=326 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, E) )
%   | | then return -0.19460305937030897;  // std dev = 1.29e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09906343951426651;  // std dev = 13.412, 874.000 (wgt'ed) examples reached here.  /* #neg=548 #pos=326 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(A, C), genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.16589884923066484;  // std dev = 5.16e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else return 0.06468847033777057;  // std dev = 13.586, 902.000 (wgt'ed) examples reached here.  /* #neg=576 #pos=326 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, D) )
%   | | | then return 0.4006225100789686;  // std dev = 3.890, 113.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=95 */
%   | | | else return -0.09683595434135464;  // std dev = 5.146, 278.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B), genre(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.00435346444938447;  // std dev = 11.372, 652.000 (wgt'ed) examples reached here.  /* #neg=469 #pos=183 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E), genre(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.132651988582497;  // std dev = 4.56e-09, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.054041662967719485;  // std dev = 13.160, 875.000 (wgt'ed) examples reached here.  /* #neg=549 #pos=326 */
Inference time using transfer learning 1.0229253768920898
Parameter learned model CLL:-0.344186 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.685, 15, 143], 'false': [11.917, 634, 183]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 31, 0], 'false': [14.14, 652, 326]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'genre(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 31, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.991, 618, 326]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 30, 0], 'false': [13.941, 622, 326]}]
['workedunder(A, B)', {'': 'female(A), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.445, 653, 326]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(B, C)', 'true,false': 'genre(A, D), genre(B, D)', 'true,false,false': 'genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.66e-08, 90, 0], 'false': [13.655, 590, 326]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(A, C)', 'true,false': 'genre(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [1.29e-08, 82, 0], 'true,false,false': [0.0, 0, 0], 'false': [13.412, 548, 326]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(A, C), genre(B, C)', 'true,false': 'genre(B, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [5.16e-08, 77, 0], 'false': [13.586, 576, 326]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E)', 'true,true,false': 'genre(B, D)', 'false': 'female(B), genre(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [3.89, 18, 95], 'true,true,false,false': [5.146, 230, 48], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.372, 469, 183]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E), genre(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [4.56e-09, 79, 0], 'true,false': [0.0, 0, 0], 'false': [13.16, 549, 326]}]
{'': [0.08592373017145222, 0.17381859476335998], 'true': [nan, 0.08592373017144826], 'true,false': [nan, 0.08592373017145222], 'true,false,false': [nan, 0.08592373017145222]}
{'': [0.0, 0.20442839010534172], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [-1.4325458382260084e-17, 0.20735513749383888], 'true': [nan, -1.4325458382260084e-17], 'true,false': [nan, -1.4325458382260084e-17], 'true,false,false': [-1.4325458382260084e-17, nan]}
{'': [-1.6653345369377347e-17, 0.205013467256119], 'true': [nan, -1.6653345369377347e-17], 'true,false': [nan, -1.6653345369377347e-17]}
{'': [nan, 0.19822552461187468]}
{'': [4.9343245538895844e-17, 0.20357178414544805], 'true': [nan, 4.9343245538895844e-17], 'true,false': [nan, 4.9343245538895844e-17], 'true,false,false': [nan, 4.9343245538895844e-17]}
{'': [1.787188283542935e-16, 0.20582576017827173], 'true': [nan, 1.787188283542935e-16], 'true,false': [1.787188283542935e-16, nan]}
{'': [3.460435401429059e-17, 0.20462221279016318], 'true': [nan, 3.460435401429059e-17], 'true,false': [nan, 3.460435401429059e-17], 'true,false,false': [nan, 3.460435401429059e-17]}
{'': [0.15728525461551904, 0.1983345691003231], 'false': [nan, 0.1983345691003241], 'true': [0.15728525461551904, nan], 'true,true': [nan, 0.15728525461551904], 'true,true,false': [0.1339180828569197, 0.09526542566577617]}
{'': [1.9674838411078724e-17, 0.19791979367198706], 'true': [1.9674838411078724e-17, nan], 'true,true': [nan, 1.9674838411078724e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- female(B), director(A).;true;true
2;;workedunder(A, B) :- female(B), director(A).;true;true
3;;workedunder(A, B) :- female(B), director(A).;true;true
5;;workedunder(A, B) :- female(B), female(A).;true;true
6;;workedunder(A, B) :- female(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), female(B).;true;true
9;;workedunder(A, B) :- female(A), female(B).;true;true


Refining candidate
***************************
Model training time 3.1686718463897705
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1.05e-06, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048766;  // std dev = 5.37e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.14185106490048818;  // std dev = 0.000, 568.000 (wgt'ed) examples reached here.  /* #neg=568 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.12544463852839136;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.1254446385283923;  // std dev = 0.000, 596.000 (wgt'ed) examples reached here.  /* #neg=596 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.11231637819360638;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.11231637819360628;  // std dev = 4.47e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.11231637819360586;  // std dev = 0.000, 567.000 (wgt'ed) examples reached here.  /* #neg=567 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.10159632948783631;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831163;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.10159632948783626;  // std dev = 3.16e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.1015963294878356;  // std dev = 3.24e-07, 548.000 (wgt'ed) examples reached here.  /* #neg=548 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.09269127618926173;  // std dev = 0.000, 591.000 (wgt'ed) examples reached here.  /* #neg=591 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.08518475138839678;  // std dev = 1.05e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948756;  // std dev = 3.86e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.0851847513883968;  // std dev = 1.83e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.08518475138839678;  // std dev = 1.35e-07, 525.000 (wgt'ed) examples reached here.  /* #neg=525 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.07877675473109165;  // std dev = 2.89e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.46e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.07877675473109161;  // std dev = 7.60e-08, 450.000 (wgt'ed) examples reached here.  /* #neg=450 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.07324622576333703;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1770964977452765;  // std dev = 2.76e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.07324622576333704;  // std dev = 1.05e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.07324622576333721;  // std dev = 0.000, 501.000 (wgt'ed) examples reached here.  /* #neg=501 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.06842697784420268;  // std dev = 1.97e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.06842697784420365;  // std dev = 0.000, 616.000 (wgt'ed) examples reached here.  /* #neg=616 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.06419184008202619;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080118;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.06419184008202561;  // std dev = 2.14e-07, 536.000 (wgt'ed) examples reached here.  /* #neg=536 */
Inference time using transfer learning 0.940657377243042
Refined model CLL: -0.064216


******************************************
Best model found
******************************************
Results 

CLL : -0.063421 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.1686718463897705 

Total Inference Time : 1.648378610610962 

Total revision time: 8.321292877197266
Best scored revision CLL: -0.064216


Results 

CLL : -0.063421 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 8.344348907470703 

Total Inference Time : 1.648378610610962 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos examples: 58
Target test neg examples: 3423

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 1.7108502388000488
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7056065622181535;  // std dev = 4.783, 177.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=150 */
%   else return 0.08471143509951101;  // std dev = 11.601, 768.000 (wgt'ed) examples reached here.  /* #neg=594 #pos=174 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15247902211898615;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return 0.18372099550129684;  // std dev = 13.887, 914.000 (wgt'ed) examples reached here.  /* #neg=590 #pos=324 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, F) )
%   | | | then return -0.13380024269743288;  // std dev = 2.11e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1600406521583261;  // std dev = 13.806, 901.000 (wgt'ed) examples reached here.  /* #neg=577 #pos=324 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11903840821139011;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return 0.1153377244456114;  // std dev = 13.948, 955.000 (wgt'ed) examples reached here.  /* #neg=631 #pos=324 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09615959107304559;  // std dev = 0.446, 965.000 (wgt'ed) examples reached here.  /* #neg=641 #pos=324 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D), genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.23866190641148555;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else return 0.11207538844316464;  // std dev = 13.461, 871.000 (wgt'ed) examples reached here.  /* #neg=547 #pos=324 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, E) )
%   | | then return -0.19802383144302022;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08715655749969417;  // std dev = 13.482, 877.000 (wgt'ed) examples reached here.  /* #neg=553 #pos=324 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(A, C), genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.16844119224907475;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else return 0.0878998163211846;  // std dev = 13.219, 840.000 (wgt'ed) examples reached here.  /* #neg=516 #pos=324 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, D) )
%   | | | then return 0.46532424236886477;  // std dev = 3.151, 113.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=102 */
%   | | | else return -0.08955646670190479;  // std dev = 5.149, 261.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B), genre(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03486933375882766;  // std dev = 10.759, 543.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=174 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E), genre(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.13532048603644317;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.02442769871176869;  // std dev = 13.193, 910.000 (wgt'ed) examples reached here.  /* #neg=586 #pos=324 */
Inference time using transfer learning 0.9855365753173828
Parameter learned model CLL:-0.345234 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.783, 27, 150], 'false': [11.601, 594, 174]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 32, 0], 'false': [13.887, 590, 324]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'genre(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [2.11e-08, 24, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.806, 577, 324]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 28, 0], 'false': [13.948, 631, 324]}]
['workedunder(A, B)', {'': 'female(A), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.446, 641, 324]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(B, C)', 'true,false': 'genre(A, D), genre(B, D)', 'true,false,false': 'genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 94, 0], 'false': [13.461, 547, 324]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(A, C)', 'true,false': 'genre(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 117, 0], 'true,false,false': [0.0, 0, 0], 'false': [13.482, 553, 324]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(A, C), genre(B, C)', 'true,false': 'genre(B, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 99, 0], 'false': [13.219, 516, 324]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E)', 'true,true,false': 'genre(B, D)', 'false': 'female(B), genre(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [3.151, 11, 102], 'true,true,false,false': [5.149, 213, 48], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.759, 369, 174]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E), genre(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 110, 0], 'true,false': [0.0, 0, 0], 'false': [13.193, 586, 324]}]
{'': [0.12927319735708684, 0.17523193359375067], 'true': [nan, 0.1292731973570834], 'true,false': [nan, 0.12927319735708684], 'true,false,false': [nan, 0.12927319735708684]}
{'': [-3.8163916471489756e-17, 0.2109840631951897], 'true': [nan, -3.8163916471489756e-17], 'true,false': [nan, -3.8163916471489756e-17]}
{'': [1.850371707708594e-17, 0.2115404089834746], 'true': [nan, 1.850371707708594e-17], 'true,false': [nan, 1.850371707708594e-17], 'true,false,false': [1.850371707708594e-17, nan]}
{'': [-3.96508223080413e-18, 0.2037114793419916], 'true': [nan, -3.96508223080413e-18], 'true,false': [nan, -3.96508223080413e-18]}
{'': [nan, 0.19928963169705208]}
{'': [-5.669223955532714e-17, 0.20803130792641641], 'true': [nan, -5.669223955532714e-17], 'true,false': [nan, -5.669223955532714e-17], 'true,false,false': [nan, -5.669223955532714e-17]}
{'': [-1.6700790797780132e-16, 0.20727219321462168], 'true': [nan, -1.6700790797780132e-16], 'true,false': [-1.6700790797780132e-16, nan]}
{'': [-2.6914497566670462e-17, 0.20801988109766567], 'true': [nan, -2.6914497566670462e-17], 'true,false': [nan, -2.6914497566670462e-17], 'true,false,false': [nan, -2.6914497566670462e-17]}
{'': [0.16235970025014423, 0.21317432518442925], 'false': [nan, 0.21317432518443014], 'true': [0.16235970025014423, nan], 'true,true': [nan, 0.16235970025014423], 'true,true,false': [0.08786905787453979, 0.10158406394766654]}
{'': [-6.055761952500853e-17, 0.19126658201291946], 'true': [-6.055761952500853e-17, nan], 'true,true': [nan, -6.055761952500853e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- female(B), director(A).;true;true
2;;workedunder(A, B) :- female(B), director(A).;true;true
3;;workedunder(A, B) :- female(B), director(A).;true;true
5;;workedunder(A, B) :- female(B), female(A).;true;true
6;;workedunder(A, B) :- female(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), female(B).;true;true
9;;workedunder(A, B) :- female(A), female(B).;true;true


Refining candidate
***************************
Model training time 3.339709997177124
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1.04e-06, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048766;  // std dev = 5.37e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.14185106490048818;  // std dev = 0.000, 572.000 (wgt'ed) examples reached here.  /* #neg=572 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.12544463852839133;  // std dev = 1.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.12544463852839227;  // std dev = 0.000, 537.000 (wgt'ed) examples reached here.  /* #neg=537 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.11231637819360638;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.11231637819360629;  // std dev = 3.80e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.11231637819360575;  // std dev = 0.000, 554.000 (wgt'ed) examples reached here.  /* #neg=554 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.10159632948783633;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831163;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.10159632948783621;  // std dev = 3.49e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.10159632948783559;  // std dev = 3.20e-07, 521.000 (wgt'ed) examples reached here.  /* #neg=521 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.09269127618926169;  // std dev = 0.000, 579.000 (wgt'ed) examples reached here.  /* #neg=579 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.08518475138839678;  // std dev = 3.49e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948756;  // std dev = 3.86e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.08518475138839679;  // std dev = 2.24e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return -0.08518475138839678;  // std dev = 1.28e-07, 472.000 (wgt'ed) examples reached here.  /* #neg=472 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.07877675473109155;  // std dev = 6.41e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.07877675473109175;  // std dev = 1.97e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.078776754731092;  // std dev = 0.000, 508.000 (wgt'ed) examples reached here.  /* #neg=508 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527653;  // std dev = 2.73e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.07324622576333717;  // std dev = 0.000, 473.000 (wgt'ed) examples reached here.  /* #neg=473 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.06842697784420268;  // std dev = 2.47e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.06842697784420365;  // std dev = 0.000, 615.000 (wgt'ed) examples reached here.  /* #neg=615 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080118;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return -0.06419184008202578;  // std dev = 1.72e-07, 475.000 (wgt'ed) examples reached here.  /* #neg=475 */
Inference time using transfer learning 1.0056920051574707
Refined model CLL: -0.064225


******************************************
Best model found
******************************************
Results 

CLL : -0.063422 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.339709997177124 

Total Inference Time : 1.5186412334442139 

Total revision time: 8.291603565216064
Best scored revision CLL: -0.064225


Results 

CLL : -0.063422 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 8.314659595489502 

Total Inference Time : 1.5186412334442139 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos examples: 178
Target test neg examples: 3543

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 1.3996617794036865
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8000094002157911;  // std dev = 2.170, 86.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=81 */
%   else return 0.09838331009951194;  // std dev = 9.667, 512.000 (wgt'ed) examples reached here.  /* #neg=389 #pos=123 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1542542340241342;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.16348184280593825;  // std dev = 11.174, 611.000 (wgt'ed) examples reached here.  /* #neg=407 #pos=204 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, F) )
%   | | | then return -0.13518505571845513;  // std dev = 1.18e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.12390797148060936;  // std dev = 11.280, 640.000 (wgt'ed) examples reached here.  /* #neg=436 #pos=204 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12014518973480272;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return 0.11005743450229466;  // std dev = 11.207, 626.000 (wgt'ed) examples reached here.  /* #neg=422 #pos=204 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09279610142352772;  // std dev = 0.444, 629.000 (wgt'ed) examples reached here.  /* #neg=425 #pos=204 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D), genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.22945814452703253;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return 0.09623062426301177;  // std dev = 10.935, 592.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=204 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, E) )
%   | | then return -0.1914166214907192;  // std dev = 4.56e-09, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09594704840963703;  // std dev = 10.754, 561.000 (wgt'ed) examples reached here.  /* #neg=357 #pos=204 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(A, C), genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1635226259801845;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return 0.0671551830166712;  // std dev = 10.816, 580.000 (wgt'ed) examples reached here.  /* #neg=376 #pos=204 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, D) )
%   | | | then return 0.499778494714576;  // std dev = 2.165, 80.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=75 */
%   | | | else return -0.1929162805545388;  // std dev = 2.057, 156.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B), genre(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03478935210046352;  // std dev = 9.180, 396.000 (wgt'ed) examples reached here.  /* #neg=273 #pos=123 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E), genre(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12039583947775155;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06122289588872654;  // std dev = 10.164, 535.000 (wgt'ed) examples reached here.  /* #neg=331 #pos=204 */
Inference time using transfer learning 1.0744903087615967
Parameter learned model CLL:-0.323477 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.17, 5, 81], 'false': [9.667, 389, 123]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.63e-09, 11, 0], 'false': [11.174, 407, 204]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'genre(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.18e-08, 13, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [11.28, 436, 204]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 13, 0], 'false': [11.207, 422, 204]}]
['workedunder(A, B)', {'': 'female(A), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.444, 425, 204]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(B, C)', 'true,false': 'genre(A, D), genre(B, D)', 'true,false,false': 'genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 48, 0], 'false': [10.935, 388, 204]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(A, C)', 'true,false': 'genre(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [4.56e-09, 57, 0], 'true,false,false': [0.0, 0, 0], 'false': [10.754, 357, 204]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(A, C), genre(B, C)', 'true,false': 'genre(B, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 49, 0], 'false': [10.816, 376, 204]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E)', 'true,true,false': 'genre(B, D)', 'false': 'female(B), genre(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [2.165, 5, 75], 'true,true,false,false': [2.057, 150, 6], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.18, 273, 123]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E), genre(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 49, 0], 'true,false': [0.0, 0, 0], 'false': [10.164, 331, 204]}]
{'': [0.05475932936722547, 0.1825218200683598], 'true': [nan, 0.054759329367224475], 'true,false': [nan, 0.05475932936722547], 'true,false,false': [nan, 0.05475932936722547]}
{'': [1.0092936587501423e-17, 0.20436552636601393], 'true': [nan, 1.0092936587501423e-17], 'true,false': [nan, 1.0092936587501423e-17]}
{'': [1.0675221390626506e-17, 0.19882548248581117], 'true': [nan, 1.0675221390626506e-17], 'true,false': [nan, 1.0675221390626506e-17], 'true,false,false': [1.0675221390626506e-17, nan]}
{'': [-2.135044278125301e-18, 0.20063784472514787], 'true': [nan, -2.135044278125301e-18], 'true,false': [nan, -2.135044278125301e-18]}
{'': [nan, 0.19725898086102303]}
{'': [-1.295260195396016e-16, 0.2019678533754648], 'true': [nan, -1.295260195396016e-16], 'true,false': [nan, -1.295260195396016e-16], 'true,false,false': [nan, -1.295260195396016e-16]}
{'': [2.337311630789803e-17, 0.2061493237917282], 'true': [nan, 2.337311630789803e-17], 'true,false': [2.337311630789803e-17, nan]}
{'': [-3.6252180395923476e-17, 0.20169058034785856], 'true': [nan, -3.6252180395923476e-17], 'true,false': [nan, -3.6252180395923476e-17], 'true,false,false': [nan, -3.6252180395923476e-17]}
{'': [0.1452993179152578, 0.2128214261470992], 'false': [nan, 0.21282142614710056], 'true': [0.1452993179152578, nan], 'true,true': [nan, 0.1452993179152578], 'true,true,false': [0.05859375000000009, 0.027110812841638642]}
{'': [-6.797283824235652e-18, 0.19309088011537726], 'true': [-6.797283824235652e-18, nan], 'true,true': [nan, -6.797283824235652e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- female(B), director(A).;true;true
2;;workedunder(A, B) :- female(B), director(A).;true;true
3;;workedunder(A, B) :- female(B), director(A).;true;true
5;;workedunder(A, B) :- female(B), female(A).;true;true
6;;workedunder(A, B) :- female(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), female(B).;true;true
9;;workedunder(A, B) :- female(A), female(B).;true;true


Refining candidate
***************************
Model training time 2.457249164581299
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.1418510649004874;  // std dev = 2.83e-07, 407.000 (wgt'ed) examples reached here.  /* #neg=407 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.1254446385283914;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.7194734122109571;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.12544463852839222;  // std dev = 0.000, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.11231637819360642;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462833;  // std dev = 6.36e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.11231637819360635;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.1123163781936064;  // std dev = 0.000, 366.000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.10159632948783635;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831014;  // std dev = 2.53e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.10159632948783634;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.10159632948783602;  // std dev = 1.98e-07, 406.000 (wgt'ed) examples reached here.  /* #neg=406 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601491;  // std dev = 4.00e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.09269127618926103;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else return -0.09269127618926101;  // std dev = 1.21e-07, 421.000 (wgt'ed) examples reached here.  /* #neg=421 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.08518475138839679;  // std dev = 7.45e-09, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948845;  // std dev = 4.46e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.08518475138839683;  // std dev = 1.29e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return -0.08518475138839678;  // std dev = 1.01e-07, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.07877675473109173;  // std dev = 1.49e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.20975771563253498;  // std dev = 3.04e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.07877675473109146;  // std dev = 2.98e-08, 352.000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.07324622576333704;  // std dev = 7.45e-09, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527791;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.0732462257633371;  // std dev = 7.60e-08, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367166;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.06842697784420274;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.06842697784420336;  // std dev = 0.000, 404.000 (wgt'ed) examples reached here.  /* #neg=404 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.06419184008202616;  // std dev = 5.27e-09, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.13400703000801098;  // std dev = 1.38e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.06419184008202622;  // std dev = 5.27e-09, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return -0.06419184008202591;  // std dev = 1.30e-07, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
Inference time using transfer learning 1.009497880935669
Refined model CLL: -0.063555


******************************************
Best model found
******************************************
Results 

CLL : -0.065435 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.457249164581299 

Total Inference Time : 1.4403676986694336 

Total revision time: 7.012719392776489
Best scored revision CLL: -0.063555


Results 

CLL : -0.065435 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 7.035775423049927 

Total Inference Time : 1.4403676986694336 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos examples: 45
Target test neg examples: 1891

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.026150703430176
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7366019737735425;  // std dev = 4.396, 181.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=159 */
%   else return 0.0651256792855571;  // std dev = 11.881, 860.000 (wgt'ed) examples reached here.  /* #neg=682 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14996516200311477;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return 0.19216498279049557;  // std dev = 14.024, 927.000 (wgt'ed) examples reached here.  /* #neg=590 #pos=337 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, F) )
%   | | | then return -0.13183398883855188;  // std dev = 2.98e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15750394238722326;  // std dev = 14.010, 947.000 (wgt'ed) examples reached here.  /* #neg=610 #pos=337 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1174633993551527;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return 0.13674764584349308;  // std dev = 13.913, 930.000 (wgt'ed) examples reached here.  /* #neg=593 #pos=337 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07904770400735438;  // std dev = 0.439, 1,049.000 (wgt'ed) examples reached here.  /* #neg=712 #pos=337 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D), genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.23696163784280347;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else return 0.10822456922188206;  // std dev = 13.702, 911.000 (wgt'ed) examples reached here.  /* #neg=574 #pos=337 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, E) )
%   | | then return -0.19680696793312333;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08041043318187309;  // std dev = 13.741, 930.000 (wgt'ed) examples reached here.  /* #neg=593 #pos=337 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(A, C), genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.16753782322291488;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else return 0.05834877587379084;  // std dev = 13.815, 941.000 (wgt'ed) examples reached here.  /* #neg=604 #pos=337 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, D) )
%   | | | then return 0.41625646161770974;  // std dev = 4.028, 130.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=111 */
%   | | | else return -0.10401632492068227;  // std dev = 5.169, 305.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B), genre(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.011462238558030143;  // std dev = 11.162, 618.000 (wgt'ed) examples reached here.  /* #neg=440 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E), genre(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.13299504734993348;  // std dev = 4.93e-09, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03818162055245015;  // std dev = 13.393, 939.000 (wgt'ed) examples reached here.  /* #neg=602 #pos=337 */
Inference time using transfer learning 0.8042480945587158
Parameter learned model CLL:-0.330488 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.396, 22, 159], 'false': [11.881, 682, 178]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 43, 0], 'false': [14.024, 590, 337]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'genre(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [2.98e-08, 48, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [14.01, 610, 337]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 36, 0], 'false': [13.913, 593, 337]}]
['workedunder(A, B)', {'': 'female(A), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.439, 712, 337]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(B, C)', 'true,false': 'genre(A, D), genre(B, D)', 'true,false,false': 'genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 103, 0], 'false': [13.702, 574, 337]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(A, C)', 'true,false': 'genre(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 115, 0], 'true,false,false': [0.0, 0, 0], 'false': [13.741, 593, 337]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(A, C), genre(B, C)', 'true,false': 'genre(B, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 101, 0], 'false': [13.815, 604, 337]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E)', 'true,true,false': 'genre(B, D)', 'false': 'female(B), genre(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [4.028, 19, 111], 'true,true,false,false': [5.169, 257, 48], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.162, 440, 178]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E), genre(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [4.93e-09, 105, 0], 'true,false': [0.0, 0, 0], 'false': [13.393, 602, 337]}]
{'': [0.10677329751839677, 0.16413737155219094], 'true': [nan, 0.10677329751839339], 'true,false': [nan, 0.10677329751839677], 'true,false,false': [nan, 0.10677329751839677]}
{'': [-7.745742032268534e-18, 0.21216838013641034], 'true': [nan, -7.745742032268534e-18], 'true,false': [nan, -7.745742032268534e-18]}
{'': [1.850371707708594e-17, 0.20727000240094837], 'true': [nan, 1.850371707708594e-17], 'true,false': [nan, 1.850371707708594e-17], 'true,false,false': [1.850371707708594e-17, nan]}
{'': [-2.0045693500176437e-17, 0.20814800911451], 'true': [nan, -2.0045693500176437e-17], 'true,false': [nan, -2.0045693500176437e-17]}
{'': [nan, 0.19257927020591387]}
{'': [0.0, 0.20609310282351062], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [-5.406303424261632e-17, 0.20301953200796832], 'true': [nan, -5.406303424261632e-17], 'true,false': [-5.406303424261632e-17, nan]}
{'': [-3.0778460088618204e-17, 0.2028160129884738], 'true': [nan, -3.0778460088618204e-17], 'true,false': [nan, -3.0778460088618204e-17], 'true,false,false': [nan, -3.0778460088618204e-17]}
{'': [0.1554333240318989, 0.20158811085985812], 'false': [nan, 0.20158811085985912], 'true': [0.1554333240318989, nan], 'true,true': [nan, 0.1554333240318989], 'true,true,false': [0.12479289940828144, 0.08759917619932349]}
{'': [2.5376526277146434e-17, 0.19102705463543404], 'true': [2.5376526277146434e-17, nan], 'true,true': [nan, 2.5376526277146434e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- female(B), director(A).;true;true
2;;workedunder(A, B) :- female(B), director(A).;true;true
3;;workedunder(A, B) :- female(B), director(A).;true;true
5;;workedunder(A, B) :- female(B), female(A).;true;true
6;;workedunder(A, B) :- female(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), female(B).;true;true
9;;workedunder(A, B) :- female(A), female(B).;true;true


Refining candidate
***************************
Model training time 3.2000629901885986
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 4.94e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.1418510649004885;  // std dev = 0.000, 606.000 (wgt'ed) examples reached here.  /* #neg=606 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.12544463852839136;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.12544463852839152;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return -0.12544463852839233;  // std dev = 0.000, 615.000 (wgt'ed) examples reached here.  /* #neg=615 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.11231637819360622;  // std dev = 2.24e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.1123163781936063;  // std dev = 3.33e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.11231637819360567;  // std dev = 0.000, 585.000 (wgt'ed) examples reached here.  /* #neg=585 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.10159632948783633;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10159632948783634;  // std dev = 1.05e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return -0.10159632948783534;  // std dev = 3.82e-07, 592.000 (wgt'ed) examples reached here.  /* #neg=592 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926104;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.09269127618926182;  // std dev = 0.000, 620.000 (wgt'ed) examples reached here.  /* #neg=620 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.08518475138839678;  // std dev = 4.47e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.08518475138839679;  // std dev = 1.05e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.08518475138839678;  // std dev = 1.35e-07, 528.000 (wgt'ed) examples reached here.  /* #neg=528 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.07877675473109154;  // std dev = 6.05e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07877675473109177;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return -0.07877675473109201;  // std dev = 0.000, 507.000 (wgt'ed) examples reached here.  /* #neg=507 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 1.05e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.07324622576333716;  // std dev = 5.16e-08, 557.000 (wgt'ed) examples reached here.  /* #neg=557 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0684269778442027;  // std dev = 1.18e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.06842697784420367;  // std dev = 0.000, 653.000 (wgt'ed) examples reached here.  /* #neg=653 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080119;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.06419184008202623;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.06419184008202579;  // std dev = 1.67e-07, 469.000 (wgt'ed) examples reached here.  /* #neg=469 */
Inference time using transfer learning 0.7811996936798096
Refined model CLL: -0.064062


******************************************
Best model found
******************************************
Results 

CLL : -0.063847 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.2000629901885986 

Total Inference Time : 1.4738550186157227 

Total revision time: 8.72641134262085
Best scored revision CLL: -0.064062


Results 

CLL : -0.063847 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 8.749467372894287 

Total Inference Time : 1.4738550186157227 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos examples: 45
Target test neg examples: 2071

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 1.8741283416748047
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7177980579065271;  // std dev = 4.542, 171.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=147 */
%   else return 0.08247006851155314;  // std dev = 12.140, 847.000 (wgt'ed) examples reached here.  /* #neg=657 #pos=190 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1521895977354684;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return 0.17981124119490643;  // std dev = 14.240, 964.000 (wgt'ed) examples reached here.  /* #neg=627 #pos=337 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, F) )
%   | | | then return -0.13357417867422938;  // std dev = 1.05e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1429216181361356;  // std dev = 14.315, 992.000 (wgt'ed) examples reached here.  /* #neg=655 #pos=337 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1188575373262091;  // std dev = 5.27e-09, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return 0.12751553468036356;  // std dev = 14.171, 971.000 (wgt'ed) examples reached here.  /* #neg=634 #pos=337 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0951654400930368;  // std dev = 0.448, 1,011.000 (wgt'ed) examples reached here.  /* #neg=674 #pos=337 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D), genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.23647270273633572;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else return 0.10558873458656381;  // std dev = 13.862, 933.000 (wgt'ed) examples reached here.  /* #neg=596 #pos=337 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, E) )
%   | | then return -0.19645673505260985;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0890726985850084;  // std dev = 13.818, 916.000 (wgt'ed) examples reached here.  /* #neg=579 #pos=337 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(A, C), genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.16727761258345267;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else return 0.07274183280349604;  // std dev = 13.770, 916.000 (wgt'ed) examples reached here.  /* #neg=579 #pos=337 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, D) )
%   | | | then return 0.3872543783482014;  // std dev = 4.344, 128.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=105 */
%   | | | else return -0.10087109693366195;  // std dev = 4.880, 252.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=42 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B), genre(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03373565403791786;  // std dev = 11.317, 604.000 (wgt'ed) examples reached here.  /* #neg=414 #pos=190 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E), genre(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.13317255425826544;  // std dev = 1.86e-09, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0422183611389201;  // std dev = 13.473, 921.000 (wgt'ed) examples reached here.  /* #neg=584 #pos=337 */
Inference time using transfer learning 0.8552541732788086
Parameter learned model CLL:-0.346439 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.542, 24, 147], 'false': [12.14, 657, 190]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 35, 0], 'false': [14.24, 627, 337]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'genre(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.05e-08, 24, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [14.315, 655, 337]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [5.27e-09, 30, 0], 'false': [14.171, 634, 337]}]
['workedunder(A, B)', {'': 'female(A), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.448, 674, 337]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(B, C)', 'true,false': 'genre(A, D), genre(B, D)', 'true,false,false': 'genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 98, 0], 'false': [13.862, 596, 337]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(A, C)', 'true,false': 'genre(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 75, 0], 'true,false,false': [0.0, 0, 0], 'false': [13.818, 579, 337]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(A, C), genre(B, C)', 'true,false': 'genre(B, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 99, 0], 'false': [13.77, 579, 337]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E)', 'true,true,false': 'genre(B, D)', 'false': 'female(B), genre(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [4.344, 23, 105], 'true,true,false,false': [4.88, 210, 42], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.317, 414, 190]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E), genre(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [1.86e-09, 86, 0], 'true,false': [0.0, 0, 0], 'false': [13.473, 584, 337]}]
{'': [0.12065250846414824, 0.1740011625167796], 'true': [nan, 0.12065250846414524], 'true,false': [nan, 0.12065250846414824], 'true,false,false': [nan, 0.12065250846414824]}
{'': [-1.2688263138573217e-17, 0.21036236161554667], 'true': [nan, -1.2688263138573217e-17], 'true,false': [nan, -1.2688263138573217e-17]}
{'': [4.625929269271485e-18, 0.20657643977957066], 'true': [nan, 4.625929269271485e-18], 'true,false': [nan, 4.625929269271485e-18], 'true,false,false': [4.625929269271485e-18, nan]}
{'': [2.7755575615628914e-17, 0.20682714443610797], 'true': [nan, 2.7755575615628914e-17], 'true,false': [nan, 2.7755575615628914e-17]}
{'': [nan, 0.20029888345603084]}
{'': [-9.969349608878957e-17, 0.2059640653515077], 'true': [nan, -9.969349608878957e-17], 'true,false': [nan, -9.969349608878957e-17], 'true,false,false': [nan, -9.969349608878957e-17]}
{'': [-6.513308411134252e-17, 0.20844653434122004], 'true': [nan, -6.513308411134252e-17], 'true,false': [-6.513308411134252e-17, nan]}
{'': [-2.6914497566670462e-17, 0.20699028245912207], 'true': [nan, -2.6914497566670462e-17], 'true,false': [nan, -2.6914497566670462e-17], 'true,false,false': [nan, -2.6914497566670462e-17]}
{'': [0.1655470447176159, 0.21202617187459422], 'false': [nan, 0.2120261718745937], 'true': [0.1655470447176159, nan], 'true,true': [nan, 0.1655470447176159], 'true,true,false': [0.14739990234374878, 0.09450645823547107]}
{'': [2.581914010756178e-18, 0.1970896761215532], 'true': [2.581914010756178e-18, nan], 'true,true': [nan, 2.581914010756178e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- female(B), director(A).;true;true
2;;workedunder(A, B) :- female(B), director(A).;true;true
3;;workedunder(A, B) :- female(B), director(A).;true;true
5;;workedunder(A, B) :- female(B), female(A).;true;true
6;;workedunder(A, B) :- female(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), female(B).;true;true
9;;workedunder(A, B) :- female(A), female(B).;true;true


Refining candidate
***************************
Model training time 3.1074631214141846
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 6.14e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.14185106490048816;  // std dev = 0.000, 567.000 (wgt'ed) examples reached here.  /* #neg=567 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.12544463852839133;  // std dev = 1.05e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.12544463852839155;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return -0.1254446385283923;  // std dev = 0.000, 593.000 (wgt'ed) examples reached here.  /* #neg=593 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.11231637819360639;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.11231637819360628;  // std dev = 4.47e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.11231637819360575;  // std dev = 0.000, 549.000 (wgt'ed) examples reached here.  /* #neg=549 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.10159632948783634;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10159632948783621;  // std dev = 3.94e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.10159632948783538;  // std dev = 3.85e-07, 604.000 (wgt'ed) examples reached here.  /* #neg=604 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.09269127618926178;  // std dev = 0.000, 605.000 (wgt'ed) examples reached here.  /* #neg=605 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.08518475138839679;  // std dev = 2.58e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.0851847513883968;  // std dev = 1.83e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return -0.08518475138839678;  // std dev = 1.38e-07, 531.000 (wgt'ed) examples reached here.  /* #neg=531 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.07877675473109162;  // std dev = 4.47e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07877675473109172;  // std dev = 2.58e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.0787767547310922;  // std dev = 0.000, 558.000 (wgt'ed) examples reached here.  /* #neg=558 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return -0.07324622576333711;  // std dev = 7.30e-08, 554.000 (wgt'ed) examples reached here.  /* #neg=554 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0684269778442027;  // std dev = 1.49e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.06842697784420369;  // std dev = 0.000, 656.000 (wgt'ed) examples reached here.  /* #neg=656 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080119;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.06419184008202561;  // std dev = 2.12e-07, 519.000 (wgt'ed) examples reached here.  /* #neg=519 */
Inference time using transfer learning 0.8147304058074951
Refined model CLL: -0.064087


******************************************
Best model found
******************************************
Results 

CLL : -0.063719 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.1074631214141846 

Total Inference Time : 1.6302435398101807 

Total revision time: 8.491294622421265
Best scored revision CLL: -0.064087


Results 

CLL : -0.063719 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 8.514350652694702 

Total Inference Time : 1.6302435398101807 

Run: 4

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos examples: 56
Target test neg examples: 3308

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 1.7981376647949219
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7248156017661763;  // std dev = 4.367, 165.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=143 */
%   else return 0.07678692793105191;  // std dev = 11.958, 837.000 (wgt'ed) examples reached here.  /* #neg=654 #pos=183 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15145776246002726;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return 0.17291783896253135;  // std dev = 14.077, 952.000 (wgt'ed) examples reached here.  /* #neg=626 #pos=326 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, F) )
%   | | | then return -0.1330021925420915;  // std dev = 2.11e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14553261822162894;  // std dev = 14.053, 956.000 (wgt'ed) examples reached here.  /* #neg=630 #pos=326 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11839965438072074;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return 0.13594415497134116;  // std dev = 13.846, 918.000 (wgt'ed) examples reached here.  /* #neg=592 #pos=326 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09233182799743019;  // std dev = 0.446, 985.000 (wgt'ed) examples reached here.  /* #neg=659 #pos=326 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D), genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.23568449710043035;  // std dev = 8.43e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else return 0.10894626597391285;  // std dev = 13.611, 889.000 (wgt'ed) examples reached here.  /* #neg=563 #pos=326 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, E) )
%   | | then return -0.19589183815700772;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08560618667049348;  // std dev = 13.585, 901.000 (wgt'ed) examples reached here.  /* #neg=575 #pos=326 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(A, C), genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1668577188181858;  // std dev = 5.16e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return 0.07290557021623144;  // std dev = 13.508, 890.000 (wgt'ed) examples reached here.  /* #neg=564 #pos=326 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, D) )
%   | | | then return 0.3699668278848013;  // std dev = 4.303, 118.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=95 */
%   | | | else return -0.07059760916789579;  // std dev = 5.074, 228.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B), genre(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0027763913524470707;  // std dev = 11.357, 653.000 (wgt'ed) examples reached here.  /* #neg=470 #pos=183 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E), genre(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.13639995972255356;  // std dev = 6.72e-09, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03446653321294983;  // std dev = 13.417, 927.000 (wgt'ed) examples reached here.  /* #neg=601 #pos=326 */
Inference time using transfer learning 1.0672574043273926
Parameter learned model CLL:-0.343123 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.367, 22, 143], 'false': [11.958, 654, 183]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 36, 0], 'false': [14.077, 626, 326]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'genre(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [2.11e-08, 32, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [14.053, 630, 326]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 36, 0], 'false': [13.846, 592, 326]}]
['workedunder(A, B)', {'': 'female(A), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.446, 659, 326]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(B, C)', 'true,false': 'genre(A, D), genre(B, D)', 'true,false,false': 'genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [8.43e-08, 89, 0], 'false': [13.611, 563, 326]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(A, C)', 'true,false': 'genre(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 97, 0], 'true,false,false': [0.0, 0, 0], 'false': [13.585, 575, 326]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(A, C), genre(B, C)', 'true,false': 'genre(B, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [5.16e-08, 71, 0], 'false': [13.508, 564, 326]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E)', 'true,true,false': 'genre(B, D)', 'false': 'female(B), genre(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [4.303, 23, 95], 'true,true,false,false': [5.074, 180, 48], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.357, 470, 183]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E), genre(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [6.72e-09, 74, 0], 'true,false': [0.0, 0, 0], 'false': [13.417, 601, 326]}]
{'': [0.11555555555556078, 0.17083542092213672], 'true': [nan, 0.11555555555555691], 'true,false': [nan, 0.11555555555556078], 'true,false,false': [nan, 0.11555555555556078]}
{'': [-2.1587669923266933e-17, 0.20814560082323583], 'true': [nan, -2.1587669923266933e-17], 'true,false': [nan, -2.1587669923266933e-17]}
{'': [1.3877787807814457e-17, 0.20658708731846248], 'true': [nan, 1.3877787807814457e-17], 'true,false': [nan, 1.3877787807814457e-17], 'true,false,false': [1.3877787807814457e-17, nan]}
{'': [-2.1587669923266933e-17, 0.20883112668133982], 'true': [nan, -2.1587669923266933e-17], 'true,false': [nan, -2.1587669923266933e-17]}
{'': [nan, 0.19932156381148372]}
{'': [7.983626244495507e-17, 0.20838957694452886], 'true': [nan, 7.983626244495507e-17], 'true,false': [nan, 7.983626244495507e-17], 'true,false,false': [nan, 7.983626244495507e-17]}
{'': [-3.6625914214438153e-17, 0.20481700367483976], 'true': [nan, -3.6625914214438153e-17], 'true,false': [-3.6625914214438153e-17, nan]}
{'': [3.752866562113205e-17, 0.2050125616249447], 'true': [nan, 3.752866562113205e-17], 'true,false': [nan, 3.752866562113205e-17], 'true,false,false': [nan, 3.752866562113205e-17]}
{'': [0.17154918490282028, 0.19753331103700644], 'false': [nan, 0.1975333110370068], 'true': [0.17154918490282028, nan], 'true,true': [nan, 0.17154918490282028], 'true,true,false': [0.15692329790290135, 0.11292378436508549]}
{'': [3.900783600034334e-17, 0.19419710381759808], 'true': [3.900783600034334e-17, nan], 'true,true': [nan, 3.900783600034334e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- female(B), director(A).;true;true
2;;workedunder(A, B) :- female(B), director(A).;true;true
3;;workedunder(A, B) :- female(B), director(A).;true;true
5;;workedunder(A, B) :- female(B), female(A).;true;true
6;;workedunder(A, B) :- female(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), female(B).;true;true
9;;workedunder(A, B) :- female(A), female(B).;true;true


Refining candidate
***************************
Model training time 3.1378257274627686
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1.05e-06, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048766;  // std dev = 6.14e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.1418510649004884;  // std dev = 0.000, 604.000 (wgt'ed) examples reached here.  /* #neg=604 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.1254446385283913;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.12544463852839233;  // std dev = 0.000, 566.000 (wgt'ed) examples reached here.  /* #neg=566 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.11231637819360638;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.1123163781936063;  // std dev = 3.65e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.11231637819360593;  // std dev = 0.000, 529.000 (wgt'ed) examples reached here.  /* #neg=529 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.10159632948783633;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831163;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.10159632948783624;  // std dev = 3.65e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.10159632948783548;  // std dev = 3.49e-07, 567.000 (wgt'ed) examples reached here.  /* #neg=567 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.09269127618926166;  // std dev = 0.000, 573.000 (wgt'ed) examples reached here.  /* #neg=573 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.08518475138839678;  // std dev = 2.11e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948756;  // std dev = 3.86e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.08518475138839679;  // std dev = 1.67e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.08518475138839678;  // std dev = 1.21e-07, 463.000 (wgt'ed) examples reached here.  /* #neg=463 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.0787767547310916;  // std dev = 3.80e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.46e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.07877675473109173;  // std dev = 2.24e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.07877675473109202;  // std dev = 0.000, 520.000 (wgt'ed) examples reached here.  /* #neg=520 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.07324622576333703;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1770964977452765;  // std dev = 2.76e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.07324622576333704;  // std dev = 1.29e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return -0.0732462257633372;  // std dev = 0.000, 500.000 (wgt'ed) examples reached here.  /* #neg=500 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.06842697784420367;  // std dev = 0.000, 642.000 (wgt'ed) examples reached here.  /* #neg=642 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.06419184008202618;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080118;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.06419184008202565;  // std dev = 1.93e-07, 471.000 (wgt'ed) examples reached here.  /* #neg=471 */
Inference time using transfer learning 0.9653029441833496
Refined model CLL: -0.064216


******************************************
Best model found
******************************************
Results 

CLL : -0.063421 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.1378257274627686 

Total Inference Time : 1.551715612411499 

Total revision time: 8.270811557769775
Best scored revision CLL: -0.064216


Results 

CLL : -0.063421 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 8.295743942260742 

Total Inference Time : 1.551715612411499 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos examples: 58
Target test neg examples: 3423

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 1.6415390968322754
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6778210662470504;  // std dev = 5.201, 183.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=150 */
%   else return 0.07376231799913907;  // std dev = 11.683, 807.000 (wgt'ed) examples reached here.  /* #neg=633 #pos=174 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15106945435935334;  // std dev = 3.73e-09, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else return 0.16179282065654213;  // std dev = 14.190, 980.000 (wgt'ed) examples reached here.  /* #neg=656 #pos=324 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, F) )
%   | | | then return -0.13269848771445245;  // std dev = 3.94e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15359525545567748;  // std dev = 13.951, 938.000 (wgt'ed) examples reached here.  /* #neg=614 #pos=324 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11815639180497053;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return 0.14252972501145944;  // std dev = 13.756, 900.000 (wgt'ed) examples reached here.  /* #neg=576 #pos=324 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09871819094983915;  // std dev = 0.448, 962.000 (wgt'ed) examples reached here.  /* #neg=638 #pos=324 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D), genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.23692698823713432;  // std dev = 1.52e-07, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else return 0.11949694678201785;  // std dev = 13.442, 856.000 (wgt'ed) examples reached here.  /* #neg=532 #pos=324 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, E) )
%   | | then return -0.19678215234663565;  // std dev = 1.39e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09616628878694532;  // std dev = 13.399, 860.000 (wgt'ed) examples reached here.  /* #neg=536 #pos=324 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(A, C), genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1675193891662733;  // std dev = 1.05e-07, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else return 0.08771711347282614;  // std dev = 13.238, 836.000 (wgt'ed) examples reached here.  /* #neg=512 #pos=324 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, D) )
%   | | | then return 0.4295746101286537;  // std dev = 3.719, 118.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=102 */
%   | | | else return -0.09279325037481993;  // std dev = 5.175, 269.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B), genre(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.029546517172187765;  // std dev = 10.790, 550.000 (wgt'ed) examples reached here.  /* #neg=376 #pos=174 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E), genre(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.13428126577892907;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.034787780174881995;  // std dev = 13.131, 885.000 (wgt'ed) examples reached here.  /* #neg=561 #pos=324 */
Inference time using transfer learning 0.9918158054351807
Parameter learned model CLL:-0.3474 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [5.201, 33, 150], 'false': [11.683, 633, 174]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [3.73e-09, 34, 0], 'false': [14.19, 656, 324]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'genre(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [3.94e-08, 37, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.951, 614, 324]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 45, 0], 'false': [13.756, 576, 324]}]
['workedunder(A, B)', {'': 'female(A), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.448, 638, 324]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(B, C)', 'true,false': 'genre(A, D), genre(B, D)', 'true,false,false': 'genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.52e-07, 108, 0], 'false': [13.442, 532, 324]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(A, C)', 'true,false': 'genre(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [1.39e-08, 98, 0], 'true,false,false': [0.0, 0, 0], 'false': [13.399, 536, 324]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(A, C), genre(B, C)', 'true,false': 'genre(B, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.05e-07, 100, 0], 'false': [13.238, 512, 324]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E)', 'true,true,false': 'genre(B, D)', 'false': 'female(B), genre(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [3.719, 16, 102], 'true,true,false,false': [5.175, 221, 48], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.79, 376, 174]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E), genre(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 108, 0], 'true,false': [0.0, 0, 0], 'false': [13.131, 561, 324]}]
{'': [0.1478097285675948, 0.16912425201420722], 'true': [nan, 0.1478097285675913], 'true,false': [nan, 0.1478097285675948], 'true,false,false': [nan, 0.1478097285675948]}
{'': [1.3061447348531253e-17, 0.20546731806101556], 'true': [nan, 1.3061447348531253e-17], 'true,false': [nan, 1.3061447348531253e-17]}
{'': [4.200843876960052e-17, 0.2075018720285473], 'true': [nan, 4.200843876960052e-17], 'true,false': [nan, 4.200843876960052e-17], 'true,false,false': [4.200843876960052e-17, nan]}
{'': [-2.2204460492503132e-17, 0.2102418964366382], 'true': [nan, -2.2204460492503132e-17], 'true,false': [nan, -2.2204460492503132e-17]}
{'': [nan, 0.20084319852407712]}
{'': [2.1382073066854866e-16, 0.21107103904650157], 'true': [nan, 2.1382073066854866e-16], 'true,false': [nan, 2.1382073066854866e-16], 'true,false,false': [nan, 2.1382073066854866e-16]}
{'': [1.9938699217757913e-16, 0.2087526741988097], 'true': [nan, 1.9938699217757913e-16], 'true,false': [1.9938699217757913e-16, nan]}
{'': [1.1102230246251565e-16, 0.20961379200346078], 'true': [nan, 1.1102230246251565e-16], 'true,false': [nan, 1.1102230246251565e-16], 'true,false,false': [nan, 1.1102230246251565e-16]}
{'': [0.1627629072590907, 0.21169331460547233], 'false': [nan, 0.21169331460547164], 'true': [0.1627629072590907, nan], 'true,true': [nan, 0.1627629072590907], 'true,true,false': [0.11720769893708731, 0.09954611542912252]}
{'': [-3.4951465590051226e-17, 0.19481403716304466], 'true': [-3.4951465590051226e-17, nan], 'true,true': [nan, -3.4951465590051226e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- female(B), director(A).;true;true
2;;workedunder(A, B) :- female(B), director(A).;true;true
3;;workedunder(A, B) :- female(B), director(A).;true;true
5;;workedunder(A, B) :- female(B), female(A).;true;true
6;;workedunder(A, B) :- female(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), female(B).;true;true
9;;workedunder(A, B) :- female(A), female(B).;true;true


Refining candidate
***************************
Model training time 3.347386121749878
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1.04e-06, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048766;  // std dev = 6.32e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.1418510649004884;  // std dev = 0.000, 595.000 (wgt'ed) examples reached here.  /* #neg=595 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.12544463852839124;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return -0.12544463852839227;  // std dev = 0.000, 542.000 (wgt'ed) examples reached here.  /* #neg=542 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.11231637819360639;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.11231637819360629;  // std dev = 3.80e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.11231637819360593;  // std dev = 0.000, 530.000 (wgt'ed) examples reached here.  /* #neg=530 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.10159632948783633;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831163;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.10159632948783624;  // std dev = 3.49e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.1015963294878355;  // std dev = 3.41e-07, 552.000 (wgt'ed) examples reached here.  /* #neg=552 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.09269127618926183;  // std dev = 0.000, 628.000 (wgt'ed) examples reached here.  /* #neg=628 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.08518475138839678;  // std dev = 3.16e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948756;  // std dev = 3.86e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.08518475138839679;  // std dev = 1.67e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.08518475138839678;  // std dev = 1.35e-07, 530.000 (wgt'ed) examples reached here.  /* #neg=530 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.07877675473109153;  // std dev = 5.96e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.07877675473109169;  // std dev = 3.33e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return -0.078776754731092;  // std dev = 0.000, 514.000 (wgt'ed) examples reached here.  /* #neg=514 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527653;  // std dev = 2.73e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.07324622576333704;  // std dev = 7.45e-09, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.07324622576333721;  // std dev = 0.000, 524.000 (wgt'ed) examples reached here.  /* #neg=524 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.06842697784420268;  // std dev = 2.58e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.06842697784420365;  // std dev = 0.000, 616.000 (wgt'ed) examples reached here.  /* #neg=616 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080118;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.06419184008202564;  // std dev = 1.99e-07, 494.000 (wgt'ed) examples reached here.  /* #neg=494 */
Inference time using transfer learning 0.9650051593780518
Refined model CLL: -0.064225


******************************************
Best model found
******************************************
Results 

CLL : -0.063422 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.347386121749878 

Total Inference Time : 1.435804843902588 

Total revision time: 8.222776412963867
Best scored revision CLL: -0.064225


Results 

CLL : -0.063422 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 8.247708797454834 

Total Inference Time : 1.435804843902588 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos examples: 178
Target test neg examples: 3543

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 1.48887300491333
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7581489350995118;  // std dev = 2.846, 90.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=81 */
%   else return 0.1026817382804264;  // std dev = 9.640, 503.000 (wgt'ed) examples reached here.  /* #neg=380 #pos=123 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15481584015940328;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0.16501993680170748;  // std dev = 11.203, 609.000 (wgt'ed) examples reached here.  /* #neg=405 #pos=204 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, F) )
%   | | | then return -0.13562252366314623;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1345101613933324;  // std dev = 11.224, 620.000 (wgt'ed) examples reached here.  /* #neg=416 #pos=204 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12049440286638097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0.09171105464192021;  // std dev = 11.369, 666.000 (wgt'ed) examples reached here.  /* #neg=462 #pos=204 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09135128214170013;  // std dev = 0.444, 636.000 (wgt'ed) examples reached here.  /* #neg=432 #pos=204 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D), genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.22886593867686272;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return 0.11619575021437044;  // std dev = 10.831, 559.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=204 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, E) )
%   | | then return -0.19098975924576303;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10178030794361259;  // std dev = 10.738, 547.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=204 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(A, C), genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.16320370453264402;  // std dev = 3.94e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return 0.08361217403789681;  // std dev = 10.691, 545.000 (wgt'ed) examples reached here.  /* #neg=341 #pos=204 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, D) )
%   | | | then return 0.4786976843209113;  // std dev = 2.530, 82.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=75 */
%   | | | else return -0.1965898419298531;  // std dev = 2.073, 142.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B), genre(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0450597631147092;  // std dev = 9.044, 378.000 (wgt'ed) examples reached here.  /* #neg=255 #pos=123 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E), genre(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11979476962354389;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05819482672523025;  // std dev = 10.195, 528.000 (wgt'ed) examples reached here.  /* #neg=324 #pos=204 */
Inference time using transfer learning 1.0259079933166504
Parameter learned model CLL:-0.333229 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.846, 9, 81], 'false': [9.64, 380, 123]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 6, 0], 'false': [11.203, 405, 204]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'genre(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 7, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [11.224, 416, 204]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 11, 0], 'false': [11.369, 462, 204]}]
['workedunder(A, B)', {'': 'female(A), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.444, 432, 204]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(B, C)', 'true,false': 'genre(A, D), genre(B, D)', 'true,false,false': 'genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 61, 0], 'false': [10.831, 355, 204]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(A, C)', 'true,false': 'genre(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 45, 0], 'true,false,false': [0.0, 0, 0], 'false': [10.738, 343, 204]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(A, C), genre(B, C)', 'true,false': 'genre(B, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.94e-08, 53, 0], 'false': [10.691, 341, 204]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E)', 'true,true,false': 'genre(B, D)', 'false': 'female(B), genre(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [2.53, 7, 75], 'true,true,false,false': [2.073, 136, 6], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.044, 255, 123]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E), genre(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 49, 0], 'true,false': [0.0, 0, 0], 'false': [10.195, 324, 204]}]
{'': [0.09000000000000025, 0.18473651134939906], 'true': [nan, 0.08999999999999898], 'true,false': [nan, 0.09000000000000025], 'true,false,false': [nan, 0.09000000000000025]}
{'': [-4.625929269271485e-18, 0.20609393072137883], 'true': [nan, -4.625929269271485e-18], 'true,false': [nan, -4.625929269271485e-18]}
{'': [0.0, 0.20318678901391918], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [0.0, nan]}
{'': [0.0, 0.19407699444645563], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [nan, 0.19745545343167067]}
{'': [-1.8928392550986274e-16, 0.20986199058857116], 'true': [nan, -1.8928392550986274e-16], 'true,false': [nan, -1.8928392550986274e-16], 'true,false,false': [nan, -1.8928392550986274e-16]}
{'': [-8.388351741612294e-17, 0.21080806510022043], 'true': [nan, -8.388351741612294e-17], 'true,false': [-8.388351741612294e-17, nan]}
{'': [2.93266459334947e-17, 0.20972290912115404], 'true': [nan, 2.93266459334947e-17], 'true,false': [nan, 2.93266459334947e-17], 'true,false,false': [nan, 2.93266459334947e-17]}
{'': [0.1535921157650886, 0.2163650726996332], 'false': [nan, 0.21636507269963431], 'true': [0.1535921157650886, nan], 'true,true': [nan, 0.1535921157650886], 'true,true,false': [0.07807852468768521, 0.03026513633030269]}
{'': [-2.945489657168783e-17, 0.19685091005219071], 'true': [-2.945489657168783e-17, nan], 'true,true': [nan, -2.945489657168783e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- female(B), director(A).;true;true
2;;workedunder(A, B) :- female(B), director(A).;true;true
3;;workedunder(A, B) :- female(B), director(A).;true;true
5;;workedunder(A, B) :- female(B), female(A).;true;true
6;;workedunder(A, B) :- female(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), female(B).;true;true
9;;workedunder(A, B) :- female(A), female(B).;true;true


Refining candidate
***************************
Model training time 2.397002696990967
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.1418510649004874;  // std dev = 2.89e-07, 422.000 (wgt'ed) examples reached here.  /* #neg=422 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.1254446385283914;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.7194734122109571;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.1254446385283922;  // std dev = 0.000, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.11231637819360642;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462833;  // std dev = 6.36e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.11231637819360639;  // std dev = 7.45e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return -0.11231637819360642;  // std dev = 0.000, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.10159632948783633;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831014;  // std dev = 2.53e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.10159632948783631;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.1015963294878362;  // std dev = 1.43e-07, 384.000 (wgt'ed) examples reached here.  /* #neg=384 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601491;  // std dev = 4.00e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.09269127618926094;  // std dev = 1.18e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.092691276189261;  // std dev = 1.21e-07, 420.000 (wgt'ed) examples reached here.  /* #neg=420 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.08518475138839679;  // std dev = 1.05e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948845;  // std dev = 4.46e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.08518475138839678;  // std dev = 1.12e-07, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.07877675473109169;  // std dev = 2.98e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.20975771563253498;  // std dev = 3.04e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.07877675473109176;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return -0.07877675473109143;  // std dev = 4.21e-08, 318.000 (wgt'ed) examples reached here.  /* #neg=318 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527791;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return -0.07324622576333713;  // std dev = 6.66e-08, 352.000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420324;  // std dev = 0.000, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367166;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.06842697784420275;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.06419184008202619;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.13400703000801098;  // std dev = 1.38e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.06424014782238639;  // std dev = 0.015, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
Inference time using transfer learning 0.980217695236206
Refined model CLL: -0.063571


******************************************
Best model found
******************************************
Results 

CLL : -0.065856 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.397002696990967 

Total Inference Time : 1.3442485332489014 

Total revision time: 6.803540468215942
Best scored revision CLL: -0.063571


Results 

CLL : -0.065856 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 6.828472852706909 

Total Inference Time : 1.3442485332489014 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos examples: 45
Target test neg examples: 1891

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 1.8528156280517578
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7038936159505732;  // std dev = 4.952, 188.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=159 */
%   else return 0.08148645078332517;  // std dev = 11.758, 797.000 (wgt'ed) examples reached here.  /* #neg=619 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15206272699620219;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return 0.1780542853310396;  // std dev = 14.220, 966.000 (wgt'ed) examples reached here.  /* #neg=629 #pos=337 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, F) )
%   | | | then return -0.1334750566549213;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1399519420567866;  // std dev = 14.300, 1,000.000 (wgt'ed) examples reached here.  /* #neg=663 #pos=337 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11877821385203312;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else return 0.14014127233028897;  // std dev = 13.994, 933.000 (wgt'ed) examples reached here.  /* #neg=596 #pos=337 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08687589762284254;  // std dev = 0.442, 1,035.000 (wgt'ed) examples reached here.  /* #neg=698 #pos=337 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D), genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.236224702416241;  // std dev = 1.30e-07, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else return 0.11744037497475615;  // std dev = 13.697, 894.000 (wgt'ed) examples reached here.  /* #neg=557 #pos=337 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, E) )
%   | | then return -0.19627903522509033;  // std dev = 5.27e-09, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08545187723684984;  // std dev = 13.751, 923.000 (wgt'ed) examples reached here.  /* #neg=586 #pos=337 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(A, C), genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1671455524741389;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else return 0.06540186923533772;  // std dev = 13.755, 930.000 (wgt'ed) examples reached here.  /* #neg=593 #pos=337 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, D) )
%   | | | then return 0.3924520406059664;  // std dev = 4.442, 135.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=111 */
%   | | | else return -0.09969490029557608;  // std dev = 5.265, 275.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B), genre(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.034928098001576306;  // std dev = 10.944, 564.000 (wgt'ed) examples reached here.  /* #neg=386 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E), genre(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.13321410602225434;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05318706913143298;  // std dev = 13.191, 897.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=337 */
Inference time using transfer learning 0.8263325691223145
Parameter learned model CLL:-0.341308 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.952, 29, 159], 'false': [11.758, 619, 178]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 27, 0], 'false': [14.22, 629, 337]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'genre(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 24, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [14.3, 663, 337]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 27, 0], 'false': [13.994, 596, 337]}]
['workedunder(A, B)', {'': 'female(A), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.442, 698, 337]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(B, C)', 'true,false': 'genre(A, D), genre(B, D)', 'true,false,false': 'genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.3e-07, 103, 0], 'false': [13.697, 557, 337]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(A, C)', 'true,false': 'genre(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [5.27e-09, 116, 0], 'true,false,false': [0.0, 0, 0], 'false': [13.751, 586, 337]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(A, C), genre(B, C)', 'true,false': 'genre(B, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 115, 0], 'false': [13.755, 593, 337]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E)', 'true,true,false': 'genre(B, D)', 'false': 'female(B), genre(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [4.442, 24, 111], 'true,true,false,false': [5.265, 227, 48], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.944, 386, 178]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E), genre(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 115, 0], 'true,false': [0.0, 0, 0], 'false': [13.191, 560, 337]}]
{'': [0.13046061566320188, 0.17345786977199693], 'true': [nan, 0.13046061566319855], 'true,false': [nan, 0.13046061566320188], 'true,false,false': [nan, 0.13046061566320188]}
{'': [-2.05596856412066e-17, 0.2093336266337096], 'true': [nan, -2.05596856412066e-17], 'true,false': [nan, -2.05596856412066e-17]}
{'': [-1.3877787807814457e-17, 0.20449303569712737], 'true': [nan, -1.3877787807814457e-17], 'true,false': [nan, -1.3877787807814457e-17], 'true,false,false': [-1.3877787807814457e-17, nan]}
{'': [-2.05596856412066e-17, 0.2098926211566421], 'true': [nan, -2.05596856412066e-17], 'true,false': [nan, -2.05596856412066e-17]}
{'': [nan, 0.1955930145148978]}
{'': [1.638387376145862e-16, 0.20984790953517138], 'true': [nan, 1.638387376145862e-16], 'true,false': [nan, 1.638387376145862e-16], 'true,false,false': [nan, 1.638387376145862e-16]}
{'': [3.062684205862501e-17, 0.20487207764035673], 'true': [nan, 3.062684205862501e-17], 'true,false': [3.062684205862501e-17, nan]}
{'': [-9.654113257610057e-17, 0.20345165293814274], 'true': [nan, -9.654113257610057e-17], 'true,false': [nan, -9.654113257610057e-17], 'true,false,false': [nan, -9.654113257610057e-17]}
{'': [0.16923469794070561, 0.21236968606340015], 'false': [nan, 0.21236968606339968], 'true': [0.16923469794070561, nan], 'true,true': [nan, 0.16923469794070561], 'true,true,false': [0.1461728395061726, 0.10080435793793585]}
{'': [-6.178632484870436e-17, 0.19399023176702576], 'true': [-6.178632484870436e-17, nan], 'true,true': [nan, -6.178632484870436e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- female(B), director(A).;true;true
2;;workedunder(A, B) :- female(B), director(A).;true;true
3;;workedunder(A, B) :- female(B), director(A).;true;true
5;;workedunder(A, B) :- female(B), female(A).;true;true
6;;workedunder(A, B) :- female(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), female(B).;true;true
9;;workedunder(A, B) :- female(A), female(B).;true;true


Refining candidate
***************************
Model training time 3.2554450035095215
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 6.14e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.14185106490048827;  // std dev = 0.000, 587.000 (wgt'ed) examples reached here.  /* #neg=587 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.12544463852839136;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.1254446385283923;  // std dev = 0.000, 581.000 (wgt'ed) examples reached here.  /* #neg=581 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.11231637819360639;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.11231637819360629;  // std dev = 3.94e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.11231637819360575;  // std dev = 0.000, 543.000 (wgt'ed) examples reached here.  /* #neg=543 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.10159632948783631;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10159632948783623;  // std dev = 3.33e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.10159632948783541;  // std dev = 3.72e-07, 579.000 (wgt'ed) examples reached here.  /* #neg=579 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.0926912761892619;  // std dev = 0.000, 649.000 (wgt'ed) examples reached here.  /* #neg=649 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.08518475138839678;  // std dev = 3.33e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.08518475138839679;  // std dev = 1.97e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.08518475138839678;  // std dev = 1.28e-07, 495.000 (wgt'ed) examples reached here.  /* #neg=495 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.07877675473109157;  // std dev = 5.27e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07877675473109172;  // std dev = 2.58e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.0787767547310921;  // std dev = 0.000, 536.000 (wgt'ed) examples reached here.  /* #neg=536 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 1.05e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.07324622576333707;  // std dev = 8.94e-08, 562.000 (wgt'ed) examples reached here.  /* #neg=562 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0684269778442027;  // std dev = 1.58e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.06842697784420362;  // std dev = 0.000, 581.000 (wgt'ed) examples reached here.  /* #neg=581 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080119;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return -0.06419184008202562;  // std dev = 2.10e-07, 529.000 (wgt'ed) examples reached here.  /* #neg=529 */
Inference time using transfer learning 0.8662383556365967
Refined model CLL: -0.064062


******************************************
Best model found
******************************************
Results 

CLL : -0.063847 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.2554450035095215 

Total Inference Time : 1.4965629577636719 

Total revision time: 8.608467102050781
Best scored revision CLL: -0.064062


Results 

CLL : -0.063847 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 8.633399486541748 

Total Inference Time : 1.4965629577636719 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos examples: 45
Target test neg examples: 2071

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.0379343032836914
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7383884560575934;  // std dev = 4.196, 167.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=147 */
%   else return 0.08300100610542781;  // std dev = 12.136, 845.000 (wgt'ed) examples reached here.  /* #neg=655 #pos=190 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15225811616240834;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return 0.1740086149855105;  // std dev = 14.282, 978.000 (wgt'ed) examples reached here.  /* #neg=641 #pos=337 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, F) )
%   | | | then return -0.13362770449216058;  // std dev = 2.36e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1406038837693077;  // std dev = 14.297, 1,005.000 (wgt'ed) examples reached here.  /* #neg=668 #pos=337 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11890036757402492;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return 0.14073940261338627;  // std dev = 14.001, 936.000 (wgt'ed) examples reached here.  /* #neg=599 #pos=337 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09700792650345635;  // std dev = 0.449, 998.000 (wgt'ed) examples reached here.  /* #neg=661 #pos=337 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D), genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.23782534675805425;  // std dev = 5.96e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else return 0.10664710980991852;  // std dev = 13.815, 923.000 (wgt'ed) examples reached here.  /* #neg=586 #pos=337 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, E) )
%   | | then return -0.19742532171639132;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0779273285108741;  // std dev = 13.878, 943.000 (wgt'ed) examples reached here.  /* #neg=606 #pos=337 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(A, C), genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.16799701257765104;  // std dev = 7.60e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else return 0.063341467405113;  // std dev = 13.840, 942.000 (wgt'ed) examples reached here.  /* #neg=605 #pos=337 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, D) )
%   | | | then return 0.37265694286741613;  // std dev = 4.494, 130.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=105 */
%   | | | else return -0.10202312583194299;  // std dev = 4.853, 256.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=42 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B), genre(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04222886168408301;  // std dev = 11.259, 595.000 (wgt'ed) examples reached here.  /* #neg=405 #pos=190 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E), genre(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1335521397615521;  // std dev = 5.89e-09, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04291266348454561;  // std dev = 13.485, 918.000 (wgt'ed) examples reached here.  /* #neg=581 #pos=337 */
Inference time using transfer learning 0.8533468246459961
Parameter learned model CLL:-0.345308 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.196, 20, 147], 'false': [12.136, 655, 190]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 29, 0], 'false': [14.282, 641, 337]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'genre(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [2.36e-08, 40, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [14.297, 668, 337]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 35, 0], 'false': [14.001, 599, 337]}]
['workedunder(A, B)', {'': 'female(A), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.449, 661, 337]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(B, C)', 'true,false': 'genre(A, D), genre(B, D)', 'true,false,false': 'genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [5.96e-08, 95, 0], 'false': [13.815, 586, 337]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(A, C)', 'true,false': 'genre(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 79, 0], 'true,false,false': [0.0, 0, 0], 'false': [13.878, 606, 337]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(A, C), genre(B, C)', 'true,false': 'genre(B, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.6e-08, 86, 0], 'false': [13.84, 605, 337]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E)', 'true,true,false': 'genre(B, D)', 'false': 'female(B), genre(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [4.494, 25, 105], 'true,true,false,false': [4.853, 214, 42], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.259, 405, 190]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E), genre(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [5.89e-09, 93, 0], 'true,false': [0.0, 0, 0], 'false': [13.485, 581, 337]}]
{'': [0.10541790670157236, 0.17429361717026767], 'true': [nan, 0.10541790670156921], 'true,false': [nan, 0.10541790670157236], 'true,false,false': [nan, 0.10541790670157236]}
{'': [-7.656710514656252e-18, 0.20856176727775474], 'true': [nan, -7.656710514656252e-18], 'true,false': [nan, -7.656710514656252e-18]}
{'': [1.3877787807814457e-17, 0.20338275896482316], 'true': [nan, 1.3877787807814457e-17], 'true,false': [nan, 1.3877787807814457e-17], 'true,false,false': [1.3877787807814457e-17, nan]}
{'': [0.0, 0.20943055126757976], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [nan, 0.2011895810520223]}
{'': [3.739698609263685e-17, 0.20677134869422692], 'true': [nan, 3.739698609263685e-17], 'true,false': [nan, 3.739698609263685e-17], 'true,false,false': [nan, 3.739698609263685e-17]}
{'': [-1.686414720949605e-17, 0.20423200277559028], 'true': [nan, -1.686414720949605e-17], 'true,false': [-1.686414720949605e-17, nan]}
{'': [6.712976427966062e-17, 0.20335367751379113], 'true': [nan, 6.712976427966062e-17], 'true,false': [nan, 6.712976427966062e-17], 'true,false,false': [nan, 6.712976427966062e-17]}
{'': [0.1636509958363723, 0.2130406792955375], 'false': [nan, 0.21304067929553802], 'true': [0.1636509958363723, nan], 'true,true': [nan, 0.1636509958363723], 'true,true,false': [0.15532544378698265, 0.09199344790314981]}
{'': [3.581364595565021e-17, 0.19809104509437456], 'true': [3.581364595565021e-17, nan], 'true,true': [nan, 3.581364595565021e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- female(B), director(A).;true;true
2;;workedunder(A, B) :- female(B), director(A).;true;true
3;;workedunder(A, B) :- female(B), director(A).;true;true
5;;workedunder(A, B) :- female(B), female(A).;true;true
6;;workedunder(A, B) :- female(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), female(B).;true;true
9;;workedunder(A, B) :- female(A), female(B).;true;true


Refining candidate
***************************
Model training time 3.468301296234131
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 5.77e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.1418510649004882;  // std dev = 0.000, 575.000 (wgt'ed) examples reached here.  /* #neg=575 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.12544463852839127;  // std dev = 3.33e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.1254446385283915;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else return -0.12544463852839227;  // std dev = 0.000, 556.000 (wgt'ed) examples reached here.  /* #neg=556 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.11231637819360638;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.11231637819360638;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return -0.11231637819360571;  // std dev = 0.000, 594.000 (wgt'ed) examples reached here.  /* #neg=594 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.10159632948783628;  // std dev = 1.83e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10159632948783624;  // std dev = 3.33e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.10159632948783535;  // std dev = 3.87e-07, 602.000 (wgt'ed) examples reached here.  /* #neg=602 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.09269127618926164;  // std dev = 0.000, 559.000 (wgt'ed) examples reached here.  /* #neg=559 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.08518475138839679;  // std dev = 1.49e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.0851847513883968;  // std dev = 1.97e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.08518475138839678;  // std dev = 1.41e-07, 539.000 (wgt'ed) examples reached here.  /* #neg=539 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.07877675473109161;  // std dev = 4.83e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.07877675473109212;  // std dev = 0.000, 532.000 (wgt'ed) examples reached here.  /* #neg=532 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 7.45e-09, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.07324622576333718;  // std dev = 0.000, 504.000 (wgt'ed) examples reached here.  /* #neg=504 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06842697784420268;  // std dev = 2.47e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.06842697784420367;  // std dev = 0.000, 624.000 (wgt'ed) examples reached here.  /* #neg=624 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.06419184008202619;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080119;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.06419184008202566;  // std dev = 2.02e-07, 524.000 (wgt'ed) examples reached here.  /* #neg=524 */
Inference time using transfer learning 0.7923367023468018
Refined model CLL: -0.064087


******************************************
Best model found
******************************************
Results 

CLL : -0.063719 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.468301296234131 

Total Inference Time : 1.5940008163452148 

Total revision time: 8.926851749420166
Best scored revision CLL: -0.064087


Results 

CLL : -0.063719 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 8.951784133911133 

Total Inference Time : 1.5940008163452148 

Run: 5

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos examples: 56
Target test neg examples: 3308

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 1.860051155090332
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7043027812533558;  // std dev = 4.690, 169.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=143 */
%   else return 0.07319006318411697;  // std dev = 11.985, 851.000 (wgt'ed) examples reached here.  /* #neg=668 #pos=183 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15099607877809176;  // std dev = 2.63e-09, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return 0.17506273342290393;  // std dev = 14.091, 947.000 (wgt'ed) examples reached here.  /* #neg=621 #pos=326 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, F) )
%   | | | then return -0.13264108242353767;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1404441052893086;  // std dev = 14.135, 974.000 (wgt'ed) examples reached here.  /* #neg=648 #pos=326 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11811039997868512;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return 0.1514724814542951;  // std dev = 13.705, 883.000 (wgt'ed) examples reached here.  /* #neg=557 #pos=326 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08428735986332464;  // std dev = 0.444, 1,008.000 (wgt'ed) examples reached here.  /* #neg=682 #pos=326 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D), genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.23585447653485078;  // std dev = 1.43e-07, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else return 0.11520645662656269;  // std dev = 13.527, 881.000 (wgt'ed) examples reached here.  /* #neg=555 #pos=326 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, E) )
%   | | then return -0.19601369072804586;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0961770181860451;  // std dev = 13.476, 871.000 (wgt'ed) examples reached here.  /* #neg=545 #pos=326 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(A, C), genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.16694831354181477;  // std dev = 5.16e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else return 0.057569528449166824;  // std dev = 13.683, 920.000 (wgt'ed) examples reached here.  /* #neg=594 #pos=326 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, D) )
%   | | | then return 0.47319903932549856;  // std dev = 3.008, 105.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=95 */
%   | | | else return -0.0736806677534986;  // std dev = 5.072, 246.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B), genre(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0096532688285281;  // std dev = 11.318, 626.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=183 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E), genre(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.13610314007896915;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.030953596147643127;  // std dev = 13.372, 923.000 (wgt'ed) examples reached here.  /* #neg=597 #pos=326 */
Inference time using transfer learning 1.080674409866333
Parameter learned model CLL:-0.344666 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.69, 26, 143], 'false': [11.985, 668, 183]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.63e-09, 36, 0], 'false': [14.091, 621, 326]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'genre(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 32, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [14.135, 648, 326]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 45, 0], 'false': [13.705, 557, 326]}]
['workedunder(A, B)', {'': 'female(A), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.444, 682, 326]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(B, C)', 'true,false': 'genre(A, D), genre(B, D)', 'true,false,false': 'genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.43e-07, 90, 0], 'false': [13.527, 555, 326]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(A, C)', 'true,false': 'genre(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 87, 0], 'true,false,false': [0.0, 0, 0], 'false': [13.476, 545, 326]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(A, C), genre(B, C)', 'true,false': 'genre(B, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [5.16e-08, 85, 0], 'false': [13.683, 594, 326]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E)', 'true,true,false': 'genre(B, D)', 'false': 'female(B), genre(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [3.008, 10, 95], 'true,true,false,false': [5.072, 198, 48], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.318, 443, 183]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E), genre(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 74, 0], 'true,false': [0.0, 0, 0], 'false': [13.372, 597, 326]}]
{'': [0.13017751479290463, 0.16879844131670682], 'true': [nan, 0.13017751479290093], 'true,false': [nan, 0.13017751479290463], 'true,false,false': [nan, 0.13017751479290463]}
{'': [6.1679056923619804e-18, 0.2096760838000082], 'true': [nan, 6.1679056923619804e-18], 'true,false': [nan, 6.1679056923619804e-18]}
{'': [-6.938893903907228e-18, 0.20514028102923626], 'true': [nan, -6.938893903907228e-18], 'true,false': [nan, -6.938893903907228e-18], 'true,false,false': [-6.938893903907228e-18, nan]}
{'': [-2.2204460492503132e-17, 0.21270357692190467], 'true': [nan, -2.2204460492503132e-17], 'true,false': [nan, -2.2204460492503132e-17]}
{'': [nan, 0.19741065483890502]}
{'': [2.2697892947892088e-16, 0.20769883775719766], 'true': [nan, 2.2697892947892088e-16], 'true,false': [nan, 2.2697892947892088e-16], 'true,false,false': [nan, 2.2697892947892088e-16]}
{'': [-6.635815779368752e-17, 0.20850882201794696], 'true': [nan, -6.635815779368752e-17], 'true,false': [-6.635815779368752e-17, nan]}
{'': [3.134747363647501e-17, 0.20351906299562747], 'true': [nan, 3.134747363647501e-17], 'true,false': [nan, 3.134747363647501e-17], 'true,false,false': [nan, 3.134747363647501e-17]}
{'': [0.16178073363355286, 0.20463124595818585], 'false': [nan, 0.2046312459581853], 'true': [0.16178073363355286, nan], 'true,true': [nan, 0.16178073363355286], 'true,true,false': [0.08616780045351446, 0.10458694409318846]}
{'': [-1.800361661554308e-17, 0.19373918199243023], 'true': [-1.800361661554308e-17, nan], 'true,true': [nan, -1.800361661554308e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- female(B), director(A).;true;true
2;;workedunder(A, B) :- female(B), director(A).;true;true
3;;workedunder(A, B) :- female(B), director(A).;true;true
5;;workedunder(A, B) :- female(B), female(A).;true;true
6;;workedunder(A, B) :- female(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), female(B).;true;true
9;;workedunder(A, B) :- female(A), female(B).;true;true


Refining candidate
***************************
Model training time 3.2648000717163086
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1.05e-06, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048766;  // std dev = 6.50e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.14185106490048868;  // std dev = 0.000, 624.000 (wgt'ed) examples reached here.  /* #neg=624 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.12544463852839124;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.12544463852839155;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.12544463852839233;  // std dev = 0.000, 601.000 (wgt'ed) examples reached here.  /* #neg=601 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.11231637819360621;  // std dev = 2.58e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.11231637819360626;  // std dev = 4.83e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.11231637819360574;  // std dev = 0.000, 600.000 (wgt'ed) examples reached here.  /* #neg=600 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.10159632948783633;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831163;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.10159632948783626;  // std dev = 3.16e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.10159632948783559;  // std dev = 3.17e-07, 536.000 (wgt'ed) examples reached here.  /* #neg=536 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.09269127618926168;  // std dev = 0.000, 589.000 (wgt'ed) examples reached here.  /* #neg=589 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.08518475138839678;  // std dev = 1.49e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948756;  // std dev = 3.86e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.08518475138839679;  // std dev = 1.97e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.08518475138839678;  // std dev = 1.30e-07, 506.000 (wgt'ed) examples reached here.  /* #neg=506 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.07877675473109164;  // std dev = 2.79e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.46e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.07877675473109173;  // std dev = 2.36e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.0787767547310921;  // std dev = 0.000, 520.000 (wgt'ed) examples reached here.  /* #neg=520 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.07324622576333703;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1770964977452765;  // std dev = 2.76e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.07324622576333704;  // std dev = 7.45e-09, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.07324622576333721;  // std dev = 0.000, 521.000 (wgt'ed) examples reached here.  /* #neg=521 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.0684269778442027;  // std dev = 1.39e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.06842697784420361;  // std dev = 0.000, 590.000 (wgt'ed) examples reached here.  /* #neg=590 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.06419184008202618;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080118;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.0641918400820257;  // std dev = 1.80e-07, 457.000 (wgt'ed) examples reached here.  /* #neg=457 */
Inference time using transfer learning 0.9345040321350098
Refined model CLL: -0.064216


******************************************
Best model found
******************************************
Results 

CLL : -0.063421 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.2648000717163086 

Total Inference Time : 1.5213112831115723 

Total revision time: 8.49870228767395
Best scored revision CLL: -0.064216


Results 

CLL : -0.063421 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 8.522050619125366 

Total Inference Time : 1.5213112831115723 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos examples: 58
Target test neg examples: 3423

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 1.7615258693695068
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7104216623722368;  // std dev = 4.707, 176.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=150 */
%   else return 0.07840209965647293;  // std dev = 11.648, 790.000 (wgt'ed) examples reached here.  /* #neg=616 #pos=174 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1516654584768348;  // std dev = 4.56e-09, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return 0.18119000003125818;  // std dev = 13.928, 919.000 (wgt'ed) examples reached here.  /* #neg=595 #pos=324 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, F) )
%   | | | then return -0.13316457608947987;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15294518791487777;  // std dev = 13.869, 926.000 (wgt'ed) examples reached here.  /* #neg=602 #pos=324 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11852968032713374;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return 0.1255844779473751;  // std dev = 13.851, 932.000 (wgt'ed) examples reached here.  /* #neg=608 #pos=324 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1151103262516509;  // std dev = 0.451, 914.000 (wgt'ed) examples reached here.  /* #neg=590 #pos=324 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D), genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.24107993288695817;  // std dev = 9.42e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else return 0.12009367911321497;  // std dev = 13.343, 841.000 (wgt'ed) examples reached here.  /* #neg=517 #pos=324 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, E) )
%   | | then return -0.1997515590399104;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09339344464880892;  // std dev = 13.308, 856.000 (wgt'ed) examples reached here.  /* #neg=532 #pos=324 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(A, C), genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1697219126268833;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else return 0.057910250616215665;  // std dev = 13.506, 892.000 (wgt'ed) examples reached here.  /* #neg=568 #pos=324 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, D) )
%   | | | then return 0.3966048512096765;  // std dev = 4.089, 122.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=102 */
%   | | | else return -0.08346310169033216;  // std dev = 5.093, 259.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B), genre(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0167710554680715;  // std dev = 10.914, 575.000 (wgt'ed) examples reached here.  /* #neg=401 #pos=174 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E), genre(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1369585476726661;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0365950323670573;  // std dev = 13.143, 888.000 (wgt'ed) examples reached here.  /* #neg=564 #pos=324 */
Inference time using transfer learning 1.024092197418213
Parameter learned model CLL:-0.344405 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.707, 26, 150], 'false': [11.648, 616, 174]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [4.56e-09, 26, 0], 'false': [13.928, 595, 324]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'genre(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 40, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.869, 602, 324]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 32, 0], 'false': [13.851, 608, 324]}]
['workedunder(A, B)', {'': 'female(A), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.451, 590, 324]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(B, C)', 'true,false': 'genre(A, D), genre(B, D)', 'true,false,false': 'genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [9.42e-08, 108, 0], 'false': [13.343, 517, 324]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(A, C)', 'true,false': 'genre(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 100, 0], 'true,false,false': [0.0, 0, 0], 'false': [13.308, 532, 324]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(A, C), genre(B, C)', 'true,false': 'genre(B, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 97, 0], 'false': [13.506, 568, 324]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E)', 'true,true,false': 'genre(B, D)', 'false': 'female(B), genre(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [4.089, 20, 102], 'true,true,false,false': [5.093, 211, 48], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.914, 401, 174]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E), genre(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 95, 0], 'true,false': [0.0, 0, 0], 'false': [13.143, 564, 324]}]
{'': [0.12590392561984026, 0.1717417080596065], 'true': [nan, 0.12590392561983646], 'true,false': [nan, 0.12590392561984026], 'true,false,false': [nan, 0.12590392561984026]}
{'': [2.1350442781253012e-17, 0.21108047324350374], 'true': [nan, 2.1350442781253012e-17], 'true,false': [nan, 2.1350442781253012e-17]}
{'': [-3.608224830031759e-17, 0.20772922259774765], 'true': [nan, -3.608224830031759e-17], 'true,false': [nan, -3.608224830031759e-17], 'true,false,false': [-3.608224830031759e-17, nan]}
{'': [-1.734723475976807e-17, 0.20585124709818062], 'true': [nan, -1.734723475976807e-17], 'true,false': [nan, -1.734723475976807e-17]}
{'': [nan, 0.2036179821540407]}
{'': [8.22387425648264e-17, 0.21169026776021813], 'true': [nan, 8.22387425648264e-17], 'true,false': [nan, 8.22387425648264e-17], 'true,false,false': [nan, 8.22387425648264e-17]}
{'': [4.440892098500626e-18, 0.2069059519683247], 'true': [nan, 4.440892098500626e-18], 'true,false': [4.440892098500626e-18, nan]}
{'': [-9.614302481290016e-17, 0.20449563229707282], 'true': [nan, -9.614302481290016e-17], 'true,false': [nan, -9.614302481290016e-17], 'true,false,false': [nan, -9.614302481290016e-17]}
{'': [0.16213914904711482, 0.2071447031285835], 'false': [nan, 0.2071447031285833], 'true': [0.16213914904711482, nan], 'true,true': [nan, 0.16213914904711482], 'true,true,false': [0.1370599301263105, 0.10015525803955592]}
{'': [-9.349246523159212e-17, 0.1945135388984236], 'true': [-9.349246523159212e-17, nan], 'true,true': [nan, -9.349246523159212e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- female(B), director(A).;true;true
2;;workedunder(A, B) :- female(B), director(A).;true;true
3;;workedunder(A, B) :- female(B), director(A).;true;true
5;;workedunder(A, B) :- female(B), female(A).;true;true
6;;workedunder(A, B) :- female(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), female(B).;true;true
9;;workedunder(A, B) :- female(A), female(B).;true;true


Refining candidate
***************************
Model training time 3.176410436630249
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1.04e-06, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048768;  // std dev = 4.47e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.1418510649004883;  // std dev = 0.000, 595.000 (wgt'ed) examples reached here.  /* #neg=595 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.12544463852839124;  // std dev = 3.80e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.12544463852839227;  // std dev = 0.000, 575.000 (wgt'ed) examples reached here.  /* #neg=575 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.11231637819360642;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.11231637819360632;  // std dev = 2.79e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.11231637819360575;  // std dev = 0.000, 540.000 (wgt'ed) examples reached here.  /* #neg=540 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.10159632948783633;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831163;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.10159632948783631;  // std dev = 7.45e-09, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return -0.10159632948783552;  // std dev = 3.40e-07, 541.000 (wgt'ed) examples reached here.  /* #neg=541 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09269127618926103;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.09269127618926182;  // std dev = 0.000, 629.000 (wgt'ed) examples reached here.  /* #neg=629 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.08518475138839678;  // std dev = 2.79e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948756;  // std dev = 3.86e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.08518475138839679;  // std dev = 1.05e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.08518475138839678;  // std dev = 1.30e-07, 507.000 (wgt'ed) examples reached here.  /* #neg=507 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.07877675473109155;  // std dev = 5.87e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.07877675473109169;  // std dev = 2.79e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.07877675473109186;  // std dev = 0.000, 493.000 (wgt'ed) examples reached here.  /* #neg=493 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527653;  // std dev = 2.73e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.07324622576333704;  // std dev = 7.45e-09, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.0732462257633372;  // std dev = 3.65e-08, 466.000 (wgt'ed) examples reached here.  /* #neg=466 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.06842697784420268;  // std dev = 2.24e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.06842697784420365;  // std dev = 0.000, 602.000 (wgt'ed) examples reached here.  /* #neg=602 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080118;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.06419184008202582;  // std dev = 1.62e-07, 463.000 (wgt'ed) examples reached here.  /* #neg=463 */
Inference time using transfer learning 0.9481091499328613
Refined model CLL: -0.064225


******************************************
Best model found
******************************************
Results 

CLL : -0.063422 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.176410436630249 

Total Inference Time : 1.379061222076416 

Total revision time: 8.034228801727295
Best scored revision CLL: -0.064225


Results 

CLL : -0.063422 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 8.057577133178711 

Total Inference Time : 1.379061222076416 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos examples: 178
Target test neg examples: 3543

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 1.514082670211792
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7682612946500736;  // std dev = 2.698, 89.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=81 */
%   else return 0.07584805014375993;  // std dev = 9.809, 565.000 (wgt'ed) examples reached here.  /* #neg=442 #pos=123 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15133713895629783;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return 0.16790545266562926;  // std dev = 11.178, 609.000 (wgt'ed) examples reached here.  /* #neg=405 #pos=204 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, F) )
%   | | | then return -0.13290786583690514;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16213758414238277;  // std dev = 10.967, 576.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=204 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11832411084086807;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return 0.12406461469107087;  // std dev = 11.036, 597.000 (wgt'ed) examples reached here.  /* #neg=393 #pos=204 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0939931618619303;  // std dev = 0.446, 616.000 (wgt'ed) examples reached here.  /* #neg=412 #pos=204 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D), genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.235762955106114;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return 0.09235751045965566;  // std dev = 10.913, 587.000 (wgt'ed) examples reached here.  /* #neg=383 #pos=204 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, E) )
%   | | then return -0.19594808416369616;  // std dev = 9.86e-09, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09459101015515436;  // std dev = 10.740, 551.000 (wgt'ed) examples reached here.  /* #neg=347 #pos=204 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(A, C), genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.16689953789316064;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return 0.08157319248325026;  // std dev = 10.653, 545.000 (wgt'ed) examples reached here.  /* #neg=341 #pos=204 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, D) )
%   | | | then return 0.502939703223769;  // std dev = 1.949, 79.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=75 */
%   | | | else return -0.20113839134533287;  // std dev = 2.046, 136.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B), genre(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.021626609092237778;  // std dev = 9.207, 402.000 (wgt'ed) examples reached here.  /* #neg=279 #pos=123 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E), genre(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12176726164711056;  // std dev = 6.04e-09, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03412564219160513;  // std dev = 10.322, 573.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=204 */
Inference time using transfer learning 1.0845909118652344
Parameter learned model CLL:-0.324745 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.698, 8, 81], 'false': [9.809, 442, 123]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 14, 0], 'false': [11.178, 405, 204]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'genre(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 9, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [10.967, 372, 204]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 13, 0], 'false': [11.036, 393, 204]}]
['workedunder(A, B)', {'': 'female(A), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.446, 412, 204]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(B, C)', 'true,false': 'genre(A, D), genre(B, D)', 'true,false,false': 'genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 65, 0], 'false': [10.913, 383, 204]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(A, C)', 'true,false': 'genre(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [9.86e-09, 56, 0], 'true,false,false': [0.0, 0, 0], 'false': [10.74, 347, 204]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(A, C), genre(B, C)', 'true,false': 'genre(B, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 64, 0], 'false': [10.653, 341, 204]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E)', 'true,true,false': 'genre(B, D)', 'false': 'female(B), genre(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [1.949, 4, 75], 'true,true,false,false': [2.046, 130, 6], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.207, 279, 123]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E), genre(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [6.04e-09, 68, 0], 'true,false': [0.0, 0, 0], 'false': [10.322, 369, 204]}]
{'': [0.08180785254387087, 0.17030621035319946], 'true': [nan, 0.08180785254386982], 'true,false': [nan, 0.08180785254387087], 'true,false,false': [nan, 0.08180785254387087]}
{'': [-3.96508223080413e-18, 0.20517616334204242], 'true': [nan, -3.96508223080413e-18], 'true,false': [nan, -3.96508223080413e-18]}
{'': [0.0, 0.208824510364926], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [0.0, nan]}
{'': [-6.4051328343759035e-18, 0.2039995154452539], 'true': [nan, -6.4051328343759035e-18], 'true,false': [nan, -6.4051328343759035e-18]}
{'': [nan, 0.19933132728495745]}
{'': [-2.459571008400347e-16, 0.20288222928661473], 'true': [nan, -2.459571008400347e-16], 'true,false': [nan, -2.459571008400347e-16], 'true,false,false': [nan, -2.459571008400347e-16]}
{'': [9.516197353929913e-17, 0.209352268285673], 'true': [nan, 9.516197353929913e-17], 'true,false': [9.516197353929913e-17, nan]}
{'': [-1.0408340855860843e-17, 0.20822207270441695], 'true': [nan, -1.0408340855860843e-17], 'true,false': [nan, -1.0408340855860843e-17], 'true,false,false': [nan, -1.0408340855860843e-17]}
{'': [0.1523483748919598, 0.21085401169086654], 'false': [nan, 0.2108540116908672], 'true': [0.1523483748919598, nan], 'true,true': [nan, 0.1523483748919598], 'true,true,false': [0.048069219676333236, 0.030771825718132542]}
{'': [3.2653618371328135e-17, 0.18592879263945156], 'true': [3.2653618371328135e-17, nan], 'true,true': [nan, 3.2653618371328135e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- female(B), director(A).;true;true
2;;workedunder(A, B) :- female(B), director(A).;true;true
3;;workedunder(A, B) :- female(B), director(A).;true;true
5;;workedunder(A, B) :- female(B), female(A).;true;true
6;;workedunder(A, B) :- female(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), female(B).;true;true
9;;workedunder(A, B) :- female(A), female(B).;true;true


Refining candidate
***************************
Model training time 2.442707061767578
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.14185106490048752;  // std dev = 2.44e-07, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.1254446385283914;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.7194734122109571;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return -0.12544463852839224;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.11231637819360642;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462833;  // std dev = 6.36e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.11231637819360635;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.11231637819360633;  // std dev = 0.000, 394.000 (wgt'ed) examples reached here.  /* #neg=394 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.10159632948783635;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( actor(B) )
%   | then return -0.1015963294878362;  // std dev = 1.40e-07, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831014;  // std dev = 2.53e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601491;  // std dev = 4.00e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.09269127618926093;  // std dev = 1.18e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.09269127618926107;  // std dev = 1.05e-07, 431.000 (wgt'ed) examples reached here.  /* #neg=431 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.08518475138839679;  // std dev = 1.05e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948845;  // std dev = 4.46e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.08518475138839683;  // std dev = 1.29e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return -0.08518475138839678;  // std dev = 1.03e-07, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.07877675473109176;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else if ( actor(B) )
%   | then return -0.07877675473109141;  // std dev = 6.99e-08, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.20975771563253498;  // std dev = 3.04e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.07324622576333703;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527791;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.07346524452759644;  // std dev = 0.077, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367166;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.06842697784420275;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.06860197915647752;  // std dev = 0.073, 391.000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.0641813283365663;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.13400703000801098;  // std dev = 1.38e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.0641918400820262;  // std dev = 5.27e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.06416817486842055;  // std dev = 0.000, 328.000 (wgt'ed) examples reached here.  /* #neg=328 */
Inference time using transfer learning 1.0107719898223877
Refined model CLL: -0.063628


******************************************
Best model found
******************************************
Results 

CLL : -0.067481 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.442707061767578 

Total Inference Time : 1.3664650917053223 

Total revision time: 6.969489336013794
Best scored revision CLL: -0.063628


Results 

CLL : -0.067481 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 6.99283766746521 

Total Inference Time : 1.3664650917053223 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos examples: 45
Target test neg examples: 1891

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 1.855891227722168
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7564540198452722;  // std dev = 4.021, 177.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=159 */
%   else return 0.07260676642481192;  // std dev = 11.825, 830.000 (wgt'ed) examples reached here.  /* #neg=652 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15092131753482477;  // std dev = 6.72e-09, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return 0.17538288284931913;  // std dev = 14.182, 970.000 (wgt'ed) examples reached here.  /* #neg=633 #pos=337 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, F) )
%   | | | then return -0.13258258765051698;  // std dev = 3.16e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14103757671283365;  // std dev = 14.205, 997.000 (wgt'ed) examples reached here.  /* #neg=660 #pos=337 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11806353164070993;  // std dev = 2.63e-09, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else return 0.13603387076273477;  // std dev = 13.952, 944.000 (wgt'ed) examples reached here.  /* #neg=607 #pos=337 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08715113287236281;  // std dev = 0.441, 1,031.000 (wgt'ed) examples reached here.  /* #neg=694 #pos=337 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D), genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.23365482472951896;  // std dev = 4.21e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else return 0.125217481859567;  // std dev = 13.518, 878.000 (wgt'ed) examples reached here.  /* #neg=541 #pos=337 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, E) )
%   | | then return -0.19443552980180068;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08963205655178923;  // std dev = 13.612, 906.000 (wgt'ed) examples reached here.  /* #neg=569 #pos=337 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(A, C), genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.16577411187760294;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else return 0.0718012534438834;  // std dev = 13.594, 905.000 (wgt'ed) examples reached here.  /* #neg=568 #pos=337 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, D) )
%   | | | then return 0.4350620812382815;  // std dev = 3.635, 126.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=111 */
%   | | | else return -0.10548900797319792;  // std dev = 5.122, 312.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=48 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B), genre(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.012057496951296385;  // std dev = 11.118, 609.000 (wgt'ed) examples reached here.  /* #neg=431 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E), genre(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.13157076663194864;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03870076101795132;  // std dev = 13.314, 916.000 (wgt'ed) examples reached here.  /* #neg=579 #pos=337 */
Inference time using transfer learning 0.8089096546173096
Parameter learned model CLL:-0.3358 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.021, 18, 159], 'false': [11.825, 652, 178]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [6.72e-09, 48, 0], 'false': [14.182, 633, 337]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'genre(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [3.16e-08, 40, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [14.205, 660, 337]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.63e-09, 33, 0], 'false': [13.952, 607, 337]}]
['workedunder(A, B)', {'': 'female(A), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.441, 694, 337]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(B, C)', 'true,false': 'genre(A, D), genre(B, D)', 'true,false,false': 'genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.21e-08, 108, 0], 'false': [13.518, 541, 337]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(A, C)', 'true,false': 'genre(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 86, 0], 'true,false,false': [0.0, 0, 0], 'false': [13.612, 569, 337]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(A, C), genre(B, C)', 'true,false': 'genre(B, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 106, 0], 'false': [13.594, 568, 337]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E)', 'true,true,false': 'genre(B, D)', 'false': 'female(B), genre(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [3.635, 15, 111], 'true,true,false,false': [5.122, 264, 48], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.118, 431, 178]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E), genre(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 117, 0], 'true,false': [0.0, 0, 0], 'false': [13.314, 579, 337]}]
{'': [0.09135305946567686, 0.16846566990855047], 'true': [nan, 0.09135305946567308], 'true,false': [nan, 0.09135305946567686], 'true,false,false': [nan, 0.09135305946567686]}
{'': [4.625929269271486e-17, 0.20734896496609814], 'true': [nan, 4.625929269271486e-17], 'true,false': [nan, 4.625929269271486e-17]}
{'': [2.4980018054066023e-17, 0.2024004893196801], 'true': [nan, 2.4980018054066023e-17], 'true,false': [nan, 2.4980018054066023e-17], 'true,false,false': [2.4980018054066023e-17, nan]}
{'': [8.41078048958452e-18, 0.2062125997490366], 'true': [nan, 8.41078048958452e-18], 'true,false': [nan, 8.41078048958452e-18]}
{'': [nan, 0.19477847964030187]}
{'': [1.644774851296528e-17, 0.20813676843297602], 'true': [nan, 1.644774851296528e-17], 'true,false': [nan, 1.644774851296528e-17], 'true,false,false': [nan, 1.644774851296528e-17]}
{'': [-1.0844038845175947e-16, 0.20450297749287774], 'true': [nan, -1.0844038845175947e-16], 'true,false': [-1.0844038845175947e-16, nan]}
{'': [-1.7177035475332612e-16, 0.20419975998692586], 'true': [nan, -1.7177035475332612e-16], 'true,false': [nan, -1.7177035475332612e-16], 'true,false,false': [nan, -1.7177035475332612e-16]}
{'': [0.14993349582568374, 0.20297209464561405], 'false': [nan, 0.20297209464561347], 'true': [0.14993349582568374, nan], 'true,true': [nan, 0.14993349582568374], 'true,true,false': [0.10487528344671299, 0.08407384760778391]}
{'': [-2.6569439905559303e-17, 0.1935096617963885], 'true': [-2.6569439905559303e-17, nan], 'true,true': [nan, -2.6569439905559303e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- female(B), director(A).;true;true
2;;workedunder(A, B) :- female(B), director(A).;true;true
3;;workedunder(A, B) :- female(B), director(A).;true;true
5;;workedunder(A, B) :- female(B), female(A).;true;true
6;;workedunder(A, B) :- female(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), female(B).;true;true
9;;workedunder(A, B) :- female(A), female(B).;true;true


Refining candidate
***************************
Model training time 3.280191421508789
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 6.32e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.14185106490048854;  // std dev = 0.000, 617.000 (wgt'ed) examples reached here.  /* #neg=617 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.12544463852839124;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.12544463852839152;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return -0.12544463852839233;  // std dev = 0.000, 573.000 (wgt'ed) examples reached here.  /* #neg=573 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.1123163781936064;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.11231637819360629;  // std dev = 4.08e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.11231637819360608;  // std dev = 0.000, 636.000 (wgt'ed) examples reached here.  /* #neg=636 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.10159632948783633;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10159632948783627;  // std dev = 2.79e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return -0.10159632948783538;  // std dev = 3.66e-07, 571.000 (wgt'ed) examples reached here.  /* #neg=571 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.09269127618926176;  // std dev = 0.000, 612.000 (wgt'ed) examples reached here.  /* #neg=612 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.08518475138839678;  // std dev = 4.47e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.08518475138839678;  // std dev = 1.35e-07, 524.000 (wgt'ed) examples reached here.  /* #neg=524 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.07877675473109155;  // std dev = 5.16e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return -0.07877675473109211;  // std dev = 0.000, 539.000 (wgt'ed) examples reached here.  /* #neg=539 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 1.18e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return -0.0732462257633372;  // std dev = 0.000, 494.000 (wgt'ed) examples reached here.  /* #neg=494 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06842697784420268;  // std dev = 2.24e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.06842697784420369;  // std dev = 0.000, 646.000 (wgt'ed) examples reached here.  /* #neg=646 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080119;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return -0.06419184008202554;  // std dev = 2.30e-07, 548.000 (wgt'ed) examples reached here.  /* #neg=548 */
Inference time using transfer learning 0.8181953430175781
Refined model CLL: -0.064062


******************************************
Best model found
******************************************
Results 

CLL : -0.063847 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.280191421508789 

Total Inference Time : 1.429555892944336 

Total revision time: 8.424024105072021
Best scored revision CLL: -0.064062


Results 

CLL : -0.063847 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 8.447372436523438 

Total Inference Time : 1.429555892944336 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos examples: 45
Target test neg examples: 2071

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 1.8647046089172363
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7436911037742084;  // std dev = 4.102, 166.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=147 */
%   else return 0.08380214175034202;  // std dev = 12.130, 842.000 (wgt'ed) examples reached here.  /* #neg=652 #pos=190 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1523615520227173;  // std dev = 4.56e-09, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else return 0.17013009752172387;  // std dev = 14.327, 987.000 (wgt'ed) examples reached here.  /* #neg=650 #pos=337 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(E, F) )
%   | | | then return -0.1337084987810853;  // std dev = 1.49e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13693093220603117;  // std dev = 14.346, 1,016.000 (wgt'ed) examples reached here.  /* #neg=679 #pos=337 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11896501168369279;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else return 0.12721117167104562;  // std dev = 14.171, 976.000 (wgt'ed) examples reached here.  /* #neg=639 #pos=337 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10246782666228943;  // std dev = 0.449, 993.000 (wgt'ed) examples reached here.  /* #neg=656 #pos=337 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D), genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.23514969381401346;  // std dev = 1.63e-07, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else return 0.11433671163344228;  // std dev = 13.766, 905.000 (wgt'ed) examples reached here.  /* #neg=568 #pos=337 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then if ( genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(D, E) )
%   | | then return -0.19550834587091975;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07367572272848164;  // std dev = 13.925, 962.000 (wgt'ed) examples reached here.  /* #neg=625 #pos=337 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(A, C), genre(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1665725271889863;  // std dev = 2.98e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else return 0.05970862013772799;  // std dev = 13.906, 960.000 (wgt'ed) examples reached here.  /* #neg=623 #pos=337 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, D) )
%   | | | then return 0.37523879185698644;  // std dev = 4.494, 130.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=105 */
%   | | | else return -0.08975568499297408;  // std dev = 4.809, 242.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=42 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( female(B), genre(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.009948226209274871;  // std dev = 11.564, 665.000 (wgt'ed) examples reached here.  /* #neg=475 #pos=190 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then if ( genre(C, D) )
%   | then if ( genre(A, E), genre(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.13395370828599998;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.029761552837756656;  // std dev = 13.779, 964.000 (wgt'ed) examples reached here.  /* #neg=627 #pos=337 */
Inference time using transfer learning 0.877967357635498
Parameter learned model CLL:-0.334004 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.102, 19, 147], 'false': [12.13, 652, 190]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [4.56e-09, 32, 0], 'false': [14.327, 650, 337]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(A, D)', 'true,false,false': 'genre(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.49e-08, 38, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [14.346, 679, 337]}]
['workedunder(A, B)', {'': 'female(B), director(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 29, 0], 'false': [14.171, 639, 337]}]
['workedunder(A, B)', {'': 'female(A), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.449, 656, 337]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(B, C)', 'true,false': 'genre(A, D), genre(B, D)', 'true,false,false': 'genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.63e-07, 103, 0], 'false': [13.766, 568, 337]}]
['workedunder(A, B)', {'': 'female(B), female(A)', 'true': 'genre(A, C)', 'true,false': 'genre(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 85, 0], 'true,false,false': [0.0, 0, 0], 'false': [13.925, 625, 337]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(A, C), genre(B, C)', 'true,false': 'genre(B, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.98e-08, 105, 0], 'false': [13.906, 623, 337]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E)', 'true,true,false': 'genre(B, D)', 'false': 'female(B), genre(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [4.494, 25, 105], 'true,true,false,false': [4.809, 200, 42], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.564, 475, 190]}]
['workedunder(A, B)', {'': 'female(A), female(B)', 'true': 'genre(C, D)', 'true,true': 'genre(A, E), genre(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 79, 0], 'true,false': [0.0, 0, 0], 'false': [13.779, 627, 337]}]
{'': [0.10135723617361553, 0.17473383697902906], 'true': [nan, 0.10135723617361228], 'true,false': [nan, 0.10135723617361553], 'true,false,false': [nan, 0.10135723617361553]}
{'': [2.0816681711721685e-17, 0.20796829223202665], 'true': [nan, 2.0816681711721685e-17], 'true,false': [nan, 2.0816681711721685e-17]}
{'': [5.843279076974508e-18, 0.20256651221353286], 'true': [nan, 5.843279076974508e-18], 'true,false': [nan, 5.843279076974508e-18], 'true,false,false': [5.843279076974508e-18, nan]}
{'': [-1.914177628664063e-18, 0.20574907789192345], 'true': [nan, -1.914177628664063e-18], 'true,false': [nan, -1.914177628664063e-18]}
{'': [nan, 0.20147044126725647]}
{'': [2.586927436019782e-16, 0.20938831119506557], 'true': [nan, 2.586927436019782e-16], 'true,false': [nan, 2.586927436019782e-16], 'true,false,false': [nan, 2.586927436019782e-16]}
{'': [0.0, 0.20157665070199865], 'true': [nan, 0.0], 'true,false': [0.0, nan]}
{'': [8.458842092382146e-18, 0.20142215238873812], 'true': [nan, 8.458842092382146e-18], 'true,false': [nan, 8.458842092382146e-18], 'true,false,false': [nan, 8.458842092382146e-18]}
{'': [0.16560104226704248, 0.201079484531439], 'false': [nan, 0.20107948453143812], 'true': [0.16560104226704248, nan], 'true,true': [nan, 0.16560104226704248], 'true,true,false': [0.15532544378698182, 0.09556028687687207]}
{'': [-2.2485529612661398e-17, 0.19695795693562793], 'true': [-2.2485529612661398e-17, nan], 'true,true': [nan, -2.2485529612661398e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- female(B), director(A).;true;true
2;;workedunder(A, B) :- female(B), director(A).;true;true
3;;workedunder(A, B) :- female(B), director(A).;true;true
5;;workedunder(A, B) :- female(B), female(A).;true;true
6;;workedunder(A, B) :- female(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), female(B).;true;true
9;;workedunder(A, B) :- female(A), female(B).;true;true


Refining candidate
***************************
Model training time 3.208118200302124
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 5.77e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.14185106490048854;  // std dev = 0.000, 616.000 (wgt'ed) examples reached here.  /* #neg=616 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.12544463852839133;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.12544463852839144;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return -0.1254446385283923;  // std dev = 0.000, 580.000 (wgt'ed) examples reached here.  /* #neg=580 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.1123163781936062;  // std dev = 2.98e-08, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.11231637819360628;  // std dev = 4.47e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.11231637819360579;  // std dev = 0.000, 571.000 (wgt'ed) examples reached here.  /* #neg=571 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(B), director(A) )
%   then return -0.10159632948783633;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10159632948783616;  // std dev = 5.37e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return -0.10159632948783534;  // std dev = 3.77e-07, 576.000 (wgt'ed) examples reached here.  /* #neg=576 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.0926912761892618;  // std dev = 0.000, 628.000 (wgt'ed) examples reached here.  /* #neg=628 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.08518475138839678;  // std dev = 2.79e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.08518475138839678;  // std dev = 1.33e-07, 523.000 (wgt'ed) examples reached here.  /* #neg=523 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( female(B), female(A) )
%   then return -0.07877675473109162;  // std dev = 3.80e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.07877675473109194;  // std dev = 0.000, 500.000 (wgt'ed) examples reached here.  /* #neg=500 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.07324622576333703;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 7.45e-09, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.07324622576333718;  // std dev = 0.000, 496.000 (wgt'ed) examples reached here.  /* #neg=496 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06842697784420271;  // std dev = 1.05e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.06842697784420365;  // std dev = 0.000, 604.000 (wgt'ed) examples reached here.  /* #neg=604 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), female(B) )
%   then return -0.06419184008202619;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080119;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.06419184008202557;  // std dev = 2.26e-07, 559.000 (wgt'ed) examples reached here.  /* #neg=559 */
Inference time using transfer learning 0.8400454521179199
Refined model CLL: -0.064087


******************************************
Best model found
******************************************
Results 

CLL : -0.063719 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.208118200302124 

Total Inference Time : 1.5600574016571045 

Total revision time: 8.555334091186523
Best scored revision CLL: -0.064087


Results 

CLL : -0.063719 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 8.57868242263794 

Total Inference Time : 1.5600574016571045 

Starting experiments for fasttext using wmd 

Run: 1

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos examples: 56
Target test neg examples: 3308

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.6420202255249023
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.6701147470653227;  // std dev = 4.226, 117.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=95 */
%   | | | else return 0.7812258581764353;  // std dev = 1.922, 52.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=48 */
%   else return 0.07836554159770566;  // std dev = 11.946, 831.000 (wgt'ed) examples reached here.  /* #neg=648 #pos=183 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1516607548654927;  // std dev = 1.26e-08, 206.000 (wgt'ed) examples reached here.  /* #neg=206 */
%   else return 0.24809424655077897;  // std dev = 13.247, 774.000 (wgt'ed) examples reached here.  /* #neg=448 #pos=326 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.13316089911714232;  // std dev = 0.000, 171.000 (wgt'ed) examples reached here.  /* #neg=171 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1912631774107054;  // std dev = 13.392, 814.000 (wgt'ed) examples reached here.  /* #neg=488 #pos=326 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1185267363650447;  // std dev = 9.31e-09, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
%   else return 0.17687277616463898;  // std dev = 13.133, 775.000 (wgt'ed) examples reached here.  /* #neg=449 #pos=326 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.43762872449741297;  // std dev = 4.226, 117.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=95 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03949537477147947;  // std dev = 0.418, 858.000 (wgt'ed) examples reached here.  /* #neg=627 #pos=231 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11051538447985013;  // std dev = 7.88e-08, 169.000 (wgt'ed) examples reached here.  /* #neg=169 */
%   else return 0.12064630129743337;  // std dev = 12.855, 776.000 (wgt'ed) examples reached here.  /* #neg=450 #pos=326 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.10011000844508308;  // std dev = 5.59e-09, 194.000 (wgt'ed) examples reached here.  /* #neg=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11296542103512074;  // std dev = 12.633, 742.000 (wgt'ed) examples reached here.  /* #neg=416 #pos=326 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09144540376618664;  // std dev = 0.000, 210.000 (wgt'ed) examples reached here.  /* #neg=210 */
%   else return 0.06149503174155953;  // std dev = 12.949, 794.000 (wgt'ed) examples reached here.  /* #neg=468 #pos=326 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09837785584842432;  // std dev = 5.994, 378.000 (wgt'ed) examples reached here.  /* #neg=235 #pos=143 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.025367618287995032;  // std dev = 11.391, 629.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=183 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.09202300729086908;  // std dev = 0.000, 177.000 (wgt'ed) examples reached here.  /* #neg=177 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043479992296794216;  // std dev = 12.908, 799.000 (wgt'ed) examples reached here.  /* #neg=473 #pos=326 */
Inference time using transfer learning 1.2285568714141846
Parameter learned model CLL:-0.334478 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [4.226, 22, 95], 'true,false,false,false': [1.922, 4, 48], 'false': [11.946, 648, 183]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.26e-08, 206, 0], 'false': [13.247, 448, 326]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 171, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.392, 488, 326]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [9.31e-09, 217, 0], 'false': [13.133, 449, 326]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [4.226, 22, 95], 'true,false': [0.0, 0, 0], 'false': [0.418, 627, 231]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.88e-08, 169, 0], 'false': [12.855, 450, 326]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [5.59e-09, 194, 0], 'true,false,false': [0.0, 0, 0], 'false': [12.633, 416, 326]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 210, 0], 'false': [12.949, 468, 326]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [5.994, 235, 143], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.391, 446, 183]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 177, 0], 'true,false': [0.0, 0, 0], 'false': [12.908, 473, 326]}]
{'': [0.13017751479290463, 0.17172125272061467], 'true': [nan, 0.13017751479290463], 'true,false': [nan, 0.13017751479290463], 'true,false,false': [0.1526773321645137, 0.07100591715976382]}
{'': [1.5952719188788657e-16, 0.22673214619705753], 'true': [nan, 1.5952719188788657e-16], 'true,false': [nan, 1.5952719188788657e-16]}
{'': [-3.635818092339694e-17, 0.22034166572053], 'true': [nan, -3.635818092339694e-17], 'true,false': [nan, -3.635818092339694e-17], 'true,false,false': [-3.635818092339694e-17, nan]}
{'': [8.799924434816909e-17, 0.22253544215243337], 'true': [nan, 8.799924434816909e-17], 'true,false': [nan, 8.799924434816909e-17]}
{'': [0.1526773321645098, 0.17502812217619554], 'true': [0.1526773321645098, nan], 'true,true': [nan, 0.1526773321645098], 'true,true,false': [nan, 0.1526773321645098]}
{'': [3.6788455253851344e-17, 0.21294310444416154], 'true': [nan, 3.6788455253851344e-17], 'true,false': [nan, 3.6788455253851344e-17], 'true,false,false': [nan, 3.6788455253851344e-17]}
{'': [3.0903115118432194e-17, 0.21508063837971808], 'true': [nan, 3.0903115118432194e-17], 'true,false': [3.0903115118432194e-17, nan]}
{'': [-7.930164461608261e-17, 0.21118778526023396], 'true': [nan, -7.930164461608261e-17], 'true,false': [nan, -7.930164461608261e-17], 'true,false,false': [nan, -7.930164461608261e-17]}
{'': [0.09504307695483315, 0.20629307882651324], 'false': [nan, 0.20629307882651202], 'true': [0.09504307695483315, nan], 'true,true': [nan, 0.09504307695483315], 'true,true,false': [nan, 0.09504307695483315]}
{'': [-5.896099678800266e-17, 0.20852564490976114], 'true': [-5.896099678800266e-17, nan], 'true,true': [nan, -5.896099678800266e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 3.3098855018615723
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1.05e-06, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048766;  // std dev = 6.14e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.1418510649004883;  // std dev = 0.000, 580.000 (wgt'ed) examples reached here.  /* #neg=580 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.1254446385283915;  // std dev = 0.000, 175.000 (wgt'ed) examples reached here.  /* #neg=175 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.12544463852839213;  // std dev = 0.000, 419.000 (wgt'ed) examples reached here.  /* #neg=419 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360657;  // std dev = 0.000, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.1123163781936064;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.11231637819360647;  // std dev = 0.000, 420.000 (wgt'ed) examples reached here.  /* #neg=420 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783652;  // std dev = 0.000, 186.000 (wgt'ed) examples reached here.  /* #neg=186 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831163;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.1015963294878362;  // std dev = 4.21e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.10159632948783652;  // std dev = 0.000, 390.000 (wgt'ed) examples reached here.  /* #neg=390 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926176;  // std dev = 0.000, 582.000 (wgt'ed) examples reached here.  /* #neg=582 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014944;  // std dev = 2.31e-07, 143.000 (wgt'ed) examples reached here.  /* #pos=143 */
%   | | else if ( actor(A) )
%   | | | then return 0.32071184716014906;  // std dev = 3.67e-07, 183.000 (wgt'ed) examples reached here.  /* #pos=183 */
%   | | | else return -0.09269127618926083;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.09269127618926101;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839675;  // std dev = 7.45e-08, 179.000 (wgt'ed) examples reached here.  /* #neg=179 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948756;  // std dev = 4.04e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.08518475138839676;  // std dev = 2.98e-08, 386.000 (wgt'ed) examples reached here.  /* #neg=386 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109146;  // std dev = 8.02e-08, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.20975771563253476;  // std dev = 2.83e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.07877675473109176;  // std dev = 1.83e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.07877675473109144;  // std dev = 4.21e-08, 400.000 (wgt'ed) examples reached here.  /* #neg=400 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.07324622576333663;  // std dev = 1.23e-07, 204.000 (wgt'ed) examples reached here.  /* #neg=204 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527678;  // std dev = 2.83e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.07324622576333717;  // std dev = 0.000, 408.000 (wgt'ed) examples reached here.  /* #neg=408 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936717;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.06842697784420268;  // std dev = 2.24e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.0684269778442025;  // std dev = 8.94e-08, 582.000 (wgt'ed) examples reached here.  /* #neg=582 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202625;  // std dev = 0.000, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.13400703000801184;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.06419184008202594;  // std dev = 1.22e-07, 407.000 (wgt'ed) examples reached here.  /* #neg=407 */
Inference time using transfer learning 0.9336612224578857
Refined model CLL: -0.064216


******************************************
Best model found
******************************************
Results 

CLL : -0.063421 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.3098855018615723 

Total Inference Time : 1.4795949459075928 

Total revision time: 10.709478855133057
Best scored revision CLL: -0.064216


Results 

CLL : -0.063421 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 10.726950645446777 

Total Inference Time : 1.4795949459075928 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos examples: 58
Target test neg examples: 3423

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.6603970527648926
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.7770678540184298;  // std dev = 2.876, 111.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=102 */
%   | | | else return 0.7308762078267851;  // std dev = 2.472, 55.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=48 */
%   else return 0.07840209965647293;  // std dev = 11.648, 790.000 (wgt'ed) examples reached here.  /* #neg=616 #pos=174 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15166545847683469;  // std dev = 6.18e-09, 235.000 (wgt'ed) examples reached here.  /* #neg=235 */
%   else return 0.2484493731018008;  // std dev = 13.074, 763.000 (wgt'ed) examples reached here.  /* #neg=439 #pos=324 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.1331645760894801;  // std dev = 4.21e-08, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19902945259047525;  // std dev = 13.140, 783.000 (wgt'ed) examples reached here.  /* #neg=459 #pos=324 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11852968032713318;  // std dev = 1.06e-08, 212.000 (wgt'ed) examples reached here.  /* #neg=212 */
%   else return 0.1729290254167311;  // std dev = 12.974, 767.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=324 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4088178072339933;  // std dev = 4.408, 126.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=102 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.045838015668018206;  // std dev = 0.409, 843.000 (wgt'ed) examples reached here.  /* #neg=621 #pos=222 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11114291184397043;  // std dev = 7.88e-08, 211.000 (wgt'ed) examples reached here.  /* #neg=211 */
%   else return 0.1323693786209115;  // std dev = 12.529, 734.000 (wgt'ed) examples reached here.  /* #neg=410 #pos=324 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.10062833319398455;  // std dev = 0.000, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10013244622110135;  // std dev = 12.545, 744.000 (wgt'ed) examples reached here.  /* #neg=420 #pos=324 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0918801924109982;  // std dev = 0.000, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
%   else return 0.0701553878845109;  // std dev = 12.662, 756.000 (wgt'ed) examples reached here.  /* #neg=432 #pos=324 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07646330947239342;  // std dev = 6.213, 428.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=150 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.006154974216337357;  // std dev = 10.925, 554.000 (wgt'ed) examples reached here.  /* #neg=380 #pos=174 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.09060190333050622;  // std dev = 6.45e-09, 207.000 (wgt'ed) examples reached here.  /* #neg=207 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04789619895295505;  // std dev = 12.595, 766.000 (wgt'ed) examples reached here.  /* #neg=442 #pos=324 */
Inference time using transfer learning 1.177933692932129
Parameter learned model CLL:-0.328371 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [2.876, 9, 102], 'true,false,false,false': [2.472, 7, 48], 'false': [11.648, 616, 174]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [6.18e-09, 235, 0], 'false': [13.074, 439, 324]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [4.21e-08, 218, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.14, 459, 324]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.06e-08, 212, 0], 'false': [12.974, 443, 324]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [4.408, 24, 102], 'true,false': [0.0, 0, 0], 'false': [0.409, 621, 222]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.88e-08, 211, 0], 'false': [12.529, 410, 324]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 237, 0], 'true,false,false': [0.0, 0, 0], 'false': [12.545, 420, 324]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 226, 0], 'false': [12.662, 432, 324]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [6.213, 278, 150], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.925, 380, 174]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [6.45e-09, 207, 0], 'true,false': [0.0, 0, 0], 'false': [12.595, 442, 324]}]
{'': [0.08709536942953094, 0.1717417080596065], 'true': [nan, 0.08709536942953094], 'true,false': [nan, 0.08709536942953094], 'true,false,false': [0.07450693937180657, 0.11107438016528964]}
{'': [3.7794826370218094e-17, 0.22402130799278824], 'true': [nan, 3.7794826370218094e-17], 'true,false': [nan, 3.7794826370218094e-17]}
{'': [8.148425868808489e-18, 0.2205248393121561], 'true': [nan, 8.148425868808489e-18], 'true,false': [nan, 8.148425868808489e-18], 'true,false,false': [8.148425868808489e-18, nan]}
{'': [1.131170628863367e-16, 0.21944853146320373], 'true': [nan, 1.131170628863367e-16], 'true,false': [nan, 1.131170628863367e-16]}
{'': [0.1541950113378676, 0.16707450040474542], 'true': [0.1541950113378676, nan], 'true,true': [nan, 0.1541950113378676], 'true,true,false': [nan, 0.1541950113378676]}
{'': [2.946563477678141e-17, 0.21386388564927009], 'true': [nan, 2.946563477678141e-17], 'true,false': [nan, 2.946563477678141e-17], 'true,false,false': [nan, 2.946563477678141e-17]}
{'': [-1.4990353075107598e-17, 0.21153074505935754], 'true': [nan, -1.4990353075107598e-17], 'true,false': [-1.4990353075107598e-17, nan]}
{'': [-2.063246328949406e-17, 0.21208468088412813], 'true': [nan, -2.063246328949406e-17], 'true,false': [nan, -2.063246328949406e-17], 'true,false,false': [nan, -2.063246328949406e-17]}
{'': [0.0902002498816401, 0.21543353881843444], 'false': [nan, 0.21543353881843852], 'true': [0.0902002498816401, nan], 'true,true': [nan, 0.0902002498816401], 'true,true,false': [nan, 0.0902002498816401]}
{'': [4.2907170033822474e-17, 0.20708968301934857], 'true': [4.2907170033822474e-17, nan], 'true,true': [nan, 4.2907170033822474e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 3.282700538635254
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1.04e-06, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048766;  // std dev = 5.58e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.14185106490048843;  // std dev = 0.000, 598.000 (wgt'ed) examples reached here.  /* #neg=598 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.1254446385283916;  // std dev = 0.000, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.12544463852839202;  // std dev = 0.000, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360682;  // std dev = 0.000, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.11231637819360632;  // std dev = 2.79e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.11231637819360674;  // std dev = 0.000, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783656;  // std dev = 0.000, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831163;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.10159632948783627;  // std dev = 2.79e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return -0.10159632948783653;  // std dev = 0.000, 391.000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.09269127618926168;  // std dev = 0.000, 598.000 (wgt'ed) examples reached here.  /* #neg=598 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839675;  // std dev = 3.65e-08, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948756;  // std dev = 3.86e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.08518475138839675;  // std dev = 4.21e-08, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109144;  // std dev = 5.16e-08, 219.000 (wgt'ed) examples reached here.  /* #neg=219 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return -0.07877675473109139;  // std dev = 5.58e-08, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.07324622576333666;  // std dev = 1.29e-07, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527653;  // std dev = 2.73e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.07324622576333704;  // std dev = 7.45e-09, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.0732462257633371;  // std dev = 0.000, 383.000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.06842697784420268;  // std dev = 2.24e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.06842697784420265;  // std dev = 0.000, 607.000 (wgt'ed) examples reached here.  /* #neg=607 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202625;  // std dev = 0.000, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080118;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return -0.06419184008202615;  // std dev = 3.94e-08, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
Inference time using transfer learning 0.9219381809234619
Refined model CLL: -0.064225


******************************************
Best model found
******************************************
Results 

CLL : -0.063422 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.282700538635254 

Total Inference Time : 1.3836345672607422 

Total revision time: 10.859225273132324
Best scored revision CLL: -0.064225


Results 

CLL : -0.063422 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 10.876697063446045 

Total Inference Time : 1.3836345672607422 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos examples: 178
Target test neg examples: 3543

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 1.9644360542297363
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.7510060779566556;  // std dev = 2.835, 84.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=75 */
%   | | | else return 0.6081489350995123;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return 0.08805547715558684;  // std dev = 9.732, 535.000 (wgt'ed) examples reached here.  /* #neg=412 #pos=123 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.152911672288409;  // std dev = 4.17e-09, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   else return 0.28932383455762156;  // std dev = 10.087, 441.000 (wgt'ed) examples reached here.  /* #neg=237 #pos=204 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.13413802632055888;  // std dev = 1.07e-07, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.21599954048932432;  // std dev = 10.308, 471.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=204 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11930856276908874;  // std dev = 2.28e-09, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   else return 0.17677713058280353;  // std dev = 10.264, 473.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=204 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5400751941846337;  // std dev = 1.949, 79.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=75 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.025691184720653914;  // std dev = 0.413, 515.000 (wgt'ed) examples reached here.  /* #neg=386 #pos=129 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10981701134143589;  // std dev = 1.49e-08, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   else return 0.1170538956420759;  // std dev = 9.852, 473.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=204 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.0995326109624695;  // std dev = 0.000, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1012248531961953;  // std dev = 9.793, 460.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=204 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09096066367216148;  // std dev = 0.000, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   else return 0.057467768826975775;  // std dev = 10.021, 484.000 (wgt'ed) examples reached here.  /* #neg=280 #pos=204 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04773685785744257;  // std dev = 4.228, 255.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=81 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0018603375129360774;  // std dev = 9.121, 380.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=123 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.08744925380092518;  // std dev = 8.17e-09, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06155210568020009;  // std dev = 9.794, 463.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=204 */
Inference time using transfer learning 1.191467523574829
Parameter learned model CLL:-0.320448 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [2.835, 9, 75], 'true,false,false,false': [1.225, 2, 6], 'false': [9.732, 412, 123]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [4.17e-09, 130, 0], 'false': [10.087, 237, 204]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.07e-07, 138, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [10.308, 267, 204]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.28e-09, 138, 0], 'false': [10.264, 269, 204]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.949, 4, 75], 'true,false': [0.0, 0, 0], 'false': [0.413, 386, 129]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.49e-08, 138, 0], 'false': [9.852, 269, 204]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 147, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.793, 256, 204]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 135, 0], 'false': [10.021, 280, 204]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [4.228, 174, 81], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.121, 257, 123]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [8.17e-09, 140, 0], 'true,false': [0.0, 0, 0], 'false': [9.794, 259, 204]}]
{'': [0.1052693761814749, 0.17704952397589346], 'true': [nan, 0.1052693761814749], 'true,false': [nan, 0.1052693761814749], 'true,false,false': [0.09566326530612142, 0.1874999999999999]}
{'': [1.708035422500241e-17, 0.23074243096904956], 'true': [nan, 1.708035422500241e-17], 'true,false': [nan, 1.708035422500241e-17]}
{'': [8.366898156595383e-17, 0.22558464303231848], 'true': [nan, 8.366898156595383e-17], 'true,false': [nan, 8.366898156595383e-17], 'true,false,false': [8.366898156595383e-17, nan]}
{'': [4.827056628805028e-18, 0.2227447928678338], 'true': [nan, 4.827056628805028e-18], 'true,false': [nan, 4.827056628805028e-18]}
{'': [0.04806921967633521, 0.17078356303532008], 'true': [0.04806921967633521, nan], 'true,true': [nan, 0.04806921967633521], 'true,true,false': [nan, 0.04806921967633521]}
{'': [1.6090188762683428e-18, 0.20519955798583792], 'true': [nan, 1.6090188762683428e-18], 'true,false': [nan, 1.6090188762683428e-18], 'true,false,false': [nan, 1.6090188762683428e-18]}
{'': [-6.344131569286608e-17, 0.20847653494125187], 'true': [nan, -6.344131569286608e-17], 'true,false': [-6.344131569286608e-17, nan]}
{'': [-2.4671622769447922e-17, 0.20748504720366048], 'true': [nan, -2.4671622769447922e-17], 'true,false': [nan, -2.4671622769447922e-17], 'true,false,false': [nan, -2.4671622769447922e-17]}
{'': [0.0700862693318609, 0.21891274238226868], 'false': [nan, 0.21891274238227149], 'true': [0.0700862693318609, nan], 'true,true': [nan, 0.0700862693318609], 'true,true,false': [nan, 0.0700862693318609]}
{'': [6.661338147750939e-17, 0.20717072647302656], 'true': [6.661338147750939e-17, nan], 'true,true': [nan, 6.661338147750939e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 2.298861265182495
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048743;  // std dev = 2.63e-07, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.12544463852839152;  // std dev = 0.000, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.7194734122109571;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.12544463852839205;  // std dev = 0.000, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360617;  // std dev = 1.01e-07, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462833;  // std dev = 6.36e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.11231637819360635;  // std dev = 1.67e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return -0.11231637819360686;  // std dev = 0.000, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783646;  // std dev = 0.000, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   else if ( actor(B) )
%   | then return -0.1015963294878366;  // std dev = 0.000, 259.000 (wgt'ed) examples reached here.  /* #neg=259 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831014;  // std dev = 2.53e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601491;  // std dev = 4.00e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.09269127618926094;  // std dev = 9.13e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.09269127618926079;  // std dev = 1.62e-07, 387.000 (wgt'ed) examples reached here.  /* #neg=387 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839679;  // std dev = 7.88e-08, 166.000 (wgt'ed) examples reached here.  /* #neg=166 */
%   else if ( actor(B) )
%   | then return -0.08518475138839678;  // std dev = 9.42e-08, 257.000 (wgt'ed) examples reached here.  /* #neg=257 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948845;  // std dev = 4.46e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.08518475138839683;  // std dev = 1.29e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109153;  // std dev = 7.96e-08, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.20975771563253498;  // std dev = 3.04e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.07877675473109175;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return -0.07877675473109144;  // std dev = 5.96e-08, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.0732462257633373;  // std dev = 0.000, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527791;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return -0.07432121984404429;  // std dev = 0.263, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367166;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.06909489698199277;  // std dev = 0.251, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06415172902322673;  // std dev = 5.96e-08, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   else if ( actor(B) )
%   | then return -0.06408722060318126;  // std dev = 7.60e-08, 250.000 (wgt'ed) examples reached here.  /* #neg=250 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.13400703000801098;  // std dev = 1.38e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.06419184008202618;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
Inference time using transfer learning 0.92136549949646
Refined model CLL: -0.063925


******************************************
Best model found
******************************************
Results 

CLL : -0.0752 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.298861265182495 

Total Inference Time : 1.4368555545806885 

Total revision time: 9.083556652069092
Best scored revision CLL: -0.063925


Results 

CLL : -0.0752 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 9.101028442382812 

Total Inference Time : 1.4368555545806885 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos examples: 45
Target test neg examples: 1891

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.8910768032073975
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.7321646831310065;  // std dev = 3.740, 127.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=111 */
%   | | | else return 0.6581489350995126;  // std dev = 3.098, 60.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=48 */
%   else return 0.07469394726496087;  // std dev = 11.809, 822.000 (wgt'ed) examples reached here.  /* #neg=644 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15118897230321698;  // std dev = 0.000, 203.000 (wgt'ed) examples reached here.  /* #neg=203 */
%   else return 0.244769567338629;  // std dev = 13.442, 805.000 (wgt'ed) examples reached here.  /* #neg=468 #pos=337 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.13279198116389504;  // std dev = 1.33e-07, 203.000 (wgt'ed) examples reached here.  /* #neg=203 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20760184093330608;  // std dev = 13.360, 805.000 (wgt'ed) examples reached here.  /* #neg=468 #pos=337 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11823128907251762;  // std dev = 0.000, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
%   else return 0.15984848351839442;  // std dev = 13.465, 826.000 (wgt'ed) examples reached here.  /* #neg=489 #pos=337 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.45930176337090595;  // std dev = 4.117, 131.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=111 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.030783035152377757;  // std dev = 0.407, 904.000 (wgt'ed) examples reached here.  /* #neg=678 #pos=226 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10941454181623994;  // std dev = 1.33e-07, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
%   else return 0.12246765423169544;  // std dev = 12.936, 792.000 (wgt'ed) examples reached here.  /* #neg=455 #pos=337 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.09919959262536798;  // std dev = 3.95e-09, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1004964473248764;  // std dev = 12.825, 790.000 (wgt'ed) examples reached here.  /* #neg=453 #pos=337 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09068089443533627;  // std dev = 0.000, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
%   else return 0.0841003741628486;  // std dev = 12.771, 777.000 (wgt'ed) examples reached here.  /* #neg=440 #pos=337 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09131049286171763;  // std dev = 6.372, 423.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=159 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.022101502555311753;  // std dev = 11.216, 607.000 (wgt'ed) examples reached here.  /* #neg=429 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.09073282316108083;  // std dev = 7.57e-09, 235.000 (wgt'ed) examples reached here.  /* #neg=235 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06610392902033674;  // std dev = 12.633, 773.000 (wgt'ed) examples reached here.  /* #neg=436 #pos=337 */
Inference time using transfer learning 0.9926960468292236
Parameter learned model CLL:-0.320586 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [3.74, 16, 111], 'true,false,false,false': [3.098, 12, 48], 'false': [11.809, 644, 178]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 203, 0], 'false': [13.442, 468, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.33e-07, 203, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.36, 468, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 242, 0], 'false': [13.465, 489, 337]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [4.117, 20, 111], 'true,false': [0.0, 0, 0], 'false': [0.407, 678, 226]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.33e-07, 237, 0], 'false': [12.936, 455, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [3.95e-09, 236, 0], 'true,false,false': [0.0, 0, 0], 'false': [12.825, 453, 337]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 244, 0], 'false': [12.771, 440, 337]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [6.372, 264, 159], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.216, 429, 178]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [7.57e-09, 235, 0], 'true,false': [0.0, 0, 0], 'false': [12.633, 436, 337]}]
{'': [0.127312762732712, 0.16965326987171575], 'true': [nan, 0.127312762732712], 'true,false': [nan, 0.127312762732712], 'true,false,false': [0.11011222022444384, 0.16000000000000025]}
{'': [-3.93773683610893e-17, 0.22445312107505402], 'true': [nan, -3.93773683610893e-17], 'true,false': [nan, -3.93773683610893e-17]}
{'': [8.750526302464288e-17, 0.22171962748019955], 'true': [nan, 8.750526302464288e-17], 'true,false': [nan, 8.750526302464288e-17], 'true,false,false': [8.750526302464288e-17, nan]}
{'': [-1.7433254105684277e-16, 0.21949344673666416], 'true': [nan, -1.7433254105684277e-16], 'true,false': [nan, -1.7433254105684277e-16]}
{'': [0.1293630907289784, 0.16562209549307566], 'true': [0.1293630907289784, nan], 'true,true': [nan, 0.1293630907289784], 'true,true,false': [nan, 0.1293630907289784]}
{'': [7.495176537553799e-17, 0.21127813800835785], 'true': [nan, 7.495176537553799e-17], 'true,false': [nan, 7.495176537553799e-17], 'true,false,false': [nan, 7.495176537553799e-17]}
{'': [1.3172137580298468e-17, 0.2082078543821953], 'true': [nan, 1.3172137580298468e-17], 'true,false': [1.3172137580298468e-17, nan]}
{'': [-1.0920226471722851e-17, 0.2098962425544139], 'true': [nan, -1.0920226471722851e-17], 'true,false': [nan, -1.0920226471722851e-17], 'true,false,false': [nan, -1.0920226471722851e-17]}
{'': [0.09598930272412932, 0.20725256412691662], 'false': [nan, 0.2072525641269211], 'true': [0.09598930272412932, nan], 'true,true': [nan, 0.09598930272412932], 'true,true,false': [nan, 0.09598930272412932]}
{'': [5.95268515330935e-17, 0.20645249884378358], 'true': [5.95268515330935e-17, nan], 'true,true': [nan, 5.95268515330935e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 3.0900278091430664
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 5.05e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.14185106490048846;  // std dev = 0.000, 605.000 (wgt'ed) examples reached here.  /* #neg=605 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.12544463852839174;  // std dev = 0.000, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.12544463852839208;  // std dev = 0.000, 384.000 (wgt'ed) examples reached here.  /* #neg=384 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360675;  // std dev = 0.000, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.11231637819360628;  // std dev = 4.21e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.11231637819360661;  // std dev = 0.000, 395.000 (wgt'ed) examples reached here.  /* #neg=395 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783659;  // std dev = 0.000, 262.000 (wgt'ed) examples reached here.  /* #neg=262 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10159632948783619;  // std dev = 4.21e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.1015963294878365;  // std dev = 0.000, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.09269127618926179;  // std dev = 0.000, 615.000 (wgt'ed) examples reached here.  /* #neg=615 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839675;  // std dev = 0.000, 199.000 (wgt'ed) examples reached here.  /* #neg=199 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.08518475138839679;  // std dev = 1.67e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.08518475138839675;  // std dev = 3.65e-08, 382.000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109139;  // std dev = 5.96e-08, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.07877675473109139;  // std dev = 6.32e-08, 423.000 (wgt'ed) examples reached here.  /* #neg=423 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.0732462257633367;  // std dev = 7.45e-08, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 7.45e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.07324622576333707;  // std dev = 0.000, 378.000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06842697784420268;  // std dev = 2.24e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.06842697784420286;  // std dev = 0.000, 689.000 (wgt'ed) examples reached here.  /* #neg=689 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202625;  // std dev = 0.000, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080119;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.06419184008202604;  // std dev = 8.43e-08, 370.000 (wgt'ed) examples reached here.  /* #neg=370 */
Inference time using transfer learning 0.7904009819030762
Refined model CLL: -0.064062


******************************************
Best model found
******************************************
Results 

CLL : -0.063847 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.0900278091430664 

Total Inference Time : 1.3802525997161865 

Total revision time: 11.818874835968018
Best scored revision CLL: -0.064062


Results 

CLL : -0.063847 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 11.836346626281738 

Total Inference Time : 1.3802525997161865 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos examples: 45
Target test neg examples: 2071

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.7272462844848633
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.7259175301408329;  // std dev = 3.726, 121.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=105 */
%   | | | else return 0.6981489350995121;  // std dev = 2.592, 50.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=42 */
%   else return 0.07628900398584809;  // std dev = 12.188, 871.000 (wgt'ed) examples reached here.  /* #neg=681 #pos=190 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15139378122186;  // std dev = 1.29e-08, 211.000 (wgt'ed) examples reached here.  /* #neg=211 */
%   else return 0.27879305818235106;  // std dev = 13.064, 746.000 (wgt'ed) examples reached here.  /* #neg=409 #pos=337 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.13295216144478508;  // std dev = 2.44e-07, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20361071875691716;  // std dev = 13.396, 804.000 (wgt'ed) examples reached here.  /* #neg=467 #pos=337 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11835958710571147;  // std dev = 0.000, 203.000 (wgt'ed) examples reached here.  /* #neg=203 */
%   else return 0.17183836464232505;  // std dev = 13.316, 793.000 (wgt'ed) examples reached here.  /* #neg=456 #pos=337 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4857979823691633;  // std dev = 3.515, 119.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=105 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.034113656840249064;  // std dev = 0.412, 893.000 (wgt'ed) examples reached here.  /* #neg=661 #pos=232 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10984719562281982;  // std dev = 1.19e-07, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
%   else return 0.12399081683980973;  // std dev = 12.856, 776.000 (wgt'ed) examples reached here.  /* #neg=439 #pos=337 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.0995575786996729;  // std dev = 0.000, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08731940929070259;  // std dev = 12.924, 802.000 (wgt'ed) examples reached here.  /* #neg=465 #pos=337 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09098163345029067;  // std dev = 0.000, 212.000 (wgt'ed) examples reached here.  /* #neg=212 */
%   else return 0.055483524924536176;  // std dev = 13.111, 825.000 (wgt'ed) examples reached here.  /* #neg=488 #pos=337 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08119555325811621;  // std dev = 6.105, 406.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=147 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.03150509110386252;  // std dev = 11.653, 666.000 (wgt'ed) examples reached here.  /* #neg=476 #pos=190 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.09017551876831896;  // std dev = 0.000, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.02186853753086066;  // std dev = 13.299, 877.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=337 */
Inference time using transfer learning 1.0544402599334717
Parameter learned model CLL:-0.323212 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [3.726, 16, 105], 'true,false,false,false': [2.592, 8, 42], 'false': [12.188, 681, 190]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.29e-08, 211, 0], 'false': [13.064, 409, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [2.44e-07, 232, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.396, 467, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 203, 0], 'false': [13.316, 456, 337]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [3.515, 14, 105], 'true,false': [0.0, 0, 0], 'false': [0.412, 661, 232]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.19e-07, 208, 0], 'false': [12.856, 439, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 225, 0], 'true,false,false': [0.0, 0, 0], 'false': [12.924, 465, 337]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 212, 0], 'false': [13.111, 488, 337]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [6.105, 259, 147], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.653, 476, 190]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 217, 0], 'true,false': [0.0, 0, 0], 'false': [13.299, 540, 337]}]
{'': [0.12065250846414824, 0.17055497923260193], 'true': [nan, 0.12065250846414824], 'true,false': [nan, 0.12065250846414824], 'true,false,false': [0.1147462605013347, 0.13440000000000082]}
{'': [1.683750558673223e-16, 0.22878172367690447], 'true': [nan, 1.683750558673223e-16], 'true,false': [nan, 1.683750558673223e-16]}
{'': [2.5649980224098444e-16, 0.2231881329348374], 'true': [nan, 2.5649980224098444e-16], 'true,false': [nan, 2.5649980224098444e-16], 'true,false,false': [2.5649980224098444e-16, nan]}
{'': [-6.781657884409824e-17, 0.22360426799021957], 'true': [nan, -6.781657884409824e-17], 'true,false': [nan, -6.781657884409824e-17]}
{'': [0.10380622837370289, 0.16980700408030036], 'true': [0.10380622837370289, nan], 'true,true': [nan, 0.10380622837370289], 'true,true,false': [nan, 0.10380622837370289]}
{'': [6.832141690000964e-17, 0.21297178896911473], 'true': [nan, 6.832141690000964e-17], 'true,false': [nan, 6.832141690000964e-17], 'true,false,false': [nan, 6.832141690000964e-17]}
{'': [-5.131697536045168e-17, 0.20826108762747989], 'true': [nan, -5.131697536045168e-17], 'true,false': [-5.131697536045168e-17, nan]}
{'': [-6.28428127146315e-18, 0.20836859463311286], 'true': [nan, -6.28428127146315e-18], 'true,false': [nan, -6.28428127146315e-18], 'true,false,false': [nan, -6.28428127146315e-18]}
{'': [0.091787263308965, 0.2038975912849772], 'false': [nan, 0.2038975912849786], 'true': [0.091787263308965, nan], 'true,true': [nan, 0.091787263308965], 'true,true,false': [nan, 0.091787263308965]}
{'': [-3.0697410819128755e-17, 0.2016674612353046], 'true': [-3.0697410819128755e-17, nan], 'true,true': [nan, -3.0697410819128755e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 3.1922597885131836
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 5.16e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.14185106490048893;  // std dev = 0.000, 677.000 (wgt'ed) examples reached here.  /* #neg=677 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.12544463852839166;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #neg=202 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.12544463852839152;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return -0.12544463852839213;  // std dev = 0.000, 424.000 (wgt'ed) examples reached here.  /* #neg=424 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360656;  // std dev = 0.000, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.11231637819360632;  // std dev = 3.16e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.11231637819360657;  // std dev = 0.000, 410.000 (wgt'ed) examples reached here.  /* #neg=410 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783649;  // std dev = 0.000, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10159632948783631;  // std dev = 1.83e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return -0.10159632948783641;  // std dev = 0.000, 411.000 (wgt'ed) examples reached here.  /* #neg=411 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.0926912761892619;  // std dev = 0.000, 661.000 (wgt'ed) examples reached here.  /* #neg=661 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839675;  // std dev = 0.000, 216.000 (wgt'ed) examples reached here.  /* #neg=216 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.08518475138839679;  // std dev = 1.97e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.08518475138839673;  // std dev = 5.16e-08, 451.000 (wgt'ed) examples reached here.  /* #neg=451 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109139;  // std dev = 6.83e-08, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.07877675473109139;  // std dev = 3.65e-08, 393.000 (wgt'ed) examples reached here.  /* #neg=393 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.07324622576333663;  // std dev = 6.14e-08, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 7.45e-09, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.07324622576333716;  // std dev = 0.000, 400.000 (wgt'ed) examples reached here.  /* #neg=400 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06842697784420268;  // std dev = 2.24e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.06842697784420261;  // std dev = 6.99e-08, 623.000 (wgt'ed) examples reached here.  /* #neg=623 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202623;  // std dev = 0.000, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080119;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.06419184008202579;  // std dev = 1.60e-07, 434.000 (wgt'ed) examples reached here.  /* #neg=434 */
Inference time using transfer learning 0.7916553020477295
Refined model CLL: -0.064087


******************************************
Best model found
******************************************
Results 

CLL : -0.063719 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.1922597885131836 

Total Inference Time : 1.5302386283874512 

Total revision time: 11.367466449737549
Best scored revision CLL: -0.064087


Results 

CLL : -0.063719 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 11.38493824005127 

Total Inference Time : 1.5302386283874512 

Run: 2

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos examples: 56
Target test neg examples: 3308

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.6161444187164307
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.6988568997012807;  // std dev = 3.890, 113.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=95 */
%   | | | else return 0.7470378239884012;  // std dev = 2.309, 54.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=48 */
%   else return 0.08159215854273422;  // std dev = 11.921, 819.000 (wgt'ed) examples reached here.  /* #neg=636 #pos=183 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1520763574194415;  // std dev = 0.000, 169.000 (wgt'ed) examples reached here.  /* #neg=169 */
%   else return 0.24767647326395634;  // std dev = 13.230, 775.000 (wgt'ed) examples reached here.  /* #neg=449 #pos=326 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.133485706629859;  // std dev = 1.33e-07, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20669878711019518;  // std dev = 13.222, 778.000 (wgt'ed) examples reached here.  /* #neg=452 #pos=326 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11878673711441586;  // std dev = 1.02e-08, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   else return 0.16577929923862594;  // std dev = 13.235, 787.000 (wgt'ed) examples reached here.  /* #neg=461 #pos=326 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4299470890362039;  // std dev = 4.226, 117.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=95 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.02313225028545245;  // std dev = 0.408, 922.000 (wgt'ed) examples reached here.  /* #neg=691 #pos=231 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10913333363223635;  // std dev = 0.000, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   else return 0.10811752248604323;  // std dev = 13.047, 801.000 (wgt'ed) examples reached here.  /* #neg=475 #pos=326 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.09896679452060417;  // std dev = 0.000, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09494686591895074;  // std dev = 12.893, 785.000 (wgt'ed) examples reached here.  /* #neg=459 #pos=326 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0904852369182194;  // std dev = 4.47e-08, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   else return 0.07525590638887432;  // std dev = 12.827, 789.000 (wgt'ed) examples reached here.  /* #neg=463 #pos=326 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10316135458052343;  // std dev = 5.970, 377.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=143 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.024772787903777082;  // std dev = 11.431, 640.000 (wgt'ed) examples reached here.  /* #neg=457 #pos=183 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.09153388125593998;  // std dev = 0.000, 203.000 (wgt'ed) examples reached here.  /* #neg=203 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.055574893333436605;  // std dev = 12.754, 791.000 (wgt'ed) examples reached here.  /* #neg=465 #pos=326 */
Inference time using transfer learning 1.235912561416626
Parameter learned model CLL:-0.331851 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [3.89, 18, 95], 'true,false,false,false': [2.309, 6, 48], 'false': [11.921, 636, 183]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 169, 0], 'false': [13.23, 449, 326]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.33e-07, 163, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.222, 452, 326]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.02e-08, 196, 0], 'false': [13.235, 461, 326]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [4.226, 22, 95], 'true,false': [0.0, 0, 0], 'false': [0.408, 691, 231]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 182, 0], 'false': [13.047, 475, 326]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 196, 0], 'true,false,false': [0.0, 0, 0], 'false': [12.893, 459, 326]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.47e-08, 183, 0], 'false': [12.827, 463, 326]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [5.97, 234, 143], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.431, 457, 183]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 203, 0], 'true,false': [0.0, 0, 0], 'false': [12.754, 465, 326]}]
{'': [0.12305927068020174, 0.17351634934052573], 'true': [nan, 0.12305927068020174], 'true,false': [nan, 0.12305927068020174], 'true,false,false': [0.13391808285692106, 0.0987654320987658]}
{'': [-1.944532634846428e-16, 0.22585481202793647], 'true': [nan, -1.944532634846428e-16], 'true,false': [nan, -1.944532634846428e-16]}
{'': [1.0897894720246935e-16, 0.22471827634784605], 'true': [nan, 1.0897894720246935e-16], 'true,false': [nan, 1.0897894720246935e-16], 'true,false,false': [1.0897894720246935e-16, nan]}
{'': [1.0422501863828001e-16, 0.2225702373086647], 'true': [nan, 1.0422501863828001e-16], 'true,false': [nan, 1.0422501863828001e-16]}
{'': [0.15267733216451118, 0.16653546260746935], 'true': [0.15267733216451118, nan], 'true,true': [nan, 0.15267733216451118], 'true,true,false': [nan, 0.15267733216451118]}
{'': [-7.564156871072495e-17, 0.2125037335210662], 'true': [nan, -7.564156871072495e-17], 'true,false': [nan, -7.564156871072495e-17], 'true,false,false': [nan, -7.564156871072495e-17]}
{'': [-7.93016446160826e-18, 0.21174722743371796], 'true': [nan, -7.93016446160826e-18], 'true,false': [-7.93016446160826e-18, nan]}
{'': [1.0920226471722851e-17, 0.20854789487099648], 'true': [nan, 1.0920226471722851e-17], 'true,false': [nan, 1.0920226471722851e-17], 'true,false,false': [nan, 1.0920226471722851e-17]}
{'': [0.09452516710693136, 0.2041772460937536], 'false': [nan, 0.20417724609375063], 'true': [0.09452516710693136, nan], 'true,true': [nan, 0.09452516710693136], 'true,true,false': [nan, 0.09452516710693136]}
{'': [-1.421960524150447e-17, 0.20562813603459132], 'true': [-1.421960524150447e-17, nan], 'true,true': [nan, -1.421960524150447e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 3.060142993927002
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1.05e-06, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048768;  // std dev = 5.05e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.14185106490048832;  // std dev = 0.000, 586.000 (wgt'ed) examples reached here.  /* #neg=586 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.12544463852839172;  // std dev = 0.000, 216.000 (wgt'ed) examples reached here.  /* #neg=216 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.12544463852839152;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return -0.12544463852839205;  // std dev = 0.000, 391.000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360664;  // std dev = 0.000, 205.000 (wgt'ed) examples reached here.  /* #neg=205 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.1123163781936063;  // std dev = 3.49e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.11231637819360668;  // std dev = 0.000, 398.000 (wgt'ed) examples reached here.  /* #neg=398 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.1015963294878365;  // std dev = 0.000, 186.000 (wgt'ed) examples reached here.  /* #neg=186 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831163;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.10159632948783623;  // std dev = 3.80e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.10159632948783634;  // std dev = 5.96e-08, 434.000 (wgt'ed) examples reached here.  /* #neg=434 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.0926912761892619;  // std dev = 0.000, 664.000 (wgt'ed) examples reached here.  /* #neg=664 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839675;  // std dev = 0.000, 180.000 (wgt'ed) examples reached here.  /* #neg=180 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948756;  // std dev = 3.86e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.08518475138839675;  // std dev = 5.16e-08, 389.000 (wgt'ed) examples reached here.  /* #neg=389 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109146;  // std dev = 6.50e-08, 181.000 (wgt'ed) examples reached here.  /* #neg=181 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.46e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.07877675473109177;  // std dev = 1.29e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.07877675473109139;  // std dev = 5.96e-08, 423.000 (wgt'ed) examples reached here.  /* #neg=423 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.07324622576333664;  // std dev = 1.15e-07, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1770964977452765;  // std dev = 2.76e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.0732462257633372;  // std dev = 0.000, 432.000 (wgt'ed) examples reached here.  /* #neg=432 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.0684269778442027;  // std dev = 1.67e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.06842697784420267;  // std dev = 8.94e-08, 599.000 (wgt'ed) examples reached here.  /* #neg=599 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202623;  // std dev = 0.000, 191.000 (wgt'ed) examples reached here.  /* #neg=191 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080118;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return -0.06419184008202597;  // std dev = 1.14e-07, 405.000 (wgt'ed) examples reached here.  /* #neg=405 */
Inference time using transfer learning 0.9470655918121338
Refined model CLL: -0.064216


******************************************
Best model found
******************************************
Results 

CLL : -0.063421 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.060142993927002 

Total Inference Time : 1.4110217094421387 

Total revision time: 10.374531507492065
Best scored revision CLL: -0.064216


Results 

CLL : -0.063421 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 10.392714500427246 

Total Inference Time : 1.4110217094421387 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos examples: 58
Target test neg examples: 3423

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.7168946266174316
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.7011241417110808;  // std dev = 4.002, 121.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=102 */
%   | | | else return 0.7308762078267851;  // std dev = 2.472, 55.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=48 */
%   else return 0.07086287152982862;  // std dev = 11.704, 818.000 (wgt'ed) examples reached here.  /* #neg=644 #pos=174 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15069798375181495;  // std dev = 0.000, 224.000 (wgt'ed) examples reached here.  /* #neg=224 */
%   else return 0.24456762857675463;  // std dev = 13.191, 777.000 (wgt'ed) examples reached here.  /* #neg=453 #pos=324 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.13240781403989488;  // std dev = 1.32e-07, 212.000 (wgt'ed) examples reached here.  /* #neg=212 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23346484116934207;  // std dev = 12.832, 726.000 (wgt'ed) examples reached here.  /* #neg=402 #pos=324 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11792347415551664;  // std dev = 0.000, 220.000 (wgt'ed) examples reached here.  /* #neg=220 */
%   else return 0.1933924310994832;  // std dev = 12.765, 724.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=324 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4770596884160001;  // std dev = 3.616, 117.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=102 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03168567890153982;  // std dev = 0.411, 846.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=222 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10924457474043782;  // std dev = 9.88e-08, 215.000 (wgt'ed) examples reached here.  /* #neg=215 */
%   else return 0.12211315909694515;  // std dev = 12.601, 736.000 (wgt'ed) examples reached here.  /* #neg=412 #pos=324 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.09905889684861403;  // std dev = 0.000, 223.000 (wgt'ed) examples reached here.  /* #neg=223 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08185457443535428;  // std dev = 12.685, 771.000 (wgt'ed) examples reached here.  /* #neg=447 #pos=324 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09056265346610114;  // std dev = 5.16e-08, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
%   else return 0.07897897947057984;  // std dev = 12.498, 742.000 (wgt'ed) examples reached here.  /* #neg=418 #pos=324 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08698753635515105;  // std dev = 6.160, 393.000 (wgt'ed) examples reached here.  /* #neg=243 #pos=150 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.006541562258119626;  // std dev = 10.911, 551.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=174 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0902686337291313;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #neg=202 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041107579772763476;  // std dev = 12.698, 764.000 (wgt'ed) examples reached here.  /* #neg=440 #pos=324 */
Inference time using transfer learning 1.1609177589416504
Parameter learned model CLL:-0.329154 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [4.002, 19, 102], 'true,false,false,false': [2.472, 7, 48], 'false': [11.704, 644, 174]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 224, 0], 'false': [13.191, 453, 324]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.32e-07, 212, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [12.832, 402, 324]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 220, 0], 'false': [12.765, 400, 324]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [3.616, 15, 102], 'true,false': [0.0, 0, 0], 'false': [0.411, 624, 222]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [9.88e-08, 215, 0], 'false': [12.601, 412, 324]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 223, 0], 'true,false,false': [0.0, 0, 0], 'false': [12.685, 447, 324]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [5.16e-08, 218, 0], 'false': [12.498, 418, 324]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [6.16, 243, 150], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.911, 377, 174]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 202, 0], 'true,false': [0.0, 0, 0], 'false': [12.698, 440, 324]}]
{'': [0.12590392561984026, 0.16746671767863716], 'true': [nan, 0.12590392561984026], 'true,false': [nan, 0.12590392561984026], 'true,false,false': [0.13236800764975337, 0.11107438016528964]}
{'': [-1.1102230246251565e-16, 0.22393478499133251], 'true': [nan, -1.1102230246251565e-16], 'true,false': [nan, -1.1102230246251565e-16]}
{'': [8.169565652902095e-17, 0.22679119797427175], 'true': [nan, 8.169565652902095e-17], 'true,false': [nan, 8.169565652902095e-17], 'true,false,false': [8.169565652902095e-17, nan]}
{'': [-9.689219124001366e-17, 0.225071316998432], 'true': [nan, -9.689219124001366e-17], 'true,false': [nan, -9.689219124001366e-17]}
{'': [0.11176857330703363, 0.16930259014828325], 'true': [0.11176857330703363, nan], 'true,true': [nan, 0.11176857330703363], 'true,true,false': [nan, 0.11176857330703363]}
{'': [4.544168658930873e-17, 0.21574177674832493], 'true': [nan, 4.544168658930873e-17], 'true,false': [nan, 4.544168658930873e-17], 'true,false,false': [nan, 4.544168658930873e-17]}
{'': [-1.2944304322983888e-16, 0.20869422948271635], 'true': [nan, -1.2944304322983888e-16], 'true,false': [-1.2944304322983888e-16, nan]}
{'': [1.2222638803212733e-17, 0.21050403523658212], 'true': [nan, 1.2222638803212733e-17], 'true,false': [nan, 1.2222638803212733e-17], 'true,false,false': [nan, 1.2222638803212733e-17]}
{'': [0.09655935869439435, 0.2160664819944615], 'false': [nan, 0.21606648199445988], 'true': [0.09655935869439435, nan], 'true,true': [nan, 0.09655935869439435], 'true,true,false': [nan, 0.09655935869439435]}
{'': [-7.584691950409486e-17, 0.2110415666212974], 'true': [-7.584691950409486e-17, nan], 'true,true': [nan, -7.584691950409486e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 2.9698734283447266
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1.04e-06, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048766;  // std dev = 5.96e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.14185106490048857;  // std dev = 0.000, 619.000 (wgt'ed) examples reached here.  /* #neg=619 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.12544463852839183;  // std dev = 0.000, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.12544463852839152;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return -0.12544463852839208;  // std dev = 0.000, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360679;  // std dev = 0.000, 235.000 (wgt'ed) examples reached here.  /* #neg=235 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.11231637819360632;  // std dev = 2.79e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.11231637819360672;  // std dev = 0.000, 383.000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783656;  // std dev = 0.000, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831163;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.10159632948783617;  // std dev = 4.83e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return -0.10159632948783645;  // std dev = 0.000, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.09269127618926173;  // std dev = 0.000, 611.000 (wgt'ed) examples reached here.  /* #neg=611 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839675;  // std dev = 1.49e-08, 224.000 (wgt'ed) examples reached here.  /* #neg=224 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948756;  // std dev = 3.86e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return -0.08518475138839672;  // std dev = 2.98e-08, 392.000 (wgt'ed) examples reached here.  /* #neg=392 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109139;  // std dev = 6.32e-08, 224.000 (wgt'ed) examples reached here.  /* #neg=224 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return -0.07877675473109139;  // std dev = 4.71e-08, 412.000 (wgt'ed) examples reached here.  /* #neg=412 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.07324622576333659;  // std dev = 8.56e-08, 220.000 (wgt'ed) examples reached here.  /* #neg=220 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527653;  // std dev = 2.73e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.07324622576333704;  // std dev = 9.13e-09, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return -0.07324622576333714;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #neg=396 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.0684269778442027;  // std dev = 1.67e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.06842697784420264;  // std dev = 0.000, 604.000 (wgt'ed) examples reached here.  /* #neg=604 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202623;  // std dev = 0.000, 199.000 (wgt'ed) examples reached here.  /* #neg=199 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080118;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.06419184008202608;  // std dev = 7.45e-08, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
Inference time using transfer learning 0.9671618938446045
Refined model CLL: -0.064225


******************************************
Best model found
******************************************
Results 

CLL : -0.063422 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.9698734283447266 

Total Inference Time : 1.4273090362548828 

Total revision time: 10.762043714523315
Best scored revision CLL: -0.064225


Results 

CLL : -0.063422 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 10.780226707458496 

Total Inference Time : 1.4273090362548828 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos examples: 178
Target test neg examples: 3543

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.1105806827545166
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.7956489350995126;  // std dev = 2.165, 80.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=75 */
%   | | | else return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return 0.07393840878372265;  // std dev = 9.821, 570.000 (wgt'ed) examples reached here.  /* #neg=447 #pos=123 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1510920389453433;  // std dev = 1.28e-08, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   else return 0.2409215870033973;  // std dev = 10.503, 495.000 (wgt'ed) examples reached here.  /* #neg=291 #pos=204 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.13271615567744285;  // std dev = 6.66e-08, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2178043709494171;  // std dev = 10.321, 479.000 (wgt'ed) examples reached here.  /* #neg=275 #pos=204 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.118170546266418;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   else return 0.18223113300923552;  // std dev = 10.263, 476.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=204 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5273617704458144;  // std dev = 2.165, 80.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=75 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03319717260563436;  // std dev = 0.415, 513.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=129 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10959905007845938;  // std dev = 0.000, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   else return 0.1219393312232463;  // std dev = 9.876, 475.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=204 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.09935228589493943;  // std dev = 3.48e-09, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10413012561554749;  // std dev = 9.794, 466.000 (wgt'ed) examples reached here.  /* #neg=262 #pos=204 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09080918972981596;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   else return 0.08050808773544248;  // std dev = 9.791, 468.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=204 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.057666178733548186;  // std dev = 4.138, 233.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=81 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0048294588398823226;  // std dev = 9.166, 388.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=123 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.08810966482791957;  // std dev = 0.000, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05828614613380527;  // std dev = 9.798, 470.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=204 */
Inference time using transfer learning 1.1782886981964111
Parameter learned model CLL:-0.316116 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [2.165, 5, 75], 'true,false,false,false': [0.926, 1, 6], 'false': [9.821, 447, 123]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.28e-08, 143, 0], 'false': [10.503, 291, 204]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [6.66e-08, 137, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [10.321, 275, 204]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 126, 0], 'false': [10.263, 272, 204]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [2.165, 5, 75], 'true,false': [0.0, 0, 0], 'false': [0.415, 384, 129]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 140, 0], 'false': [9.876, 271, 204]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [3.48e-09, 141, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.794, 262, 204]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 130, 0], 'false': [9.791, 264, 204]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [4.138, 152, 81], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.166, 265, 123]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 135, 0], 'true,false': [0.0, 0, 0], 'false': [9.798, 266, 204]}]
{'': [0.06420927467300822, 0.16922437673130225], 'true': [nan, 0.06420927467300822], 'true,false': [nan, 0.06420927467300822], 'true,false,false': [0.05859374999999893, 0.12244897959183662]}
{'': [1.6148698540002277e-16, 0.22286265073998646], 'true': [nan, 1.6148698540002277e-16], 'true,false': [nan, 1.6148698540002277e-16]}
{'': [3.241527079197537e-17, 0.2223773438869604], 'true': [nan, 3.241527079197537e-17], 'true,false': [nan, 3.241527079197537e-17], 'true,false,false': [3.241527079197537e-17, nan]}
{'': [-3.52451753849256e-18, 0.22127469973673514], 'true': [nan, -3.52451753849256e-18], 'true,false': [nan, -3.52451753849256e-18]}
{'': [0.05859374999999978, 0.17204959261371605], 'true': [0.05859374999999978, nan], 'true,true': [nan, 0.05859374999999978], 'true,true,false': [nan, 0.05859374999999978]}
{'': [-9.198990775465583e-17, 0.20534306381603343], 'true': [nan, -9.198990775465583e-17], 'true,false': [nan, -9.198990775465583e-17], 'true,false,false': [nan, -9.198990775465583e-17]}
{'': [1.1023491024646945e-17, 0.20582291763827207], 'true': [nan, 1.1023491024646945e-17], 'true,false': [1.1023491024646945e-17, nan]}
{'': [-2.3912495915003373e-17, 0.20482081700637828], 'true': [nan, -2.3912495915003373e-17], 'true,false': [nan, -2.3912495915003373e-17], 'true,false,false': [nan, -2.3912495915003373e-17]}
{'': [0.07349718372815618, 0.21651477308959724], 'false': [nan, 0.21651477308959532], 'true': [0.07349718372815618, nan], 'true,true': [nan, 0.07349718372815618], 'true,true,false': [nan, 0.07349718372815618]}
{'': [-3.2895497025930565e-18, 0.20427419030205624], 'true': [-3.2895497025930565e-18, nan], 'true,true': [nan, -3.2895497025930565e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 2.243617296218872
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.14185106490048743;  // std dev = 2.83e-07, 418.000 (wgt'ed) examples reached here.  /* #neg=418 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.12544463852839163;  // std dev = 0.000, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.7194734122109571;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return -0.12544463852839205;  // std dev = 0.000, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360615;  // std dev = 1.04e-07, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462833;  // std dev = 6.36e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.11231637819360685;  // std dev = 0.000, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783645;  // std dev = 0.000, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831014;  // std dev = 2.53e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.10159632948783656;  // std dev = 0.000, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601491;  // std dev = 4.00e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.09269127618926096;  // std dev = 7.45e-09, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else return -0.09269127618926078;  // std dev = 1.63e-07, 386.000 (wgt'ed) examples reached here.  /* #neg=386 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839679;  // std dev = 7.60e-08, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948845;  // std dev = 4.46e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.08518475138839683;  // std dev = 1.29e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return -0.08518475138839678;  // std dev = 8.02e-08, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109154;  // std dev = 7.52e-08, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   else if ( actor(B) )
%   | then return -0.07877675473109144;  // std dev = 5.77e-08, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.20975771563253498;  // std dev = 3.04e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.07877675473109175;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.0732462257633372;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527791;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.07343893298460072;  // std dev = 0.031, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367166;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.06842697784420275;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.06841918403231358;  // std dev = 0.000117, 394.000 (wgt'ed) examples reached here.  /* #neg=394 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419230826762144;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.13400703000801098;  // std dev = 1.38e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.06419184008202618;  // std dev = 2.63e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.0642633659313739;  // std dev = 0.020, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
Inference time using transfer learning 0.9908640384674072
Refined model CLL: -0.063571


******************************************
Best model found
******************************************
Results 

CLL : -0.065997 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.243617296218872 

Total Inference Time : 1.367795467376709 

Total revision time: 9.392817258834839
Best scored revision CLL: -0.063571


Results 

CLL : -0.065997 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 9.41100025177002 

Total Inference Time : 1.367795467376709 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos examples: 45
Target test neg examples: 1891

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.871720314025879
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.7186140513785801;  // std dev = 3.936, 129.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=111 */
%   | | | else return 0.7993254056877476;  // std dev = 1.680, 51.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=48 */
%   else return 0.06345458677194424;  // std dev = 11.894, 867.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14975226304470673;  // std dev = 2.63e-09, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
%   else return 0.25893737775603387;  // std dev = 13.218, 778.000 (wgt'ed) examples reached here.  /* #neg=441 #pos=337 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.13166718264287502;  // std dev = 0.000, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20944321536239768;  // std dev = 13.298, 791.000 (wgt'ed) examples reached here.  /* #neg=454 #pos=337 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11732959283646972;  // std dev = 1.22e-08, 239.000 (wgt'ed) examples reached here.  /* #neg=239 */
%   else return 0.18970119601249805;  // std dev = 13.022, 760.000 (wgt'ed) examples reached here.  /* #neg=423 #pos=337 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5141097008123979;  // std dev = 3.164, 122.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=111 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.023420052370782568;  // std dev = 0.404, 904.000 (wgt'ed) examples reached here.  /* #neg=678 #pos=226 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1079480383033936;  // std dev = 6.32e-08, 197.000 (wgt'ed) examples reached here.  /* #neg=197 */
%   else return 0.12741663061265815;  // std dev = 12.641, 762.000 (wgt'ed) examples reached here.  /* #neg=425 #pos=337 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.09798449676247531;  // std dev = 1.13e-08, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08928307431052114;  // std dev = 12.757, 785.000 (wgt'ed) examples reached here.  /* #neg=448 #pos=337 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08965889672813297;  // std dev = 1.30e-07, 251.000 (wgt'ed) examples reached here.  /* #neg=251 */
%   else return 0.07507883851700933;  // std dev = 12.676, 775.000 (wgt'ed) examples reached here.  /* #neg=438 #pos=337 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07348999239599074;  // std dev = 6.378, 424.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=159 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.015216724918550893;  // std dev = 11.141, 588.000 (wgt'ed) examples reached here.  /* #neg=410 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.08834791448443359;  // std dev = 0.000, 212.000 (wgt'ed) examples reached here.  /* #neg=212 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05863781926712024;  // std dev = 12.577, 771.000 (wgt'ed) examples reached here.  /* #neg=434 #pos=337 */
Inference time using transfer learning 0.9655399322509766
Parameter learned model CLL:-0.323015 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [3.936, 18, 111], 'true,false,false,false': [1.68, 3, 48], 'false': [11.894, 689, 178]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [2.63e-09, 233, 0], 'false': [13.218, 441, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 217, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.298, 454, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.22e-08, 239, 0], 'false': [13.022, 423, 337]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [3.164, 11, 111], 'true,false': [0.0, 0, 0], 'false': [0.404, 678, 226]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.32e-08, 197, 0], 'false': [12.641, 425, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [1.13e-08, 230, 0], 'true,false,false': [0.0, 0, 0], 'false': [12.757, 448, 337]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.3e-07, 251, 0], 'false': [12.676, 438, 337]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [6.378, 265, 159], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.141, 410, 178]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 212, 0], 'true,false': [0.0, 0, 0], 'false': [12.577, 434, 337]}]
{'': [0.10305555555556153, 0.16315524106379153], 'true': [nan, 0.10305555555556153], 'true,false': [nan, 0.10305555555556153], 'true,false,false': [0.12006489994592004, 0.05536332179930846]}
{'': [1.1435773644207621e-17, 0.22457185533141452], 'true': [nan, 1.1435773644207621e-17], 'true,false': [nan, 1.1435773644207621e-17]}
{'': [-7.367378596590901e-17, 0.2235683586914194], 'true': [nan, -7.367378596590901e-17], 'true,false': [nan, -7.367378596590901e-17], 'true,false,false': [-7.367378596590901e-17, nan]}
{'': [1.467909940508575e-16, 0.22312453421137718], 'true': [nan, 1.467909940508575e-16], 'true,false': [nan, 1.467909940508575e-16]}
{'': [0.08203439935501299, 0.16302644006908037], 'true': [0.08203439935501299, nan], 'true,true': [nan, 0.08203439935501299], 'true,true,false': [nan, 0.08203439935501299]}
{'': [2.0288339536297276e-17, 0.2097105151684408], 'true': [nan, 2.0288339536297276e-17], 'true,false': [nan, 2.0288339536297276e-17], 'true,false,false': [nan, 2.0288339536297276e-17]}
{'': [1.2743429500045275e-16, 0.20731155646459293], 'true': [nan, 1.2743429500045275e-16], 'true,false': [1.2743429500045275e-16, nan]}
{'': [6.723262937969076e-17, 0.20733300270499325], 'true': [nan, 6.723262937969076e-17], 'true,false': [nan, 6.723262937969076e-17], 'true,false,false': [nan, 6.723262937969076e-17]}
{'': [0.09592774342611149, 0.2110810310518814], 'false': [nan, 0.21108103105187734], 'true': [0.09592774342611149, nan], 'true,true': [nan, 0.09592774342611149], 'true,true,false': [nan, 0.09592774342611149]}
{'': [-3.2468786569226275e-17, 0.20516351566045007], 'true': [-3.2468786569226275e-17, nan], 'true,true': [nan, -3.2468786569226275e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 3.2165050506591797
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 5.37e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.14185106490048874;  // std dev = 0.000, 651.000 (wgt'ed) examples reached here.  /* #neg=651 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.12544463852839183;  // std dev = 0.000, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.12544463852839213;  // std dev = 0.000, 395.000 (wgt'ed) examples reached here.  /* #neg=395 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.1123163781936068;  // std dev = 0.000, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.11231637819360632;  // std dev = 2.79e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.11231637819360668;  // std dev = 0.000, 394.000 (wgt'ed) examples reached here.  /* #neg=394 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783649;  // std dev = 0.000, 212.000 (wgt'ed) examples reached here.  /* #neg=212 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10159632948783623;  // std dev = 3.80e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.10159632948783648;  // std dev = 0.000, 378.000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.09269127618926173;  // std dev = 0.000, 609.000 (wgt'ed) examples reached here.  /* #neg=609 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839675;  // std dev = 4.21e-08, 259.000 (wgt'ed) examples reached here.  /* #neg=259 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.0851847513883968;  // std dev = 1.97e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return -0.08518475138839672;  // std dev = 5.58e-08, 403.000 (wgt'ed) examples reached here.  /* #neg=403 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109139;  // std dev = 5.77e-08, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.07877675473109139;  // std dev = 5.16e-08, 416.000 (wgt'ed) examples reached here.  /* #neg=416 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.0732462257633368;  // std dev = 5.96e-08, 259.000 (wgt'ed) examples reached here.  /* #neg=259 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 1.05e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.07324622576333713;  // std dev = 0.000, 399.000 (wgt'ed) examples reached here.  /* #neg=399 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.06842697784420271;  // std dev = 7.45e-09, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else return -0.06842697784420247;  // std dev = 1.93e-07, 672.000 (wgt'ed) examples reached here.  /* #neg=672 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202625;  // std dev = 0.000, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080119;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return -0.06419184008202594;  // std dev = 1.14e-07, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
Inference time using transfer learning 0.7871005535125732
Refined model CLL: -0.064062


******************************************
Best model found
******************************************
Results 

CLL : -0.063847 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.2165050506591797 

Total Inference Time : 1.593289852142334 

Total revision time: 11.693302869796753
Best scored revision CLL: -0.064062


Results 

CLL : -0.063847 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 11.711485862731934 

Total Inference Time : 1.593289852142334 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos examples: 45
Target test neg examples: 2071

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.5791075229644775
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.6536034805540557;  // std dev = 4.634, 132.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=105 */
%   | | | else return 0.7152917922423693;  // std dev = 2.449, 49.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=42 */
%   else return 0.08011155192194051;  // std dev = 12.158, 856.000 (wgt'ed) examples reached here.  /* #neg=666 #pos=190 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1518855328064701;  // std dev = 0.000, 199.000 (wgt'ed) examples reached here.  /* #neg=199 */
%   else return 0.2532358537184203;  // std dev = 13.450, 794.000 (wgt'ed) examples reached here.  /* #neg=457 #pos=337 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.13333659157343522;  // std dev = 0.000, 210.000 (wgt'ed) examples reached here.  /* #neg=210 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2123794296518075;  // std dev = 13.431, 796.000 (wgt'ed) examples reached here.  /* #neg=459 #pos=337 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11866738805973405;  // std dev = 0.000, 209.000 (wgt'ed) examples reached here.  /* #neg=209 */
%   else return 0.1525651956912252;  // std dev = 13.645, 845.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=337 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5040669356864439;  // std dev = 3.623, 120.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=105 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.023490731694413635;  // std dev = 0.408, 938.000 (wgt'ed) examples reached here.  /* #neg=706 #pos=232 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10906890720926037;  // std dev = 9.19e-08, 209.000 (wgt'ed) examples reached here.  /* #neg=209 */
%   else return 0.12141809389536774;  // std dev = 12.999, 807.000 (wgt'ed) examples reached here.  /* #neg=470 #pos=337 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.09891344568240022;  // std dev = 6.72e-09, 227.000 (wgt'ed) examples reached here.  /* #neg=227 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0903045845247691;  // std dev = 13.082, 816.000 (wgt'ed) examples reached here.  /* #neg=479 #pos=337 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09044038966685265;  // std dev = 0.000, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
%   else return 0.06670048067584135;  // std dev = 13.106, 827.000 (wgt'ed) examples reached here.  /* #neg=490 #pos=337 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11540814710552316;  // std dev = 6.043, 348.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=147 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.00800279660460525;  // std dev = 11.516, 629.000 (wgt'ed) examples reached here.  /* #neg=439 #pos=190 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.09251537102452222;  // std dev = 7.33e-09, 191.000 (wgt'ed) examples reached here.  /* #neg=191 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0585549826235891;  // std dev = 12.904, 799.000 (wgt'ed) examples reached here.  /* #neg=462 #pos=337 */
Inference time using transfer learning 1.0147855281829834
Parameter learned model CLL:-0.329538 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [4.634, 27, 105], 'true,false,false,false': [2.449, 7, 42], 'false': [12.158, 666, 190]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 199, 0], 'false': [13.45, 457, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 210, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.431, 459, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 209, 0], 'false': [13.645, 508, 337]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [3.623, 15, 105], 'true,false': [0.0, 0, 0], 'false': [0.408, 706, 232]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [9.19e-08, 209, 0], 'false': [12.999, 470, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [6.72e-09, 227, 0], 'true,false,false': [0.0, 0, 0], 'false': [13.082, 479, 337]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 189, 0], 'false': [13.106, 490, 337]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [6.043, 201, 147], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.516, 439, 190]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [7.33e-09, 191, 0], 'true,false': [0.0, 0, 0], 'false': [12.904, 462, 337]}]
{'': [0.1525594456823716, 0.17269521355576956], 'true': [nan, 0.1525594456823716], 'true,false': [nan, 0.1525594456823716], 'true,false,false': [0.16270661157025093, 0.1224489795918376]}
{'': [-1.9638115812465082e-16, 0.227834142242537], 'true': [nan, -1.9638115812465082e-16], 'true,false': [nan, -1.9638115812465082e-16]}
{'': [-1.924386576016938e-16, 0.22661039689599935], 'true': [nan, -1.924386576016938e-16], 'true,false': [nan, -1.924386576016938e-16], 'true,false,false': [-1.924386576016938e-16, nan]}
{'': [-1.4873801286844203e-17, 0.22033019800182044], 'true': [nan, -1.4873801286844203e-17], 'true,false': [nan, -1.4873801286844203e-17]}
{'': [0.10937499999999997, 0.16626058865973606], 'true': [0.10937499999999997, nan], 'true,true': [nan, 0.10937499999999997], 'true,true,false': [nan, 0.10937499999999997]}
{'': [4.0371746350005693e-17, 0.2093721596733616], 'true': [nan, 4.0371746350005693e-17], 'true,false': [nan, 4.0371746350005693e-17], 'true,false,false': [nan, 4.0371746350005693e-17]}
{'': [4.499582302445568e-17, 0.2097446913878163], 'true': [nan, 4.499582302445568e-17], 'true,false': [4.499582302445568e-17, nan]}
{'': [-1.644774851296528e-17, 0.20769914567509531], 'true': [nan, -1.644774851296528e-17], 'true,false': [nan, -1.644774851296528e-17], 'true,false,false': [nan, -1.644774851296528e-17]}
{'': [0.10494940168401061, 0.2108224375127948], 'false': [nan, 0.21082243751279517], 'true': [0.10494940168401061, nan], 'true,true': [nan, 0.10494940168401061], 'true,true,false': [nan, 0.10494940168401061]}
{'': [5.3476711133777175e-17, 0.20841308019177754], 'true': [5.3476711133777175e-17, nan], 'true,true': [nan, 5.3476711133777175e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 3.251826763153076
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 5.37e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.1418510649004887;  // std dev = 0.000, 639.000 (wgt'ed) examples reached here.  /* #neg=639 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.12544463852839172;  // std dev = 0.000, 211.000 (wgt'ed) examples reached here.  /* #neg=211 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.12544463852839155;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.1254446385283921;  // std dev = 0.000, 401.000 (wgt'ed) examples reached here.  /* #neg=401 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360658;  // std dev = 0.000, 197.000 (wgt'ed) examples reached here.  /* #neg=197 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.11231637819360629;  // std dev = 4.08e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.11231637819360613;  // std dev = 0.000, 439.000 (wgt'ed) examples reached here.  /* #neg=439 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783658;  // std dev = 0.000, 239.000 (wgt'ed) examples reached here.  /* #neg=239 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10159632948783624;  // std dev = 3.49e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.1015963294878365;  // std dev = 0.000, 420.000 (wgt'ed) examples reached here.  /* #neg=420 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.09269127618926176;  // std dev = 0.000, 613.000 (wgt'ed) examples reached here.  /* #neg=613 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839675;  // std dev = 0.000, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.0851847513883968;  // std dev = 2.24e-08, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return -0.08518475138839675;  // std dev = 5.58e-08, 416.000 (wgt'ed) examples reached here.  /* #neg=416 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.0787767547310914;  // std dev = 7.45e-08, 188.000 (wgt'ed) examples reached here.  /* #neg=188 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return -0.07877675473109143;  // std dev = 5.16e-08, 433.000 (wgt'ed) examples reached here.  /* #neg=433 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.0732462257633366;  // std dev = 8.02e-08, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 1.05e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.07324622576333721;  // std dev = 0.000, 437.000 (wgt'ed) examples reached here.  /* #neg=437 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0684269778442027;  // std dev = 1.18e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.06842697784420283;  // std dev = 0.000, 652.000 (wgt'ed) examples reached here.  /* #neg=652 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202625;  // std dev = 0.000, 215.000 (wgt'ed) examples reached here.  /* #neg=215 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080119;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.06419184008202583;  // std dev = 1.46e-07, 417.000 (wgt'ed) examples reached here.  /* #neg=417 */
Inference time using transfer learning 0.7963252067565918
Refined model CLL: -0.064087


******************************************
Best model found
******************************************
Results 

CLL : -0.063719 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.251826763153076 

Total Inference Time : 1.5778560638427734 

Total revision time: 11.33189845085144
Best scored revision CLL: -0.064087


Results 

CLL : -0.063719 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 11.350081443786621 

Total Inference Time : 1.5778560638427734 

Run: 3

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos examples: 56
Target test neg examples: 3308

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.5086419582366943
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.7459994023892307;  // std dev = 3.264, 107.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=95 */
%   | | | else return 0.7308762078267851;  // std dev = 2.472, 55.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=48 */
%   else return 0.0849147343560164;  // std dev = 11.895, 807.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=183 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15250529616934375;  // std dev = 0.000, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   else return 0.2556478187594178;  // std dev = 13.118, 755.000 (wgt'ed) examples reached here.  /* #neg=429 #pos=326 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.1338207608484189;  // std dev = 0.000, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19041288600693376;  // std dev = 13.335, 808.000 (wgt'ed) examples reached here.  /* #neg=482 #pos=326 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11905482181341397;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #neg=194 */
%   else return 0.15018333359197522;  // std dev = 13.375, 822.000 (wgt'ed) examples reached here.  /* #neg=496 #pos=326 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.460696120602791;  // std dev = 3.797, 112.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=95 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05561559253637237;  // std dev = 0.422, 825.000 (wgt'ed) examples reached here.  /* #neg=594 #pos=231 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11256039443576907;  // std dev = 9.66e-08, 191.000 (wgt'ed) examples reached here.  /* #neg=191 */
%   else return 0.09947116881825971;  // std dev = 13.058, 816.000 (wgt'ed) examples reached here.  /* #neg=490 #pos=326 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.10179741329807228;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #neg=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10514111385284775;  // std dev = 12.733, 761.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=326 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09285961680277698;  // std dev = 1.25e-07, 204.000 (wgt'ed) examples reached here.  /* #neg=204 */
%   else return 0.06787059539303947;  // std dev = 12.885, 792.000 (wgt'ed) examples reached here.  /* #neg=466 #pos=326 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10538988079346533;  // std dev = 5.938, 362.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=143 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0075166949290256906;  // std dev = 11.282, 601.000 (wgt'ed) examples reached here.  /* #neg=418 #pos=183 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.09392052341174437;  // std dev = 0.000, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05639740786438864;  // std dev = 12.752, 770.000 (wgt'ed) examples reached here.  /* #neg=444 #pos=326 */
Inference time using transfer learning 1.2919342517852783
Parameter learned model CLL:-0.337848 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [3.264, 12, 95], 'true,false,false,false': [2.472, 7, 48], 'false': [11.895, 624, 183]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 183, 0], 'false': [13.118, 429, 326]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 150, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.335, 482, 326]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 194, 0], 'false': [13.375, 496, 326]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [3.797, 17, 95], 'true,false': [0.0, 0, 0], 'false': [0.422, 594, 231]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [9.66e-08, 191, 0], 'false': [13.058, 490, 326]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 194, 0], 'true,false,false': [0.0, 0, 0], 'false': [12.733, 435, 326]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.25e-07, 204, 0], 'false': [12.885, 466, 326]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [5.938, 219, 143], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.282, 418, 183]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 174, 0], 'true,false': [0.0, 0, 0], 'false': [12.752, 444, 326]}]
{'': [0.10352842554489174, 0.1753430715440644], 'true': [nan, 0.10352842554489174], 'true,false': [nan, 0.10352842554489174], 'true,false,false': [0.09957201502314783, 0.11107438016528964]}
{'': [-1.9413735949729513e-16, 0.2279120467079654], 'true': [nan, -1.9413735949729513e-16], 'true,false': [nan, -1.9413735949729513e-16]}
{'': [-1.0954200509634878e-16, 0.22006990559982625], 'true': [nan, -1.0954200509634878e-16], 'true,false': [nan, -1.0954200509634878e-16], 'true,false,false': [-1.0954200509634878e-16, nan]}
{'': [-3.433679457603577e-17, 0.21763838255744775], 'true': [nan, -3.433679457603577e-17], 'true,false': [nan, -3.433679457603577e-17]}
{'': [0.12874681122448903, 0.17840055666950672], 'true': [0.12874681122448903, nan], 'true,true': [nan, 0.12874681122448903], 'true,true,false': [nan, 0.12874681122448903]}
{'': [4.882656233953568e-17, 0.20895723027218666], 'true': [nan, 4.882656233953568e-17], 'true,false': [nan, 4.882656233953568e-17], 'true,false,false': [nan, 4.882656233953568e-17]}
{'': [-1.0987774264331447e-16, 0.21303327861953428], 'true': [nan, -1.0987774264331447e-16], 'true,false': [-1.0987774264331447e-16, nan]}
{'': [7.619177619976565e-17, 0.2096149235842523], 'true': [nan, 7.619177619976565e-17], 'true,false': [nan, 7.619177619976565e-17], 'true,false,false': [nan, 7.619177619976565e-17]}
{'': [0.09739753383094667, 0.21177682232330713], 'false': [nan, 0.21177682232330522], 'true': [0.09739753383094667, nan], 'true,true': [nan, 0.09739753383094667], 'true,true,false': [nan, 0.09739753383094667]}
{'': [-8.677605249943753e-17, 0.21119469642487243], 'true': [-8.677605249943753e-17, nan], 'true,true': [nan, -8.677605249943753e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 2.9905757904052734
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1.05e-06, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048766;  // std dev = 5.77e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.1418510649004883;  // std dev = 0.000, 587.000 (wgt'ed) examples reached here.  /* #neg=587 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.12544463852839158;  // std dev = 0.000, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.12544463852839205;  // std dev = 0.000, 391.000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360679;  // std dev = 0.000, 235.000 (wgt'ed) examples reached here.  /* #neg=235 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.11231637819360633;  // std dev = 2.36e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return -0.11231637819360649;  // std dev = 0.000, 427.000 (wgt'ed) examples reached here.  /* #neg=427 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.1015963294878365;  // std dev = 0.000, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831163;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.10159632948783624;  // std dev = 3.16e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.10159632948783648;  // std dev = 0.000, 419.000 (wgt'ed) examples reached here.  /* #neg=419 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.09269127618926103;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.09269127618926179;  // std dev = 0.000, 622.000 (wgt'ed) examples reached here.  /* #neg=622 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839675;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #neg=195 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948756;  // std dev = 3.86e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.08518475138839675;  // std dev = 3.65e-08, 401.000 (wgt'ed) examples reached here.  /* #neg=401 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109146;  // std dev = 6.32e-08, 186.000 (wgt'ed) examples reached here.  /* #neg=186 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.46e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.07877675473109172;  // std dev = 2.69e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.07877675473109144;  // std dev = 2.11e-08, 409.000 (wgt'ed) examples reached here.  /* #neg=409 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.07324622576333661;  // std dev = 1.24e-07, 205.000 (wgt'ed) examples reached here.  /* #neg=205 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1770964977452765;  // std dev = 2.76e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.07324622576333722;  // std dev = 0.000, 435.000 (wgt'ed) examples reached here.  /* #neg=435 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.06842697784420268;  // std dev = 2.58e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.06842697784420257;  // std dev = 4.21e-08, 595.000 (wgt'ed) examples reached here.  /* #neg=595 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202623;  // std dev = 0.000, 188.000 (wgt'ed) examples reached here.  /* #neg=188 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080118;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.06419184008202598;  // std dev = 1.11e-07, 408.000 (wgt'ed) examples reached here.  /* #neg=408 */
Inference time using transfer learning 0.9301199913024902
Refined model CLL: -0.064216


******************************************
Best model found
******************************************
Results 

CLL : -0.063421 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.9905757904052734 

Total Inference Time : 1.3878192901611328 

Total revision time: 10.155021905899048
Best scored revision CLL: -0.064216


Results 

CLL : -0.063421 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 10.17293667793274 

Total Inference Time : 1.3878192901611328 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos examples: 58
Target test neg examples: 3423

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.619070053100586
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.760803802356148;  // std dev = 3.151, 113.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=102 */
%   | | | else return 0.6857351419960642;  // std dev = 2.877, 58.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=48 */
%   else return 0.0820871590377349;  // std dev = 11.620, 777.000 (wgt'ed) examples reached here.  /* #neg=603 #pos=174 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1521401983005677;  // std dev = 6.45e-09, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
%   else return 0.2605481938929234;  // std dev = 12.974, 741.000 (wgt'ed) examples reached here.  /* #neg=417 #pos=324 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.13353558556792317;  // std dev = 0.000, 220.000 (wgt'ed) examples reached here.  /* #neg=220 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20812137399619735;  // std dev = 13.043, 763.000 (wgt'ed) examples reached here.  /* #neg=439 #pos=324 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11882665402273666;  // std dev = 0.000, 206.000 (wgt'ed) examples reached here.  /* #neg=206 */
%   else return 0.1708227155494362;  // std dev = 13.011, 762.000 (wgt'ed) examples reached here.  /* #neg=438 #pos=324 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5175354391593441;  // std dev = 2.876, 111.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=102 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05548973427771997;  // std dev = 0.419, 794.000 (wgt'ed) examples reached here.  /* #neg=572 #pos=222 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11235328884938087;  // std dev = 1.83e-07, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
%   else return 0.11281377640191273;  // std dev = 12.598, 757.000 (wgt'ed) examples reached here.  /* #neg=433 #pos=324 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.1016267505941771;  // std dev = 0.000, 220.000 (wgt'ed) examples reached here.  /* #neg=220 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08636129217864202;  // std dev = 12.668, 756.000 (wgt'ed) examples reached here.  /* #neg=432 #pos=324 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09271674696902103;  // std dev = 0.000, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
%   else return 0.06617136449837302;  // std dev = 12.640, 763.000 (wgt'ed) examples reached here.  /* #neg=439 #pos=324 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08608950245364451;  // std dev = 6.156, 392.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=150 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.003381477164859951;  // std dev = 10.911, 551.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=174 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.09216076355519723;  // std dev = 7.68e-09, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.052062003406055275;  // std dev = 12.565, 747.000 (wgt'ed) examples reached here.  /* #neg=423 #pos=324 */
Inference time using transfer learning 1.1812222003936768
Parameter learned model CLL:-0.330224 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [3.151, 11, 102], 'true,false,false,false': [2.877, 10, 48], 'false': [11.62, 603, 174]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [6.45e-09, 226, 0], 'false': [12.974, 417, 324]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 220, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.043, 439, 324]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 206, 0], 'false': [13.011, 438, 324]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [2.876, 9, 102], 'true,false': [0.0, 0, 0], 'false': [0.419, 572, 222]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.83e-07, 213, 0], 'false': [12.598, 433, 324]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 220, 0], 'true,false,false': [0.0, 0, 0], 'false': [12.668, 432, 324]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 236, 0], 'false': [12.64, 439, 324]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [6.156, 242, 150], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.911, 377, 174]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [7.68e-09, 208, 0], 'true,false': [0.0, 0, 0], 'false': [12.565, 423, 324]}]
{'': [0.10772545398584735, 0.1737898957976185], 'true': [nan, 0.10772545398584735], 'true,false': [nan, 0.10772545398584735], 'true,false,false': [0.08786905787454227, 0.14268727705112988]}
{'': [3.929993007522678e-17, 0.22716114568187068], 'true': [nan, 3.929993007522678e-17], 'true,false': [nan, 3.929993007522678e-17]}
{'': [-5.0464682937507114e-17, 0.2229508572376346], 'true': [nan, -5.0464682937507114e-17], 'true,false': [nan, -5.0464682937507114e-17], 'true,false,false': [-5.0464682937507114e-17, nan]}
{'': [-7.760782308059347e-17, 0.22215322719864591], 'true': [nan, -7.760782308059347e-17], 'true,false': [nan, -7.760782308059347e-17]}
{'': [0.07450693937180328, 0.17514533765411155], 'true': [0.07450693937180328, nan], 'true,true': [nan, 0.07450693937180328], 'true,true,false': [nan, 0.07450693937180328]}
{'': [1.563694400880502e-16, 0.20964301184312972], 'true': [nan, 1.563694400880502e-16], 'true,false': [nan, 1.563694400880502e-16], 'true,false,false': [nan, 1.563694400880502e-16]}
{'': [-9.891077855751394e-17, 0.2122582469515556], 'true': [nan, -9.891077855751394e-17], 'true,false': [-9.891077855751394e-17, nan]}
{'': [-3.7634678800852764e-18, 0.2093850030049299], 'true': [nan, -3.7634678800852764e-18], 'true,false': [nan, -3.7634678800852764e-18], 'true,false,false': [nan, -3.7634678800852764e-18]}
{'': [0.0966678865096942, 0.21606648199446374], 'false': [nan, 0.216066481994461], 'true': [0.0966678865096942, nan], 'true,true': [nan, 0.0966678865096942], 'true,true,false': [nan, 0.0966678865096942]}
{'': [5.764619550938313e-17, 0.21134230949314567], 'true': [5.764619550938313e-17, nan], 'true,true': [nan, 5.764619550938313e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 3.0589611530303955
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1.04e-06, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048766;  // std dev = 6.14e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.14185106490048832;  // std dev = 0.000, 592.000 (wgt'ed) examples reached here.  /* #neg=592 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.1254446385283918;  // std dev = 0.000, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.12544463852839213;  // std dev = 0.000, 422.000 (wgt'ed) examples reached here.  /* #neg=422 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360674;  // std dev = 0.000, 223.000 (wgt'ed) examples reached here.  /* #neg=223 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.11231637819360626;  // std dev = 4.71e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.11231637819360674;  // std dev = 0.000, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783656;  // std dev = 0.000, 227.000 (wgt'ed) examples reached here.  /* #neg=227 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831163;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.10159632948783619;  // std dev = 4.71e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.10159632948783652;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #neg=392 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return -0.09269127618926158;  // std dev = 0.000, 556.000 (wgt'ed) examples reached here.  /* #neg=556 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839675;  // std dev = 0.000, 205.000 (wgt'ed) examples reached here.  /* #neg=205 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948756;  // std dev = 3.86e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.08518475138839675;  // std dev = 2.98e-08, 382.000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109143;  // std dev = 4.21e-08, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.07877675473109177;  // std dev = 1.29e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.0787767547310914;  // std dev = 5.58e-08, 392.000 (wgt'ed) examples reached here.  /* #neg=392 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.0732462257633366;  // std dev = 1.32e-07, 219.000 (wgt'ed) examples reached here.  /* #neg=219 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527653;  // std dev = 2.73e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.07324622576333704;  // std dev = 1.05e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.07324622576333713;  // std dev = 0.000, 395.000 (wgt'ed) examples reached here.  /* #neg=395 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.06842697784420268;  // std dev = 2.11e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.06842697784420267;  // std dev = 7.88e-08, 596.000 (wgt'ed) examples reached here.  /* #neg=596 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202625;  // std dev = 0.000, 211.000 (wgt'ed) examples reached here.  /* #neg=211 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080118;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return -0.06419184008202615;  // std dev = 4.71e-08, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
Inference time using transfer learning 0.9437220096588135
Refined model CLL: -0.064225


******************************************
Best model found
******************************************
Results 

CLL : -0.063422 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.0589611530303955 

Total Inference Time : 1.4222781658172607 

Total revision time: 10.645223617553711
Best scored revision CLL: -0.064225


Results 

CLL : -0.063422 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 10.663138389587402 

Total Inference Time : 1.4222781658172607 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos examples: 178
Target test neg examples: 3543

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 1.9125220775604248
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.8321749091254866;  // std dev = 1.396, 77.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=75 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.09652102812276779;  // std dev = 9.679, 516.000 (wgt'ed) examples reached here.  /* #neg=393 #pos=123 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1540114373694147;  // std dev = 4.56e-09, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   else return 0.25488955912813566;  // std dev = 10.319, 473.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=204 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.13499583343430893;  // std dev = 9.19e-08, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2608921562420547;  // std dev = 9.819, 426.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=204 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11999407829036803;  // std dev = 0.000, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   else return 0.17380760696399378;  // std dev = 10.167, 467.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=204 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.45146658730576145;  // std dev = 2.970, 85.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=75 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0329826656574471;  // std dev = 0.421, 488.000 (wgt'ed) examples reached here.  /* #neg=359 #pos=129 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11110556914473678;  // std dev = 0.000, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   else return 0.09543758615717099;  // std dev = 10.014, 494.000 (wgt'ed) examples reached here.  /* #neg=290 #pos=204 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.100597502084856;  // std dev = 5.89e-09, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0928336942020923;  // std dev = 9.876, 469.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=204 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09185433968275394;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else return 0.05981962338045234;  // std dev = 9.976, 486.000 (wgt'ed) examples reached here.  /* #neg=282 #pos=204 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07905117113685814;  // std dev = 3.904, 220.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=81 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.011599963240447533;  // std dev = 9.193, 393.000 (wgt'ed) examples reached here.  /* #neg=270 #pos=123 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.09079190257557498;  // std dev = 6.04e-09, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04332910882870279;  // std dev = 9.922, 490.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=204 */
Inference time using transfer learning 1.185748815536499
Parameter learned model CLL:-0.314871 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.396, 2, 75], 'true,false,false,false': [0.0, 0, 6], 'false': [9.679, 393, 123]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [4.56e-09, 122, 0], 'false': [10.319, 269, 204]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [9.19e-08, 151, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [9.819, 222, 204]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 155, 0], 'false': [10.167, 263, 204]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [2.97, 10, 75], 'true,false': [0.0, 0, 0], 'false': [0.421, 359, 129]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 147, 0], 'false': [10.014, 290, 204]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [5.89e-09, 128, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.876, 265, 204]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 119, 0], 'false': [9.976, 282, 204]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [3.904, 139, 81], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.193, 270, 123]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [6.04e-09, 145, 0], 'true,false': [0.0, 0, 0], 'false': [9.922, 286, 204]}]
{'': [0.023515749745971405, 0.1815508382909685], 'true': [nan, 0.023515749745971405], 'true,false': [nan, 0.023515749745971405], 'true,false,false': [0.025299375948725576, -1.4802973661668753e-16]}
{'': [2.5480528434019987e-17, 0.22513738013787615], 'true': [nan, 2.5480528434019987e-17], 'true,false': [nan, 2.5480528434019987e-17]}
{'': [5.587877474934563e-17, 0.22631605358993995], 'true': [nan, 5.587877474934563e-17], 'true,false': [nan, 5.587877474934563e-17], 'true,false,false': [5.587877474934563e-17, nan]}
{'': [-2.2920733411616135e-17, 0.22136611419520522], 'true': [nan, -2.2920733411616135e-17], 'true,false': [nan, -2.2920733411616135e-17]}
{'': [0.10380622837370297, 0.17694349609075039], 'true': [0.10380622837370297, nan], 'true,true': [nan, 0.10380622837370297], 'true,true,false': [nan, 0.10380622837370297]}
{'': [-2.5678627780445798e-17, 0.2030090411723203], 'true': [nan, -2.5678627780445798e-17], 'true,false': [nan, -2.5678627780445798e-17], 'true,false,false': [nan, -2.5678627780445798e-17]}
{'': [3.469446951953614e-17, 0.20794486909674356], 'true': [nan, 3.469446951953614e-17], 'true,false': [3.469446951953614e-17, nan]}
{'': [-2.7988815746852685e-17, 0.20477033821645516], 'true': [nan, -2.7988815746852685e-17], 'true,false': [nan, -2.7988815746852685e-17], 'true,false,false': [nan, -2.7988815746852685e-17]}
{'': [0.06928200488769656, 0.21502243459005613], 'false': [nan, 0.2150224345900584], 'true': [0.06928200488769656, nan], 'true,true': [nan, 0.06928200488769656], 'true,true,false': [nan, 0.06928200488769656]}
{'': [3.828355257328126e-17, 0.20089582801344769], 'true': [3.828355257328126e-17, nan], 'true,true': [nan, 3.828355257328126e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;genre(B, E).;true;true
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 2.255704641342163
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995127;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( actor(B) )
%   | then return -0.1418510649004874;  // std dev = 2.81e-07, 384.000 (wgt'ed) examples reached here.  /* #neg=384 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995105;  // std dev = 6.95e-07, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.12544463852839136;  // std dev = 0.000, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.7194734122109568;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.12616932053428276;  // std dev = 0.155, 214.000 (wgt'ed) examples reached here.  /* #neg=214 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.1123163781936062;  // std dev = 1.00e-07, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 6.08e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.11224414667267978;  // std dev = 0.000, 248.000 (wgt'ed) examples reached here.  /* #neg=248 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783666;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( actor(B) )
%   | then return -0.10153679286403168;  // std dev = 2.11e-08, 256.000 (wgt'ed) examples reached here.  /* #neg=256 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831;  // std dev = 2.67e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.10159632948783633;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014867;  // std dev = 3.86e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return -0.09266012885676288;  // std dev = 0.000463, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518717867872597;  // std dev = 0.000, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948834;  // std dev = 2.31e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.08518475138839683;  // std dev = 1.49e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.08514094997481102;  // std dev = 6.53e-06, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877883899784459;  // std dev = 0.000, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.20975771563253495;  // std dev = 2.86e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.08455731489640061;  // std dev = 0.107, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return -0.07873915733805952;  // std dev = 4.31e-06, 264.000 (wgt'ed) examples reached here.  /* #neg=264 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.07324803385271811;  // std dev = 6.58e-08, 158.000 (wgt'ed) examples reached here.  /* #neg=158 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1770964977452777;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.080222779099707;  // std dev = 0.141, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return -0.07321357842223654;  // std dev = 6.96e-06, 263.000 (wgt'ed) examples reached here.  /* #neg=263 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367158;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.07332732213780574;  // std dev = 0.094, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else return -0.06840986281432201;  // std dev = 0.000289, 390.000 (wgt'ed) examples reached here.  /* #neg=390 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419435967936059;  // std dev = 2.98e-08, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.13400703000801087;  // std dev = 9.66e-08, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.07279116905867648;  // std dev = 0.123, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return -0.06416592293495692;  // std dev = 7.10e-06, 260.000 (wgt'ed) examples reached here.  /* #neg=260 */
Inference time using transfer learning 0.9672641754150391
Refined model CLL: -0.063857


******************************************
Best model found
******************************************
Results 

CLL : -0.073637 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.255704641342163 

Total Inference Time : 1.392160177230835 

Total revision time: 9.031131505966187
Best scored revision CLL: -0.063857


Results 

CLL : -0.073637 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 9.049046277999878 

Total Inference Time : 1.392160177230835 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos examples: 45
Target test neg examples: 1891

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.847158670425415
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.7605879594897544;  // std dev = 3.291, 123.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=111 */
%   | | | else return 0.7308762078267851;  // std dev = 2.472, 55.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=48 */
%   else return 0.06157750652808196;  // std dev = 11.908, 875.000 (wgt'ed) examples reached here.  /* #neg=697 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14951341804144866;  // std dev = 8.33e-09, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
%   else return 0.25271075151482036;  // std dev = 13.302, 787.000 (wgt'ed) examples reached here.  /* #neg=450 #pos=337 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.13147999466903545;  // std dev = 0.000, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19587712353169856;  // std dev = 13.443, 823.000 (wgt'ed) examples reached here.  /* #neg=486 #pos=337 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11717940093059828;  // std dev = 6.45e-09, 227.000 (wgt'ed) examples reached here.  /* #neg=227 */
%   else return 0.19728180138083481;  // std dev = 12.944, 755.000 (wgt'ed) examples reached here.  /* #neg=418 #pos=337 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4711509077264445;  // std dev = 3.740, 127.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=111 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.02195970731678952;  // std dev = 0.403, 921.000 (wgt'ed) examples reached here.  /* #neg=695 #pos=226 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10768243548622206;  // std dev = 1.12e-07, 209.000 (wgt'ed) examples reached here.  /* #neg=209 */
%   else return 0.1269145412661788;  // std dev = 12.729, 771.000 (wgt'ed) examples reached here.  /* #neg=434 #pos=337 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.09776414820768024;  // std dev = 0.000, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08153738841995985;  // std dev = 12.968, 806.000 (wgt'ed) examples reached here.  /* #neg=469 #pos=337 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08947336379287772;  // std dev = 0.000, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
%   else return 0.08088366543991808;  // std dev = 12.650, 782.000 (wgt'ed) examples reached here.  /* #neg=445 #pos=337 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10875954097214247;  // std dev = 6.047, 378.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=159 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.014385626514223324;  // std dev = 11.165, 594.000 (wgt'ed) examples reached here.  /* #neg=416 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.09105705756985895;  // std dev = 0.000, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05797314477949189;  // std dev = 12.601, 780.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=337 */
Inference time using transfer learning 0.9693746566772461
Parameter learned model CLL:-0.320574 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [3.291, 12, 111], 'true,false,false,false': [2.472, 7, 48], 'false': [11.908, 697, 178]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [8.33e-09, 246, 0], 'false': [13.302, 450, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 217, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.443, 486, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [6.45e-09, 227, 0], 'false': [12.944, 418, 337]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [3.74, 16, 111], 'true,false': [0.0, 0, 0], 'false': [0.403, 695, 226]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.12e-07, 209, 0], 'false': [12.729, 434, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 242, 0], 'true,false,false': [0.0, 0, 0], 'false': [12.968, 469, 337]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 232, 0], 'false': [12.65, 445, 337]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [6.047, 219, 159], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.165, 416, 178]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 241, 0], 'true,false': [0.0, 0, 0], 'false': [12.601, 443, 337]}]
{'': [0.09534780962000347, 0.16204538775510258], 'true': [nan, 0.09534780962000347], 'true,false': [nan, 0.09534780962000347], 'true,false,false': [0.08804283164783179, 0.11107438016528964]}
{'': [7.220962761789636e-17, 0.22482270252871553], 'true': [nan, 7.220962761789636e-17], 'true,false': [nan, 7.220962761789636e-17]}
{'': [-1.2074314922190642e-16, 0.21957566536101134], 'true': [nan, -1.2074314922190642e-16], 'true,false': [nan, -1.2074314922190642e-16], 'true,false,false': [-1.2074314922190642e-16, nan]}
{'': [3.9126802629961466e-17, 0.22191102788443012], 'true': [nan, 3.9126802629961466e-17], 'true,false': [nan, 3.9126802629961466e-17]}
{'': [0.11011222022443984, 0.16226971633020257], 'true': [0.11011222022443984, nan], 'true,true': [nan, 0.11011222022443984], 'true,true,false': [nan, 0.11011222022443984]}
{'': [5.949520514737681e-17, 0.21013682264668748], 'true': [nan, 5.949520514737681e-17], 'true,false': [nan, 5.949520514737681e-17], 'true,false,false': [nan, 5.949520514737681e-17]}
{'': [-1.3029063594774565e-16, 0.20863915966421676], 'true': [nan, -1.3029063594774565e-16], 'true,false': [-1.3029063594774565e-16, nan]}
{'': [-6.699621700324221e-18, 0.20462703099348178], 'true': [nan, -6.699621700324221e-18], 'true,false': [nan, -6.699621700324221e-18], 'true,false,false': [nan, -6.699621700324221e-18]}
{'': [0.09675045896315476, 0.20986520649820067], 'false': [nan, 0.20986520649820317], 'true': [0.09675045896315476, nan], 'true,true': [nan, 0.09675045896315476], 'true,true,false': [nan, 0.09675045896315476]}
{'': [-1.3359530171837983e-16, 0.20356999189013514], 'true': [-1.3359530171837983e-16, nan], 'true,true': [nan, -1.3359530171837983e-16]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 3.043886184692383
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 5.37e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.14185106490048846;  // std dev = 0.000, 601.000 (wgt'ed) examples reached here.  /* #neg=601 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.1254446385283918;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.1254446385283921;  // std dev = 0.000, 390.000 (wgt'ed) examples reached here.  /* #neg=390 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360654;  // std dev = 0.000, 190.000 (wgt'ed) examples reached here.  /* #neg=190 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.11231637819360633;  // std dev = 2.36e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return -0.11231637819360674;  // std dev = 0.000, 378.000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783658;  // std dev = 0.000, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10159632948783623;  // std dev = 3.33e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.10159632948783652;  // std dev = 0.000, 388.000 (wgt'ed) examples reached here.  /* #neg=388 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.0926912761892619;  // std dev = 0.000, 663.000 (wgt'ed) examples reached here.  /* #neg=663 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839675;  // std dev = 2.58e-08, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.08518475138839672;  // std dev = 6.66e-08, 394.000 (wgt'ed) examples reached here.  /* #neg=394 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109139;  // std dev = 5.58e-08, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07877675473109179;  // std dev = 5.27e-09, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return -0.0787767547310914;  // std dev = 5.16e-08, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.07324622576333668;  // std dev = 7.60e-08, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 1.29e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return -0.07324622576333711;  // std dev = 0.000, 387.000 (wgt'ed) examples reached here.  /* #neg=387 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0684269778442027;  // std dev = 1.39e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.06842697784420279;  // std dev = 0.000, 645.000 (wgt'ed) examples reached here.  /* #neg=645 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202623;  // std dev = 2.58e-08, 252.000 (wgt'ed) examples reached here.  /* #neg=252 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080119;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.06419184008202591;  // std dev = 1.22e-07, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
Inference time using transfer learning 0.7917141914367676
Refined model CLL: -0.064062


******************************************
Best model found
******************************************
Results 

CLL : -0.063847 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.043886184692383 

Total Inference Time : 1.556685209274292 

Total revision time: 11.451444864273071
Best scored revision CLL: -0.064062


Results 

CLL : -0.063847 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 11.469359636306763 

Total Inference Time : 1.556685209274292 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos examples: 45
Target test neg examples: 2071

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.7867612838745117
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.7188046728044286;  // std dev = 3.825, 122.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=105 */
%   | | | else return 0.7331489350995121;  // std dev = 2.291, 48.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=42 */
%   else return 0.08761753413332715;  // std dev = 12.100, 828.000 (wgt'ed) examples reached here.  /* #neg=638 #pos=190 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15285495428560833;  // std dev = 0.000, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
%   else return 0.231716772176516;  // std dev = 13.649, 830.000 (wgt'ed) examples reached here.  /* #neg=493 #pos=337 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.1340937551097881;  // std dev = 1.12e-07, 205.000 (wgt'ed) examples reached here.  /* #neg=205 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2144130201307955;  // std dev = 13.354, 795.000 (wgt'ed) examples reached here.  /* #neg=458 #pos=337 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11927316221597112;  // std dev = 0.000, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
%   else return 0.18595000989968072;  // std dev = 13.203, 777.000 (wgt'ed) examples reached here.  /* #neg=440 #pos=337 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4927818626999424;  // std dev = 3.515, 119.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=105 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03480854708137016;  // std dev = 0.417, 878.000 (wgt'ed) examples reached here.  /* #neg=646 #pos=232 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11068178951183441;  // std dev = 1.05e-07, 212.000 (wgt'ed) examples reached here.  /* #neg=212 */
%   else return 0.1302924519077224;  // std dev = 12.767, 772.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=337 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.10024750156732436;  // std dev = 8.23e-09, 212.000 (wgt'ed) examples reached here.  /* #neg=212 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0750386527793663;  // std dev = 13.122, 826.000 (wgt'ed) examples reached here.  /* #neg=489 #pos=337 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09156077073274115;  // std dev = 6.50e-08, 192.000 (wgt'ed) examples reached here.  /* #neg=192 */
%   else return 0.07225209306886306;  // std dev = 12.962, 796.000 (wgt'ed) examples reached here.  /* #neg=459 #pos=337 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08905449944122237;  // std dev = 5.898, 403.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=147 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.021441298498968153;  // std dev = 11.570, 643.000 (wgt'ed) examples reached here.  /* #neg=453 #pos=190 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.09135251890103287;  // std dev = 1.32e-09, 202.000 (wgt'ed) examples reached here.  /* #neg=202 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05325749580511122;  // std dev = 12.867, 803.000 (wgt'ed) examples reached here.  /* #neg=466 #pos=337 */
Inference time using transfer learning 1.0543863773345947
Parameter learned model CLL:-0.332284 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [3.825, 17, 105], 'true,false,false,false': [2.291, 6, 42], 'false': [12.1, 638, 190]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 213, 0], 'false': [13.649, 493, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.12e-07, 205, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.354, 458, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 230, 0], 'false': [13.203, 440, 337]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [3.515, 14, 105], 'true,false': [0.0, 0, 0], 'false': [0.417, 646, 232]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.05e-07, 212, 0], 'false': [12.767, 435, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [8.23e-09, 212, 0], 'true,false,false': [0.0, 0, 0], 'false': [13.122, 489, 337]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.5e-08, 192, 0], 'false': [12.962, 459, 337]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [5.898, 256, 147], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.57, 453, 190]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [1.32e-09, 202, 0], 'true,false': [0.0, 0, 0], 'false': [12.867, 466, 337]}]
{'': [0.11698961937716808, 0.1768127610912745], 'true': [nan, 0.11698961937716808], 'true,false': [nan, 0.11698961937716808], 'true,false,false': [0.1199274388605242, 0.10937500000000089]}
{'': [-5.837792429953875e-17, 0.22445154341230872], 'true': [nan, -5.837792429953875e-17], 'true,false': [nan, -5.837792429953875e-17]}
{'': [6.065608719903295e-17, 0.2243292915881235], 'true': [nan, 6.065608719903295e-17], 'true,false': [nan, 6.065608719903295e-17], 'true,false,false': [6.065608719903295e-17, nan]}
{'': [-7.144043810631442e-17, 0.22435342884392004], 'true': [nan, -7.144043810631442e-17], 'true,false': [nan, -7.144043810631442e-17]}
{'': [0.10380622837370307, 0.17362076728088469], 'true': [0.10380622837370307, nan], 'true,true': [nan, 0.10380622837370307], 'true,true,false': [nan, 0.10380622837370307]}
{'': [5.236901059552625e-17, 0.21114466285321326], 'true': [nan, 5.236901059552625e-17], 'true,false': [nan, 5.236901059552625e-17], 'true,false,false': [nan, 5.236901059552625e-17]}
{'': [6.70323335622736e-17, 0.20846104227595985], 'true': [nan, 6.70323335622736e-17], 'true,false': [6.70323335622736e-17, nan]}
{'': [2.1973164029039556e-17, 0.211063213729813], 'true': [nan, 2.1973164029039556e-17], 'true,false': [nan, 2.1973164029039556e-17], 'true,false,false': [nan, 2.1973164029039556e-17]}
{'': [0.08631155474566955, 0.20817561537214788], 'false': [nan, 0.20817561537214946], 'true': [0.08631155474566955, nan], 'true,true': [nan, 0.08631155474566955], 'true,true,false': [nan, 0.08631155474566955]}
{'': [0.0, 0.20616672756443163], 'true': [0.0, nan], 'true,true': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 3.125723123550415
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 6.66e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.14185106490048854;  // std dev = 0.000, 615.000 (wgt'ed) examples reached here.  /* #neg=615 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.12544463852839172;  // std dev = 0.000, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.12544463852839147;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.12544463852839213;  // std dev = 0.000, 410.000 (wgt'ed) examples reached here.  /* #neg=410 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360676;  // std dev = 0.000, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.11231637819360628;  // std dev = 4.21e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.1123163781936066;  // std dev = 0.000, 400.000 (wgt'ed) examples reached here.  /* #neg=400 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783655;  // std dev = 0.000, 215.000 (wgt'ed) examples reached here.  /* #neg=215 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.1015963294878362;  // std dev = 4.59e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.10159632948783634;  // std dev = 5.96e-08, 453.000 (wgt'ed) examples reached here.  /* #neg=453 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926186;  // std dev = 0.000, 614.000 (wgt'ed) examples reached here.  /* #neg=614 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.31706417254236235;  // std dev = 0.713, 340.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=337 */
%   | else return -0.09269127618926104;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839675;  // std dev = 2.11e-08, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25586613622008797;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.08601933581317224;  // std dev = 0.112, 408.000 (wgt'ed) examples reached here.  /* #neg=408 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109139;  // std dev = 6.83e-08, 205.000 (wgt'ed) examples reached here.  /* #neg=205 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2102477523999036;  // std dev = 4.34e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return -0.07889149300764203;  // std dev = 0.050, 403.000 (wgt'ed) examples reached here.  /* #neg=403 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.07324622576333666;  // std dev = 4.94e-08, 188.000 (wgt'ed) examples reached here.  /* #neg=188 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17745583307547055;  // std dev = 4.73e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 1.29e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return -0.07365725929754131;  // std dev = 0.081, 418.000 (wgt'ed) examples reached here.  /* #neg=418 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15301639538167733;  // std dev = 3.21e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0684269778442027;  // std dev = 1.39e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.068690727635978;  // std dev = 0.082, 678.000 (wgt'ed) examples reached here.  /* #neg=678 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06417599812397523;  // std dev = 7.60e-08, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.13421975970607547;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.06466849055960844;  // std dev = 0.082, 410.000 (wgt'ed) examples reached here.  /* #neg=410 */
Inference time using transfer learning 0.7748250961303711
Refined model CLL: -0.064293


******************************************
Best model found
******************************************
Results 

CLL : -0.063695 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.125723123550415 

Total Inference Time : 1.4473986625671387 

Total revision time: 11.394999980926514
Best scored revision CLL: -0.064293


Results 

CLL : -0.063695 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 11.412914752960205 

Total Inference Time : 1.4473986625671387 

Run: 4

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos examples: 56
Target test neg examples: 3308

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.50370454788208
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.6632336808622226;  // std dev = 4.303, 118.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=95 */
%   | | | else return 0.7002541982574072;  // std dev = 2.753, 57.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=48 */
%   else return 0.08379628405142202;  // std dev = 11.904, 811.000 (wgt'ed) examples reached here.  /* #neg=628 #pos=183 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1523607955170306;  // std dev = 9.31e-09, 200.000 (wgt'ed) examples reached here.  /* #neg=200 */
%   else return 0.23452549345790458;  // std dev = 13.435, 804.000 (wgt'ed) examples reached here.  /* #neg=478 #pos=326 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.1337079079082422;  // std dev = 7.88e-08, 177.000 (wgt'ed) examples reached here.  /* #neg=177 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18592628701093897;  // std dev = 13.538, 830.000 (wgt'ed) examples reached here.  /* #neg=504 #pos=326 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11896453894728153;  // std dev = 5.59e-09, 186.000 (wgt'ed) examples reached here.  /* #neg=186 */
%   else return 0.17999623563322925;  // std dev = 13.178, 778.000 (wgt'ed) examples reached here.  /* #neg=452 #pos=326 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4642888796557361;  // std dev = 3.979, 114.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=95 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.040628654037923116;  // std dev = 0.417, 868.000 (wgt'ed) examples reached here.  /* #neg=637 #pos=231 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11099592757499364;  // std dev = 2.11e-08, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   else return 0.12210870020811115;  // std dev = 12.877, 781.000 (wgt'ed) examples reached here.  /* #neg=455 #pos=326 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.10050696949598302;  // std dev = 1.32e-09, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08593833289297008;  // std dev = 13.003, 802.000 (wgt'ed) examples reached here.  /* #neg=476 #pos=326 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09177841871420224;  // std dev = 0.000, 186.000 (wgt'ed) examples reached here.  /* #neg=186 */
%   else return 0.06185162304950081;  // std dev = 13.083, 811.000 (wgt'ed) examples reached here.  /* #neg=485 #pos=326 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12964860447597723;  // std dev = 5.942, 334.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=143 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.02562649418749863;  // std dev = 11.452, 646.000 (wgt'ed) examples reached here.  /* #neg=463 #pos=183 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0949842708792623;  // std dev = 0.000, 197.000 (wgt'ed) examples reached here.  /* #neg=197 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06570261994676344;  // std dev = 12.752, 765.000 (wgt'ed) examples reached here.  /* #neg=439 #pos=326 */
Inference time using transfer learning 1.2902321815490723
Parameter learned model CLL:-0.332924 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [4.303, 23, 95], 'true,false,false,false': [2.753, 9, 48], 'false': [11.904, 628, 183]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [9.31e-09, 200, 0], 'false': [13.435, 478, 326]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [7.88e-08, 177, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.538, 504, 326]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [5.59e-09, 186, 0], 'false': [13.178, 452, 326]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [3.979, 19, 95], 'true,false': [0.0, 0, 0], 'false': [0.417, 637, 231]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.11e-08, 183, 0], 'false': [12.877, 455, 326]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [1.32e-09, 182, 0], 'true,false,false': [0.0, 0, 0], 'false': [13.003, 476, 326]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 186, 0], 'false': [13.083, 485, 326]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [5.942, 191, 143], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.452, 463, 183]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 197, 0], 'true,false': [0.0, 0, 0], 'false': [12.752, 439, 326]}]
{'': [0.1494204081632705, 0.1747306228628862], 'true': [nan, 0.1494204081632705], 'true,false': [nan, 0.1494204081632705], 'true,false,false': [0.15692329790290363, 0.13296398891966787]}
{'': [8.881784197001253e-17, 0.22448627627948245], 'true': [nan, 8.881784197001253e-17], 'true,false': [nan, 8.881784197001253e-17]}
{'': [3.512570021412925e-17, 0.2208301476390446], 'true': [nan, 3.512570021412925e-17], 'true,false': [nan, 3.512570021412925e-17], 'true,false,false': [3.512570021412925e-17, nan]}
{'': [3.1038493161563513e-17, 0.22322573185542682], 'true': [nan, 3.1038493161563513e-17], 'true,false': [nan, 3.1038493161563513e-17]}
{'': [0.13888888888888618, 0.17413512627421748], 'true': [0.13888888888888618, nan], 'true,true': [nan, 0.13888888888888618], 'true,true,false': [nan, 0.13888888888888618]}
{'': [2.426716993716189e-18, 0.21232089025972906], 'true': [nan, 2.426716993716189e-18], 'true,false': [nan, 2.426716993716189e-18], 'true,false,false': [nan, 2.426716993716189e-18]}
{'': [1.2200253017858864e-18, 0.21081496292973664], 'true': [nan, 1.2200253017858864e-18], 'true,false': [1.2200253017858864e-18, nan]}
{'': [-4.6557739742345276e-17, 0.21105979174923867], 'true': [nan, -4.6557739742345276e-17], 'true,false': [nan, -4.6557739742345276e-17], 'true,false,false': [nan, -4.6557739742345276e-17]}
{'': [0.10571979437767103, 0.2030331930719149], 'false': [nan, 0.2030331930719166], 'true': [0.10571979437767103, nan], 'true,true': [nan, 0.10571979437767103], 'true,true,false': [nan, 0.10571979437767103]}
{'': [-3.1559639278684655e-17, 0.21258148530434923], 'true': [-3.1559639278684655e-17, nan], 'true,true': [nan, -3.1559639278684655e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 3.1871745586395264
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1.05e-06, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048766;  // std dev = 6.14e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.14185106490048832;  // std dev = 0.000, 584.000 (wgt'ed) examples reached here.  /* #neg=584 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.12544463852839124;  // std dev = 5.96e-08, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return -0.12544463852839213;  // std dev = 0.000, 427.000 (wgt'ed) examples reached here.  /* #neg=427 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360647;  // std dev = 2.98e-08, 176.000 (wgt'ed) examples reached here.  /* #neg=176 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.1123163781936063;  // std dev = 3.49e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.1123163781936066;  // std dev = 0.000, 426.000 (wgt'ed) examples reached here.  /* #neg=426 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783655;  // std dev = 0.000, 207.000 (wgt'ed) examples reached here.  /* #neg=207 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831163;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.1015963294878363;  // std dev = 2.24e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return -0.10159632948783652;  // std dev = 0.000, 388.000 (wgt'ed) examples reached here.  /* #neg=388 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.09269127618926157;  // std dev = 0.000, 551.000 (wgt'ed) examples reached here.  /* #neg=551 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839678;  // std dev = 6.83e-08, 171.000 (wgt'ed) examples reached here.  /* #neg=171 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948756;  // std dev = 3.86e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.08518475138839675;  // std dev = 5.16e-08, 398.000 (wgt'ed) examples reached here.  /* #neg=398 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109144;  // std dev = 7.74e-08, 200.000 (wgt'ed) examples reached here.  /* #neg=200 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.46e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return -0.07877675473109144;  // std dev = 0.000, 408.000 (wgt'ed) examples reached here.  /* #neg=408 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.07324622576333671;  // std dev = 1.00e-07, 175.000 (wgt'ed) examples reached here.  /* #neg=175 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1770964977452765;  // std dev = 2.76e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.07324622576333721;  // std dev = 0.000, 461.000 (wgt'ed) examples reached here.  /* #neg=461 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.0684269778442027;  // std dev = 1.39e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.0684269778442025;  // std dev = 8.16e-08, 571.000 (wgt'ed) examples reached here.  /* #neg=571 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202626;  // std dev = 0.000, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080118;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.06419184008202593;  // std dev = 1.28e-07, 428.000 (wgt'ed) examples reached here.  /* #neg=428 */
Inference time using transfer learning 0.9260571002960205
Refined model CLL: -0.064216


******************************************
Best model found
******************************************
Results 

CLL : -0.063421 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.1871745586395264 

Total Inference Time : 1.43174147605896 

Total revision time: 10.411476850509644
Best scored revision CLL: -0.064216


Results 

CLL : -0.063421 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 10.42944598197937 

Total Inference Time : 1.43174147605896 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos examples: 58
Target test neg examples: 3423

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.8074653148651123
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.6942145088700024;  // std dev = 4.089, 122.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=102 */
%   | | | else return 0.6717082571334108;  // std dev = 2.992, 59.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=48 */
%   else return 0.08295513664989858;  // std dev = 11.614, 774.000 (wgt'ed) examples reached here.  /* #neg=600 #pos=174 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1522521956301679;  // std dev = 0.000, 199.000 (wgt'ed) examples reached here.  /* #neg=199 */
%   else return 0.24845699138037178;  // std dev = 13.180, 768.000 (wgt'ed) examples reached here.  /* #neg=444 #pos=324 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.13362307961942838;  // std dev = 0.000, 223.000 (wgt'ed) examples reached here.  /* #neg=223 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20165473895092176;  // std dev = 13.229, 783.000 (wgt'ed) examples reached here.  /* #neg=459 #pos=324 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11889666696785615;  // std dev = 0.000, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
%   else return 0.16978736487235122;  // std dev = 13.136, 777.000 (wgt'ed) examples reached here.  /* #neg=453 #pos=324 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4621121013058557;  // std dev = 4.002, 121.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=102 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0417095161522284;  // std dev = 0.411, 847.000 (wgt'ed) examples reached here.  /* #neg=625 #pos=222 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.111045375269909;  // std dev = 0.000, 219.000 (wgt'ed) examples reached here.  /* #neg=219 */
%   else return 0.1296398518656932;  // std dev = 12.629, 743.000 (wgt'ed) examples reached here.  /* #neg=419 #pos=324 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.10054780093532864;  // std dev = 8.23e-09, 211.000 (wgt'ed) examples reached here.  /* #neg=211 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10031926027658822;  // std dev = 12.619, 749.000 (wgt'ed) examples reached here.  /* #neg=425 #pos=324 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09181266139004512;  // std dev = 9.42e-08, 235.000 (wgt'ed) examples reached here.  /* #neg=235 */
%   else return 0.0835645789846717;  // std dev = 12.551, 739.000 (wgt'ed) examples reached here.  /* #neg=415 #pos=324 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10986506834223203;  // std dev = 5.799, 390.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=150 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.029162789512609377;  // std dev = 11.088, 593.000 (wgt'ed) examples reached here.  /* #neg=419 #pos=174 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.09332905978329871;  // std dev = 6.04e-09, 198.000 (wgt'ed) examples reached here.  /* #neg=198 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05133614823356677;  // std dev = 12.502, 770.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=324 */
Inference time using transfer learning 1.1144218444824219
Parameter learned model CLL:-0.327705 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [4.089, 20, 102], 'true,false,false,false': [2.992, 11, 48], 'false': [11.614, 600, 174]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 199, 0], 'false': [13.18, 444, 324]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 223, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.229, 459, 324]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 213, 0], 'false': [13.136, 453, 324]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [4.002, 19, 102], 'true,false': [0.0, 0, 0], 'false': [0.411, 625, 222]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 219, 0], 'false': [12.629, 419, 324]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [8.23e-09, 211, 0], 'true,false,false': [0.0, 0, 0], 'false': [12.619, 425, 324]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [9.42e-08, 235, 0], 'false': [12.551, 415, 324]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [5.799, 240, 150], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.088, 419, 174]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [6.04e-09, 198, 0], 'true,false': [0.0, 0, 0], 'false': [12.502, 446, 324]}]
{'': [0.14193705930832945, 0.17426837329487477], 'true': [nan, 0.14193705930832945], 'true,false': [nan, 0.14193705930832945], 'true,false,false': [0.13705993012631273, 0.1516805515656423]}
{'': [-1.2943303603670166e-16, 0.22618434981578325], 'true': [nan, -1.2943303603670166e-16], 'true,false': [nan, -1.2943303603670166e-16]}
{'': [-1.4935735757289103e-16, 0.22349434249770242], 'true': [nan, -1.4935735757289103e-16], 'true,false': [nan, -1.4935735757289103e-16], 'true,false,false': [-1.4935735757289103e-16, nan]}
{'': [-2.5019110414088035e-17, 0.22207121234915228], 'true': [nan, -2.5019110414088035e-17], 'true,false': [nan, -2.5019110414088035e-17]}
{'': [0.13236800764974943, 0.16903276722033192], 'true': [0.13236800764974943, nan], 'true,true': [nan, 0.13236800764974943], 'true,true,false': [nan, 0.13236800764974943]}
{'': [-9.327901211462502e-17, 0.2146723800338288], 'true': [nan, -9.327901211462502e-17], 'true,false': [nan, -9.327901211462502e-17], 'true,false,false': [nan, -9.327901211462502e-17]}
{'': [6.735002234692893e-17, 0.21261183846982187], 'true': [nan, 6.735002234692893e-17], 'true,false': [6.735002234692893e-17, nan]}
{'': [3.7794826370218094e-17, 0.21314970209139028], 'true': [nan, 3.7794826370218094e-17], 'true,false': [nan, 3.7794826370218094e-17], 'true,false,false': [nan, 3.7794826370218094e-17]}
{'': [0.08621253104750093, 0.20732605524258121], 'false': [nan, 0.20732605524258532], 'true': [0.08621253104750093, nan], 'true,true': [nan, 0.08621253104750093], 'true,true,false': [nan, 0.08621253104750093]}
{'': [3.9250308951394423e-17, 0.2029908686593139], 'true': [3.9250308951394423e-17, nan], 'true,true': [nan, 3.9250308951394423e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 3.092846393585205
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1.04e-06, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048768;  // std dev = 4.94e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.1418510649004884;  // std dev = 0.000, 595.000 (wgt'ed) examples reached here.  /* #neg=595 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.12544463852839174;  // std dev = 0.000, 222.000 (wgt'ed) examples reached here.  /* #neg=222 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.12544463852839205;  // std dev = 0.000, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360672;  // std dev = 0.000, 220.000 (wgt'ed) examples reached here.  /* #neg=220 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.11231637819360633;  // std dev = 2.79e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return -0.11231637819360674;  // std dev = 0.000, 381.000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783653;  // std dev = 0.000, 200.000 (wgt'ed) examples reached here.  /* #neg=200 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831163;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.10159632948783623;  // std dev = 3.33e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.1015963294878365;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09269127618926104;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.09269127618926169;  // std dev = 0.000, 597.000 (wgt'ed) examples reached here.  /* #neg=597 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839675;  // std dev = 3.65e-08, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948756;  // std dev = 3.86e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.08518475138839679;  // std dev = 1.05e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.08518475138839675;  // std dev = 4.21e-08, 369.000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109144;  // std dev = 5.16e-08, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.07877675473109177;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return -0.0787767547310914;  // std dev = 5.96e-08, 370.000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.0732462257633367;  // std dev = 1.26e-07, 235.000 (wgt'ed) examples reached here.  /* #neg=235 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527653;  // std dev = 2.73e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.07324622576333704;  // std dev = 1.29e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return -0.07324622576333702;  // std dev = 0.000, 352.000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.06842697784420268;  // std dev = 2.24e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.06842697784420254;  // std dev = 5.16e-08, 580.000 (wgt'ed) examples reached here.  /* #neg=580 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202625;  // std dev = 0.000, 206.000 (wgt'ed) examples reached here.  /* #neg=206 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080118;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.0641918400820261;  // std dev = 7.45e-08, 376.000 (wgt'ed) examples reached here.  /* #neg=376 */
Inference time using transfer learning 0.938835620880127
Refined model CLL: -0.064225


******************************************
Best model found
******************************************
Results 

CLL : -0.063422 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.092846393585205 

Total Inference Time : 1.3823297023773193 

Total revision time: 10.898466348648071
Best scored revision CLL: -0.064225


Results 

CLL : -0.063422 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 10.916435480117798 

Total Inference Time : 1.3823297023773193 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos examples: 178
Target test neg examples: 3543

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 1.9372060298919678
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.7302419583553267;  // std dev = 3.097, 86.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=75 */
%   | | | else return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return 0.09468739663797351;  // std dev = 9.690, 520.000 (wgt'ed) examples reached here.  /* #neg=397 #pos=123 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15377268155001322;  // std dev = 1.41e-08, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   else return 0.24413234492001085;  // std dev = 10.531, 490.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=204 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.1348097050709961;  // std dev = 8.43e-08, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.21400648783560378;  // std dev = 10.410, 482.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=204 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11984540053198103;  // std dev = 7.09e-09, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   else return 0.20176605210238585;  // std dev = 10.120, 455.000 (wgt'ed) examples reached here.  /* #neg=251 #pos=204 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5750786421038488;  // std dev = 1.396, 77.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=75 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.024792266700167175;  // std dev = 0.409, 527.000 (wgt'ed) examples reached here.  /* #neg=398 #pos=129 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11017565484961048;  // std dev = 0.000, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   else return 0.09256685503901106;  // std dev = 10.137, 505.000 (wgt'ed) examples reached here.  /* #neg=301 #pos=204 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.09982920168395269;  // std dev = 0.000, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09611667773794791;  // std dev = 9.931, 474.000 (wgt'ed) examples reached here.  /* #neg=270 #pos=204 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0912097118593421;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else return 0.06840210163005775;  // std dev = 9.962, 485.000 (wgt'ed) examples reached here.  /* #neg=281 #pos=204 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07813871927195697;  // std dev = 4.023, 217.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=81 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.013655992426300173;  // std dev = 9.068, 371.000 (wgt'ed) examples reached here.  /* #neg=248 #pos=123 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.09013202448902642;  // std dev = 0.000, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06026424744467172;  // std dev = 9.832, 467.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=204 */
Inference time using transfer learning 1.2176599502563477
Parameter learned model CLL:-0.317035 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [3.097, 11, 75], 'true,false,false,false': [0.926, 1, 6], 'false': [9.69, 397, 123]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.41e-08, 135, 0], 'false': [10.531, 286, 204]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [8.43e-08, 139, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [10.41, 278, 204]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.09e-09, 135, 0], 'false': [10.12, 251, 204]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.396, 2, 75], 'true,false': [0.0, 0, 0], 'false': [0.409, 398, 129]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 144, 0], 'false': [10.137, 301, 204]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 137, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.931, 270, 204]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 118, 0], 'false': [9.962, 281, 204]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [4.023, 136, 81], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.068, 248, 123]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 150, 0], 'true,false': [0.0, 0, 0], 'false': [9.832, 263, 204]}]
{'': [0.11238293444328872, 0.18058801775147967], 'true': [nan, 0.11238293444328872], 'true,false': [nan, 0.11238293444328872], 'true,false,false': [0.1115467820443473, 0.12244897959183662]}
{'': [1.9408343245299034e-16, 0.22632049247930155], 'true': [nan, 1.9408343245299034e-16], 'true,false': [nan, 1.9408343245299034e-16]}
{'': [5.111818242878419e-17, 0.2248223593865895], 'true': [nan, 5.111818242878419e-17], 'true,false': [nan, 5.111818242878419e-17], 'true,false,false': [5.111818242878419e-17, nan]}
{'': [5.0988020390192374e-17, 0.22510295960223525], 'true': [nan, 5.0988020390192374e-17], 'true,false': [nan, 5.0988020390192374e-17]}
{'': [0.025299375948726038, 0.167162065693257], 'true': [0.025299375948726038, nan], 'true,true': [nan, 0.025299375948726038], 'true,true,false': [nan, 0.025299375948726038]}
{'': [-7.864079757761526e-17, 0.20347798084280894], 'true': [nan, -7.864079757761526e-17], 'true,false': [nan, -7.864079757761526e-17], 'true,false,false': [nan, -7.864079757761526e-17]}
{'': [-1.9449162475185225e-17, 0.20805367854829185], 'true': [nan, -1.9449162475185225e-17], 'true,false': [-1.9449162475185225e-17, nan]}
{'': [-3.293034395074617e-17, 0.20463515214335667], 'true': [nan, -3.293034395074617e-17], 'true,false': [nan, -3.293034395074617e-17], 'true,false,false': [nan, -3.293034395074617e-17]}
{'': [0.07458430587193936, 0.22162001147913876], 'false': [nan, 0.22162001147913715], 'true': [0.07458430587193936, nan], 'true,true': [nan, 0.07458430587193936], 'true,true,false': [nan, 0.07458430587193936]}
{'': [-3.404683942183813e-17, 0.20700571997946493], 'true': [-3.404683942183813e-17, nan], 'true,true': [nan, -3.404683942183813e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 2.346893548965454
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995092;  // std dev = 1.08e-06, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else return -0.14185106490048724;  // std dev = 2.98e-07, 431.000 (wgt'ed) examples reached here.  /* #neg=431 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.1254446385283915;  // std dev = 0.000, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.7194734122109571;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return -0.12544463852839208;  // std dev = 0.000, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.1123163781936062;  // std dev = 1.00e-07, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462833;  // std dev = 6.36e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.11231637819360635;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.11231637819360693;  // std dev = 0.000, 267.000 (wgt'ed) examples reached here.  /* #neg=267 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783667;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831014;  // std dev = 2.53e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.10159632948783635;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return -0.10159632948783662;  // std dev = 0.000, 274.000 (wgt'ed) examples reached here.  /* #neg=274 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601491;  // std dev = 4.00e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else return -0.09269127618926097;  // std dev = 1.26e-07, 416.000 (wgt'ed) examples reached here.  /* #neg=416 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839678;  // std dev = 6.50e-08, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948845;  // std dev = 4.46e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.08518475138839685;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.08518475138839678;  // std dev = 8.43e-08, 259.000 (wgt'ed) examples reached here.  /* #neg=259 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109155;  // std dev = 6.91e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.20975771563253498;  // std dev = 3.04e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.07877675473109176;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return -0.07877675473109143;  // std dev = 5.96e-08, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.07324622576333727;  // std dev = 0.000, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527791;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return -0.07324622576333671;  // std dev = 1.26e-07, 239.000 (wgt'ed) examples reached here.  /* #neg=239 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420335;  // std dev = 0.000, 403.000 (wgt'ed) examples reached here.  /* #neg=403 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367166;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.06842697784420275;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202623;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.13400703000801098;  // std dev = 1.38e-07, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.06419184008202618;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.06419184008202622;  // std dev = 2.58e-08, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
Inference time using transfer learning 0.9688541889190674
Refined model CLL: -0.063574


******************************************
Best model found
******************************************
Results 

CLL : -0.065858 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.346893548965454 

Total Inference Time : 1.4105193614959717 

Total revision time: 9.22349238395691
Best scored revision CLL: -0.063574


Results 

CLL : -0.065858 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 9.241461515426636 

Total Inference Time : 1.4105193614959717 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos examples: 45
Target test neg examples: 1891

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.7084052562713623
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.7391013160518914;  // std dev = 3.635, 126.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=111 */
%   | | | else return 0.6717082571334108;  // std dev = 2.992, 59.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=48 */
%   else return 0.07055943629282811;  // std dev = 11.840, 838.000 (wgt'ed) examples reached here.  /* #neg=660 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15065915176803993;  // std dev = 1.13e-08, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
%   else return 0.25328069945538395;  // std dev = 13.331, 788.000 (wgt'ed) examples reached here.  /* #neg=451 #pos=337 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.13237742043703823;  // std dev = 1.74e-07, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22588450515896744;  // std dev = 13.099, 768.000 (wgt'ed) examples reached here.  /* #neg=431 #pos=337 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11789911442652394;  // std dev = 4.37e-09, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
%   else return 0.17305993506904188;  // std dev = 13.212, 791.000 (wgt'ed) examples reached here.  /* #neg=454 #pos=337 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.39933092811831766;  // std dev = 4.729, 139.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=111 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03715956599340731;  // std dev = 0.410, 868.000 (wgt'ed) examples reached here.  /* #neg=642 #pos=226 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.109757873883763;  // std dev = 2.00e-07, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
%   else return 0.1096809865102481;  // std dev = 12.971, 811.000 (wgt'ed) examples reached here.  /* #neg=474 #pos=337 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.09948369064972702;  // std dev = 6.04e-09, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11305402697214188;  // std dev = 12.670, 754.000 (wgt'ed) examples reached here.  /* #neg=417 #pos=337 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09091957443780173;  // std dev = 1.49e-08, 229.000 (wgt'ed) examples reached here.  /* #neg=229 */
%   else return 0.06264502612649986;  // std dev = 12.963, 806.000 (wgt'ed) examples reached here.  /* #neg=469 #pos=337 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10618982436834855;  // std dev = 6.158, 407.000 (wgt'ed) examples reached here.  /* #neg=248 #pos=159 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.005870337526973255;  // std dev = 11.051, 567.000 (wgt'ed) examples reached here.  /* #neg=389 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.09218961852414873;  // std dev = 5.59e-09, 216.000 (wgt'ed) examples reached here.  /* #neg=216 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.057115729363522674;  // std dev = 12.691, 778.000 (wgt'ed) examples reached here.  /* #neg=441 #pos=337 */
Inference time using transfer learning 0.9219944477081299
Parameter learned model CLL:-0.32609 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [3.635, 15, 111], 'true,false,false,false': [2.992, 11, 48], 'false': [11.84, 660, 178]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.13e-08, 217, 0], 'false': [13.331, 451, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.74e-07, 230, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.099, 431, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [4.37e-09, 246, 0], 'false': [13.212, 454, 337]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [4.729, 28, 111], 'true,false': [0.0, 0, 0], 'false': [0.41, 642, 226]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2e-07, 232, 0], 'false': [12.971, 474, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [6.04e-09, 226, 0], 'true,false,false': [0.0, 0, 0], 'false': [12.67, 417, 337]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.49e-08, 229, 0], 'false': [12.963, 469, 337]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [6.158, 248, 159], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.051, 389, 178]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [5.59e-09, 216, 0], 'true,false': [0.0, 0, 0], 'false': [12.691, 441, 337]}]
{'': [0.12078889700511912, 0.16729228017612172], 'true': [nan, 0.12078889700511912], 'true,false': [nan, 0.12078889700511912], 'true,false,false': [0.10487528344671523, 0.1516805515656423]}
{'': [1.2278964327651502e-16, 0.22551508655801686], 'true': [nan, 1.2278964327651502e-16], 'true,false': [nan, 1.2278964327651502e-16]}
{'': [1.3129594030349678e-16, 0.22343007103066445], 'true': [nan, 1.3129594030349678e-16], 'true,false': [nan, 1.3129594030349678e-16], 'true,false,false': [1.3129594030349678e-16, nan]}
{'': [1.98576475949215e-17, 0.2206779797145218], 'true': [nan, 1.98576475949215e-17], 'true,false': [nan, 1.98576475949215e-17]}
{'': [0.16086123906630043, 0.16811599669838204], 'true': [0.16086123906630043, nan], 'true,true': [nan, 0.16086123906630043], 'true,true,false': [nan, 0.16086123906630043]}
{'': [1.7227598657976567e-16, 0.20746566885834208], 'true': [nan, 1.7227598657976567e-16], 'true,false': [nan, 1.7227598657976567e-16], 'true,false,false': [nan, 1.7227598657976567e-16]}
{'': [3.7334933571465444e-17, 0.21290456204473646], 'true': [nan, 3.7334933571465444e-17], 'true,false': [3.7334933571465444e-17, nan]}
{'': [9.696270957424947e-19, 0.20849589594580875], 'true': [nan, 9.696270957424947e-19], 'true,false': [nan, 9.696270957424947e-19], 'true,false,false': [nan, 9.696270957424947e-19]}
{'': [0.09316402082325956, 0.21537906429147033], 'false': [nan, 0.21537906429146886], 'true': [0.09316402082325956, nan], 'true,true': [nan, 0.09316402082325956], 'true,true,false': [nan, 0.09316402082325956]}
{'': [3.0839528461809905e-17, 0.2070166509712253], 'true': [3.0839528461809905e-17, nan], 'true,true': [nan, 3.0839528461809905e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 3.212456464767456
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 5.16e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.14185106490048857;  // std dev = 0.000, 616.000 (wgt'ed) examples reached here.  /* #neg=616 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.12544463852839166;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #neg=202 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.12544463852839155;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return -0.12544463852839213;  // std dev = 0.000, 408.000 (wgt'ed) examples reached here.  /* #neg=408 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360683;  // std dev = 0.000, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.11231637819360633;  // std dev = 2.36e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return -0.11231637819360622;  // std dev = 0.000, 424.000 (wgt'ed) examples reached here.  /* #neg=424 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783655;  // std dev = 0.000, 214.000 (wgt'ed) examples reached here.  /* #neg=214 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10159632948783628;  // std dev = 1.83e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return -0.1015963294878365;  // std dev = 0.000, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926103;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.09269127618926186;  // std dev = 0.000, 637.000 (wgt'ed) examples reached here.  /* #neg=637 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839675;  // std dev = 1.49e-08, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.08518475138839679;  // std dev = 2.11e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return -0.08518475138839675;  // std dev = 5.96e-08, 434.000 (wgt'ed) examples reached here.  /* #neg=434 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109139;  // std dev = 6.32e-08, 223.000 (wgt'ed) examples reached here.  /* #neg=223 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return -0.0787767547310914;  // std dev = 4.71e-08, 381.000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.07324622576333668;  // std dev = 7.60e-08, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return -0.07324622576333707;  // std dev = 0.000, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0684269778442027;  // std dev = 1.67e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.06842697784420274;  // std dev = 0.000, 636.000 (wgt'ed) examples reached here.  /* #neg=636 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202625;  // std dev = 0.000, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080119;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return -0.06419184008202608;  // std dev = 7.45e-08, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
Inference time using transfer learning 0.8066720962524414
Refined model CLL: -0.064062


******************************************
Best model found
******************************************
Results 

CLL : -0.063847 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.212456464767456 

Total Inference Time : 1.5232009887695312 

Total revision time: 11.578289985656738
Best scored revision CLL: -0.064062


Results 

CLL : -0.063847 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 11.596259117126465 

Total Inference Time : 1.5232009887695312 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos examples: 45
Target test neg examples: 2071

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.6299517154693604
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.7049231286478976;  // std dev = 4.011, 124.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=105 */
%   | | | else return 0.7914822684328453;  // std dev = 1.673, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   else return 0.07704294431610043;  // std dev = 12.182, 868.000 (wgt'ed) examples reached here.  /* #neg=678 #pos=190 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15149066818890228;  // std dev = 0.000, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   else return 0.25317035610960886;  // std dev = 13.383, 789.000 (wgt'ed) examples reached here.  /* #neg=452 #pos=337 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.13302792212068226;  // std dev = 0.000, 201.000 (wgt'ed) examples reached here.  /* #neg=201 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2095432254099517;  // std dev = 13.367, 799.000 (wgt'ed) examples reached here.  /* #neg=462 #pos=337 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11842025880163497;  // std dev = 6.84e-09, 220.000 (wgt'ed) examples reached here.  /* #neg=220 */
%   else return 0.17439320620305454;  // std dev = 13.297, 796.000 (wgt'ed) examples reached here.  /* #neg=459 #pos=337 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.48030110826146083;  // std dev = 3.726, 121.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=105 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03657968879604972;  // std dev = 0.411, 891.000 (wgt'ed) examples reached here.  /* #neg=659 #pos=232 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11013957338131783;  // std dev = 1.12e-07, 203.000 (wgt'ed) examples reached here.  /* #neg=203 */
%   else return 0.1140619715577535;  // std dev = 13.009, 800.000 (wgt'ed) examples reached here.  /* #neg=463 #pos=337 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.0997993700584346;  // std dev = 9.03e-09, 199.000 (wgt'ed) examples reached here.  /* #neg=199 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08106821323874693;  // std dev = 13.104, 819.000 (wgt'ed) examples reached here.  /* #neg=482 #pos=337 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09118466717725801;  // std dev = 3.33e-08, 186.000 (wgt'ed) examples reached here.  /* #neg=186 */
%   else return 0.06555988670252814;  // std dev = 13.053, 817.000 (wgt'ed) examples reached here.  /* #neg=480 #pos=337 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11394068463198402;  // std dev = 5.775, 354.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=147 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.021508765234842773;  // std dev = 11.607, 653.000 (wgt'ed) examples reached here.  /* #neg=463 #pos=190 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.09308808425026315;  // std dev = 0.000, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.055767308534309175;  // std dev = 12.886, 799.000 (wgt'ed) examples reached here.  /* #neg=462 #pos=337 */
Inference time using transfer learning 1.016645908355713
Parameter learned model CLL:-0.329252 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [4.011, 19, 105], 'true,false,false,false': [1.673, 3, 42], 'false': [12.182, 678, 190]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 196, 0], 'false': [13.383, 452, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 201, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.367, 462, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [6.84e-09, 220, 0], 'false': [13.297, 459, 337]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [3.726, 16, 105], 'true,false': [0.0, 0, 0], 'false': [0.411, 659, 232]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.12e-07, 203, 0], 'false': [13.009, 463, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [9.03e-09, 199, 0], 'true,false,false': [0.0, 0, 0], 'false': [13.104, 482, 337]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.33e-08, 186, 0], 'false': [13.053, 480, 337]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [5.775, 207, 147], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.607, 463, 190]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 167, 0], 'true,false': [0.0, 0, 0], 'false': [12.886, 462, 337]}]
{'': [0.11323132943524937, 0.1709794219456778], 'true': [nan, 0.11323132943524937], 'true,false': [nan, 0.11323132943524937], 'true,false,false': [0.12974765868886862, 0.062222222222223345]}
{'': [-4.0783702945413916e-17, 0.22698997880534577], 'true': [nan, -4.0783702945413916e-17], 'true,false': [nan, -4.0783702945413916e-17]}
{'': [-4.639738013358863e-17, 0.2236285175754482], 'true': [nan, -4.639738013358863e-17], 'true,false': [nan, -4.639738013358863e-17], 'true,false,false': [-4.639738013358863e-17, nan]}
{'': [4.844609562000683e-17, 0.2221334425645114], 'true': [nan, 4.844609562000683e-17], 'true,false': [nan, 4.844609562000683e-17]}
{'': [0.1147462605013336, 0.16883202495106994], 'true': [0.1147462605013336, nan], 'true,true': [nan, 0.1147462605013336], 'true,true,false': [nan, 0.1147462605013336]}
{'': [6.125368411725002e-17, 0.21153137538719502], 'true': [nan, 6.125368411725002e-17], 'true,false': [nan, 6.125368411725002e-17], 'true,false,false': [nan, 6.125368411725002e-17]}
{'': [8.256935057513727e-17, 0.20967723408095812], 'true': [nan, 8.256935057513727e-17], 'true,false': [8.256935057513727e-17, nan]}
{'': [5.9689409926083686e-18, 0.2085292969827304], 'true': [nan, 5.9689409926083686e-18], 'true,false': [nan, 5.9689409926083686e-18], 'true,false,false': [nan, 5.9689409926083686e-18]}
{'': [0.0941974986355568, 0.20630427594164596], 'false': [nan, 0.20630427594164338], 'true': [0.0941974986355568, nan], 'true,true': [nan, 0.0941974986355568], 'true,true,false': [nan, 0.0941974986355568]}
{'': [-2.659216825449477e-18, 0.20783100718279107], 'true': [-2.659216825449477e-18, nan], 'true,true': [nan, -2.659216825449477e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 3.157747507095337
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 5.58e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.14185106490048857;  // std dev = 0.000, 622.000 (wgt'ed) examples reached here.  /* #neg=622 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.1254446385283916;  // std dev = 0.000, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.12544463852839213;  // std dev = 0.000, 411.000 (wgt'ed) examples reached here.  /* #neg=411 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360643;  // std dev = 0.000, 176.000 (wgt'ed) examples reached here.  /* #neg=176 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.11231637819360629;  // std dev = 3.80e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 445.000 (wgt'ed) examples reached here.  /* #neg=445 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783655;  // std dev = 0.000, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10159632948783624;  // std dev = 2.98e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.1015963294878364;  // std dev = 0.000, 416.000 (wgt'ed) examples reached here.  /* #neg=416 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.09269127618926183;  // std dev = 0.000, 639.000 (wgt'ed) examples reached here.  /* #neg=639 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839675;  // std dev = 0.000, 220.000 (wgt'ed) examples reached here.  /* #neg=220 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.08518475138839679;  // std dev = 1.97e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.08518475138839675;  // std dev = 3.65e-08, 392.000 (wgt'ed) examples reached here.  /* #neg=392 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109146;  // std dev = 6.14e-08, 191.000 (wgt'ed) examples reached here.  /* #neg=191 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07877675473109177;  // std dev = 1.29e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.0787767547310914;  // std dev = 5.58e-08, 384.000 (wgt'ed) examples reached here.  /* #neg=384 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.0732462257633366;  // std dev = 1.30e-07, 215.000 (wgt'ed) examples reached here.  /* #neg=215 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 7.45e-09, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.07324622576333718;  // std dev = 0.000, 436.000 (wgt'ed) examples reached here.  /* #neg=436 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0684269778442027;  // std dev = 1.39e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.06842697784420261;  // std dev = 5.16e-08, 606.000 (wgt'ed) examples reached here.  /* #neg=606 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202625;  // std dev = 0.000, 209.000 (wgt'ed) examples reached here.  /* #neg=209 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080119;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.06419184008202593;  // std dev = 1.28e-07, 430.000 (wgt'ed) examples reached here.  /* #neg=430 */
Inference time using transfer learning 0.8071529865264893
Refined model CLL: -0.064087


******************************************
Best model found
******************************************
Results 

CLL : -0.063719 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.157747507095337 

Total Inference Time : 1.571974515914917 

Total revision time: 11.240440368652344
Best scored revision CLL: -0.064087


Results 

CLL : -0.063719 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 11.25840950012207 

Total Inference Time : 1.571974515914917 

Run: 5

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos examples: 56
Target test neg examples: 3308

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.6460068225860596
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.6842358916212499;  // std dev = 4.065, 115.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=95 */
%   | | | else return 0.7152917922423695;  // std dev = 2.619, 56.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=48 */
%   else return 0.08379628405142202;  // std dev = 11.904, 811.000 (wgt'ed) examples reached here.  /* #neg=628 #pos=183 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15236079551703063;  // std dev = 8.93e-09, 191.000 (wgt'ed) examples reached here.  /* #neg=191 */
%   else return 0.2419254777338889;  // std dev = 13.334, 786.000 (wgt'ed) examples reached here.  /* #neg=460 #pos=326 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.1337079079082422;  // std dev = 8.43e-08, 201.000 (wgt'ed) examples reached here.  /* #neg=201 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1962061943265801;  // std dev = 13.381, 803.000 (wgt'ed) examples reached here.  /* #neg=477 #pos=326 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11896453894728153;  // std dev = 5.74e-09, 201.000 (wgt'ed) examples reached here.  /* #neg=201 */
%   else return 0.17656156094395156;  // std dev = 13.168, 774.000 (wgt'ed) examples reached here.  /* #neg=448 #pos=326 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.45604429120142587;  // std dev = 3.979, 114.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=95 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04567974803378371;  // std dev = 0.418, 852.000 (wgt'ed) examples reached here.  /* #neg=621 #pos=231 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1114953286852308;  // std dev = 0.000, 198.000 (wgt'ed) examples reached here.  /* #neg=198 */
%   else return 0.1388776459810377;  // std dev = 12.662, 735.000 (wgt'ed) examples reached here.  /* #neg=409 #pos=326 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.10091921564550076;  // std dev = 0.000, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08315127200031903;  // std dev = 12.910, 792.000 (wgt'ed) examples reached here.  /* #neg=466 #pos=326 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09212404643094264;  // std dev = 0.000, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
%   else return 0.07476387625389255;  // std dev = 12.818, 769.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=326 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10043652713279956;  // std dev = 6.169, 357.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=143 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.01983556829290369;  // std dev = 11.326, 612.000 (wgt'ed) examples reached here.  /* #neg=429 #pos=183 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.09282164024372501;  // std dev = 0.000, 181.000 (wgt'ed) examples reached here.  /* #neg=181 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041835695209590115;  // std dev = 12.852, 802.000 (wgt'ed) examples reached here.  /* #neg=476 #pos=326 */
Inference time using transfer learning 1.246826171875
Parameter learned model CLL:-0.33799 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [4.065, 20, 95], 'true,false,false,false': [2.619, 8, 48], 'false': [11.904, 628, 183]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [8.93e-09, 191, 0], 'false': [13.334, 460, 326]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [8.43e-08, 201, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.381, 477, 326]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [5.74e-09, 201, 0], 'false': [13.168, 448, 326]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [3.979, 19, 95], 'true,false': [0.0, 0, 0], 'false': [0.418, 621, 231]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 198, 0], 'false': [12.662, 409, 326]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 174, 0], 'true,false,false': [0.0, 0, 0], 'false': [12.91, 466, 326]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 187, 0], 'false': [12.818, 443, 326]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [6.169, 214, 143], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.326, 429, 183]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.0, 181, 0], 'true,false': [0.0, 0, 0], 'false': [12.852, 476, 326]}]
{'': [0.13693102151089745, 0.17473062286288624], 'true': [nan, 0.13693102151089745], 'true,false': [nan, 0.13693102151089745], 'true,false,false': [0.14366729678639145, 0.12244897959183706]}
{'': [7.905252950210538e-17, 0.22619752351679168], 'true': [nan, 7.905252950210538e-17], 'true,false': [nan, 7.905252950210538e-17]}
{'': [3.5350384863686576e-17, 0.22296221528619978], 'true': [nan, 3.5350384863686576e-17], 'true,false': [nan, 3.5350384863686576e-17], 'true,false,false': [3.5350384863686576e-17, nan]}
{'': [3.314098580970616e-17, 0.22404289767568794], 'true': [nan, 3.314098580970616e-17], 'true,false': [nan, 3.314098580970616e-17]}
{'': [0.13888888888888834, 0.17450105063664959], 'true': [0.13888888888888834, nan], 'true,true': [nan, 0.13888888888888834], 'true,true,false': [nan, 0.13888888888888834]}
{'': [-6.280049432223107e-17, 0.21813793621131153], 'true': [nan, -6.280049432223107e-17], 'true,false': [nan, -6.280049432223107e-17], 'true,false,false': [nan, -6.280049432223107e-17]}
{'': [-6.3805920955468766e-18, 0.2104354188408633], 'true': [nan, -6.3805920955468766e-18], 'true,false': [-6.3805920955468766e-18, nan]}
{'': [-2.4935490392650576e-17, 0.21364231522051552], 'true': [nan, -2.4935490392650576e-17], 'true,false': [nan, -2.4935490392650576e-17], 'true,false,false': [nan, -2.4935490392650576e-17]}
{'': [0.10659804415535044, 0.20960688196847163], 'false': [nan, 0.20960688196847418], 'true': [0.10659804415535044, nan], 'true,true': [nan, 0.10659804415535044], 'true,true,false': [nan, 0.10659804415535044]}
{'': [-3.189591009972825e-17, 0.20595969314805912], 'true': [-3.189591009972825e-17, nan], 'true,true': [nan, -3.189591009972825e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 2.938990592956543
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1.05e-06, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.14185106490048768;  // std dev = 5.37e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.14185106490048793;  // std dev = 0.000, 539.000 (wgt'ed) examples reached here.  /* #neg=539 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.12544463852839158;  // std dev = 0.000, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.12544463852839155;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return -0.12544463852839208;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #neg=396 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.1123163781936066;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #neg=194 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.11231637819360628;  // std dev = 4.21e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.11231637819360664;  // std dev = 0.000, 419.000 (wgt'ed) examples reached here.  /* #neg=419 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783655;  // std dev = 0.000, 205.000 (wgt'ed) examples reached here.  /* #neg=205 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831163;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.10159632948783621;  // std dev = 4.21e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.1015963294878365;  // std dev = 0.000, 418.000 (wgt'ed) examples reached here.  /* #neg=418 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.09269127618926169;  // std dev = 0.000, 589.000 (wgt'ed) examples reached here.  /* #neg=589 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839675;  // std dev = 7.45e-08, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948756;  // std dev = 3.86e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.08518475138839679;  // std dev = 1.97e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.08518475138839675;  // std dev = 6.66e-08, 448.000 (wgt'ed) examples reached here.  /* #neg=448 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109147;  // std dev = 8.30e-08, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.46e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.07877675473109175;  // std dev = 2.11e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.07877675473109144;  // std dev = 0.000, 422.000 (wgt'ed) examples reached here.  /* #neg=422 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.07324622576333671;  // std dev = 1.02e-07, 179.000 (wgt'ed) examples reached here.  /* #neg=179 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1770964977452765;  // std dev = 2.76e-07, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.07324622576333704;  // std dev = 1.29e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return -0.0732462257633372;  // std dev = 0.000, 431.000 (wgt'ed) examples reached here.  /* #neg=431 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | else return -0.06842697784420268;  // std dev = 2.11e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.06842697784420357;  // std dev = 0.000, 567.000 (wgt'ed) examples reached here.  /* #neg=567 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202623;  // std dev = 0.000, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080118;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #pos=326 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.06419184008202597;  // std dev = 1.11e-07, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
Inference time using transfer learning 0.9252076148986816
Refined model CLL: -0.064216


******************************************
Best model found
******************************************
Results 

CLL : -0.063421 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.938990592956543 

Total Inference Time : 1.4814276695251465 

Total revision time: 10.495826482772827
Best scored revision CLL: -0.064216


Results 

CLL : -0.063421 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 10.513704061508179 

Total Inference Time : 1.4814276695251465 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos examples: 58
Target test neg examples: 3423

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.6936898231506348
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.7688632208137965;  // std dev = 3.018, 112.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=102 */
%   | | | else return 0.6857351419960642;  // std dev = 2.877, 58.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=48 */
%   else return 0.08471143509951101;  // std dev = 11.601, 768.000 (wgt'ed) examples reached here.  /* #neg=594 #pos=174 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15247902211898567;  // std dev = 1.00e-08, 216.000 (wgt'ed) examples reached here.  /* #neg=216 */
%   else return 0.2522729613830757;  // std dev = 13.056, 756.000 (wgt'ed) examples reached here.  /* #neg=432 #pos=324 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.1338002426974328;  // std dev = 1.66e-07, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.21315205477401994;  // std dev = 12.984, 756.000 (wgt'ed) examples reached here.  /* #neg=432 #pos=324 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11903840821139054;  // std dev = 0.000, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
%   else return 0.17591151999455995;  // std dev = 12.959, 751.000 (wgt'ed) examples reached here.  /* #neg=427 #pos=324 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4323001847198072;  // std dev = 4.089, 122.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=102 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.028668318062306446;  // std dev = 0.409, 869.000 (wgt'ed) examples reached here.  /* #neg=647 #pos=222 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10988288571329001;  // std dev = 0.000, 212.000 (wgt'ed) examples reached here.  /* #neg=212 */
%   else return 0.12151912983321579;  // std dev = 12.671, 746.000 (wgt'ed) examples reached here.  /* #neg=422 #pos=324 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.09958709929935684;  // std dev = 6.84e-09, 239.000 (wgt'ed) examples reached here.  /* #neg=239 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11009725413161563;  // std dev = 12.441, 725.000 (wgt'ed) examples reached here.  /* #neg=401 #pos=324 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09100642604621004;  // std dev = 1.15e-07, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
%   else return 0.06693914857196964;  // std dev = 12.673, 759.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=324 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07593058873247611;  // std dev = 6.514, 393.000 (wgt'ed) examples reached here.  /* #neg=243 #pos=150 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.01945129864040027;  // std dev = 11.020, 576.000 (wgt'ed) examples reached here.  /* #neg=402 #pos=174 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.08976695457211674;  // std dev = 9.03e-09, 229.000 (wgt'ed) examples reached here.  /* #neg=229 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04132702344368529;  // std dev = 12.721, 777.000 (wgt'ed) examples reached here.  /* #neg=453 #pos=324 */
Inference time using transfer learning 1.2084181308746338
Parameter learned model CLL:-0.325631 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [3.018, 10, 102], 'true,false,false,false': [2.877, 10, 48], 'false': [11.601, 594, 174]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1e-08, 216, 0], 'false': [13.056, 432, 324]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.66e-07, 231, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [12.984, 432, 324]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 221, 0], 'false': [12.959, 427, 324]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [4.089, 20, 102], 'true,false': [0.0, 0, 0], 'false': [0.409, 647, 222]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 212, 0], 'false': [12.671, 422, 324]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [6.84e-09, 239, 0], 'true,false,false': [0.0, 0, 0], 'false': [12.441, 401, 324]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.15e-07, 236, 0], 'false': [12.673, 435, 324]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [6.514, 243, 150], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.02, 402, 174]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [9.03e-09, 229, 0], 'true,false': [0.0, 0, 0], 'false': [12.721, 453, 324]}]
{'': [0.10380622837370798, 0.1752319335937507], 'true': [nan, 0.10380622837370798], 'true,false': [nan, 0.10380622837370798], 'true,false,false': [0.0813137755102064, 0.14268727705112988]}
{'': [1.0279842820603301e-16, 0.22546915715897128], 'true': [nan, 1.0279842820603301e-16], 'true,false': [nan, 1.0279842820603301e-16]}
{'': [1.1919277493811205e-16, 0.2229990231159528], 'true': [nan, 1.1919277493811205e-16], 'true,false': [nan, 1.1919277493811205e-16], 'true,false,false': [1.1919277493811205e-16, nan]}
{'': [-9.042540472060098e-17, 0.22362014307837882], 'true': [nan, -9.042540472060098e-17], 'true,false': [nan, -9.042540472060098e-17]}
{'': [0.13705993012630854, 0.1673715751997347], 'true': [0.13705993012630854, nan], 'true,true': [nan, 0.13705993012630854], 'true,true,false': [nan, 0.13705993012630854]}
{'': [-4.1895208476421005e-17, 0.21522408606181007], 'true': [nan, -4.1895208476421005e-17], 'true,false': [nan, -4.1895208476421005e-17], 'true,false,false': [nan, -4.1895208476421005e-17]}
{'': [4.6452846218625795e-17, 0.21349533156198758], 'true': [nan, 4.6452846218625795e-17], 'true,false': [4.6452846218625795e-17, nan]}
{'': [5.645201820127914e-17, 0.2115891506092618], 'true': [nan, 5.645201820127914e-17], 'true,false': [nan, 5.645201820127914e-17], 'true,false,false': [nan, 5.645201820127914e-17]}
{'': [0.10797763568861854, 0.21082899305555872], 'false': [nan, 0.2108289930555561], 'true': [0.10797763568861854, nan], 'true,true': [nan, 0.10797763568861854], 'true,true,false': [nan, 0.10797763568861854]}
{'': [8.144867604236957e-17, 0.20825865635787696], 'true': [8.144867604236957e-17, nan], 'true,true': [nan, 8.144867604236957e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 3.0764918327331543
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995085;  // std dev = 1.04e-06, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.14185106490048768;  // std dev = 5.16e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.14185106490048796;  // std dev = 0.000, 547.000 (wgt'ed) examples reached here.  /* #neg=547 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.12544463852839174;  // std dev = 0.000, 220.000 (wgt'ed) examples reached here.  /* #neg=220 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.12544463852839155;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return -0.12544463852839202;  // std dev = 0.000, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360683;  // std dev = 0.000, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.1123163781936063;  // std dev = 3.33e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.11231637819360668;  // std dev = 0.000, 383.000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783649;  // std dev = 0.000, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831163;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.10159632948783623;  // std dev = 3.80e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.1015963294878365;  // std dev = 0.000, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601511;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.09269127618926161;  // std dev = 0.000, 570.000 (wgt'ed) examples reached here.  /* #neg=570 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839675;  // std dev = 8.94e-08, 222.000 (wgt'ed) examples reached here.  /* #neg=222 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.25517224256948756;  // std dev = 3.86e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.0851847513883968;  // std dev = 1.97e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return -0.08518475138839675;  // std dev = 2.11e-08, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109144;  // std dev = 6.83e-08, 222.000 (wgt'ed) examples reached here.  /* #neg=222 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.07877675473109146;  // std dev = 0.000, 376.000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.07324622576333661;  // std dev = 1.24e-07, 205.000 (wgt'ed) examples reached here.  /* #neg=205 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527653;  // std dev = 2.73e-07, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.07324622576333704;  // std dev = 7.45e-09, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.07324622576333709;  // std dev = 7.30e-08, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | else return -0.06842697784420268;  // std dev = 2.11e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.06842697784420362;  // std dev = 0.000, 599.000 (wgt'ed) examples reached here.  /* #neg=599 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202625;  // std dev = 0.000, 220.000 (wgt'ed) examples reached here.  /* #neg=220 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080118;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #pos=324 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return -0.06419184008202604;  // std dev = 8.43e-08, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
Inference time using transfer learning 0.9070148468017578
Refined model CLL: -0.064225


******************************************
Best model found
******************************************
Results 

CLL : -0.063422 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.0764918327331543 

Total Inference Time : 1.3960366249084473 

Total revision time: 10.717833995819092
Best scored revision CLL: -0.064225


Results 

CLL : -0.063422 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 10.735711574554443 

Total Inference Time : 1.3960366249084473 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos examples: 178
Target test neg examples: 3543

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.06927752494812
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.7956489350995126;  // std dev = 2.165, 80.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=75 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return 0.09288175952699292;  // std dev = 9.702, 524.000 (wgt'ed) examples reached here.  /* #neg=401 #pos=123 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15353786691328025;  // std dev = 5.89e-09, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   else return 0.2535661725367886;  // std dev = 10.383, 475.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=204 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.1346265956229473;  // std dev = 0.000, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19075328687739543;  // std dev = 10.525, 507.000 (wgt'ed) examples reached here.  /* #neg=303 #pos=204 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11969909832429905;  // std dev = 1.32e-09, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   else return 0.1839986891030878;  // std dev = 10.251, 473.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=204 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5188418613330464;  // std dev = 2.357, 81.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=75 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.014599973410231207;  // std dev = 0.399, 564.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=129 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10905971508214851;  // std dev = 9.06e-08, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   else return 0.10534973682089213;  // std dev = 10.070, 498.000 (wgt'ed) examples reached here.  /* #neg=294 #pos=204 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.09890583365588193;  // std dev = 0.000, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11228188123076661;  // std dev = 9.793, 462.000 (wgt'ed) examples reached here.  /* #neg=258 #pos=204 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09043399038645228;  // std dev = 1.49e-08, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   else return 0.09307282907343334;  // std dev = 9.705, 459.000 (wgt'ed) examples reached here.  /* #neg=255 #pos=204 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06714834378937418;  // std dev = 4.042, 224.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=81 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0010887359829972114;  // std dev = 9.138, 383.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=123 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.08853679291791626;  // std dev = 4.93e-09, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06275595412163784;  // std dev = 9.767, 464.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=204 */
Inference time using transfer learning 1.2110867500305176
Parameter learned model CLL:-0.31674 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [2.165, 5, 75], 'true,false,false,false': [0.0, 0, 6], 'false': [9.702, 401, 123]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [5.89e-09, 136, 0], 'false': [10.383, 271, 204]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 161, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [10.525, 303, 204]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.32e-09, 134, 0], 'false': [10.251, 269, 204]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [2.357, 6, 75], 'true,false': [0.0, 0, 0], 'false': [0.399, 435, 129]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [9.06e-08, 136, 0], 'false': [10.07, 294, 204]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 135, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.793, 258, 204]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.49e-08, 130, 0], 'false': [9.705, 255, 204]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [4.042, 143, 81], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.138, 260, 123]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [4.93e-09, 143, 0], 'true,false': [0.0, 0, 0], 'false': [9.767, 260, 204]}]
{'': [0.05475932936722547, 0.17963332556377873], 'true': [nan, 0.05475932936722547], 'true,false': [nan, 0.05475932936722547], 'true,false,false': [0.05859374999999893, -1.4802973661668753e-16]}
{'': [2.938825653419532e-17, 0.22694419765908572], 'true': [nan, 2.938825653419532e-17], 'true,false': [nan, 2.938825653419532e-17]}
{'': [-9.654113257610057e-17, 0.21849276168178736], 'true': [nan, -9.654113257610057e-17], 'true,false': [nan, -9.654113257610057e-17], 'true,false,false': [-9.654113257610057e-17, nan]}
{'': [3.3140985809706165e-18, 0.22217616800868045], 'true': [nan, 3.3140985809706165e-18], 'true,false': [nan, 3.3140985809706165e-18]}
{'': [0.06858710562414391, 0.15957957184151295], 'true': [0.06858710562414391, nan], 'true,true': [nan, 0.06858710562414391], 'true,true,false': [nan, 0.06858710562414391]}
{'': [6.040919398695704e-17, 0.20361749674853094], 'true': [nan, 6.040919398695704e-17], 'true,false': [nan, 6.040919398695704e-17], 'true,false,false': [nan, 6.040919398695704e-17]}
{'': [-4.11193712824132e-17, 0.20758835508548787], 'true': [nan, -4.11193712824132e-17], 'true,false': [-4.11193712824132e-17, nan]}
{'': [1.708035422500241e-18, 0.20518374272896134], 'true': [nan, 1.708035422500241e-18], 'true,false': [nan, 1.708035422500241e-18], 'true,false,false': [nan, 1.708035422500241e-18]}
{'': [0.07291960229364712, 0.21801225722446974], 'false': [nan, 0.21801225722446793], 'true': [0.07291960229364712, nan], 'true,true': [nan, 0.07291960229364712], 'true,true,false': [nan, 0.07291960229364712]}
{'': [2.4844151600003503e-17, 0.2055741307343541], 'true': [2.4844151600003503e-17, nan], 'true,true': [nan, 2.4844151600003503e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), female(A).;true;true
0;true;genre(B, E).;true;true
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 2.2727510929107666
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995127;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.7152917922423694;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( actor(B) )
%   | then return -0.14185106490048752;  // std dev = 2.37e-07, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995105;  // std dev = 6.95e-07, 123.000 (wgt'ed) examples reached here.  /* #pos=123 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.12544463852839144;  // std dev = 0.000, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   else if ( actor(B) )
%   | then return -0.12544463852839197;  // std dev = 0.000, 248.000 (wgt'ed) examples reached here.  /* #neg=248 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.720294309895181;  // std dev = 0.067, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360625;  // std dev = 9.31e-08, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5561915069854888;  // std dev = 0.084, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.1201402201594648;  // std dev = 0.113, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.11360023882012743;  // std dev = 0.332, 259.000 (wgt'ed) examples reached here.  /* #neg=259 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783644;  // std dev = 0.000, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.418145365132479;  // std dev = 0.085, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.11290959674249063;  // std dev = 0.144, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return -0.10147920565572623;  // std dev = 1.17e-07, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3211529156781501;  // std dev = 0.077, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.1077536056274976;  // std dev = 0.129, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.09342510888278213;  // std dev = 0.300, 376.000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08512758245219612;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2554808687459158;  // std dev = 0.068, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.09228254919449941;  // std dev = 0.124, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return -0.08503675993989404;  // std dev = 9.77e-08, 261.000 (wgt'ed) examples reached here.  /* #neg=261 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07872766257512473;  // std dev = 0.000, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
%   else if ( actor(B) )
%   | then return -0.07864966228492748;  // std dev = 0.000, 239.000 (wgt'ed) examples reached here.  /* #neg=239 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.20998041732505676;  // std dev = 0.059, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.08157765485336463;  // std dev = 0.083, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.07320363684729982;  // std dev = 3.49e-08, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1772628356584551;  // std dev = 0.052, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.07354628131913091;  // std dev = 0.079, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return -0.074656648058629;  // std dev = 0.326, 215.000 (wgt'ed) examples reached here.  /* #neg=215 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15287204158485035;  // std dev = 0.047, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | else return -0.06565048387023129;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.0682908227757807;  // std dev = 0.002, 431.000 (wgt'ed) examples reached here.  /* #neg=431 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06416488372024595;  // std dev = 0.000, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   else if ( actor(B) )
%   | then return -0.06401786828826991;  // std dev = 5.77e-08, 261.000 (wgt'ed) examples reached here.  /* #neg=261 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.13410848868662822;  // std dev = 0.042, 204.000 (wgt'ed) examples reached here.  /* #pos=204 */
%   | | else return -0.06536144024133747;  // std dev = 0.071, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
Inference time using transfer learning 1.0360867977142334
Refined model CLL: -0.064015


******************************************
Best model found
******************************************
Results 

CLL : -0.080068 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.2727510929107666 

Total Inference Time : 1.3910319805145264 

Total revision time: 9.261981725692749
Best scored revision CLL: -0.064015


Results 

CLL : -0.080068 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 9.2798593044281 

Total Inference Time : 1.3910319805145264 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos examples: 45
Target test neg examples: 1891

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.7241106033325195
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.7253364350995104;  // std dev = 3.840, 128.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=111 */
%   | | | else return 0.7152917922423695;  // std dev = 2.619, 56.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=48 */
%   else return 0.06609286033315546;  // std dev = 11.874, 856.000 (wgt'ed) examples reached here.  /* #neg=678 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1500884957439155;  // std dev = 4.56e-09, 201.000 (wgt'ed) examples reached here.  /* #neg=201 */
%   else return 0.25721770250413506;  // std dev = 13.280, 781.000 (wgt'ed) examples reached here.  /* #neg=444 #pos=337 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.13193060036864;  // std dev = 0.000, 239.000 (wgt'ed) examples reached here.  /* #neg=239 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2181907377620614;  // std dev = 13.197, 780.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=337 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11754088425681884;  // std dev = 0.000, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
%   else return 0.18437910958645323;  // std dev = 13.085, 771.000 (wgt'ed) examples reached here.  /* #neg=434 #pos=337 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.43684294362724335;  // std dev = 4.285, 133.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=111 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03945264273947473;  // std dev = 0.409, 861.000 (wgt'ed) examples reached here.  /* #neg=635 #pos=226 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10967994493641253;  // std dev = 0.000, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
%   else return 0.1233456869522744;  // std dev = 12.771, 773.000 (wgt'ed) examples reached here.  /* #neg=436 #pos=337 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.09941921901034695;  // std dev = 7.09e-09, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0881351306557392;  // std dev = 12.901, 787.000 (wgt'ed) examples reached here.  /* #neg=450 #pos=337 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09086541867959505;  // std dev = 1.25e-07, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
%   else return 0.08586977445017809;  // std dev = 12.633, 759.000 (wgt'ed) examples reached here.  /* #neg=422 #pos=337 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09778817771076705;  // std dev = 6.050, 416.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=159 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.021896346301081074;  // std dev = 11.149, 590.000 (wgt'ed) examples reached here.  /* #neg=412 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.09143892221579966;  // std dev = 6.72e-09, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05486701902108028;  // std dev = 12.653, 777.000 (wgt'ed) examples reached here.  /* #neg=440 #pos=337 */
Inference time using transfer learning 0.9769597053527832
Parameter learned model CLL:-0.326253 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [3.84, 17, 111], 'true,false,false,false': [2.619, 8, 48], 'false': [11.874, 678, 178]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [4.56e-09, 201, 0], 'false': [13.28, 444, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 239, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.197, 443, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 233, 0], 'false': [13.085, 434, 337]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [4.285, 22, 111], 'true,false': [0.0, 0, 0], 'false': [0.409, 635, 226]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 231, 0], 'false': [12.771, 436, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [7.09e-09, 243, 0], 'true,false,false': [0.0, 0, 0], 'false': [12.901, 450, 337]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.25e-07, 226, 0], 'false': [12.633, 422, 337]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [6.05, 257, 159], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.149, 412, 178]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [6.72e-09, 217, 0], 'true,false': [0.0, 0, 0], 'false': [12.653, 440, 337]}]
{'': [0.1174090264650343, 0.16470324919206972], 'true': [nan, 0.1174090264650343], 'true,false': [nan, 0.1174090264650343], 'true,false,false': [0.11517333984375333, 0.12244897959183706]}
{'': [2.209399053980411e-17, 0.22582475781709446], 'true': [nan, 2.209399053980411e-17], 'true,false': [nan, 2.209399053980411e-17]}
{'': [-2.2297366184940382e-17, 0.22326834427375136], 'true': [nan, -2.2297366184940382e-17], 'true,false': [nan, -2.2297366184940382e-17], 'true,false,false': [-2.2297366184940382e-17, nan]}
{'': [-8.195637778348795e-17, 0.22206375858748026], 'true': [nan, -8.195637778348795e-17], 'true,false': [nan, -8.195637778348795e-17]}
{'': [0.13805189665894096, 0.16752198248333916], 'true': [0.13805189665894096, nan], 'true,true': [nan, 0.13805189665894096], 'true,true,false': [nan, 0.13805189665894096]}
{'': [-4.229421046191072e-17, 0.21099335430257982], 'true': [nan, -4.229421046191072e-17], 'true,false': [nan, -4.229421046191072e-17], 'true,false,false': [nan, -4.229421046191072e-17]}
{'': [5.1170773151447546e-17, 0.21147023412540944], 'true': [nan, 5.1170773151447546e-17], 'true,false': [5.1170773151447546e-17, nan]}
{'': [6.877487763164686e-17, 0.21025599281520033], 'true': [nan, 6.877487763164686e-17], 'true,false': [nan, 6.877487763164686e-17], 'true,false,false': [nan, 6.877487763164686e-17]}
{'': [0.08798061388601634, 0.21067509336397072], 'false': [nan, 0.21067509336397514], 'true': [0.08798061388601634, nan], 'true,true': [nan, 0.08798061388601634], 'true,true,false': [nan, 0.08798061388601634]}
{'': [4.3999622174084545e-17, 0.20605144656126362], 'true': [4.3999622174084545e-17, nan], 'true,true': [nan, 4.3999622174084545e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 3.1788885593414307
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048768;  // std dev = 5.37e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.14185106490048874;  // std dev = 0.000, 659.000 (wgt'ed) examples reached here.  /* #neg=659 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.12544463852839177;  // std dev = 0.000, 229.000 (wgt'ed) examples reached here.  /* #neg=229 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.12544463852839213;  // std dev = 0.000, 405.000 (wgt'ed) examples reached here.  /* #neg=405 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360668;  // std dev = 0.000, 214.000 (wgt'ed) examples reached here.  /* #neg=214 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.11231637819360628;  // std dev = 4.34e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.11231637819360672;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783655;  // std dev = 0.000, 219.000 (wgt'ed) examples reached here.  /* #neg=219 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10159632948783621;  // std dev = 3.80e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.10159632948783645;  // std dev = 0.000, 369.000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.09269127618926183;  // std dev = 0.000, 635.000 (wgt'ed) examples reached here.  /* #neg=635 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839673;  // std dev = 0.000, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.08518475138839673;  // std dev = 5.58e-08, 369.000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109139;  // std dev = 6.50e-08, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07877675473109173;  // std dev = 2.36e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.07877675473109139;  // std dev = 5.16e-08, 391.000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.07324622576333668;  // std dev = 7.60e-08, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 1.05e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.07324622576333706;  // std dev = 0.000, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0684269778442027;  // std dev = 1.49e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.0684269778442023;  // std dev = 2.05e-07, 619.000 (wgt'ed) examples reached here.  /* #neg=619 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202625;  // std dev = 0.000, 250.000 (wgt'ed) examples reached here.  /* #neg=250 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080119;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.06419184008202601;  // std dev = 9.66e-08, 386.000 (wgt'ed) examples reached here.  /* #neg=386 */
Inference time using transfer learning 0.7943136692047119
Refined model CLL: -0.064062


******************************************
Best model found
******************************************
Results 

CLL : -0.063847 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.1788885593414307 

Total Inference Time : 1.458439588546753 

Total revision time: 11.938729286193848
Best scored revision CLL: -0.064062


Results 

CLL : -0.063847 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 11.9566068649292 

Total Inference Time : 1.458439588546753 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos examples: 45
Target test neg examples: 2071

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,true,false;tempadvisedby(G, B).;false;false
0;true,false;publication(H, A).;true;true
0;true,false,true;tempadvisedby(I, B), publication(J, I).;false;false
0;true,false,false;publication(K, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(E, B).;false;false
1;true,false;publication(F, B), publication(G, A).;true;true
1;true,false,true;ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(J, B), ta(K, J, L).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), publication(E, D).;false;true
2;true,true,false;tempadvisedby(F, B).;false;false
2;true,false;publication(G, A).;true;true
2;true,false,true;publication(G, H), professor(H).;false;false
2;true,false,false;tempadvisedby(I, B), publication(J, I).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, B), publication(E, A).;true;true
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true;hasposition(D, C), projectmember(E, D).;true;true
4;true,true;publication(F, B), publication(F, A).;false;true
4;true,true,false;publication(G, B), publication(H, A).;false;false
4;true,false;publication(I, A), publication(J, B).;false;true
4;true,false,false;tempadvisedby(K, B).;false;false
4;false;ta(L, A, M).;true;false
4;false,true;ta(L, N, M), tempadvisedby(N, P).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true;ta(C, A, D), publication(E, B).;true;true
5;true,true;ta(F, G, D), publication(E, G).;true;true
5;true,true,true;publication(E, A).;false;false
5;true,true,false;ta(C, H, I), publication(E, H).;false;false
5;true,false;publication(J, A), publication(J, B).;true;true
5;true,false,true;publication(J, K), tempadvisedby(L, K).;false;false
5;true,false,false;publication(M, A).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true;publication(C, A).;true;true
6;true,true;publication(D, B), tempadvisedby(E, B).;true;true
6;true,true,true;publication(C, B).;false;false
6;true,true,false;publication(C, F), ta(G, F, H).;false;false
6;true,false;tempadvisedby(I, B), publication(J, I).;true;true
6;true,false,true;ta(K, I, L).;false;false
6;true,false,false;publication(M, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;ta(D, A, E).;true;false
7;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
7;true,false;ta(I, A, J), publication(K, B).;true;true
7;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
7;true,false,false;tempadvisedby(P, B), publication(Q, B).;false;false
8;;advisedby(A, B) :- tempadvisedby(C, B), student(A).;true;true
8;true;publication(D, C).;true;true
8;true,true;ta(E, C, F), publication(G, A).;false;true
8;true,true,false;publication(D, B), ta(H, A, I).;false;false
8;true,false;ta(J, A, K).;true;true
8;true,false,true;projectmember(L, B), ta(M, C, N).;false;false
8;true,false,false;ta(P, C, Q), publication(R, A).;false;false
8;false;professor(B), publication(S, B).;false;false
9;;advisedby(A, B) :- student(A), professor(B).;true;false
9;true;tempadvisedby(C, B), publication(D, C).;true;true
9;true,true;publication(E, A), publication(E, B).;true;true
9;true,true,true;publication(D, A).;false;false
9;true,true,false;ta(F, C, G).;false;false
9;true,false;publication(H, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false


Model training time 2.732234477996826
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0.7259175301408329;  // std dev = 3.726, 121.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=105 */
%   | | | else return 0.6359267128772901;  // std dev = 3.055, 54.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=42 */
%   else return 0.06786195938207112;  // std dev = 12.254, 906.000 (wgt'ed) examples reached here.  /* #neg=716 #pos=190 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, D), genre(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15031430517270336;  // std dev = 1.15e-08, 227.000 (wgt'ed) examples reached here.  /* #neg=227 */
%   else return 0.2517134875934952;  // std dev = 13.445, 796.000 (wgt'ed) examples reached here.  /* #neg=459 #pos=337 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( genre(B, C), genre(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, F) )
%   | | | then return -0.13210744590420467;  // std dev = 1.56e-07, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20362681779809674;  // std dev = 13.495, 816.000 (wgt'ed) examples reached here.  /* #neg=479 #pos=337 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C), movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11768269279170786;  // std dev = 1.12e-08, 216.000 (wgt'ed) examples reached here.  /* #neg=216 */
%   else return 0.18635019772087907;  // std dev = 13.206, 783.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=337 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( female(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(B, E), movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, F), movie(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.48879764429603456;  // std dev = 3.515, 119.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=105 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.034333667928964084;  // std dev = 0.415, 892.000 (wgt'ed) examples reached here.  /* #neg=660 #pos=232 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(A, D), movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10930023936308657;  // std dev = 0.000, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
%   else return 0.11075482847951283;  // std dev = 13.108, 810.000 (wgt'ed) examples reached here.  /* #neg=473 #pos=337 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then if ( movie(A, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(D, E) )
%   | | then return -0.09910497889040207;  // std dev = 0.000, 206.000 (wgt'ed) examples reached here.  /* #neg=206 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08174356488335076;  // std dev = 13.186, 820.000 (wgt'ed) examples reached here.  /* #neg=483 #pos=337 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(A, C), movie(B, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(B, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09060138365606595;  // std dev = 0.000, 192.000 (wgt'ed) examples reached here.  /* #neg=192 */
%   else return 0.06062270412512786;  // std dev = 13.187, 832.000 (wgt'ed) examples reached here.  /* #neg=495 #pos=337 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( female(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( movie(B, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09812144946919193;  // std dev = 6.051, 384.000 (wgt'ed) examples reached here.  /* #neg=237 #pos=147 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B), movie(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.004145652985436093;  // std dev = 11.421, 606.000 (wgt'ed) examples reached here.  /* #neg=416 #pos=190 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(A, E), movie(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0912228932465315;  // std dev = 6.84e-09, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06406175421441734;  // std dev = 12.827, 785.000 (wgt'ed) examples reached here.  /* #neg=448 #pos=337 */
Inference time using transfer learning 1.0369791984558105
Parameter learned model CLL:-0.332358 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'director(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'genre(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [3.726, 16, 105], 'true,false,false,false': [3.055, 12, 42], 'false': [12.254, 716, 190]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(B, D), genre(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.15e-08, 227, 0], 'false': [13.445, 459, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'genre(B, C), genre(A, C)', 'true,false': 'genre(A, D)', 'true,false,false': 'movie(E, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.56e-07, 189, 0], 'true,false,false,false': [0.0, 0, 0], 'false': [13.495, 479, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C), movie(A, C)', 'true,false': 'movie(B, D), movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.12e-08, 216, 0], 'false': [13.206, 446, 337]}]
['workedunder(A, B)', {'': 'female(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(B, E), movie(A, E)', 'true,true,false': 'movie(B, F), movie(A, G)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [3.515, 14, 105], 'true,false': [0.0, 0, 0], 'false': [0.415, 660, 232]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(B, C)', 'true,false': 'movie(A, D), movie(B, D)', 'true,false,false': 'movie(A, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 232, 0], 'false': [13.108, 473, 337]}]
['workedunder(A, B)', {'': 'actor(B), female(A)', 'true': 'movie(A, C)', 'true,false': 'movie(D, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 206, 0], 'true,false,false': [0.0, 0, 0], 'false': [13.186, 483, 337]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(A, C), movie(B, C)', 'true,false': 'movie(B, D)', 'true,false,false': 'movie(B, E)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 192, 0], 'false': [13.187, 495, 337]}]
['workedunder(A, B)', {'': 'female(A)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E)', 'true,true,false': 'movie(B, D)', 'false': 'actor(B), movie(B, F)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [6.051, 237, 147], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.421, 416, 190]}]
['workedunder(A, B)', {'': 'female(A), actor(B)', 'true': 'movie(C, D)', 'true,true': 'movie(A, E), movie(B, E)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [6.84e-09, 183, 0], 'true,false': [0.0, 0, 0], 'false': [12.827, 448, 337]}]
{'': [0.13440000000000543, 0.16573347172882325], 'true': [nan, 0.13440000000000543], 'true,false': [nan, 0.13440000000000543], 'true,false,false': [0.1147462605013347, 0.17283950617284013]}
{'': [1.252057684158767e-16, 0.2271072207143209], 'true': [nan, 1.252057684158767e-16], 'true,false': [nan, 1.252057684158767e-16]}
{'': [1.292323097447272e-16, 0.22317165240186884], 'true': [nan, 1.292323097447272e-16], 'true,false': [nan, 1.292323097447272e-16], 'true,false,false': [1.292323097447272e-16, nan]}
{'': [1.2541408241136027e-16, 0.22272463278594043], 'true': [nan, 1.2541408241136027e-16], 'true,false': [nan, 1.2541408241136027e-16]}
{'': [0.10380622837370161, 0.17244315479747863], 'true': [0.10380622837370161, nan], 'true,true': [nan, 0.10380622837370161], 'true,true,false': [nan, 0.10380622837370161]}
{'': [-1.6461927606510943e-16, 0.21211219914679094], 'true': [nan, -1.6461927606510943e-16], 'true,false': [nan, -1.6461927606510943e-16], 'true,false,false': [nan, -1.6461927606510943e-16]}
{'': [-9.485400598739201e-17, 0.21205168047707074], 'true': [nan, -9.485400598739201e-17], 'true,false': [-9.485400598739201e-17, nan]}
{'': [-5.204170427930421e-17, 0.20900873035408477], 'true': [nan, -5.204170427930421e-17], 'true,false': [nan, -5.204170427930421e-17], 'true,false,false': [nan, -5.204170427930421e-17]}
{'': [0.09534152206775177, 0.21522944373645372], 'false': [nan, 0.21522944373645272], 'true': [0.09534152206775177, nan], 'true,true': [nan, 0.09534152206775177], 'true,true,false': [nan, 0.09534152206775177]}
{'': [4.7320981377465686e-17, 0.20960456958304466], 'true': [4.7320981377465686e-17, nan], 'true,true': [nan, 4.7320981377465686e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- actor(B), female(A).;true;true
2;;workedunder(A, B) :- actor(B), female(A).;true;true
3;;workedunder(A, B) :- actor(B), female(A).;true;true
5;;workedunder(A, B) :- actor(B), female(A).;true;true
6;;workedunder(A, B) :- actor(B), female(A).;true;true
7;;workedunder(A, B) :- female(A), actor(B).;true;true
9;;workedunder(A, B) :- female(A), actor(B).;true;true


Refining candidate
***************************
Model training time 3.1644973754882812
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995084;  // std dev = 1.04e-06, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.14185106490048766;  // std dev = 5.58e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.14185106490048882;  // std dev = 0.000, 653.000 (wgt'ed) examples reached here.  /* #neg=653 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.12544463852839163;  // std dev = 0.000, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.719473412210958;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.12544463852839213;  // std dev = 0.000, 426.000 (wgt'ed) examples reached here.  /* #neg=426 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.11231637819360674;  // std dev = 0.000, 224.000 (wgt'ed) examples reached here.  /* #neg=224 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.5553664367462832;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.11231637819360624;  // std dev = 5.87e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else return -0.11231637819360661;  // std dev = 0.000, 389.000 (wgt'ed) examples reached here.  /* #neg=389 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.10159632948783655;  // std dev = 0.000, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.41751358415831175;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.10159632948783623;  // std dev = 3.80e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.10159632948783638;  // std dev = 0.000, 418.000 (wgt'ed) examples reached here.  /* #neg=418 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601512;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.09269127618926179;  // std dev = 0.000, 621.000 (wgt'ed) examples reached here.  /* #neg=621 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.08518475138839675;  // std dev = 0.000, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2551722425694875;  // std dev = 4.00e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.0851847513883968;  // std dev = 1.83e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return -0.08518475138839673;  // std dev = 5.96e-08, 411.000 (wgt'ed) examples reached here.  /* #neg=411 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B), female(A) )
%   then return -0.07877675473109139;  // std dev = 5.77e-08, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.2097577156325347;  // std dev = 2.49e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07877675473109177;  // std dev = 1.05e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.07877675473109139;  // std dev = 5.16e-08, 430.000 (wgt'ed) examples reached here.  /* #neg=430 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.07324622576333661;  // std dev = 7.15e-08, 204.000 (wgt'ed) examples reached here.  /* #neg=204 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527644;  // std dev = 2.92e-07, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.07324622576333704;  // std dev = 1.29e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return -0.07324622576333717;  // std dev = 0.000, 408.000 (wgt'ed) examples reached here.  /* #neg=408 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936716;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | else return -0.0684269778442027;  // std dev = 1.67e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.06842697784420276;  // std dev = 5.96e-08, 641.000 (wgt'ed) examples reached here.  /* #neg=641 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( female(A), actor(B) )
%   then return -0.06419184008202623;  // std dev = 0.000, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(C, A), movie(C, B) )
%   | | then return 0.1340070300080119;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #pos=337 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.0641918400820258;  // std dev = 1.53e-07, 417.000 (wgt'ed) examples reached here.  /* #neg=417 */
Inference time using transfer learning 0.7777047157287598
Refined model CLL: -0.064087


******************************************
Best model found
******************************************
Results 

CLL : -0.063719 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.1644973754882812 

Total Inference Time : 1.400796890258789 

Total revision time: 11.04073977470398
Best scored revision CLL: -0.064087


Results 

CLL : -0.063719 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 11.058617353439331 

Total Inference Time : 1.400796890258789 

