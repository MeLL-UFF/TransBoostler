Starting experiment 8_twitter_yeast 

Loading pre-trained trees.
Starting experiments for fasttext using euclidean 

Run: 1

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 10.714904546737671
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4407935631986815;  // std dev = 0.493, 484.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048752;  // std dev = 1.28e-08, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.4034738298874723;  // std dev = 7.796, 255.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=155 */
%   | else return 0.3781994999720198;  // std dev = 7.281, 218.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=127 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1254446385283921;  // std dev = 0.000, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */
%   | | | else return -0.12544463852839155;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.30585117507529197;  // std dev = 0.493, 485.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1123163781936064;  // std dev = 0.000, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5939041131358169;  // std dev = 3.981, 257.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=240 */
%   | else return -0.1474810426419325;  // std dev = 5.806, 217.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783653;  // std dev = 0.000, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
%   | | | else return -0.10159632948783653;  // std dev = 0.000, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.18605997574727665;  // std dev = 7.263, 269.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=155 */
%   | else return 0.14818706859882816;  // std dev = 6.342, 227.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=127 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926065;  // std dev = 9.41e-09, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1734925110726381;  // std dev = 8.357, 383.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=237 */
%   | | else return 0.044202788043438516;  // std dev = 4.121, 93.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 8.30e-08, 210.000 (wgt'ed) examples reached here.  /* #neg=210 */
%   | | else return -0.08518475138839678;  // std dev = 6.83e-08, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09052632092790705;  // std dev = 0.429, 500.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109147;  // std dev = 7.74e-08, 199.000 (wgt'ed) examples reached here.  /* #neg=199 */
%   | | else return -0.0787767547310915;  // std dev = 8.30e-08, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.09645749759585394;  // std dev = 8.540, 391.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=237 */
%   | else return 0.04690817042562365;  // std dev = 3.899, 87.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=45 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333714;  // std dev = 3.36e-09, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.030364712889219346;  // std dev = 9.828, 516.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420322;  // std dev = 0.000, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05151024633023947;  // std dev = 9.460, 487.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202569;  // std dev = 9.08e-09, 366.000 (wgt'ed) examples reached here.  /* #neg=366 */
Inference time using transfer learning 6.768751859664917
Parameter learned model CLL:-0.267725 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.493, 202, 282], 'false,true': [0.0, 0, 0], 'false,false': [1.28e-08, 359, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [7.796, 100, 155], 'true,false': [7.281, 91, 127], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 296, 0], 'false,false,false,false': [0.0, 48, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.493, 203, 282], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 364, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [3.981, 17, 240], 'true,false': [5.806, 175, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 193, 0], 'false,false,false,false': [0.0, 189, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [7.263, 114, 155], 'true,false': [6.342, 100, 127], 'false,true': [0.0, 0, 0], 'false,false': [9.41e-09, 371, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [8.357, 146, 237], 'true,true,false': [4.121, 48, 45], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.3e-08, 210, 0], 'false,false,false': [6.83e-08, 162, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.429, 218, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.74e-08, 199, 0], 'false,false,false': [8.3e-08, 154, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.54, 154, 237], 'true,false': [3.899, 42, 45], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.36e-09, 347, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.828, 234, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 356, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.46, 205, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.08e-09, 366, 0]}]
{'': [0.2431698654463523, 1.657603178827532e-16], 'false': [nan, 1.657603178827532e-16]}
{'': [0.24074661755964682, -1.1876804449478418e-16], 'true': [0.23836985774701946, 0.24318239205453987], 'false': [nan, -1.1876804449478418e-16], 'false,false': [nan, -1.1876804449478418e-16], 'false,false,false': [-1.0802169969325848e-16, -3.0068540250264654e-17]}
{'': [0.2435233527018757, -2.928060724286127e-17], 'false': [nan, -2.928060724286127e-17], 'false,false': [nan, -2.928060724286127e-17]}
{'': [0.24097318206789534, 9.067790148770912e-17], 'true': [0.06165645968835336, 0.15532563818674813], 'false': [nan, 9.067790148770912e-17], 'false,false': [nan, 9.067790148770912e-17], 'false,false,false': [-9.088872429573821e-17, -9.046261682130905e-17]}
{'': [0.18780553194598, 8.618442886578034e-17], 'true': [0.1961247123854016, 0.1771692125068095], 'false': [nan, 8.618442886578034e-17]}
{'': [0.18503447162742634, 4.0588798749736907e-17], 'true': [0.18503447162742634, nan], 'true,true': [0.18236415360172895, 0.18258166376371462], 'false': [nan, 4.0588798749736907e-17], 'false,false': [3.277801310798081e-17, 2.878355989768924e-17]}
{'': [0.18390686924105618, 1.8870646310909177e-17], 'true': [0.18390686924105618, nan], 'false': [nan, 1.8870646310909177e-17], 'false,false': [3.0126654939577113e-17, 4.469729060179202e-17]}
{'': [0.1847334380812908, 1.1518163944237935e-17], 'true': [0.18652053669628518, 0.17469348443734564], 'false': [nan, 1.1518163944237935e-17], 'false,false': [nan, 1.1518163944237935e-17]}
{'': [0.18717815457250253, -8.981579525057446e-17], 'true': [0.18717815457250253, nan], 'false': [nan, -8.981579525057446e-17], 'false,false': [nan, -8.981579525057446e-17]}
{'': [0.18376972977674905, 8.190169853792139e-17], 'true': [0.18376972977674905, nan], 'false': [nan, 8.190169853792139e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 18.41565752029419
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.8581489350995116;  // std dev = 2.23e-07, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else if ( location(A, F), location(D, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(G, A), location(G, H) )
%   | | | then return 0.38273909903393444;  // std dev = 9.554, 366.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=192 */
%   | | | else return 0.3470378239884013;  // std dev = 4.742, 90.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=44 */
%   else return -0.14185106490048735;  // std dev = 2.97e-07, 394.000 (wgt'ed) examples reached here.  /* #neg=394 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E), interaction(A, A) )
%   | | then if ( location(A, F), phenotype(A, E) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(D, G) )
%   | | | then return 0.6802440102989649;  // std dev = 0.920, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.7737946450347729;  // std dev = 0.206, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.7266131947148193;  // std dev = 0.076, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.3339615180961119;  // std dev = 10.097, 409.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=216 */
%   else if ( interaction(I, A) )
%   | then return -0.1254446385283921;  // std dev = 0.000, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
%   | else return -0.1254446385283915;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, A), location(A, E) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.5589791929531506;  // std dev = 0.083, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.43775774261250433;  // std dev = 0.729, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.5651513963088776;  // std dev = 0.081, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.6631180377599659;  // std dev = 0.045, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then if ( complex(A, I), complex(H, I) )
%   | | | then return 0.06648086742786788;  // std dev = 1.503, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.2923746781229693;  // std dev = 3.262, 42.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=23 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.4699176058166819;  // std dev = 1.321, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return 0.30721948287516004;  // std dev = 9.156, 340.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=190 */
%   else return -0.11231637819360668;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, D), phenotype(A, E) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.19367996417539923;  // std dev = 0.807, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4402831860960046;  // std dev = 0.096, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.42463584103682517;  // std dev = 0.098, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.5040560778908677;  // std dev = 0.050, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.5075022247581592;  // std dev = 2.344, 45.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=39 */
%   | | | else return 0.11506320950892417;  // std dev = 8.369, 302.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=130 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.1912587760258095;  // std dev = 3.743, 56.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | | else return 0.3552132580940238;  // std dev = 3.631, 58.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=39 */
%   else return -0.10159632948783646;  // std dev = 0.000, 332.000 (wgt'ed) examples reached here.  /* #neg=332 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, E) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.3403556787937805;  // std dev = 0.139, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.03195476529858391;  // std dev = 0.710, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.31693799140967865;  // std dev = 0.026, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.38910398600587454;  // std dev = 0.177, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( location(A, G), interaction(A, H) )
%   | | then if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.05428674808119715;  // std dev = 2.947, 48.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=19 */
%   | | | else return 0.15429766544834408;  // std dev = 6.411, 178.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=97 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.16749145221533404;  // std dev = 3.397, 46.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=24 */
%   | | | else return 0.2447392381786215;  // std dev = 6.208, 161.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=96 */
%   else return -0.09269127618926043;  // std dev = 1.09e-08, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), phenotype(A, F) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.29175335454420953;  // std dev = 0.167, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.32331282067042766;  // std dev = 0.779, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.2669033798032254;  // std dev = 0.109, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.34660152037917163;  // std dev = 0.050, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then if ( enzyme(H, I), enzyme(A, I) )
%   | | | then return -0.26707674183485813;  // std dev = 0.987, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.00683553748369876;  // std dev = 3.544, 70.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=26 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.08129478709723942;  // std dev = 4.982, 103.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=49 */
%   | | | else return 0.1636652865539613;  // std dev = 8.046, 270.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=160 */
%   else return -0.08518475138839678;  // std dev = 6.32e-09, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, D) )
%   | | | then return 0.34919778826052283;  // std dev = 1.010, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | | else return -0.18172638806851896;  // std dev = 0.793, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(G, E), complex(G, D) )
%   | | | then return -0.20942181876172355;  // std dev = 2.065, 47.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=6 */
%   | | | else return 0.14995113251223122;  // std dev = 4.254, 83.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=51 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(J, H), complex(J, I) )
%   | | | then return 0.18957951767965764;  // std dev = 4.774, 100.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=64 */
%   | | | else return 0.3650446476708925;  // std dev = 1.559, 21.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | | else if ( phenotype(A, K), interaction(L, A) )
%   | | | then return 0.10314212857274951;  // std dev = 3.470, 58.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=34 */
%   | | | else return 0.17745177373080692;  // std dev = 4.780, 107.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=69 */
%   else return -0.07877675473109141;  // std dev = 6.65e-09, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), complex(E, F) )
%   | | then if ( complex(A, F), complex(D, F) )
%   | | | then return 0.16701311864101556;  // std dev = 0.126, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.013742950981489173;  // std dev = 1.391, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( interaction(G, D), enzyme(G, H) )
%   | | | then return 0.18798870010359794;  // std dev = 0.078, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.24634743534790407;  // std dev = 0.151, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(I, A), interaction(A, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.28250073135831166;  // std dev = 2.177, 44.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=36 */
%   | | | else return -0.08853012465806157;  // std dev = 5.039, 129.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=44 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.1660609590541516;  // std dev = 2.797, 39.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=26 */
%   | | | else return 0.06252406816251181;  // std dev = 7.625, 238.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=130 */
%   else return -0.07324622576333728;  // std dev = 0.000, 387.000 (wgt'ed) examples reached here.  /* #neg=387 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(A, E) )
%   | then if ( phenotype(A, F), interaction(D, A) )
%   | | then if ( phenotype(D, F), recursion_proteinclass(D, B) )
%   | | | then return 0.20528958889867044;  // std dev = 0.073, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.011607461654618581;  // std dev = 1.584, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( complex(D, G), interaction(H, A) )
%   | | | then return 0.36974945216177685;  // std dev = 1.398, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return 0.1059020692950639;  // std dev = 2.892, 39.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=24 */
%   | else if ( interaction(I, A), location(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.2069110219668523;  // std dev = 1.824, 53.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   | | | else return 0.06993856999637921;  // std dev = 7.646, 270.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=152 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.048648548544122476;  // std dev = 3.136, 45.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=26 */
%   | | | else return -0.20392484942163627;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   else return -0.06842697784420322;  // std dev = 0.000, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(A, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.24620079226776242;  // std dev = 1.198, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.01218229994617726;  // std dev = 1.713, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( interaction(A, G), interaction(G, D) )
%   | | | then return -0.21659156524991438;  // std dev = 1.941, 41.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
%   | | | else return 0.025069625530637712;  // std dev = 8.177, 287.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=158 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(H, J), interaction(A, J) )
%   | | | then return -0.08232929383297825;  // std dev = 2.135, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.2642282841668562;  // std dev = 1.255, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.03937137781274124;  // std dev = 1.645, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.2925816423578126;  // std dev = 2.165, 32.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=26 */
%   else return -0.06419184008202568;  // std dev = 9.22e-09, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
Inference time using transfer learning 4.8746583461761475
Refined model CLL: -0.286421


******************************************
Best model found
******************************************
Results 

CLL : -0.275719 

AUC ROC : 0.966463 

AUC PR : 0.120412 

Precision : 0.100861 

Recall : 0.942529 

F1 : 0.182222 

Total Learning Time : 18.41565752029419 

Total Inference Time : 13.64301872253418 

Total revision time: 69.45771265029907
Best scored revision CLL: -0.267725


Results 

CLL : -0.275719 

AUC ROC : 0.966463 

AUC PR : 0.120412 

Precision : 0.100861 

Recall : 0.942529 

F1 : 0.182222 

Total Learning Time : 69.46704411506653 

Total Inference Time : 13.64301872253418 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos examples: 104
Target test neg examples: 16320

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.653595685958862
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4354909830297912;  // std dev = 0.494, 459.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048754;  // std dev = 1.21e-08, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.41498866370911086;  // std dev = 6.389, 173.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=107 */
%   | else return 0.35282958205153414;  // std dev = 8.372, 284.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=158 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839205;  // std dev = 0.000, 275.000 (wgt'ed) examples reached here.  /* #neg=275 */
%   | | | else return -0.12544463852839152;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.30566741074063825;  // std dev = 0.494, 459.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360643;  // std dev = 0.000, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6009476470761177;  // std dev = 3.747, 238.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=223 */
%   | else return -0.1003023438105676;  // std dev = 5.667, 178.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783644;  // std dev = 0.000, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   | | | else return -0.10159632948783656;  // std dev = 0.000, 210.000 (wgt'ed) examples reached here.  /* #neg=210 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.1591250037177866;  // std dev = 5.985, 189.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=107 */
%   | else return 0.17653426612876086;  // std dev = 7.243, 278.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=158 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926043;  // std dev = 1.09e-08, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.13827712410398374;  // std dev = 7.139, 271.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=158 */
%   | | else return 0.08348290435708584;  // std dev = 6.330, 210.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=107 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 6.66e-08, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
%   | | else return -0.08518475138839678;  // std dev = 8.02e-08, 202.000 (wgt'ed) examples reached here.  /* #neg=202 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.10574023532389519;  // std dev = 0.431, 464.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.07877675473109151;  // std dev = 7.52e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | | else return -0.07877675473109147;  // std dev = 8.82e-08, 181.000 (wgt'ed) examples reached here.  /* #neg=181 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.0864649090762565;  // std dev = 7.060, 267.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=158 */
%   | else return 0.048183249497435646;  // std dev = 6.268, 204.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=107 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333716;  // std dev = 2.95e-09, 328.000 (wgt'ed) examples reached here.  /* #neg=328 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06035865649196327;  // std dev = 9.302, 467.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0684269778442031;  // std dev = 0.000, 321.000 (wgt'ed) examples reached here.  /* #neg=321 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.0559842300584081;  // std dev = 9.203, 456.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202594;  // std dev = 6.91e-09, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
Inference time using transfer learning 2.4750707149505615
Parameter learned model CLL:-0.270188 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.494, 194, 265], 'false,true': [0.0, 0, 0], 'false,false': [1.21e-08, 350, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [6.389, 66, 107], 'true,false': [8.372, 126, 158], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 275, 0], 'false,false,false,false': [0.0, 43, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.494, 194, 265], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 359, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [3.747, 15, 223], 'true,false': [5.667, 136, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 144, 0], 'false,false,false,false': [0.0, 210, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.985, 82, 107], 'true,false': [7.243, 120, 158], 'false,true': [0.0, 0, 0], 'false,false': [1.09e-08, 336, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [7.139, 113, 158], 'true,true,false': [6.33, 103, 107], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [6.66e-08, 146, 0], 'false,false,false': [8.02e-08, 202, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.431, 199, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.52e-08, 134, 0], 'false,false,false': [8.82e-08, 181, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [7.06, 109, 158], 'true,false': [6.268, 97, 107], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.95e-09, 328, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.302, 202, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 321, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.203, 191, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.91e-09, 306, 0]}]
{'': [0.24401820762195292, 1.4718385240744931e-16], 'false': [nan, 1.4718385240744931e-16]}
{'': [0.2436209893272118, -1.1451356983555074e-16], 'true': [0.23595843496274735, 0.24682602658202998], 'false': [nan, -1.1451356983555074e-16], 'false,false': [nan, -1.1451356983555074e-16], 'false,false,false': [-1.0012193094801412e-16, -2.840105411831796e-17]}
{'': [0.24410664691615255, -2.9688415143179675e-17], 'false': [nan, -2.9688415143179675e-17], 'false,false': [nan, -2.9688415143179675e-17]}
{'': [0.23131614518434185, 3.888916809421452e-17], 'true': [0.058984043803541476, 0.18039909193824208], 'false': [nan, 3.888916809421452e-17], 'false,false': [nan, 3.888916809421452e-17], 'false,false,false': [-5.551115123125783e-17, -8.247371040072592e-17]}
{'': [0.1891042318238704, 1.176307728471892e-16], 'true': [0.1895417601867772, 0.1886841147264822], 'false': [nan, 1.176307728471892e-16]}
{'': [0.19001136745150682, 3.9559670992390636e-17], 'true': [0.19001136745150682, nan], 'true,true': [0.1880787553366364, 0.19081377282587217], 'false': [nan, 3.9559670992390636e-17], 'false,false': [3.0417069167812506e-17, 3.187769080606885e-17]}
{'': [0.18566968090475844, 2.3966719261749412e-17], 'true': [0.18566968090475844, nan], 'false': [nan, 2.3966719261749412e-17], 'false,false': [4.225475690737536e-17, 4.29368020573265e-17]}
{'': [0.1896008210416286, 9.477513624848898e-18], 'true': [0.18669086442897115, 0.19257868782170187], 'false': [nan, 9.477513624848898e-18], 'false,false': [nan, 9.477513624848898e-18]}
{'': [0.18529325160711443, -6.571413541395007e-17], 'true': [0.18529325160711443, nan], 'false': [nan, -6.571413541395007e-17], 'false,false': [nan, -6.571413541395007e-17]}
{'': [0.1857407321714655, 4.8617609575088554e-17], 'true': [0.1857407321714655, nan], 'false': [nan, 4.8617609575088554e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 20.91475224494934
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), interaction(G, F) )
%   | | then if ( recursion_proteinclass(F, B), interaction(A, G) )
%   | | | then return 0.8581489350995121;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.4347912708659367;  // std dev = 5.783, 137.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=79 */
%   | | else if ( interaction(A, H), complex(H, E) )
%   | | | then return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.3986894756400529;  // std dev = 3.031, 37.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=20 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.22178529873587596;  // std dev = 2.256, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else if ( phenotype(A, L), interaction(M, A) )
%   | | | then return 0.4370963035205655;  // std dev = 4.304, 76.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=44 */
%   | | | else return 0.39612361864381673;  // std dev = 6.267, 158.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=85 */
%   else return -0.14185106490048768;  // std dev = 1.79e-07, 326.000 (wgt'ed) examples reached here.  /* #neg=326 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), interaction(F, A) )
%   | | then if ( enzyme(F, E) )
%   | | | then return 0.7543970748408246;  // std dev = 0.117, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.10616764089374005;  // std dev = 0.751, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.7734495403388341;  // std dev = 0.208, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | else if ( interaction(A, G), location(G, H) )
%   | | then if ( complex(G, I), complex(A, I) )
%   | | | then return 0.06054837532425465;  // std dev = 3.201, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | | else return 0.3042372850822817;  // std dev = 6.628, 178.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=90 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.35845068940643043;  // std dev = 4.302, 75.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=42 */
%   | | | else return 0.44480318325253704;  // std dev = 5.262, 121.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=78 */
%   else if ( interaction(K, A) )
%   | then return -0.12544463852839213;  // std dev = 0.000, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
%   | else return -0.12544463852839155;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(F, D) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.5851776921292006;  // std dev = 0.269, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return 0.36242745514376634;  // std dev = 1.152, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.7358687002170351;  // std dev = 0.016, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.7163111724263952;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(A, I), enzyme(A, J) )
%   | | | then return 0.3763341834033169;  // std dev = 0.732, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6480263794064659;  // std dev = 0.017, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(K, A), interaction(A, K) )
%   | | | then return 0.10217367738572518;  // std dev = 3.298, 53.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
%   | | | else return 0.2672979812795357;  // std dev = 9.477, 359.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=190 */
%   else return -0.11231637819360658;  // std dev = 0.000, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.5481553239702148;  // std dev = 1.049, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return 0.6752082741639729;  // std dev = 1.057, 74.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=73 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.2834354151773558;  // std dev = 0.244, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.33609289700214817;  // std dev = 0.109, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( complex(A, I), location(H, J) )
%   | | | then return 0.40960755585690706;  // std dev = 0.916, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.5220855064628028;  // std dev = 0.246, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.35842576991424896;  // std dev = 2.722, 36.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=24 */
%   | | | else return 0.23972438930680035;  // std dev = 6.888, 202.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=115 */
%   else return -0.10159632948783615;  // std dev = 8.33e-09, 370.000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), location(A, E) )
%   | | then if ( complex(D, F) )
%   | | | then return 0.2962962827239535;  // std dev = 0.040, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.3404784421471526;  // std dev = 0.132, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(D, G), location(A, H) )
%   | | | then return 0.4373753480753104;  // std dev = 0.051, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.41079547135126165;  // std dev = 0.109, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(K, A), interaction(A, K) )
%   | | | then return -0.09163876397874854;  // std dev = 2.112, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return 0.16249071299535173;  // std dev = 3.282, 52.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=27 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.08402200597434879;  // std dev = 3.100, 45.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | | | else return 0.19733426238137178;  // std dev = 7.654, 290.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=170 */
%   else return -0.09269127618926043;  // std dev = 1.09e-08, 334.000 (wgt'ed) examples reached here.  /* #neg=334 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), complex(E, F) )
%   | | then if ( enzyme(E, G), phenotype(E, H) )
%   | | | then return -0.056722433562728755;  // std dev = 1.053, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.26109448950612457;  // std dev = 0.168, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( interaction(I, D), enzyme(I, J) )
%   | | | then return 0.19590371582096852;  // std dev = 0.666, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.3956355818022672;  // std dev = 0.207, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( interaction(M, K), recursion_proteinclass(M, B) )
%   | | | then return 0.5667099185746698;  // std dev = 0.261, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.13447518298857106;  // std dev = 6.148, 190.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=107 */
%   | | else if ( interaction(N, A), location(N, P) )
%   | | | then return 0.07076099831312806;  // std dev = 4.844, 118.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=57 */
%   | | | else return 0.16656892083919086;  // std dev = 3.947, 75.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=44 */
%   else return -0.08518475138839678;  // std dev = 6.32e-09, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( location(D, E) )
%   | | | then return 0.20983475510058838;  // std dev = 0.110, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.258211424227816;  // std dev = 0.062, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, F), enzyme(F, G) )
%   | | | then return -0.1790004411169998;  // std dev = 1.550, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | | else return -0.006176611378828394;  // std dev = 3.655, 66.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=29 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.3650080890150146;  // std dev = 0.420, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.04196742241990392;  // std dev = 5.301, 140.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=70 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.18117594456505637;  // std dev = 3.598, 77.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=50 */
%   | | | else return 0.11793124785853738;  // std dev = 5.122, 129.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=76 */
%   else return -0.07877675473109141;  // std dev = 5.74e-09, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A) )
%   | | then if ( complex(D, E) )
%   | | | then return 0.16766761117136264;  // std dev = 0.049, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.18675188717512498;  // std dev = 0.085, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.2065710090843012;  // std dev = 0.060, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.27097882405535023;  // std dev = 0.073, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, A) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.2230516543781869;  // std dev = 0.102, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.34438650463242554;  // std dev = 0.102, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.07417200964347735;  // std dev = 7.997, 334.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=183 */
%   | | | else return 0.1553226454688122;  // std dev = 3.649, 66.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=41 */
%   else return -0.07324622576333716;  // std dev = 2.95e-09, 333.000 (wgt'ed) examples reached here.  /* #neg=333 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.15649631026550342;  // std dev = 0.128, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0.2941912407905799;  // std dev = 0.183, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.06057109812047139;  // std dev = 0.908, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( enzyme(A, G), interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3283409385864686;  // std dev = 0.684, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.06991861257068005;  // std dev = 4.072, 119.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=63 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return -0.04328619786975241;  // std dev = 5.998, 161.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=73 */
%   | | | else return 0.076112798848197;  // std dev = 5.358, 137.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=81 */
%   else return -0.06842697784420314;  // std dev = 0.000, 330.000 (wgt'ed) examples reached here.  /* #neg=330 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.2576008130379662;  // std dev = 0.724, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return -0.057950720869051064;  // std dev = 1.111, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(H, D), interaction(A, H) )
%   | | | then return -0.3030230930168034;  // std dev = 0.953, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | | else return 0.0324827889998103;  // std dev = 6.523, 212.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=115 */
%   | else if ( phenotype(A, I), enzyme(A, J) )
%   | | then if ( phenotype(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.35750842274156486;  // std dev = 0.732, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return -0.39891337878718436;  // std dev = 0.206, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.17066412869893005;  // std dev = 0.186, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.024325761087646624;  // std dev = 5.526, 141.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=75 */
%   else return -0.06419184008202598;  // std dev = 6.52e-09, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
Inference time using transfer learning 5.941654205322266
Refined model CLL: -0.2528


******************************************
Best model found
******************************************
Results 

CLL : -0.255784 

AUC ROC : 0.953417 

AUC PR : 0.143026 

Precision : 0.038855 

Recall : 0.913462 

F1 : 0.074539 

Total Learning Time : 20.91475224494934 

Total Inference Time : 13.050729513168335 

Total revision time: 47.06847953796387
Best scored revision CLL: -0.2528


Results 

CLL : -0.255784 

AUC ROC : 0.953417 

AUC PR : 0.143026 

Precision : 0.038855 

Recall : 0.913462 

F1 : 0.074539 

Total Learning Time : 47.07781100273132 

Total Inference Time : 13.050729513168335 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos examples: 92
Target test neg examples: 12594

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 13.831634521484375
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.42115706518080875;  // std dev = 0.496, 492.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1418510649004875;  // std dev = 1.30e-08, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.35311222232662;  // std dev = 8.122, 267.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=148 */
%   | else return 0.42807339890467844;  // std dev = 6.916, 205.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=129 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1254446385283922;  // std dev = 0.000, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
%   | | | else return -0.12544463852839155;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.30854853442436203;  // std dev = 0.494, 478.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360647;  // std dev = 0.000, 352.000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.573217071970952;  // std dev = 4.769, 277.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=252 */
%   | else return -0.20720633003349945;  // std dev = 4.708, 196.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=25 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783653;  // std dev = 0.000, 192.000 (wgt'ed) examples reached here.  /* #neg=192 */
%   | | | else return -0.10159632948783649;  // std dev = 0.000, 166.000 (wgt'ed) examples reached here.  /* #neg=166 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.1910091259653406;  // std dev = 7.032, 260.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=148 */
%   | else return 0.1610201994717594;  // std dev = 6.241, 224.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=129 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926064;  // std dev = 9.50e-09, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.15650242603040848;  // std dev = 8.579, 401.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=240 */
%   | | else return 0.01588452554002523;  // std dev = 3.841, 81.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=37 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 7.88e-08, 199.000 (wgt'ed) examples reached here.  /* #neg=199 */
%   | | else return -0.08518475138839678;  // std dev = 7.30e-08, 175.000 (wgt'ed) examples reached here.  /* #neg=175 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.0846646483858141;  // std dev = 0.428, 502.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109148;  // std dev = 8.30e-08, 180.000 (wgt'ed) examples reached here.  /* #neg=180 */
%   | | else return -0.07877675473109148;  // std dev = 8.56e-08, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.12068873198102135;  // std dev = 8.244, 386.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=240 */
%   | else return 0.019152322686748324;  // std dev = 3.650, 78.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=37 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0732462257633372;  // std dev = 1.86e-09, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06910129846358957;  // std dev = 9.161, 473.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420311;  // std dev = 0.000, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04257860247108906;  // std dev = 9.308, 481.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0641918400820258;  // std dev = 8.12e-09, 334.000 (wgt'ed) examples reached here.  /* #neg=334 */
Inference time using transfer learning 3.1201820373535156
Parameter learned model CLL:-0.268212 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.496, 215, 277], 'false,true': [0.0, 0, 0], 'false,false': [1.3e-08, 363, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [8.122, 119, 148], 'true,false': [6.916, 76, 129], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 345, 0], 'false,false,false,false': [0.0, 47, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.494, 201, 277], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 352, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [4.769, 25, 252], 'true,false': [4.708, 171, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 192, 0], 'false,false,false,false': [0.0, 166, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [7.032, 112, 148], 'true,false': [6.241, 95, 129], 'false,true': [0.0, 0, 0], 'false,false': [9.5e-09, 368, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [8.579, 161, 240], 'true,true,false': [3.841, 44, 37], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.88e-08, 199, 0], 'false,false,false': [7.3e-08, 175, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.428, 225, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.3e-08, 180, 0], 'false,false,false': [8.56e-08, 162, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.244, 146, 240], 'true,false': [3.65, 41, 37], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [1.86e-09, 374, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.161, 196, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 322, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.308, 204, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.12e-09, 334, 0]}]
{'': [0.24602997554366082, 1.6882730291820563e-16], 'false': [nan, 1.6882730291820563e-16]}
{'': [0.24245457483482738, -1.2688263138573217e-16], 'true': [0.24705073714037507, 0.2332897085068441], 'false': [nan, -1.2688263138573217e-16], 'false,false': [nan, -1.2688263138573217e-16], 'false,false,false': [-1.1842378929335003e-16, -3.0708296425802203e-17]}
{'': [0.2438926812888148, -3.2802043909379627e-17], 'false': [nan, -3.2802043909379627e-17], 'false,false': [nan, -3.2802043909379627e-17]}
{'': [0.24272670907321073, 4.7137960822073685e-17], 'true': [0.08208945735265033, 0.11306940411416512], 'false': [nan, 4.7137960822073685e-17], 'false,false': [nan, 4.7137960822073685e-17], 'false,false,false': [-9.020562075079397e-17, -7.35689956076911e-17]}
{'': [0.1828557486214645, 9.050731179009428e-17], 'true': [0.19017106717379237, 0.17388163964764522], 'false': [nan, 9.050731179009428e-17]}
{'': [0.1860679433022916, 4.0371746350005693e-17], 'true': [0.1860679433022916, nan], 'true,true': [0.18353566252284306, 0.1821538171074909], 'false': [nan, 4.0371746350005693e-17], 'false,false': [3.1242456974376264e-17, 3.0451831532575724e-17]}
{'': [0.18283734516884467, 1.1686558153949016e-17], 'true': [0.18283734516884467, nan], 'false': [nan, 1.1686558153949016e-17], 'false,false': [3.824101529264428e-17, 4.5231308410654523e-17]}
{'': [0.17662936421220343, 3.562212913235797e-18], 'true': [0.17607174575233966, 0.17081230472070613], 'false': [nan, 3.562212913235797e-18], 'false,false': [nan, 3.562212913235797e-18]}
{'': [0.17742665185893255, -7.240584943207543e-17], 'true': [0.17742665185893255, nan], 'false': [nan, -7.240584943207543e-17], 'false,false': [nan, -7.240584943207543e-17]}
{'': [0.18013952876800457, 6.581561642987455e-17], 'true': [0.18013952876800457, nan], 'false': [nan, 6.581561642987455e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 35.783944606781006
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E), enzyme(A, F) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.8581489350995121;  // std dev = 5.96e-08, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(G, H), enzyme(A, I) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.7956489350995123;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.2966516088963031;  // std dev = 6.785, 187.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=82 */
%   | | | else return 0.4160001747689309;  // std dev = 7.726, 242.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=135 */
%   else return -0.1418510649004876;  // std dev = 2.09e-07, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(A, F) )
%   | | then return 0.7246752599646249;  // std dev = 0.104, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | else if ( phenotype(D, G), enzyme(D, H) )
%   | | | then return 0.0017583613636716205;  // std dev = 0.949, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.6493514134802033;  // std dev = 0.866, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.5773553094156999;  // std dev = 2.661, 39.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=30 */
%   | | | else return 0.26028925167430683;  // std dev = 7.488, 230.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=105 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.7336899220885287;  // std dev = 0.106, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.38582803914004715;  // std dev = 6.182, 157.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=91 */
%   else if ( interaction(M, A) )
%   | then return -0.12544463852839216;  // std dev = 0.000, 328.000 (wgt'ed) examples reached here.  /* #neg=328 */
%   | else return -0.12544463852839147;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(D, E) )
%   | | then if ( recursion_proteinclass(E, B), interaction(A, D) )
%   | | | then return 0.5540815536130973;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.085732344093261;  // std dev = 1.473, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( enzyme(A, F), complex(D, G) )
%   | | | then return 0.6663790364119923;  // std dev = 0.192, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5742523297760227;  // std dev = 0.055, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.6238183043856622;  // std dev = 0.181, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.35797018587004803;  // std dev = 1.140, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.23261306378337884;  // std dev = 6.836, 192.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=92 */
%   | | | else return 0.30769142408613204;  // std dev = 7.386, 222.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=125 */
%   else return -0.11231637819360665;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #neg=326 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(E, A) )
%   | then if ( complex(E, F), interaction(E, E) )
%   | | then if ( location(A, G), location(E, G) )
%   | | | then return 0.4048544161807746;  // std dev = 1.190, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.6770378524044184;  // std dev = 0.180, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( complex(E, H), phenotype(E, I) )
%   | | | then return 0.24190443495903594;  // std dev = 4.032, 71.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=40 */
%   | | | else return 0.36851683073382036;  // std dev = 3.003, 45.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=32 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( complex(J, K), complex(A, K) )
%   | | | then return 0.4387350969713012;  // std dev = 0.225, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.22920121900054674;  // std dev = 1.704, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | else if ( complex(A, L), location(A, M) )
%   | | | then return 0.13484672120392993;  // std dev = 5.167, 118.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=53 */
%   | | | else return 0.2268823930134902;  // std dev = 6.851, 194.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=105 */
%   else return -0.10159632948783641;  // std dev = 2.63e-09, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then if ( phenotype(D, F), enzyme(D, G) )
%   | | | then return 0.06553188902216944;  // std dev = 0.675, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3359177389728883;  // std dev = 0.102, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( phenotype(D, H), enzyme(A, I) )
%   | | | then return 0.5440346119218314;  // std dev = 0.228, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3949121567600406;  // std dev = 0.278, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( interaction(L, A), enzyme(J, M) )
%   | | | then return 0.26211612856366734;  // std dev = 2.795, 35.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=23 */
%   | | | else return 0.09838673802464656;  // std dev = 5.236, 122.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=56 */
%   | | else if ( interaction(N, A) )
%   | | | then return 0.17907760598530978;  // std dev = 8.106, 268.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=148 */
%   | | | else return 0.528336314908362;  // std dev = 0.931, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.09269127618926055;  // std dev = 1.01e-08, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, E) )
%   | | then if ( complex(E, F), interaction(E, D) )
%   | | | then return 0.25294224713853536;  // std dev = 0.048, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.29592449165584267;  // std dev = 0.099, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.2561024256814854;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.36771407220501307;  // std dev = 0.244, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then if ( interaction(H, H) )
%   | | | then return -0.022899445112019353;  // std dev = 2.693, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return 0.16784347990069529;  // std dev = 3.087, 43.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=24 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.2671974764548026;  // std dev = 4.316, 84.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=55 */
%   | | | else return 0.14590493272545774;  // std dev = 7.644, 247.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=143 */
%   else return -0.08518475138839678;  // std dev = 6.25e-09, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, D), interaction(D, F) )
%   | | | then return 0.42353019340013487;  // std dev = 1.630, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return 0.012753233880993434;  // std dev = 1.819, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( interaction(A, G), interaction(D, G) )
%   | | | then return -0.08789223150457015;  // std dev = 3.094, 58.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=21 */
%   | | | else return 0.12011899927382504;  // std dev = 7.008, 209.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=121 */
%   | else if ( interaction(A, H), complex(A, I) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.2332083424664106;  // std dev = 0.151, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.10825231989013073;  // std dev = 2.772, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.1908016108530515;  // std dev = 1.892, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.018885590228293118;  // std dev = 4.619, 91.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=46 */
%   else return -0.07877675473109143;  // std dev = 1.86e-09, 325.000 (wgt'ed) examples reached here.  /* #neg=325 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, G), phenotype(A, H) )
%   | | | then return -0.13820123234764792;  // std dev = 0.871, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.35740895266233946;  // std dev = 0.584, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.4037826249437657;  // std dev = 0.114, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.08137303239586434;  // std dev = 5.171, 109.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=64 */
%   | else if ( interaction(A, A) )
%   | | then if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.16786456556010926;  // std dev = 0.136, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.30872045535759035;  // std dev = 0.083, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.1813640266811109;  // std dev = 4.552, 115.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=78 */
%   | | | else return 0.12522953285609226;  // std dev = 6.069, 162.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=99 */
%   else return -0.07324622576333724;  // std dev = 0.000, 394.000 (wgt'ed) examples reached here.  /* #neg=394 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(E, F), phenotype(A, F) )
%   | | | then return 0.33336545876010554;  // std dev = 3.949, 176.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=158 */
%   | | | else return -0.07833861084307453;  // std dev = 7.070, 241.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=105 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.32166395641760537;  // std dev = 0.293, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.5013791242770904;  // std dev = 0.412, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( interaction(A, H) )
%   | | then if ( enzyme(H, I), interaction(H, J) )
%   | | | then return 0.1478705954048877;  // std dev = 0.806, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.46537731311857816;  // std dev = 0.120, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.011907783975633301;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.22382942241735693;  // std dev = 0.866, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.0684269778442032;  // std dev = 0.000, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.2612256582310557;  // std dev = 1.040, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | | else return 0.4365631669757523;  // std dev = 0.575, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.3367719920633929;  // std dev = 0.609, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.44911398658428964;  // std dev = 0.756, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(A, I), recursion_proteinclass(H, B) )
%   | | | then return 0.16174212597802978;  // std dev = 0.147, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.03285240500597995;  // std dev = 3.337, 59.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=28 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.11748741476367788;  // std dev = 5.890, 191.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=123 */
%   | | | else return -0.036664845771007856;  // std dev = 2.241, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   else return -0.06419184008202578;  // std dev = 8.33e-09, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
Inference time using transfer learning 4.607451438903809
Refined model CLL: -0.248407


******************************************
Best model found
******************************************
Results 

CLL : -0.226367 

AUC ROC : 0.974054 

AUC PR : 0.381166 

Precision : 0.086857 

Recall : 0.826087 

F1 : 0.157187 

Total Learning Time : 35.783944606781006 

Total Inference Time : 32.12870526313782 

Total revision time: 116.5219829082489
Best scored revision CLL: -0.248407


Results 

CLL : -0.226367 

AUC ROC : 0.974054 

AUC PR : 0.381166 

Precision : 0.086857 

Recall : 0.826087 

F1 : 0.157187 

Total Learning Time : 116.53131437301636 

Total Inference Time : 32.12870526313782 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos examples: 86
Target test neg examples: 10998

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.081248044967651
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4287134512285402;  // std dev = 0.495, 496.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048746;  // std dev = 1.34e-08, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.39758793535333653;  // std dev = 6.928, 200.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=120 */
%   | else return 0.3695177599147394;  // std dev = 8.353, 285.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=163 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839216;  // std dev = 0.000, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
%   | | | else return -0.12544463852839147;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3029434763737403;  // std dev = 0.495, 493.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360651;  // std dev = 0.000, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5429688997049174;  // std dev = 5.540, 286.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=251 */
%   | else return -0.18728802096452218;  // std dev = 5.223, 217.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=32 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783644;  // std dev = 0.000, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | | | else return -0.10159632948783656;  // std dev = 0.000, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.16183012763223614;  // std dev = 6.443, 217.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=120 */
%   | else return 0.16985096460955815;  // std dev = 7.473, 294.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=163 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926067;  // std dev = 9.31e-09, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16599327626359414;  // std dev = 7.338, 293.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=174 */
%   | | else return 0.10095307024960677;  // std dev = 6.243, 207.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=109 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 6.32e-08, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   | | else return -0.08518475138839678;  // std dev = 8.16e-08, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09552742889399955;  // std dev = 0.436, 507.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.07877675473109148;  // std dev = 8.94e-08, 169.000 (wgt'ed) examples reached here.  /* #neg=169 */
%   | | else return -0.07877675473109146;  // std dev = 6.99e-08, 220.000 (wgt'ed) examples reached here.  /* #neg=220 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.052369366190608974;  // std dev = 7.827, 325.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=174 */
%   | else return 0.09505452804422067;  // std dev = 5.892, 190.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=109 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333724;  // std dev = 0.000, 378.000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07535173222002832;  // std dev = 9.536, 488.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420332;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #neg=392 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05531011702264234;  // std dev = 9.572, 489.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0641918400820258;  // std dev = 8.12e-09, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
Inference time using transfer learning 2.0884532928466797
Parameter learned model CLL:-0.265996 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.495, 213, 283], 'false,true': [0.0, 0, 0], 'false,false': [1.34e-08, 367, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [6.928, 80, 120], 'true,false': [8.353, 122, 163], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 335, 0], 'false,false,false,false': [0.0, 37, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.495, 210, 283], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 346, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [5.54, 35, 251], 'true,false': [5.223, 185, 32], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 141, 0], 'false,false,false,false': [0.0, 208, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.443, 97, 120], 'true,false': [7.473, 131, 163], 'false,true': [0.0, 0, 0], 'false,false': [9.31e-09, 374, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [7.338, 119, 174], 'true,true,false': [6.243, 98, 109], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [6.32e-08, 145, 0], 'false,false,false': [8.16e-08, 208, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.436, 224, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.94e-08, 169, 0], 'false,false,false': [6.99e-08, 220, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [7.827, 151, 174], 'true,false': [5.892, 81, 109], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 378, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.536, 205, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 392, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.572, 206, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.12e-09, 336, 0]}]
{'': [0.24502064906347848, 1.7666764206569248e-16], 'false': [nan, 1.7666764206569248e-16]}
{'': [0.24302688914869458, -1.2415397264625405e-16], 'true': [0.24000000000000035, 0.2448261003385663], 'false': [nan, -1.2415397264625405e-16], 'false,false': [nan, -1.2415397264625405e-16], 'false,false,false': [-1.166562700501657e-16, -2.100421938480026e-17]}
{'': [0.24469364854718467, -3.337086548006251e-17], 'false': [nan, -3.337086548006251e-17], 'false,false': [nan, -3.337086548006251e-17]}
{'': [0.24605573941780398, 3.053908606418769e-17], 'true': [0.10730406836463575, 0.12571249274399005], 'false': [nan, 3.053908606418769e-17], 'false,false': [nan, 3.053908606418769e-17], 'false,false,false': [-5.196788625904988e-17, -8.326672684688674e-17]}
{'': [0.19054149453513844, 8.668051422207105e-17], 'true': [0.19127303395252934, 0.18997422893083765], 'false': [nan, 8.668051422207105e-17]}
{'': [0.18666645274920796, 3.8999335709212296e-17], 'true': [0.18666645274920796, nan], 'true,true': [0.18376563750887637, 0.18829352376487382], 'false': [nan, 3.8999335709212296e-17], 'false,false': [2.7564157852762507e-17, 3.202566417187951e-17]}
{'': [0.1899334045917071, 3.6531760193321344e-17], 'true': [0.1899334045917071, nan], 'false': [nan, 3.6531760193321344e-17], 'false,false': [4.729944246923744e-17, 2.2204460492503132e-17]}
{'': [0.1867840904838526, -3.52451753849256e-18], 'true': [0.18848885573282192, 0.18271822429663748], 'false': [nan, -3.52451753849256e-18], 'false,false': [nan, -3.52451753849256e-18]}
{'': [0.1863511066288993, -1.161202653306924e-16], 'true': [0.1863511066288993, nan], 'false': [nan, -1.161202653306924e-16], 'false,false': [nan, -1.161202653306924e-16]}
{'': [0.1873602864333615, 6.608470384673551e-17], 'true': [0.1873602864333615, nan], 'false': [nan, 6.608470384673551e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 19.91916584968567
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E) )
%   | | then return 0.8581489350995118;  // std dev = 1.46e-07, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( complex(D, F), interaction(A, G) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.7956489350995123;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.3448745988163275;  // std dev = 5.313, 113.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=55 */
%   | | | else return 0.42178529873587267;  // std dev = 9.009, 330.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=186 */
%   else return -0.14185106490048757;  // std dev = 2.23e-07, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E) )
%   | | then return 0.7564256213291022;  // std dev = 0.213, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( interaction(D, F), complex(F, G) )
%   | | | then return 0.4097116778819811;  // std dev = 1.117, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.7689332143181564;  // std dev = 0.118, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6295187631300027;  // std dev = 1.822, 23.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   | | | else return 0.11916297602973873;  // std dev = 4.447, 95.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=30 */
%   | | else if ( interaction(A, K), interaction(L, A) )
%   | | | then return 0.290129818230893;  // std dev = 4.457, 81.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=39 */
%   | | | else return 0.4002950938262178;  // std dev = 7.775, 255.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=154 */
%   else if ( interaction(M, A) )
%   | then return -0.1254446385283921;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
%   | else return -0.12544463852839155;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then if ( interaction(D, E) )
%   | | | then return 0.5784599936474872;  // std dev = 0.209, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.13817364785763675;  // std dev = 0.820, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5493140321123351;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6511493827660955;  // std dev = 0.103, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), enzyme(H, I) )
%   | | | then return 0.1691742575955592;  // std dev = 0.964, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.6533242697549974;  // std dev = 0.023, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( complex(A, J), enzyme(A, K) )
%   | | | then return 0.3018572800650849;  // std dev = 4.076, 69.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=38 */
%   | | | else return 0.22597470625548216;  // std dev = 9.706, 385.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=187 */
%   else return -0.11231637819360643;  // std dev = 0.000, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.4423701389814409;  // std dev = 0.235, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.24699217609036023;  // std dev = 1.206, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( interaction(D, G), enzyme(G, H) )
%   | | | then return 0.5615357513592528;  // std dev = 0.099, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4840890290750656;  // std dev = 0.080, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(I, A), interaction(A, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5479973432124219;  // std dev = 2.030, 40.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=35 */
%   | | | else return 0.0651332591862265;  // std dev = 5.160, 127.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=43 */
%   | | else if ( complex(A, L), enzyme(A, M) )
%   | | | then return 0.3912821551591657;  // std dev = 2.766, 40.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=29 */
%   | | | else return 0.24478682877565633;  // std dev = 7.542, 237.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=135 */
%   else return -0.10159632948783616;  // std dev = 8.23e-09, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( complex(E, F), phenotype(E, G) )
%   | | | then return 0.24876919398023514;  // std dev = 0.793, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.34763702142462605;  // std dev = 0.144, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.5265762914651908;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.41010200072503056;  // std dev = 0.069, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then if ( complex(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.5805872085360394;  // std dev = 0.732, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | | else return -0.3438725020713251;  // std dev = 0.670, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.20414064609500066;  // std dev = 1.49e-08, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.1932809540102267;  // std dev = 8.740, 323.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=182 */
%   else return -0.09269127618926049;  // std dev = 1.07e-08, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E), interaction(D, F) )
%   | | then if ( phenotype(A, G), phenotype(D, G) )
%   | | | then return 0.2822868652395098;  // std dev = 0.082, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.04918728954660845;  // std dev = 1.172, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( phenotype(D, H), phenotype(A, H) )
%   | | | then return 0.18771627852682365;  // std dev = 0.768, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.31481192721844187;  // std dev = 0.269, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( enzyme(A, J), interaction(I, A) )
%   | | | then return -0.1891355754605683;  // std dev = 0.827, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.06801507964950423;  // std dev = 3.907, 78.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=35 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.12825229921396206;  // std dev = 7.921, 298.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=165 */
%   | | | else return 0.2314394849666091;  // std dev = 3.664, 64.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=41 */
%   else return -0.08518475138839678;  // std dev = 6.25e-09, 329.000 (wgt'ed) examples reached here.  /* #neg=329 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), location(A, E) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.22060590447692877;  // std dev = 0.134, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.038384010176055916;  // std dev = 1.114, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( phenotype(D, F), location(D, G) )
%   | | | then return 0.3140687250670632;  // std dev = 0.125, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.2710727245394131;  // std dev = 0.178, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( location(A, H), complex(A, I) )
%   | | then if ( location(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.11084122301882457;  // std dev = 5.077, 161.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=93 */
%   | | | else return -0.34704895948249376;  // std dev = 0.535, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(A, K), location(K, L) )
%   | | | then return 0.1813981613972081;  // std dev = 4.539, 100.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=60 */
%   | | | else return 0.09491256310815367;  // std dev = 6.315, 161.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=88 */
%   else return -0.07877675473109143;  // std dev = 5.89e-09, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(D, D), complex(D, E) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.18667090893418767;  // std dev = 0.102, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.10906535204236702;  // std dev = 1.742, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | else if ( phenotype(A, F), complex(A, G) )
%   | | | then return 0.01163813157445565;  // std dev = 1.198, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.13377252079988763;  // std dev = 2.404, 48.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=31 */
%   | else if ( enzyme(A, H), location(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.4394076249353258;  // std dev = 1.604, 84.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=82 */
%   | | | else return -0.4267461964418653;  // std dev = 0.868, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.13386725809096311;  // std dev = 5.979, 179.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=111 */
%   | | | else return 0.2293260440250452;  // std dev = 2.754, 43.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=32 */
%   else return -0.07324622576333768;  // std dev = 0.000, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(A, E) )
%   | then if ( interaction(F, A), interaction(F, D) )
%   | | then if ( complex(F, G), phenotype(F, H) )
%   | | | then return 0.006910346582900229;  // std dev = 1.724, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | | else return 0.22818165420846262;  // std dev = 0.953, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else if ( interaction(D, I), interaction(I, D) )
%   | | | then return 0.37695274363431225;  // std dev = 0.314, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.1544057356982713;  // std dev = 1.630, 24.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.19724652817928096;  // std dev = 1.859, 43.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=37 */
%   | | | else return 0.052545408943640765;  // std dev = 5.758, 189.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=104 */
%   | | else if ( complex(A, M), interaction(A, N) )
%   | | | then return -0.06840306463102193;  // std dev = 1.880, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.038138865866871055;  // std dev = 5.151, 137.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=78 */
%   else return -0.0684269778442031;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.14506848080597431;  // std dev = 0.105, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.322591859027908;  // std dev = 0.752, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(D, F), phenotype(A, F) )
%   | | | then return 0.2426281954756608;  // std dev = 0.038, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.17946727322300177;  // std dev = 0.176, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B), location(A, I) )
%   | | | then return 0.3261907872285359;  // std dev = 0.693, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | | else return 0.008626412611084405;  // std dev = 7.397, 295.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=146 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.12627022080233394;  // std dev = 1.441, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | | else return -0.037694357934216494;  // std dev = 3.943, 73.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=39 */
%   else return -0.06419184008202561;  // std dev = 9.68e-09, 393.000 (wgt'ed) examples reached here.  /* #neg=393 */
Inference time using transfer learning 2.7936110496520996
Refined model CLL: -0.252113


******************************************
Best model found
******************************************
Results 

CLL : -0.252794 

AUC ROC : 0.96288 

AUC PR : 0.264512 

Precision : 0.054688 

Recall : 0.895349 

F1 : 0.103079 

Total Learning Time : 19.91916584968567 

Total Inference Time : 16.288897037506104 

Total revision time: 49.06129002571106
Best scored revision CLL: -0.252113


Results 

CLL : -0.252794 

AUC ROC : 0.96288 

AUC PR : 0.264512 

Precision : 0.054688 

Recall : 0.895349 

F1 : 0.103079 

Total Learning Time : 49.070621490478516 

Total Inference Time : 16.288897037506104 

Run: 2

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 8.106475114822388
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.42327919562055;  // std dev = 0.496, 499.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048754;  // std dev = 1.21e-08, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.40760088651068227;  // std dev = 9.685, 394.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=240 */
%   | else return 0.358463830673124;  // std dev = 4.299, 75.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839213;  // std dev = 0.000, 323.000 (wgt'ed) examples reached here.  /* #neg=323 */
%   | | | else return -0.12544463852839158;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.30814532823372837;  // std dev = 0.493, 485.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360642;  // std dev = 0.000, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5685701915923057;  // std dev = 4.671, 264.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=240 */
%   | else return -0.16824113193506623;  // std dev = 5.961, 249.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783653;  // std dev = 0.000, 325.000 (wgt'ed) examples reached here.  /* #neg=325 */
%   | | | else return -0.10159632948783621;  // std dev = 4.21e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.1744363652559132;  // std dev = 8.466, 407.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=240 */
%   | else return 0.3241278186730096;  // std dev = 4.007, 68.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926049;  // std dev = 1.07e-08, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.14898116785527013;  // std dev = 9.225, 461.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=275 */
%   | | else return 0.2261057280696803;  // std dev = 1.677, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839678;  // std dev = 1.12e-07, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */
%   | | else return -0.08518475138839685;  // std dev = 3.41e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.10142894660448104;  // std dev = 0.428, 489.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109144;  // std dev = 4.94e-08, 277.000 (wgt'ed) examples reached here.  /* #neg=277 */
%   | | else return -0.07877675473109177;  // std dev = 1.83e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.07391297222783202;  // std dev = 9.342, 477.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=275 */
%   | else return 0.14387406796489555;  // std dev = 1.691, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333721;  // std dev = 9.31e-10, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04196154643203632;  // std dev = 9.699, 504.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0684269778442032;  // std dev = 0.000, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05607197261129827;  // std dev = 9.372, 481.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202583;  // std dev = 7.96e-09, 329.000 (wgt'ed) examples reached here.  /* #neg=329 */
Inference time using transfer learning 4.989115476608276
Parameter learned model CLL:-0.271363 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.496, 217, 282], 'false,true': [0.0, 0, 0], 'false,false': [1.21e-08, 350, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [9.685, 154, 240], 'true,false': [4.299, 33, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 323, 0], 'false,false,false,false': [0.0, 51, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.493, 203, 282], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 361, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [4.671, 24, 240], 'true,false': [5.961, 207, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 325, 0], 'false,false,false,false': [4.21e-08, 59, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [8.466, 167, 240], 'true,false': [4.007, 26, 42], 'false,true': [0.0, 0, 0], 'false,false': [1.07e-08, 351, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [9.225, 186, 275], 'true,true,false': [1.677, 5, 7], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.12e-07, 322, 0], 'false,false,false': [3.41e-08, 57, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.428, 207, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.94e-08, 277, 0], 'false,false,false': [1.83e-08, 56, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.342, 202, 275], 'true,false': [1.691, 5, 7], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [9.31e-10, 348, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.699, 222, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 348, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.372, 199, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.96e-09, 329, 0]}]
{'': [0.2457580491644641, 1.4718385240744931e-16], 'false': [nan, 1.4718385240744931e-16]}
{'': [0.23974249980679205, -1.2349004765884094e-16], 'true': [0.23808910304311512, 0.24639999999999967], 'false': [nan, -1.2349004765884094e-16], 'false,false': [nan, -1.2349004765884094e-16], 'false,false,false': [-1.1274091395574345e-16, -3.2653618371328135e-17]}
{'': [0.24301467081777756, -2.952393638892383e-17], 'false': [nan, -2.952393638892383e-17], 'false,false': [nan, -2.952393638892383e-17]}
{'': [0.24741397209045063, 9.483155002006545e-17], 'true': [0.08264462809917698, 0.14272671508941068], 'false': [nan, 9.483155002006545e-17], 'false,false': [nan, 9.483155002006545e-17], 'false,false,false': [-2.3229281746003274e-17, 3.010774304068221e-17]}
{'': [0.1874440547305652, 1.138690281666827e-16], 'true': [0.17609710507124748, 0.23615916955017305], 'false': [nan, 1.138690281666827e-16]}
{'': [0.18598865555707259, 3.866739821913474e-17], 'true': [0.18598865555707259, nan], 'true,true': [0.1845817628443254, 0.23423949180232037], 'false': [nan, 3.866739821913474e-17], 'false,false': [3.8616453030440226e-17, 2.0451476769410777e-17]}
{'': [0.18328112213391923, 2.6672024615619376e-17], 'true': [0.18328112213391923, nan], 'false': [nan, 2.6672024615619376e-17], 'false,false': [8.817655791246731e-18, 5.9476233462061954e-18]}
{'': [0.1844307410698468, 1.2761184191093753e-18], 'true': [0.1829542844584135, 0.2383454482346824], 'false': [nan, 1.2761184191093753e-18], 'false,false': [nan, 1.2761184191093753e-18]}
{'': [0.18665020828728326, -8.486187487077346e-17], 'true': [0.18665020828728326, nan], 'false': [nan, -8.486187487077346e-17], 'false,false': [nan, -8.486187487077346e-17]}
{'': [0.18259901005467577, 6.27664080791122e-17], 'true': [0.18259901005467577, nan], 'false': [nan, 6.27664080791122e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 17.60640025138855
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E), enzyme(A, F) )
%   | | then if ( interaction(G, A), phenotype(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.19148226843284555;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(D, H) )
%   | | | then return 0.8581489350995117;  // std dev = 1.98e-07, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return 0.7672398441904213;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.3748953465827617;  // std dev = 10.217, 418.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=216 */
%   else return -0.14185106490048735;  // std dev = 2.98e-07, 395.000 (wgt'ed) examples reached here.  /* #neg=395 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), phenotype(D, F) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.735339595552877;  // std dev = 0.055, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.0845391122281326;  // std dev = 0.778, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.7220767530344521;  // std dev = 0.055, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(G, H), phenotype(A, I) )
%   | | | then return 0.35300617643319915;  // std dev = 1.127, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.6699102724432464;  // std dev = 0.979, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.33296668621644754;  // std dev = 10.110, 410.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=216 */
%   else if ( interaction(J, A) )
%   | then return -0.12544463852839213;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
%   | else return -0.1254446385283915;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F), complex(D, G) )
%   | | | then return 0.5514451653840006;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5547234896217406;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.22322412793051047;  // std dev = 4.639, 90.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=44 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( complex(H, J), enzyme(A, K) )
%   | | | then return 0.2398555843052221;  // std dev = 2.540, 30.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
%   | | | else return 0.42236850197127734;  // std dev = 3.350, 57.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=40 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.25476920605795933;  // std dev = 6.761, 187.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=97 */
%   | | | else return 0.3237104864389208;  // std dev = 5.044, 110.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=65 */
%   else return -0.11231637819360646;  // std dev = 0.000, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B), interaction(F, E) )
%   | | then if ( interaction(D, E), interaction(A, D) )
%   | | | then return 0.5495626769179482;  // std dev = 1.278, 54.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=53 */
%   | | | else return 0.2204018743485111;  // std dev = 1.812, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.28999293207622434;  // std dev = 0.727, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0.23905485034427493;  // std dev = 7.677, 250.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=141 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( phenotype(G, H), complex(G, I) )
%   | | | then return 0.6045196402932903;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.3309626755294333;  // std dev = 1.903, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | else if ( interaction(J, A), interaction(A, K) )
%   | | | then return 0.4879942256996795;  // std dev = 0.917, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.2494569551098115;  // std dev = 4.593, 86.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=49 */
%   else return -0.10159632948783615;  // std dev = 8.33e-09, 369.000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( complex(E, F), phenotype(E, G) )
%   | | | then return 0.1453043246179044;  // std dev = 1.262, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return 0.32003916488790324;  // std dev = 0.142, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.520221708661704;  // std dev = 0.171, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.42838144471071304;  // std dev = 0.096, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( complex(A, I), enzyme(A, J) )
%   | | then if ( complex(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.6162715317671236;  // std dev = 0.336, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | | else return -0.3323355746762947;  // std dev = 0.203, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.13003494095103021;  // std dev = 5.035, 118.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=59 */
%   | | | else return 0.217012806658223;  // std dev = 7.400, 235.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=140 */
%   else return -0.0926912761892605;  // std dev = 1.05e-08, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( location(A, E) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.21563912549212408;  // std dev = 0.836, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return 0.364068864859204;  // std dev = 0.273, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return -0.02846079721087902;  // std dev = 0.779, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( complex(A, F), interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.42423411100745606;  // std dev = 0.995, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return -0.004875018761587586;  // std dev = 4.825, 127.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=50 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.09271685956525157;  // std dev = 0.010, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.14748846699706156;  // std dev = 8.187, 291.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=167 */
%   else if ( interaction(I, A) )
%   | then return -0.08518475138839678;  // std dev = 6.11e-09, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */
%   | else return -0.08518475138839687;  // std dev = 3.84e-09, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(D, F) )
%   | | then if ( interaction(E, F), location(F, G) )
%   | | | then return 0.18489787564766166;  // std dev = 0.896, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | | | else return 0.3118312936187178;  // std dev = 0.072, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.3814120438541555;  // std dev = 0.171, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2866593750460128;  // std dev = 0.103, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( location(A, K), location(I, K) )
%   | | | then return -0.051803905566977816;  // std dev = 3.568, 76.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=27 */
%   | | | else return 0.13232492608327598;  // std dev = 1.953, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.07411670494710439;  // std dev = 7.640, 275.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=144 */
%   | | | else return 0.16609070219492086;  // std dev = 4.416, 85.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=53 */
%   else return -0.07877675473109143;  // std dev = 5.35e-09, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, D), interaction(A, E) )
%   | | then if ( phenotype(E, F), interaction(A, A) )
%   | | | then return 0.1862587667318131;  // std dev = 0.047, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.027573912192081697;  // std dev = 0.871, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(G, D) )
%   | | | then return 0.2568026480887431;  // std dev = 0.293, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0.07725597336266457;  // std dev = 0.749, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( enzyme(A, H), phenotype(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.46435538084134514;  // std dev = 1.057, 52.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=51 */
%   | | | else return -0.3622520311829938;  // std dev = 0.826, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( enzyme(A, K), interaction(L, A) )
%   | | | then return 0.18964373132943121;  // std dev = 2.800, 47.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=30 */
%   | | | else return 0.08797880814853862;  // std dev = 7.657, 274.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=155 */
%   else return -0.07324622576333766;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(D, F), enzyme(F, G) )
%   | | | then return 0.16612149409992488;  // std dev = 0.032, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.2172512586013399;  // std dev = 0.114, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(H, A), interaction(D, D) )
%   | | | then return -0.09832799231116768;  // std dev = 1.852, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return 0.033506209447810374;  // std dev = 3.595, 77.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=43 */
%   | else if ( interaction(A, I), complex(A, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.17972258611558714;  // std dev = 1.149, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return -0.03377731037190993;  // std dev = 2.733, 51.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=21 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.11557257519720232;  // std dev = 6.294, 202.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=130 */
%   | | | else return 0.053695217973925013;  // std dev = 4.308, 84.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=49 */
%   else return -0.06842697784420324;  // std dev = 0.000, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.15519889485368787;  // std dev = 0.081, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.3187787916826608;  // std dev = 1.063, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.1495120686939751;  // std dev = 1.301, 35.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=6 */
%   | | | else return 0.07105225741667202;  // std dev = 5.823, 170.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=101 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.2594875916263154;  // std dev = 0.481, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.002481748290318143;  // std dev = 4.423, 104.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=53 */
%   | | else if ( location(A, J) )
%   | | | then return -0.018269039784430046;  // std dev = 4.604, 102.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=52 */
%   | | | else return -0.13706491560334266;  // std dev = 1.429, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else return -0.06419184008202575;  // std dev = 8.64e-09, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
Inference time using transfer learning 3.7033135890960693
Refined model CLL: -0.260794


******************************************
Best model found
******************************************
Results 

CLL : -0.257773 

AUC ROC : 0.942438 

AUC PR : 0.171244 

Precision : 0.040327 

Recall : 0.908046 

F1 : 0.077224 

Total Learning Time : 17.60640025138855 

Total Inference Time : 10.958361625671387 

Total revision time: 55.14611315727234
Best scored revision CLL: -0.260794


Results 

CLL : -0.257773 

AUC ROC : 0.942438 

AUC PR : 0.171244 

Precision : 0.040327 

Recall : 0.908046 

F1 : 0.077224 

Total Learning Time : 55.15578269958496 

Total Inference Time : 10.958361625671387 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos examples: 104
Target test neg examples: 16320

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.606349468231201
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.44966679224236517;  // std dev = 0.492, 448.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048768;  // std dev = 9.50e-09, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.39870387226195525;  // std dev = 6.505, 177.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=107 */
%   | else return 0.36049234197825347;  // std dev = 8.278, 279.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=158 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839208;  // std dev = 0.000, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
%   | | | else return -0.1254446385283916;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.2802163372929793;  // std dev = 0.497, 478.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360661;  // std dev = 0.000, 332.000 (wgt'ed) examples reached here.  /* #neg=332 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6118483646010761;  // std dev = 3.503, 236.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=223 */
%   | else return -0.14049091658688348;  // std dev = 5.824, 218.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.1015963294878364;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | | | else return -0.10159632948783656;  // std dev = 0.000, 209.000 (wgt'ed) examples reached here.  /* #neg=209 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.20169761330693473;  // std dev = 5.669, 177.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=107 */
%   | else return 0.2006393683510523;  // std dev = 6.978, 267.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=158 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926054;  // std dev = 1.02e-08, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17771690961599854;  // std dev = 6.660, 251.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=158 */
%   | | else return 0.12221903066529133;  // std dev = 5.978, 192.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=107 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 5.96e-08, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | | else return -0.08518475138839678;  // std dev = 8.16e-08, 215.000 (wgt'ed) examples reached here.  /* #neg=215 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09640792020994951;  // std dev = 0.427, 462.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.07877675473109151;  // std dev = 7.52e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | | else return -0.07877675473109147;  // std dev = 7.45e-08, 194.000 (wgt'ed) examples reached here.  /* #neg=194 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.04809626877276509;  // std dev = 7.345, 281.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=158 */
%   | else return 0.06829780768383861;  // std dev = 5.964, 193.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=107 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0732462257633371;  // std dev = 4.06e-09, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.0540735376453366;  // std dev = 9.224, 469.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420314;  // std dev = 0.000, 332.000 (wgt'ed) examples reached here.  /* #neg=332 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.03810825191162973;  // std dev = 9.246, 473.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202582;  // std dev = 8.07e-09, 333.000 (wgt'ed) examples reached here.  /* #neg=333 */
Inference time using transfer learning 2.379422426223755
Parameter learned model CLL:-0.266278 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.492, 183, 265], 'false,true': [0.0, 0, 0], 'false,false': [9.5e-09, 324, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [6.505, 70, 107], 'true,false': [8.278, 121, 158], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 290, 0], 'false,false,false,false': [0.0, 64, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.497, 213, 265], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 332, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [3.503, 13, 223], 'true,false': [5.824, 176, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 129, 0], 'false,false,false,false': [0.0, 209, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.669, 70, 107], 'true,false': [6.978, 109, 158], 'false,true': [0.0, 0, 0], 'false,false': [1.02e-08, 358, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [6.66, 93, 158], 'true,true,false': [5.978, 85, 107], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.96e-08, 140, 0], 'false,false,false': [8.16e-08, 215, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.427, 197, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.52e-08, 134, 0], 'false,false,false': [7.45e-08, 194, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [7.345, 123, 158], 'true,false': [5.964, 86, 107], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.06e-09, 344, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.224, 204, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 332, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.246, 208, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.07e-09, 333, 0]}]
{'': [0.2416244818239828, 9.046261682130905e-17], 'false': [nan, 9.046261682130905e-17]}
{'': [0.24341624345951704, -1.1792199357600533e-16], 'true': [0.23907561684062578, 0.24560321681376057], 'false': [nan, -1.1792199357600533e-16], 'false,false': [nan, -1.1792199357600533e-16], 'false,false,false': [-1.0719394720518753e-16, -3.8163916471489756e-17]}
{'': [0.24723207672719824, -3.7453306854824555e-17], 'false': [nan, -3.7453306854824555e-17], 'false,false': [nan, -3.7453306854824555e-17]}
{'': [0.24300477022466055, 5.2554936076930486e-18], 'true': [0.051982885991073625, 0.15557135694478394], 'false': [nan, 5.2554936076930486e-18], 'false,false': [nan, 5.2554936076930486e-18], 'false,false,false': [-3.7868072157757277e-17, -8.286832145527484e-17]}
{'': [0.18203796792534735, 1.0295923021663463e-16], 'true': [0.1815485404794474, 0.1823619733880883], 'false': [nan, 1.0295923021663463e-16]}
{'': [0.18155310677932052, 3.877962114183645e-17], 'true': [0.18155310677932052, nan], 'true,true': [0.17674132383415594, 0.18609840069108352], 'false': [nan, 3.877962114183645e-17], 'false,false': [2.5376526277146434e-17, 3.0982968129074136e-17]}
{'': [0.18273807543527815, 4.06179155350667e-18], 'true': [0.18273807543527815, nan], 'false': [nan, 4.06179155350667e-18], 'false,false': [4.225475690737536e-17, 2.8613995480029805e-17]}
{'': [0.18896810379875317, 1.6136962567226113e-17], 'true': [0.19198925813925335, 0.18432749431873405], 'false': [nan, 1.6136962567226113e-17], 'false,false': [nan, 1.6136962567226113e-17]}
{'': [0.18140056539650093, -7.825065896454417e-17], 'true': [0.18140056539650093, nan], 'false': [nan, -7.825065896454417e-17], 'false,false': [nan, -7.825065896454417e-17]}
{'': [0.1807248205271762, 6.534646030826747e-17], 'true': [0.1807248205271762, nan], 'false': [nan, 6.534646030826747e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 17.079276084899902
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), enzyme(A, F) )
%   | | then if ( enzyme(D, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(A, G), interaction(A, D) )
%   | | | then return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.34665468222594736;  // std dev = 6.594, 174.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=85 */
%   | | | else return 0.4488662346775679;  // std dev = 7.570, 237.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=140 */
%   else return -0.14185106490048768;  // std dev = 1.79e-07, 326.000 (wgt'ed) examples reached here.  /* #neg=326 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E), location(A, F) )
%   | | then if ( enzyme(A, E) )
%   | | | then return 0.7443023219151084;  // std dev = 0.134, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.025604545410102167;  // std dev = 0.890, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.7598266632836657;  // std dev = 0.200, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( complex(A, H), interaction(I, A) )
%   | | | then return 0.08812818992984375;  // std dev = 2.634, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return 0.3269594499780093;  // std dev = 5.059, 103.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=54 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.558151865700965;  // std dev = 2.304, 30.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=23 */
%   | | | else return 0.38778859799813714;  // std dev = 7.425, 232.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=137 */
%   else if ( interaction(L, A) )
%   | then return -0.12544463852839205;  // std dev = 0.000, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( enzyme(A, E), complex(D, F) )
%   | | then if ( interaction(D, D), complex(A, F) )
%   | | | then return 0.380813271872179;  // std dev = 0.737, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6700883051734537;  // std dev = 0.280, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.573473041937486;  // std dev = 0.162, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.2644270282370148;  // std dev = 3.923, 65.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=34 */
%   | else if ( complex(A, H), location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.2931371741135793;  // std dev = 5.562, 134.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=75 */
%   | | | else return -0.24324172281479958;  // std dev = 0.117, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(A, K), location(K, L) )
%   | | | then return 0.2503151654694716;  // std dev = 4.907, 100.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=54 */
%   | | | else return 0.36588649230750386;  // std dev = 5.247, 121.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=78 */
%   else return -0.11231637819360658;  // std dev = 0.000, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.45543897306585124;  // std dev = 0.259, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.12985411591335402;  // std dev = 0.733, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.6104364935297885;  // std dev = 0.112, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5558846996725504;  // std dev = 0.025, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.609002268889534;  // std dev = 0.962, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return 0.1811756018116978;  // std dev = 5.357, 123.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=59 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.017249170580152493;  // std dev = 1.785, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.17646463861606182;  // std dev = 8.293, 281.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=145 */
%   else return -0.10159632948783641;  // std dev = 2.63e-09, 338.000 (wgt'ed) examples reached here.  /* #neg=338 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( complex(D, F), interaction(D, D) )
%   | | then if ( interaction(A, G), complex(A, H) )
%   | | | then return 0.11661333775737281;  // std dev = 1.744, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.43768575622181166;  // std dev = 1.593, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4142330349620299;  // std dev = 0.347, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.1274534928332697;  // std dev = 7.218, 220.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=111 */
%   | else if ( interaction(J, A), complex(A, K) )
%   | | then if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.3875975473177796;  // std dev = 0.266, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.0701110277695756;  // std dev = 2.966, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.09404155700917735;  // std dev = 1.589, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.2749488520686046;  // std dev = 5.112, 121.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=80 */
%   else return -0.09269127618926043;  // std dev = 1.08e-08, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F), complex(A, G) )
%   | | | then return 0.3433523485256386;  // std dev = 0.061, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.26017311199478543;  // std dev = 0.163, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( phenotype(D, H), phenotype(A, I) )
%   | | | then return 0.3757437663406242;  // std dev = 0.083, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.40983316160699523;  // std dev = 0.140, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(J, J) )
%   | | | then return -0.004022257249499462;  // std dev = 3.089, 45.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | | | else return 0.19125909729465523;  // std dev = 6.405, 177.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=105 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.1878206172005784;  // std dev = 3.518, 59.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=35 */
%   | | | else return 0.0300488944462954;  // std dev = 5.817, 138.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=66 */
%   else return -0.08518475138839678;  // std dev = 6.25e-09, 330.000 (wgt'ed) examples reached here.  /* #neg=330 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, F), phenotype(F, G) )
%   | | then if ( interaction(H, A), interaction(H, H) )
%   | | | then return -0.025573515302645494;  // std dev = 1.145, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.27951310159959725;  // std dev = 2.212, 29.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.2832665955592059;  // std dev = 0.313, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.07256247583308117;  // std dev = 3.321, 57.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=22 */
%   | else if ( interaction(A, I), complex(A, J) )
%   | | then if ( interaction(K, A), complex(K, J) )
%   | | | then return 0.094782854085368;  // std dev = 2.142, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | | | else return 0.33480510244492767;  // std dev = 1.830, 23.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.08924848882713363;  // std dev = 5.583, 133.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=74 */
%   | | | else return 0.14516758770040766;  // std dev = 6.036, 161.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=99 */
%   else return -0.07877675473109143;  // std dev = 1.61e-09, 321.000 (wgt'ed) examples reached here.  /* #neg=321 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(A, E), complex(D, G) )
%   | | | then return 0.008917171051010087;  // std dev = 0.773, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.21443969486991413;  // std dev = 0.185, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(D, H), enzyme(D, I) )
%   | | | then return 0.03708847783124791;  // std dev = 0.585, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2955029972573405;  // std dev = 0.407, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( complex(A, J), phenotype(A, K) )
%   | | then if ( complex(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.5003976813690644;  // std dev = 0.641, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.4083424685492714;  // std dev = 0.523, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( interaction(M, A), location(M, N) )
%   | | | then return 0.028840927486041747;  // std dev = 8.059, 276.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=142 */
%   | | | else return -0.07035050811899134;  // std dev = 4.157, 73.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=30 */
%   else return -0.07324622576333702;  // std dev = 5.27e-09, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F), complex(E, G) )
%   | | | then return 0.21261981014707199;  // std dev = 0.048, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.1639119834814883;  // std dev = 0.103, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.24534737134601908;  // std dev = 0.096, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.344895232246118;  // std dev = 0.113, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( location(A, I), interaction(J, A) )
%   | | then if ( interaction(A, K), complex(A, L) )
%   | | | then return -0.033970871111357145;  // std dev = 3.311, 66.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=28 */
%   | | | else return 0.043399774762551684;  // std dev = 7.945, 284.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=155 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.04853165338357764;  // std dev = 2.998, 41.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=22 */
%   | | | else return 0.18833042179119305;  // std dev = 2.514, 29.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
%   else return -0.06842697784420311;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F), complex(D, G) )
%   | | | then return 0.1792429067160446;  // std dev = 0.042, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.14275303755152957;  // std dev = 0.092, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( complex(D, H), phenotype(A, I) )
%   | | | then return 0.18975819779303804;  // std dev = 0.016, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2601605203789627;  // std dev = 0.144, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, A) )
%   | | then if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.2427970146490194;  // std dev = 0.031, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.29133466812791375;  // std dev = 0.020, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.0736189424341832;  // std dev = 5.058, 148.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=85 */
%   | | | else return 0.02236031922397954;  // std dev = 7.943, 260.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=140 */
%   else return -0.06419184008202576;  // std dev = 8.48e-09, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
Inference time using transfer learning 5.29505467414856
Refined model CLL: -0.272601


******************************************
Best model found
******************************************
Results 

CLL : -0.279629 

AUC ROC : 0.959403 

AUC PR : 0.111926 

Precision : 0.079646 

Recall : 0.951923 

F1 : 0.146993 

Total Learning Time : 17.079276084899902 

Total Inference Time : 11.375015258789062 

Total revision time: 41.74710392951965
Best scored revision CLL: -0.266278


Results 

CLL : -0.279629 

AUC ROC : 0.959403 

AUC PR : 0.111926 

Precision : 0.079646 

Recall : 0.951923 

F1 : 0.146993 

Total Learning Time : 41.756773471832275 

Total Inference Time : 11.375015258789062 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos examples: 92
Target test neg examples: 12594

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.8616464138031006
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.44501334187916897;  // std dev = 0.492, 472.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048752;  // std dev = 1.25e-08, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.38922940436894066;  // std dev = 6.496, 175.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=104 */
%   | else return 0.34068501500436094;  // std dev = 8.865, 317.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=173 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1254446385283922;  // std dev = 0.000, 349.000 (wgt'ed) examples reached here.  /* #neg=349 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.34583713337558647;  // std dev = 0.486, 450.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360629;  // std dev = 0.000, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5604964268190115;  // std dev = 4.936, 279.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=252 */
%   | else return -0.21887600031378743;  // std dev = 4.671, 202.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=25 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783638;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | | | else return -0.10159632948783659;  // std dev = 0.000, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.1774097774597406;  // std dev = 5.761, 178.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=104 */
%   | else return 0.15590103310613662;  // std dev = 7.589, 314.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=173 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926061;  // std dev = 9.77e-09, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.151516670715164;  // std dev = 7.140, 284.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=169 */
%   | | else return 0.10609222300229958;  // std dev = 6.090, 200.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=108 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 6.66e-08, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | | else return -0.08518475138839678;  // std dev = 8.94e-08, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.1266028461102067;  // std dev = 0.422, 459.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.07877675473109153;  // std dev = 7.38e-08, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | | else return -0.07877675473109146;  // std dev = 7.88e-08, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.09157818413985999;  // std dev = 7.121, 277.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=169 */
%   | else return 0.028962934091984523;  // std dev = 6.224, 210.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=108 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333713;  // std dev = 3.61e-09, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09050628848320327;  // std dev = 8.865, 452.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420311;  // std dev = 0.000, 323.000 (wgt'ed) examples reached here.  /* #neg=323 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04579888669013343;  // std dev = 9.170, 473.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202561;  // std dev = 9.68e-09, 395.000 (wgt'ed) examples reached here.  /* #neg=395 */
Inference time using transfer learning 2.4239368438720703
Parameter learned model CLL:-0.274116 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.492, 195, 277], 'false,true': [0.0, 0, 0], 'false,false': [1.25e-08, 354, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [6.496, 71, 104], 'true,false': [8.865, 144, 173], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 349, 0], 'false,false,false,false': [0.0, 25, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.486, 173, 277], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 385, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [4.936, 27, 252], 'true,false': [4.671, 177, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 122, 0], 'false,false,false,false': [0.0, 240, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.761, 74, 104], 'true,false': [7.589, 141, 173], 'false,true': [0.0, 0, 0], 'false,false': [9.77e-09, 365, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [7.14, 115, 169], 'true,true,false': [6.09, 92, 108], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [6.66e-08, 154, 0], 'false,false,false': [8.94e-08, 237, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.422, 182, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.38e-08, 131, 0], 'false,false,false': [7.88e-08, 213, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [7.121, 108, 169], 'true,false': [6.224, 102, 108], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.61e-09, 339, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.865, 175, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 323, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.17, 196, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.68e-09, 395, 0]}]
{'': [0.2424545748348206, 1.5304769379013457e-16], 'false': [nan, 1.5304769379013457e-16]}
{'': [0.24602997554365802, -1.2349004765884094e-16], 'true': [0.24111020408163142, 0.24790773119446038], 'false': [nan, -1.2349004765884094e-16], 'false,false': [nan, -1.2349004765884094e-16], 'false,false,false': [-1.1961142041806845e-16, -6.661338147750939e-18]}
{'': [0.236643421461946, -2.3069569342860397e-17], 'false': [nan, -2.3069569342860397e-17], 'false,false': [nan, -2.3069569342860397e-17]}
{'': [0.24396486269115572, 5.3977694014924736e-17], 'true': [0.08731226990514206, 0.10800190552061353], 'false': [nan, 5.3977694014924736e-17], 'false,false': [nan, 5.3977694014924736e-17], 'false,false,false': [-2.912060392459427e-17, -7.031412489292658e-17]}
{'': [0.18460259415159297, 9.368457303686252e-17], 'true': [0.1864241860078288, 0.18340259916511928], 'false': [nan, 9.368457303686252e-17]}
{'': [0.18245525354763636, 3.8616453030440226e-17], 'true': [0.18245525354763636, nan], 'true,true': [0.1794962335094885, 0.1854463181013796], 'false': [nan, 3.8616453030440226e-17], 'false,false': [2.883696167857549e-17, 3.37282944189921e-17]}
{'': [0.17849957006418007, 2.1946269091427512e-17], 'true': [0.17849957006418007, nan], 'false': [nan, 2.1946269091427512e-17], 'false,false': [4.152742611193334e-17, 2.9188962149769376e-17]}
{'': [0.18462039586367113, 1.2444977857155147e-17], 'true': [0.1830661744932467, 0.18444045611194576], 'false': [nan, 1.2444977857155147e-17], 'false,false': [nan, 1.2444977857155147e-17]}
{'': [0.17385275995707994, -6.736957053452962e-17], 'true': [0.17385275995707994, nan], 'false': [nan, -6.736957053452962e-17], 'false,false': [nan, -6.736957053452962e-17]}
{'': [0.17779035350814204, 9.443922437317787e-17], 'true': [0.17779035350814204, nan], 'false': [nan, 9.443922437317787e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 35.14839553833008
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(D, A), interaction(F, D) )
%   | | | then return 0.8081489350995117;  // std dev = 1.378, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | | | else return 0.43709630352056494;  // std dev = 2.152, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | else if ( interaction(D, G), interaction(A, G) )
%   | | | then return 0.12285481745245355;  // std dev = 3.638, 68.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
%   | | | else return 0.4615972109615807;  // std dev = 3.725, 58.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=35 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.4443558316512365;  // std dev = 2.652, 29.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.7152917922423694;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.44297036367093773;  // std dev = 7.375, 224.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=131 */
%   else return -0.1418510649004876;  // std dev = 2.06e-07, 340.000 (wgt'ed) examples reached here.  /* #neg=340 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.7430459951190039;  // std dev = 0.160, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return 0.45523858291721914;  // std dev = 1.635, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else return 0.7930830213244591;  // std dev = 0.081, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, F), interaction(F, G) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.7380863555877917;  // std dev = 0.149, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return 0.19723948418898776;  // std dev = 5.545, 132.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=51 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.49807259350192473;  // std dev = 2.665, 34.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=24 */
%   | | | else return 0.3704069252581229;  // std dev = 7.182, 213.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=123 */
%   else if ( interaction(I, A) )
%   | then return -0.1254446385283921;  // std dev = 0.000, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
%   | else return -0.12544463852839155;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, E) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.5735671421924072;  // std dev = 0.189, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.20816674813094993;  // std dev = 0.887, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(F, D), enzyme(F, G) )
%   | | | then return 0.6242845928429828;  // std dev = 0.099, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.6934280399801547;  // std dev = 0.169, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, A) )
%   | | then if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.19910578212527613;  // std dev = 0.089, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.238957283201352;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.33206342408830986;  // std dev = 5.694, 139.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=84 */
%   | | | else return 0.25690933074396693;  // std dev = 8.050, 278.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=150 */
%   else return -0.11231637819360654;  // std dev = 0.000, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), location(A, E) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.42461588834411;  // std dev = 0.171, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.05713527666860742;  // std dev = 0.948, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.4735755055166405;  // std dev = 0.055, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5372876842420764;  // std dev = 0.237, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(A, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4980936724589522;  // std dev = 0.819, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | | | else return 0.13644501066970546;  // std dev = 8.699, 327.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=146 */
%   | | else if ( location(A, I) )
%   | | | then return 0.35105512042942594;  // std dev = 3.814, 68.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   | | | else return 0.03188522985980235;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   else return -0.10159632948783656;  // std dev = 0.000, 323.000 (wgt'ed) examples reached here.  /* #neg=323 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E), phenotype(A, E) )
%   | | then if ( interaction(A, A), complex(A, F) )
%   | | | then return 0.3209568551660074;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.44799795447490076;  // std dev = 0.254, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(A, G), phenotype(D, H) )
%   | | | then return 0.03596935256962767;  // std dev = 1.060, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.31896232265287405;  // std dev = 0.991, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.03966706457562662;  // std dev = 0.902, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.5440906684666814;  // std dev = 0.241, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(A, L), interaction(L, A) )
%   | | | then return 0.04092727680609307;  // std dev = 2.863, 74.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=35 */
%   | | | else return 0.16194969186690397;  // std dev = 9.318, 348.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=182 */
%   else return -0.09269127618926043;  // std dev = 1.07e-08, 328.000 (wgt'ed) examples reached here.  /* #neg=328 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, D) )
%   | | | then return 0.266271015193765;  // std dev = 1.772, 57.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=52 */
%   | | | else return 0.3965590910740186;  // std dev = 0.864, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else if ( interaction(G, A), interaction(G, D) )
%   | | | then return -0.07664800071235517;  // std dev = 3.577, 85.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=22 */
%   | | | else return 0.09802752401787705;  // std dev = 5.013, 107.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=53 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( phenotype(H, J), complex(H, K) )
%   | | | then return 0.0012950586136605041;  // std dev = 3.142, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | | | else return 0.2193512288517432;  // std dev = 2.317, 26.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=17 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.13220962421451327;  // std dev = 3.272, 46.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=26 */
%   | | | else return 0.2626924169777103;  // std dev = 4.626, 101.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=69 */
%   else return -0.08518475138839678;  // std dev = 6.25e-09, 329.000 (wgt'ed) examples reached here.  /* #neg=329 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( complex(A, F) )
%   | | then if ( phenotype(A, G), complex(D, H) )
%   | | | then return 0.07759148312421281;  // std dev = 3.699, 87.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=49 */
%   | | | else return 0.2841001112742489;  // std dev = 2.418, 37.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=28 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.2343538386290594;  // std dev = 0.773, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.04708758771052955;  // std dev = 6.810, 217.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=109 */
%   | else if ( complex(A, J), interaction(K, A) )
%   | | then if ( phenotype(A, L), interaction(A, M) )
%   | | | then return 0.27819267756393196;  // std dev = 0.717, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.03799986304020998;  // std dev = 2.042, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | else if ( complex(A, N), phenotype(A, P) )
%   | | | then return 0.41242348407186696;  // std dev = 1.231, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.19107146702945788;  // std dev = 4.135, 83.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=55 */
%   else return -0.07877675473109143;  // std dev = 1.61e-09, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, D) )
%   | | | then return 0.3790479342931182;  // std dev = 2.141, 105.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=102 */
%   | | | else return -0.3952348419258858;  // std dev = 1.059, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else if ( interaction(G, A), interaction(A, H) )
%   | | | then return -0.36111718740017523;  // std dev = 0.210, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.4985890965459035;  // std dev = 0.154, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( phenotype(A, K), interaction(A, L) )
%   | | | then return 0.020992349154040357;  // std dev = 3.159, 60.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=31 */
%   | | | else return 0.137590138185071;  // std dev = 5.588, 146.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=92 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.09830550087733173;  // std dev = 2.642, 32.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   | | | else return -0.01892942124284337;  // std dev = 3.987, 69.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=34 */
%   else return -0.07324622576333716;  // std dev = 2.95e-09, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), interaction(F, G) )
%   | | | then return 0.23437068658314658;  // std dev = 0.938, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.46230716102358554;  // std dev = 0.606, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return -0.35360184217897267;  // std dev = 0.272, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.44369185876806005;  // std dev = 0.209, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(J, K), interaction(K, J) )
%   | | | then return 0.16785917283800741;  // std dev = 0.152, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.2622426719732948;  // std dev = 0.241, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.23392335013875717;  // std dev = 0.244, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.01694527092919416;  // std dev = 8.173, 342.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=169 */
%   else return -0.06842697784420329;  // std dev = 0.000, 379.000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(D, E) )
%   | | | then return 0.1890096590688822;  // std dev = 1.128, 63.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=62 */
%   | | | else return 0.059296788363250634;  // std dev = 1.747, 22.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return -0.13880240448141537;  // std dev = 2.165, 56.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=9 */
%   | | | else return 0.09839460940264025;  // std dev = 6.671, 234.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=142 */
%   | else if ( interaction(A, H), complex(A, I) )
%   | | then if ( interaction(H, J), phenotype(A, K) )
%   | | | then return 0.09583598066542387;  // std dev = 1.153, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.27004930842765285;  // std dev = 0.296, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return -0.14173895952350418;  // std dev = 1.647, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return -0.037078928875607146;  // std dev = 3.645, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   else return -0.0641918400820257;  // std dev = 8.93e-09, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
Inference time using transfer learning 3.8894784450531006
Refined model CLL: -0.241153


******************************************
Best model found
******************************************
Results 

CLL : -0.239848 

AUC ROC : 0.950308 

AUC PR : 0.349697 

Precision : 0.055429 

Recall : 0.793478 

F1 : 0.10362 

Total Learning Time : 35.14839553833008 

Total Inference Time : 24.526017904281616 

Total revision time: 72.34981608390808
Best scored revision CLL: -0.241153


Results 

CLL : -0.239848 

AUC ROC : 0.950308 

AUC PR : 0.349697 

Precision : 0.055429 

Recall : 0.793478 

F1 : 0.10362 

Total Learning Time : 72.3594856262207 

Total Inference Time : 24.526017904281616 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos examples: 86
Target test neg examples: 10998

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 14.014674186706543
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.46414465244426173;  // std dev = 0.489, 467.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1418510649004876;  // std dev = 1.13e-08, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.3528762308610895;  // std dev = 8.033, 262.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=147 */
%   | else return 0.4214371582006428;  // std dev = 7.097, 216.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=136 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839216;  // std dev = 0.000, 332.000 (wgt'ed) examples reached here.  /* #neg=332 */
%   | | | else return -0.12544463852839147;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.25890266919159827;  // std dev = 0.499, 526.000 (wgt'ed) examples reached here.  /* #neg=243 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360651;  // std dev = 0.000, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5490902500982909;  // std dev = 5.400, 284.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=251 */
%   | else return -0.17328644349034905;  // std dev = 5.225, 201.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=32 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783655;  // std dev = 0.000, 197.000 (wgt'ed) examples reached here.  /* #neg=197 */
%   | | | else return -0.1015963294878365;  // std dev = 0.000, 171.000 (wgt'ed) examples reached here.  /* #neg=171 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.2077074272737333;  // std dev = 7.067, 252.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=147 */
%   | else return 0.14603180313373293;  // std dev = 6.683, 245.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=136 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0926912761892605;  // std dev = 1.05e-08, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1440775789036096;  // std dev = 8.939, 422.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=243 */
%   | | else return 0.07619120449500685;  // std dev = 3.737, 79.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=40 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 7.15e-08, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
%   | | else return -0.08518475138839678;  // std dev = 7.60e-08, 191.000 (wgt'ed) examples reached here.  /* #neg=191 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.1323745947577423;  // std dev = 0.429, 470.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109147;  // std dev = 8.02e-08, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
%   | | else return -0.07877675473109148;  // std dev = 8.43e-08, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.11006349425601752;  // std dev = 8.557, 394.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=243 */
%   | else return -0.017496013229288756;  // std dev = 3.943, 87.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=40 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333718;  // std dev = 2.28e-09, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06324709600133362;  // std dev = 9.499, 483.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0684269778442033;  // std dev = 0.000, 384.000 (wgt'ed) examples reached here.  /* #neg=384 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.02657528131573557;  // std dev = 9.694, 510.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0641918400820257;  // std dev = 8.93e-09, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
Inference time using transfer learning 2.8695805072784424
Parameter learned model CLL:-0.269214 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.489, 184, 283], 'false,true': [0.0, 0, 0], 'false,false': [1.13e-08, 341, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [8.033, 115, 147], 'true,false': [7.097, 80, 136], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 332, 0], 'false,false,false,false': [0.0, 37, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.499, 243, 283], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 346, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [5.4, 33, 251], 'true,false': [5.225, 169, 32], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 197, 0], 'false,false,false,false': [0.0, 171, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [7.067, 105, 147], 'true,false': [6.683, 109, 136], 'false,true': [0.0, 0, 0], 'false,false': [1.05e-08, 353, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [8.939, 179, 243], 'true,true,false': [3.737, 39, 40], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.15e-08, 168, 0], 'false,false,false': [7.6e-08, 191, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.429, 187, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.02e-08, 189, 0], 'false,false,false': [8.43e-08, 167, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.557, 151, 243], 'true,false': [3.943, 47, 40], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.28e-09, 348, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.499, 200, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 384, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.694, 227, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.93e-09, 364, 0]}]
{'': [0.2387649079045741, 1.276268110419535e-16], 'false': [nan, 1.276268110419535e-16]}
{'': [0.24152675898531623, -1.2275636695042381e-16], 'true': [0.24627061360060343, 0.23319615912208297], 'false': [nan, -1.2275636695042381e-16], 'false,false': [nan, -1.2275636695042381e-16], 'false,false,false': [-1.1503515676838971e-16, -2.100421938480026e-17]}
{'': [0.24880567312624424, -3.337086548006251e-17], 'false': [nan, -3.337086548006251e-17], 'false,false': [nan, -3.337086548006251e-17]}
{'': [0.24304551199999963, 6.637202864606914e-17], 'true': [0.10266962218458141, 0.1358222522138545], 'false': [nan, 6.637202864606914e-17], 'false,false': [nan, 6.637202864606914e-17], 'false,false,false': [-9.017039793909901e-17, -7.920889415454333e-17]}
{'': [0.19128888309669437, 1.0944974860327322e-16], 'true': [0.19816126770649298, 0.18229141542864735], 'false': [nan, 1.0944974860327322e-16]}
{'': [0.18797631149657437, 3.9584553524239565e-17], 'true': [0.18797631149657437, nan], 'true,true': [0.18934708992407548, 0.1767720646908669], 'false': [nan, 3.9584553524239565e-17], 'false,false': [3.0398963769498337e-17, 3.022596716256971e-17]}
{'': [0.183702621639423, 1.995906561123877e-17], 'true': [0.183702621639423, nan], 'false': [nan, 1.995906561123877e-17], 'false,false': [3.407033620542808e-17, 4.254746920719163e-17]}
{'': [0.18696451922695365, 5.742532885992189e-18], 'true': [0.18584642317640504, 0.1786997176320276], 'false': [nan, 5.742532885992189e-18], 'false,false': [nan, 5.742532885992189e-18]}
{'': [0.18679570511942262, -1.1102230246251565e-16], 'true': [0.18679570511942262, nan], 'false': [nan, -1.1102230246251565e-16], 'false,false': [nan, -1.1102230246251565e-16]}
{'': [0.18425813159764, 8.052166991786849e-17], 'true': [0.18425813159764, nan], 'false': [nan, 8.052166991786849e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 27.06084632873535
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995118;  // std dev = 2.38e-07, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then if ( interaction(A, E), phenotype(E, F) )
%   | | | then return 0.10814893509951236;  // std dev = 2.121, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return 0.35814893509951135;  // std dev = 4.301, 74.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=37 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.32293766749387726;  // std dev = 4.203, 71.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=33 */
%   | | | else return 0.4761264631893972;  // std dev = 7.939, 267.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=165 */
%   else return -0.1418510649004874;  // std dev = 2.81e-07, 383.000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, D), interaction(D, F) )
%   | | | then return 0.740873465563959;  // std dev = 1.508, 57.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=55 */
%   | | | else return 0.2678770367956634;  // std dev = 2.476, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else if ( interaction(A, G), interaction(D, G) )
%   | | | then return 0.11105942454151105;  // std dev = 3.668, 67.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   | | | else return 0.3860464393616224;  // std dev = 7.982, 265.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=157 */
%   | else if ( phenotype(A, H), location(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.6997761536533627;  // std dev = 1.350, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return -0.2080728158296029;  // std dev = 0.018, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.5310314367175502;  // std dev = 1.212, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.706492106885159;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.12544463852839216;  // std dev = 0.000, 334.000 (wgt'ed) examples reached here.  /* #neg=334 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(A, E), interaction(D, D) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.5617027087735176;  // std dev = 0.148, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.09620350692918195;  // std dev = 2.703, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | else if ( interaction(F, E), recursion_proteinclass(E, B) )
%   | | | then return 0.6166408336080411;  // std dev = 1.259, 42.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=40 */
%   | | | else return 0.28086963965474687;  // std dev = 8.338, 288.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=158 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(G, I), complex(I, J) )
%   | | | then return 0.7253077412943092;  // std dev = 0.037, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.31866053233968594;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.4226205241019836;  // std dev = 1.989, 26.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=19 */
%   | | | else return 0.32289919040072546;  // std dev = 2.883, 36.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=23 */
%   else return -0.11231637819360667;  // std dev = 0.000, 323.000 (wgt'ed) examples reached here.  /* #neg=323 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( complex(A, F), complex(E, F) )
%   | | | then return 0.3589525798784838;  // std dev = 0.568, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.4532631158488988;  // std dev = 0.191, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.6581959583823768;  // std dev = 0.211, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.4353023190854051;  // std dev = 0.864, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( complex(A, J), complex(I, K) )
%   | | | then return 0.4844190788275044;  // std dev = 0.903, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.1455883507177616;  // std dev = 1.519, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.12278057469110099;  // std dev = 6.370, 180.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=82 */
%   | | | else return 0.21167086309122474;  // std dev = 7.689, 257.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=143 */
%   else return -0.10159632948783594;  // std dev = 1.08e-08, 397.000 (wgt'ed) examples reached here.  /* #neg=397 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.32376498812882665;  // std dev = 0.023, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.44297955731585986;  // std dev = 0.197, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( complex(A, E), location(D, F) )
%   | | | then return 0.06989786711564568;  // std dev = 2.730, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | | | else return 0.2009982899509032;  // std dev = 6.928, 218.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=128 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5449437283018325;  // std dev = 0.940, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return -0.37820513008027073;  // std dev = 0.416, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.3123043772000387;  // std dev = 1.111, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.1796251549305549;  // std dev = 5.044, 116.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=68 */
%   else return -0.09269127618926061;  // std dev = 1.85e-07, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), complex(D, G) )
%   | | | then return 0.4255812751157857;  // std dev = 0.902, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | | else return 0.23872760945123336;  // std dev = 1.647, 30.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=24 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.333348849799906;  // std dev = 0.642, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return 0.08654233358030586;  // std dev = 5.516, 154.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=80 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(J, H), complex(J, K) )
%   | | | then return 0.40292904856817735;  // std dev = 1.860, 28.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=24 */
%   | | | else return 0.15772646532309792;  // std dev = 1.478, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.1850829737683196;  // std dev = 5.962, 164.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=103 */
%   | | | else return -0.016050772711862758;  // std dev = 1.139, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else return -0.08518475138839678;  // std dev = 6.32e-09, 384.000 (wgt'ed) examples reached here.  /* #neg=384 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( interaction(E, E), interaction(D, A) )
%   | | | then return 0.21068463829333292;  // std dev = 0.176, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.021803020949025607;  // std dev = 1.035, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( complex(D, F) )
%   | | | then return 0.32602334041071973;  // std dev = 0.182, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.44801991477308895;  // std dev = 0.097, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.16380196380398535;  // std dev = 3.733, 89.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=52 */
%   | | | else return 0.0381717310950171;  // std dev = 3.179, 58.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.3003316563480107;  // std dev = 0.247, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.026419621999700587;  // std dev = 8.161, 295.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=147 */
%   else return -0.07877675473109143;  // std dev = 3.09e-09, 338.000 (wgt'ed) examples reached here.  /* #neg=338 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, D), interaction(D, F) )
%   | | | then return 0.2630908948399547;  // std dev = 1.107, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | | else return 0.039175425669413;  // std dev = 1.680, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.15638904831047096;  // std dev = 1.999, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | | else return 0.07041689895173939;  // std dev = 6.784, 196.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=110 */
%   | else if ( interaction(H, A), complex(A, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.40930136430179476;  // std dev = 0.400, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.3394000565180784;  // std dev = 0.108, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( location(A, K), phenotype(A, L) )
%   | | | then return 0.15584539413580323;  // std dev = 2.962, 55.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=37 */
%   | | | else return 0.04610277878570125;  // std dev = 4.492, 95.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=53 */
%   else return -0.07324622576333767;  // std dev = 0.000, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), interaction(A, E) )
%   | then if ( recursion_proteinclass(E, B), location(E, D) )
%   | | then if ( interaction(E, F), interaction(F, E) )
%   | | | then return 0.15297890696839592;  // std dev = 0.172, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.27443608455617696;  // std dev = 0.247, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.23584830028731116;  // std dev = 1.753, 40.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=35 */
%   | | | else return 0.031838764308063254;  // std dev = 4.905, 138.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=66 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(J, A) )
%   | | | then return -0.07083653262652437;  // std dev = 1.133, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.2302895371028101;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.15518190403693444;  // std dev = 0.993, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.001178901884625734;  // std dev = 7.603, 251.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=126 */
%   else return -0.06842697784420329;  // std dev = 0.000, 378.000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(F, G) )
%   | | | then return 0.2261871972987859;  // std dev = 0.637, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | | else return -0.20079938173498849;  // std dev = 1.511, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( enzyme(D, H), interaction(I, D) )
%   | | | then return -0.10559994246943818;  // std dev = 3.583, 68.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=24 */
%   | | | else return 0.003323424625653942;  // std dev = 6.654, 214.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=107 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( phenotype(A, K), complex(J, L) )
%   | | | then return -0.10450283351104467;  // std dev = 1.388, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.08099041152398648;  // std dev = 2.678, 46.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=29 */
%   | | else if ( complex(A, M), interaction(N, A) )
%   | | | then return 0.03191192008916569;  // std dev = 1.984, 29.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   | | | else return 0.21398765880633627;  // std dev = 3.400, 68.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=51 */
%   else return -0.06419184008202582;  // std dev = 1.46e-07, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */
Inference time using transfer learning 2.9889776706695557
Refined model CLL: -0.26188


******************************************
Best model found
******************************************
Results 

CLL : -0.274897 

AUC ROC : 0.923317 

AUC PR : 0.28261 

Precision : 0.03777 

Recall : 0.732558 

F1 : 0.071836 

Total Learning Time : 27.06084632873535 

Total Inference Time : 22.213603019714355 

Total revision time: 101.76086974143982
Best scored revision CLL: -0.26188


Results 

CLL : -0.274897 

AUC ROC : 0.923317 

AUC PR : 0.28261 

Precision : 0.03777 

Recall : 0.732558 

F1 : 0.071836 

Total Learning Time : 101.77053928375244 

Total Inference Time : 22.213603019714355 

Run: 3

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 7.875134706497192
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.44810709409532384;  // std dev = 0.492, 478.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048754;  // std dev = 1.21e-08, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.3487114401745929;  // std dev = 10.343, 433.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=240 */
%   | else return 0.4031345750274932;  // std dev = 4.054, 69.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839208;  // std dev = 0.000, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
%   | | | else return -0.12544463852839158;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.2997851862727469;  // std dev = 0.495, 495.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1123163781936064;  // std dev = 0.000, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5920172635221551;  // std dev = 4.297, 260.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=240 */
%   | else return -0.15794955477228564;  // std dev = 5.821, 237.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783663;  // std dev = 0.000, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
%   | | | else return -0.10159632948783626;  // std dev = 2.98e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.19792418590604183;  // std dev = 8.182, 395.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=240 */
%   | else return 0.25902093038095514;  // std dev = 4.262, 74.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926058;  // std dev = 9.94e-09, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.13328308180312878;  // std dev = 9.370, 477.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=275 */
%   | | else return 0.14683862171218998;  // std dev = 1.821, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839678;  // std dev = 1.05e-07, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */
%   | | else return -0.08518475138839685;  // std dev = 2.98e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.11222718443047994;  // std dev = 0.428, 481.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109143;  // std dev = 2.58e-08, 317.000 (wgt'ed) examples reached here.  /* #neg=317 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.10627369916898104;  // std dev = 8.919, 448.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=275 */
%   | else return 0.05332319386333418;  // std dev = 1.878, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333721;  // std dev = 9.31e-10, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.052891904673851416;  // std dev = 9.508, 485.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0684269778442033;  // std dev = 0.000, 386.000 (wgt'ed) examples reached here.  /* #neg=386 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06574114578005025;  // std dev = 9.088, 466.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202584;  // std dev = 7.79e-09, 326.000 (wgt'ed) examples reached here.  /* #neg=326 */
Inference time using transfer learning 4.704402685165405
Parameter learned model CLL:-0.277246 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.492, 196, 282], 'false,true': [0.0, 0, 0], 'false,false': [1.21e-08, 350, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [10.343, 193, 240], 'true,false': [4.054, 27, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 293, 0], 'false,false,false,false': [0.0, 52, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.495, 213, 282], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 363, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [4.297, 20, 240], 'true,false': [5.821, 195, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 302, 0], 'false,false,false,false': [2.98e-08, 50, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [8.182, 155, 240], 'true,false': [4.262, 32, 42], 'false,true': [0.0, 0, 0], 'false,false': [9.94e-09, 362, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [9.37, 202, 275], 'true,true,false': [1.821, 7, 7], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.05e-07, 296, 0], 'false,false,false': [2.98e-08, 52, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.428, 199, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.58e-08, 317, 0], 'false,false,false': [0.0, 49, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.919, 173, 275], 'true,false': [1.878, 8, 7], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [9.31e-10, 351, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.508, 203, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 386, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.088, 184, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.79e-09, 326, 0]}]
{'': [0.24190752963008652, 1.4718385240744931e-16], 'false': [nan, 1.4718385240744931e-16]}
{'': [0.24618656846717377, -1.1842378929335003e-16], 'true': [0.24705449386364645, 0.23818525519848818], 'false': [nan, -1.1842378929335003e-16], 'false,false': [nan, -1.1842378929335003e-16], 'false,false,false': [-1.0609639825769414e-16, -3.416070845000482e-17]}
{'': [0.24513903281469795, -2.9361270072731413e-17], 'false': [nan, -2.9361270072731413e-17], 'false,false': [nan, -2.9361270072731413e-17]}
{'': [0.24564263575733353, 3.532527805625498e-17], 'true': [0.0710059171597636, 0.1429876653813106], 'false': [nan, 3.532527805625498e-17], 'false,false': [nan, 3.532527805625498e-17], 'false,false,false': [-5.146729253229202e-17, 1.7763568394002505e-17]}
{'': [0.18197521227334282, 1.0059479339145065e-16], 'true': [0.16949764115744506, 0.24543462381300246], 'false': [nan, 1.0059479339145065e-16]}
{'': [0.18555682511579338, 4.083578941150001e-17], 'true': [0.18555682511579338, nan], 'true,true': [0.1840421926944914, 0.2369840021913621], 'false': [nan, 4.083578941150001e-17], 'false,false': [3.750753461571475e-17, 1.708035422500241e-17]}
{'': [0.18293387948735135, 3.5187396408884745e-17], 'true': [0.18293387948735135, nan], 'false': [nan, 3.5187396408884745e-17], 'false,false': [2.1013685008678042e-18, 0.0]}
{'': [0.1795184116540611, 6.326057120371263e-19], 'true': [0.17756540465940215, 0.23513529897712682], 'false': [nan, 6.326057120371263e-19], 'false,false': [nan, 6.326057120371263e-19]}
{'': [0.1864090901820993, -1.1217279264347437e-16], 'true': [0.1864090901820993, nan], 'false': [nan, -1.1217279264347437e-16], 'false,false': [nan, -1.1217279264347437e-16]}
{'': [0.17723207033789948, 6.130065780138901e-17], 'true': [0.17723207033789948, nan], 'false': [nan, 6.130065780138901e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 64.11943864822388
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), enzyme(E, F) )
%   | | then if ( phenotype(D, G), interaction(D, E) )
%   | | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.8581489350995118;  // std dev = 1.46e-07, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( interaction(A, J), complex(A, K) )
%   | | | then return 0.20902612808196763;  // std dev = 5.096, 114.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=40 */
%   | | | else return 0.40473278603118773;  // std dev = 8.933, 322.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=176 */
%   else return -0.14185106490048754;  // std dev = 2.33e-07, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7313606442556377;  // std dev = 0.147, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( interaction(A, E), interaction(E, E) )
%   | | | then return 0.011205553749084692;  // std dev = 1.569, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.33527937554670495;  // std dev = 8.273, 279.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=149 */
%   | | else if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.4874777448711015;  // std dev = 3.389, 52.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=35 */
%   | | | else return 0.3813543962402976;  // std dev = 4.471, 84.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=49 */
%   else if ( interaction(I, A) )
%   | then return -0.1254446385283921;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
%   | else return -0.1254446385283915;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(A, E) )
%   | then if ( recursion_proteinclass(D, B), complex(D, F) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5624632074501307;  // std dev = 0.075, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.6453932103372514;  // std dev = 0.010, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.19955847326810514;  // std dev = 5.063, 111.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=52 */
%   | | | else return 0.319863302137169;  // std dev = 5.319, 117.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=68 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( interaction(A, J) )
%   | | | then return 0.3159769047397359;  // std dev = 1.603, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.5953168925786797;  // std dev = 1.309, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.5305422388464055;  // std dev = 0.943, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.33405777736201325;  // std dev = 6.589, 187.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=113 */
%   else return -0.11231637819360649;  // std dev = 0.000, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return 0.5766007098215381;  // std dev = 3.855, 244.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=230 */
%   | | | else return -0.10178139613888186;  // std dev = 5.270, 176.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=39 */
%   | | else if ( interaction(A, G), phenotype(A, H) )
%   | | | then return -0.2872273727162796;  // std dev = 0.251, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.32446588083902744;  // std dev = 0.071, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then return 0.3147593002174139;  // std dev = 1.118, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.6735181431629245;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.6174423607045323;  // std dev = 0.134, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(M, A) )
%   | then return -0.10159632948783662;  // std dev = 0.000, 268.000 (wgt'ed) examples reached here.  /* #neg=268 */
%   | else return -0.10159632948783621;  // std dev = 5.27e-09, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( interaction(E, E) )
%   | | | then return 0.33371200871676293;  // std dev = 0.201, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.031013652572981085;  // std dev = 1.447, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.3449918510563402;  // std dev = 0.164, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.5130164758278001;  // std dev = 0.064, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( complex(G, H) )
%   | | | then return 0.35931333437416346;  // std dev = 0.043, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.1794974590789295;  // std dev = 1.302, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.127702425179261;  // std dev = 7.305, 297.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=149 */
%   | | | else return 0.19302616300504136;  // std dev = 5.147, 123.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=67 */
%   else return -0.09269127618926043;  // std dev = 1.10e-08, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then if ( enzyme(D, F), phenotype(A, G) )
%   | | | then return 0.35524338161451463;  // std dev = 0.110, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.24771322032012957;  // std dev = 0.776, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | | else return 0.3870933505160696;  // std dev = 0.061, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then if ( phenotype(A, H) )
%   | | | then return -0.19844060498118785;  // std dev = 0.025, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.27219789973560665;  // std dev = 0.079, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.2831120647513487;  // std dev = 0.752, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0.12014651167498405;  // std dev = 8.781, 416.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=216 */
%   else if ( interaction(J, A) )
%   | then return -0.08518475138839678;  // std dev = 6.11e-09, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
%   | else return -0.08518475138839685;  // std dev = 4.47e-09, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(E, F), complex(A, G) )
%   | | | then return 0.19035507834274124;  // std dev = 0.046, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.23725563643270828;  // std dev = 0.084, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.21253447804877007;  // std dev = 0.197, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.020415250993650783;  // std dev = 3.687, 72.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=34 */
%   | else if ( enzyme(A, H), interaction(I, A) )
%   | | then if ( phenotype(A, J), complex(A, K) )
%   | | | then return 0.181486942698763;  // std dev = 2.111, 30.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=19 */
%   | | | else return 0.03463763333581864;  // std dev = 4.017, 101.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=50 */
%   | | else if ( enzyme(A, L), phenotype(A, M) )
%   | | | then return 0.30411922113312034;  // std dev = 1.652, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return 0.12381996672302852;  // std dev = 6.616, 249.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=149 */
%   else return -0.07877675473109141;  // std dev = 5.43e-09, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, D), interaction(D, F) )
%   | | | then return 0.3198827529534114;  // std dev = 1.808, 53.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=51 */
%   | | | else return -0.0652401169336573;  // std dev = 2.158, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.32669673354813544;  // std dev = 0.818, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0.06743590177087767;  // std dev = 7.122, 304.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=172 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5036779325806535;  // std dev = 0.376, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.46043728718387916;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.04844522694194682;  // std dev = 2.767, 34.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=18 */
%   | | | else return 0.19681888150944626;  // std dev = 1.982, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   else return -0.07324622576333721;  // std dev = 1.61e-09, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( phenotype(D, F) )
%   | | then if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.19503001494390418;  // std dev = 2.369, 54.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=46 */
%   | | | else return 0.04105900708671589;  // std dev = 6.272, 252.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=132 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.19119469604309547;  // std dev = 0.149, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.032421414469785595;  // std dev = 3.989, 102.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=46 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3032308019555053;  // std dev = 2.589, 50.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=41 */
%   | | | else return -0.37778913359313804;  // std dev = 0.124, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.09250496410929787;  // std dev = 0.772, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.024059495901620265;  // std dev = 0.753, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.06842697784420321;  // std dev = 0.000, 352.000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.31708519571941346;  // std dev = 3.474, 241.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=230 */
%   | | | else return -0.18200842410524692;  // std dev = 4.343, 160.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=39 */
%   | | else if ( interaction(G, A) )
%   | | | then return -0.34310971795199346;  // std dev = 0.377, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return -0.26472252576124217;  // std dev = 0.059, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then return 0.1097432769250108;  // std dev = 1.108, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.10172465767782513;  // std dev = 0.523, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.22075714411633013;  // std dev = 1.982, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   else if ( interaction(A, K) )
%   | then return -0.06419184008202625;  // std dev = 1.61e-09, 229.000 (wgt'ed) examples reached here.  /* #neg=229 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
Inference time using transfer learning 6.07881498336792
Refined model CLL: -0.203961


******************************************
Best model found
******************************************
Results 

CLL : -0.200917 

AUC ROC : 0.983908 

AUC PR : 0.262253 

Precision : 0.149826 

Recall : 0.988506 

F1 : 0.260212 

Total Learning Time : 64.11943864822388 

Total Inference Time : 56.39758539199829 

Total revision time: 146.9490966796875
Best scored revision CLL: -0.203961


Results 

CLL : -0.200917 

AUC ROC : 0.983908 

AUC PR : 0.262253 

Precision : 0.149826 

Recall : 0.988506 

F1 : 0.260212 

Total Learning Time : 146.95857501029968 

Total Inference Time : 56.39758539199829 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos examples: 104
Target test neg examples: 16320

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 11.8350830078125
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.45231933868695195;  // std dev = 0.491, 446.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1418510649004876;  // std dev = 1.13e-08, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.3913111616378616;  // std dev = 7.691, 246.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=147 */
%   | else return 0.35834348746351213;  // std dev = 7.168, 209.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=118 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839205;  // std dev = 0.000, 274.000 (wgt'ed) examples reached here.  /* #neg=274 */
%   | | | else return -0.12544463852839152;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.31695913265919734;  // std dev = 0.491, 448.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360658;  // std dev = 0.000, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6115093877074903;  // std dev = 3.240, 234.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=223 */
%   | else return -0.15424583334977812;  // std dev = 5.819, 223.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783655;  // std dev = 0.000, 198.000 (wgt'ed) examples reached here.  /* #neg=198 */
%   | | | else return -0.10159632948783645;  // std dev = 0.000, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.18779734865496592;  // std dev = 7.041, 253.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=147 */
%   | else return 0.1358518336175792;  // std dev = 6.140, 216.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=118 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926065;  // std dev = 9.41e-09, 370.000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.11867535609449245;  // std dev = 8.951, 425.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=237 */
%   | | else return 0.0633019907158923;  // std dev = 3.139, 56.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 7.88e-08, 195.000 (wgt'ed) examples reached here.  /* #neg=195 */
%   | | else return -0.08518475138839678;  // std dev = 6.99e-08, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.11678518865464235;  // std dev = 0.424, 454.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109148;  // std dev = 8.30e-08, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
%   | | else return -0.07877675473109151;  // std dev = 7.74e-08, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.07145199334566403;  // std dev = 8.804, 418.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=237 */
%   | else return 0.003684972964508334;  // std dev = 3.196, 58.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=28 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333706;  // std dev = 4.56e-09, 329.000 (wgt'ed) examples reached here.  /* #neg=329 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.03471570772858889;  // std dev = 9.506, 492.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0684269778442031;  // std dev = 0.000, 319.000 (wgt'ed) examples reached here.  /* #neg=319 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.028866024171904984;  // std dev = 9.532, 485.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202583;  // std dev = 7.96e-09, 329.000 (wgt'ed) examples reached here.  /* #neg=329 */
Inference time using transfer learning 5.7781898975372314
Parameter learned model CLL:-0.257374 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.491, 181, 265], 'false,true': [0.0, 0, 0], 'false,false': [1.13e-08, 341, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [7.691, 99, 147], 'true,false': [7.168, 91, 118], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 274, 0], 'false,false,false,false': [0.0, 45, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.491, 183, 265], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 336, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [3.24, 11, 223], 'true,false': [5.819, 181, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 198, 0], 'false,false,false,false': [0.0, 145, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [7.041, 106, 147], 'true,false': [6.14, 98, 118], 'false,true': [0.0, 0, 0], 'false,false': [9.41e-09, 370, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [8.951, 188, 237], 'true,true,false': [3.139, 28, 28], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.88e-08, 195, 0], 'false,false,false': [6.99e-08, 165, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.424, 189, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.3e-08, 178, 0], 'false,false,false': [7.74e-08, 140, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.804, 181, 237], 'true,false': [3.196, 30, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.56e-09, 329, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.506, 227, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 319, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.532, 220, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.96e-09, 329, 0]}]
{'': [0.24113193508818115, 1.276268110419535e-16], 'false': [nan, 1.276268110419535e-16]}
{'': [0.2432073421084407, -1.1137033475863638e-16], 'true': [0.24048185603807215, 0.24582770540967386], 'false': [nan, -1.1137033475863638e-16], 'false,false': [nan, -1.1137033475863638e-16], 'false,false,false': [-1.0048733945512366e-16, -2.960594732333751e-17]}
{'': [0.24148765988280277, -3.700743415417188e-17], 'false': [nan, -3.700743415417188e-17], 'false,false': [nan, -3.700743415417188e-17]}
{'': [0.24356864509034867, 1.5536648741110063e-17], 'true': [0.04486201913166275, 0.15182931143777836], 'false': [nan, 1.5536648741110063e-17], 'false,false': [nan, 1.5536648741110063e-17], 'false,false,false': [-8.7472117091679e-17, -5.665965780845627e-17]}
{'': [0.18674531584194037, 8.761760086230966e-17], 'true': [0.195942865980704, 0.17451665358138335], 'false': [nan, 8.761760086230966e-17]}
{'': [0.187351962542167, 3.947459643111668e-17], 'true': [0.187351962542167, nan], 'true,true': [0.1885027750733698, 0.1759088885886177], 'false': [nan, 3.947459643111668e-17], 'false,false': [3.188332788667116e-17, 2.960594732333751e-17]}
{'': [0.17970578310568522, 2.793013898428067e-18], 'true': [0.17970578310568522, nan], 'false': [nan, 2.793013898428067e-18], 'false,false': [3.867068962177512e-17, 4.282288809268461e-17]}
{'': [0.18478388108706478, 2.227195125387852e-17], 'true': [0.18543455813055967, 0.17606172427487635], 'false': [nan, 2.227195125387852e-17], 'false,false': [nan, 2.227195125387852e-17]}
{'': [0.1836590866142852, -7.09985884086307e-17], 'true': [0.1836590866142852, nan], 'false': [nan, -7.09985884086307e-17], 'false,false': [nan, -7.09985884086307e-17]}
{'': [0.18735254915443733, 6.344131569286608e-17], 'true': [0.18735254915443733, nan], 'false': [nan, 6.344131569286608e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 15.575205087661743
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(D, E), complex(E, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6831489350995115;  // std dev = 2.403, 40.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=33 */
%   | | | else return 0.12481560176617902;  // std dev = 3.425, 60.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | | else if ( enzyme(A, H), recursion_proteinclass(D, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, I), complex(A, J) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.46159721096158013;  // std dev = 3.725, 58.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=35 */
%   | | else if ( phenotype(A, K), interaction(A, L) )
%   | | | then return 0.3506862485323469;  // std dev = 4.092, 67.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=33 */
%   | | | else return 0.47243464938522595;  // std dev = 7.054, 210.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=129 */
%   else return -0.14185106490048754;  // std dev = 2.23e-07, 349.000 (wgt'ed) examples reached here.  /* #neg=349 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(A, F), enzyme(D, G) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.7291679099436074;  // std dev = 0.041, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.17927517597228818;  // std dev = 2.579, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7016301013985974;  // std dev = 1.020, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return 0.3900242995059764;  // std dev = 5.863, 149.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=89 */
%   | else if ( complex(A, I), interaction(J, A) )
%   | | then if ( phenotype(J, K) )
%   | | | then return 0.17770423477457262;  // std dev = 2.947, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return 0.43302403038312015;  // std dev = 1.741, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.781675663310468;  // std dev = 0.183, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.3222609274737903;  // std dev = 7.024, 199.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=104 */
%   else return -0.12544463852839224;  // std dev = 0.000, 381.000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( location(D, E), location(A, E) )
%   | | then if ( interaction(A, F), complex(F, G) )
%   | | | then return 0.5659925491764561;  // std dev = 0.867, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return 0.694052821723242;  // std dev = 0.296, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( interaction(D, D) )
%   | | | then return 0.7508798164464113;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.053553616405271204;  // std dev = 0.908, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(A, A) )
%   | | then return -0.22472338449673723;  // std dev = 0.063, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( location(A, H), enzyme(A, I) )
%   | | | then return 0.34922499924954176;  // std dev = 5.570, 134.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=83 */
%   | | | else return 0.24346972202966283;  // std dev = 8.189, 275.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=142 */
%   else return -0.11231637819360646;  // std dev = 0.000, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.42089385003725194;  // std dev = 0.721, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.5663110302851514;  // std dev = 0.292, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( phenotype(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.5334707764958599;  // std dev = 3.769, 127.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=110 */
%   | | | else return -0.3054628034396572;  // std dev = 0.342, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else if ( interaction(A, I), location(A, J) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.42309500172423486;  // std dev = 1.009, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return 0.10778816552692504;  // std dev = 4.669, 96.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=40 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.5929102589131725;  // std dev = 0.100, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.22270876609553983;  // std dev = 5.485, 125.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=68 */
%   else return -0.10159632948783665;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.3525855288515436;  // std dev = 0.224, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( phenotype(D, F) )
%   | | | then return 0.4972595845073571;  // std dev = 0.183, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.4216125197881356;  // std dev = 0.023, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.2248357647465886;  // std dev = 0.230, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.14155126341975044;  // std dev = 5.355, 143.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=75 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.2533946685689139;  // std dev = 4.368, 102.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=66 */
%   | | | else return 0.18720107835443656;  // std dev = 5.701, 153.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=84 */
%   else return -0.09269127618926046;  // std dev = 2.01e-07, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, E), interaction(E, F) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.34105839155312223;  // std dev = 0.795, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | | else return -0.08834929070822481;  // std dev = 1.539, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.48133083186294523;  // std dev = 0.984, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return -0.3077169367249337;  // std dev = 0.118, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, H) )
%   | | | then return 0.06642292182104118;  // std dev = 0.733, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3171229437537021;  // std dev = 0.955, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.02168272623895131;  // std dev = 4.115, 83.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=35 */
%   | | | else return 0.1154468058511248;  // std dev = 7.756, 283.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=155 */
%   else return -0.08518475138839678;  // std dev = 6.18e-09, 334.000 (wgt'ed) examples reached here.  /* #neg=334 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, D) )
%   | | | then return 0.22158776437217037;  // std dev = 0.151, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.08264010233090203;  // std dev = 0.690, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, F), phenotype(F, G) )
%   | | | then return 0.38377431316712646;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.31353552945235014;  // std dev = 0.167, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.4720848995296363;  // std dev = 0.366, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.0023536154878350357;  // std dev = 6.015, 193.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=86 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.045622342528545766;  // std dev = 4.447, 97.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=47 */
%   | | | else return 0.14225543441613206;  // std dev = 5.240, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   else return -0.07877675473109141;  // std dev = 3.61e-09, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F), location(A, G) )
%   | | | then return 0.16922661053063523;  // std dev = 0.097, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.19648622632605714;  // std dev = 0.081, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.21505563133853647;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.31199052153328927;  // std dev = 0.114, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( complex(A, J), interaction(K, I) )
%   | | | then return -0.06279972369196986;  // std dev = 2.688, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | | | else return 0.09339184955823147;  // std dev = 5.157, 149.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=84 */
%   | | else if ( enzyme(A, L), interaction(M, A) )
%   | | | then return 0.21171567638908254;  // std dev = 2.950, 48.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=33 */
%   | | | else return 0.07865744446837834;  // std dev = 5.876, 168.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=91 */
%   else return -0.07324622576333698;  // std dev = 1.01e-07, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F), location(A, G) )
%   | | | then return 0.1469159032021319;  // std dev = 0.087, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.16736213159191168;  // std dev = 0.071, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( phenotype(D, H), phenotype(A, I) )
%   | | | then return 0.27052053965305156;  // std dev = 0.151, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.22780440445585293;  // std dev = 0.034, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, J), interaction(J, A) )
%   | | then if ( complex(J, K), enzyme(J, L) )
%   | | | then return -0.3070626110246321;  // std dev = 0.259, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.0066079461611685784;  // std dev = 2.647, 51.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=21 */
%   | | else if ( enzyme(A, M), location(A, N) )
%   | | | then return 0.033793594300627186;  // std dev = 5.340, 142.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=76 */
%   | | | else return 0.08013451991118657;  // std dev = 6.672, 225.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=128 */
%   else return -0.06842697784420312;  // std dev = 0.000, 328.000 (wgt'ed) examples reached here.  /* #neg=328 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( enzyme(E, F), complex(D, G) )
%   | | | then return 0.020737893912901206;  // std dev = 0.501, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.14562737684326657;  // std dev = 0.151, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.19034682194460398;  // std dev = 0.096, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.25189530790003983;  // std dev = 0.030, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then if ( interaction(A, I), complex(I, J) )
%   | | | then return -0.14295430557456984;  // std dev = 0.128, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.2638410221920566;  // std dev = 0.097, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( complex(A, K), location(A, L) )
%   | | | then return 0.004459290445440722;  // std dev = 5.581, 167.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=83 */
%   | | | else return 0.05651968190799255;  // std dev = 7.105, 246.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=141 */
%   else return -0.06419184008202578;  // std dev = 1.54e-07, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
Inference time using transfer learning 4.6497087478637695
Refined model CLL: -0.25068


******************************************
Best model found
******************************************
Results 

CLL : -0.256913 

AUC ROC : 0.96242 

AUC PR : 0.123756 

Precision : 0.041564 

Recall : 0.971154 

F1 : 0.079716 

Total Learning Time : 15.575205087661743 

Total Inference Time : 10.199908018112183 

Total revision time: 65.76785802841187
Best scored revision CLL: -0.25068


Results 

CLL : -0.256913 

AUC ROC : 0.96242 

AUC PR : 0.123756 

Precision : 0.041564 

Recall : 0.971154 

F1 : 0.079716 

Total Learning Time : 65.77733635902405 

Total Inference Time : 10.199908018112183 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos examples: 92
Target test neg examples: 12594

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 13.48826551437378
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.41774489469546755;  // std dev = 0.496, 495.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 1.07e-08, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.39135293585202713;  // std dev = 7.771, 250.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=148 */
%   | else return 0.3346226453955956;  // std dev = 7.743, 241.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=129 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839216;  // std dev = 0.000, 333.000 (wgt'ed) examples reached here.  /* #neg=333 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.29188133356622864;  // std dev = 0.497, 497.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360658;  // std dev = 0.000, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5773594129685964;  // std dev = 4.950, 279.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=252 */
%   | else return -0.20986169420329226;  // std dev = 4.673, 213.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=25 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783653;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #neg=194 */
%   | | | else return -0.10159632948783652;  // std dev = 0.000, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.1738901122169365;  // std dev = 7.196, 264.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=148 */
%   | else return 0.2091912528071601;  // std dev = 6.095, 213.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=129 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926042;  // std dev = 1.10e-08, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.15436193769365536;  // std dev = 8.664, 407.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=240 */
%   | | else return 0.031242676518432818;  // std dev = 3.835, 81.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=37 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 7.88e-08, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | | else return -0.08518475138839678;  // std dev = 7.45e-08, 181.000 (wgt'ed) examples reached here.  /* #neg=181 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.10984789035389017;  // std dev = 0.427, 481.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.0787767547310915;  // std dev = 8.30e-08, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   | | else return -0.07877675473109148;  // std dev = 8.43e-08, 166.000 (wgt'ed) examples reached here.  /* #neg=166 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.0994408570080365;  // std dev = 8.497, 402.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=240 */
%   | else return 0.01840031650040843;  // std dev = 3.731, 77.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=37 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333714;  // std dev = 3.36e-09, 352.000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.08174696749623936;  // std dev = 9.148, 460.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420333;  // std dev = 0.000, 398.000 (wgt'ed) examples reached here.  /* #neg=398 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04100556267705543;  // std dev = 9.405, 481.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0641918400820257;  // std dev = 8.93e-09, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
Inference time using transfer learning 3.2146148681640625
Parameter learned model CLL:-0.266286 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.496, 218, 277], 'false,true': [0.0, 0, 0], 'false,false': [1.07e-08, 336, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [7.771, 102, 148], 'true,false': [7.743, 112, 129], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 333, 0], 'false,false,false,false': [0.0, 28, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.497, 220, 277], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 335, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [4.95, 27, 252], 'true,false': [4.673, 188, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 194, 0], 'false,false,false,false': [0.0, 182, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [7.196, 116, 148], 'true,false': [6.095, 84, 129], 'false,true': [0.0, 0, 0], 'false,false': [1.1e-08, 343, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [8.664, 167, 240], 'true,true,false': [3.835, 44, 37], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.88e-08, 183, 0], 'false,false,false': [7.45e-08, 181, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.427, 204, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.3e-08, 155, 0], 'false,false,false': [8.43e-08, 166, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.497, 162, 240], 'true,false': [3.731, 40, 37], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.36e-09, 352, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.148, 183, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 398, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.405, 204, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.93e-09, 360, 0]}]
{'': [0.24644832159983968, 1.189524669241239e-16], 'false': [nan, 1.189524669241239e-16]}
{'': [0.2458841634139564, -1.2055607358810565e-16], 'true': [0.24153599999999906, 0.24875604758871225], 'false': [nan, -1.2055607358810565e-16], 'false,false': [nan, -1.2055607358810565e-16], 'false,false,false': [-1.1468970584716332e-16, -7.93016446160826e-18]}
{'': [0.2466046647768172, -3.7117904106870906e-17], 'false': [nan, -3.7117904106870906e-17], 'false,false': [nan, -3.7117904106870906e-17]}
{'': [0.24632860478492527, 8.149509436078277e-17], 'true': [0.08783672366037033, 0.10250572152223496], 'false': [nan, 8.149509436078277e-17], 'false,false': [nan, 8.149509436078277e-17], 'false,false,false': [-9.156478553609538e-17, -8.540177112501205e-17]}
{'': [0.18675910585284025, 1.2170374847202881e-16], 'true': [0.19616386663770954, 0.17441279649378416], 'false': [nan, 1.2170374847202881e-16]}
{'': [0.18605897551361933, 3.9040809657148365e-17], 'true': [0.18605897551361933, nan], 'true,true': [0.1844316470355133, 0.18159348439471612], 'false': [nan, 3.9040809657148365e-17], 'false,false': [3.397403791202665e-17, 3.0669144326661785e-17]}
{'': [0.18241827297312985, 1.1067643859191591e-17], 'true': [0.18241827297312985, nan], 'false': [nan, 1.1067643859191591e-17], 'false,false': [4.4408920985006264e-17, 4.280377926265664e-17]}
{'': [0.18068364256766564, 1.198536219765794e-17], 'true': [0.17960170394465222, 0.1808203830761595], 'false': [nan, 1.198536219765794e-17], 'false,false': [nan, 1.198536219765794e-17]}
{'': [0.18192718444551884, -1.1827501568871014e-16], 'true': [0.18192718444551884, nan], 'false': [nan, -1.1827501568871014e-16], 'false,false': [nan, -1.1827501568871014e-16]}
{'': [0.18388301113758912, 7.956598343146955e-17], 'true': [0.18388301113758912, nan], 'false': [nan, 7.956598343146955e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 60.97600817680359
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G), complex(D, G) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( interaction(H, A), enzyme(H, E) )
%   | | | then return 0.011995088945666114;  // std dev = 1.840, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | | else return 0.4239384087837221;  // std dev = 4.321, 76.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=43 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( location(A, J) )
%   | | | then return 0.7867203636709403;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(A, K), complex(A, L) )
%   | | | then return 0.3504566274072034;  // std dev = 4.031, 65.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=32 */
%   | | | else return 0.462987644776931;  // std dev = 7.699, 248.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=150 */
%   else return -0.1418510649004876;  // std dev = 2.06e-07, 340.000 (wgt'ed) examples reached here.  /* #neg=340 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D) )
%   | | then return 0.7472916210974743;  // std dev = 0.216, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return 0.49983554889981574;  // std dev = 0.810, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(F, G), phenotype(F, H) )
%   | | | then return 0.3983577296531431;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.7239683721995748;  // std dev = 0.968, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else if ( interaction(A, I), interaction(J, A) )
%   | | | then return 0.25055636543062554;  // std dev = 6.483, 174.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=79 */
%   | | | else return 0.3723320885525975;  // std dev = 7.643, 239.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=138 */
%   else if ( interaction(K, A) )
%   | then return -0.12544463852839213;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #neg=317 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return 0.6336588380844501;  // std dev = 4.148, 258.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=239 */
%   | | | else return -0.1135054047633322;  // std dev = 4.446, 164.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=24 */
%   | | else if ( interaction(A, G), interaction(H, A) )
%   | | | then return -0.23400294952845602;  // std dev = 0.130, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.2709713477953027;  // std dev = 0.047, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( interaction(I, A) )
%   | | then if ( enzyme(I, J) )
%   | | | then return 0.3825000578803296;  // std dev = 1.339, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.6204471422726626;  // std dev = 0.926, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.057391226581695265;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.11231637819360657;  // std dev = 0.000, 338.000 (wgt'ed) examples reached here.  /* #neg=338 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then if ( enzyme(E, F), interaction(A, E) )
%   | | | then return 0.13485395679322182;  // std dev = 1.294, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.431345444380687;  // std dev = 0.994, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | | else return 0.7072804748325625;  // std dev = 0.076, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, G), interaction(A, H) )
%   | | then if ( complex(H, G), interaction(I, A) )
%   | | | then return -0.009735604607381234;  // std dev = 2.509, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return 0.23302497776658937;  // std dev = 3.479, 61.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=32 */
%   | | else if ( interaction(J, A), location(A, K) )
%   | | | then return 0.2050297162172257;  // std dev = 7.337, 309.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=170 */
%   | | | else return 0.36364976420171674;  // std dev = 2.511, 30.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
%   else if ( interaction(A, L) )
%   | then return -0.10159632948783655;  // std dev = 0.000, 200.000 (wgt'ed) examples reached here.  /* #neg=200 */
%   | else return -0.1015963294878365;  // std dev = 0.000, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B), interaction(A, F) )
%   | | then if ( interaction(A, E), location(A, G) )
%   | | | then return 0.24382064941675557;  // std dev = 1.433, 25.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | | | else return 0.5120202373696665;  // std dev = 1.067, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.2484407278549821;  // std dev = 0.418, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0.15256670891495586;  // std dev = 7.083, 289.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=160 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6281628501596728;  // std dev = 0.442, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.278996908096714;  // std dev = 0.066, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( enzyme(A, J), interaction(K, A) )
%   | | | then return 0.5415131901020116;  // std dev = 0.035, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.3352719471462927;  // std dev = 2.454, 36.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=26 */
%   else return -0.09269127618926055;  // std dev = 1.01e-08, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( location(A, E), location(D, E) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.3018222280930184;  // std dev = 0.263, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return 0.41923799367186054;  // std dev = 0.130, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.12347249819816301;  // std dev = 0.410, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, G) )
%   | | | then return 0.3487837831320399;  // std dev = 0.189, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.1546111456457388;  // std dev = 0.790, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( location(A, I) )
%   | | | then return 0.10424324948777346;  // std dev = 8.034, 405.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=205 */
%   | | | else return -0.05242243837514632;  // std dev = 2.552, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   else if ( interaction(A, J) )
%   | then return -0.08518475138839678;  // std dev = 5.74e-09, 216.000 (wgt'ed) examples reached here.  /* #neg=216 */
%   | else return -0.08518475138839678;  // std dev = 5.43e-09, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.3579619125078201;  // std dev = 3.766, 254.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=239 */
%   | | | else return -0.1646390990269476;  // std dev = 3.730, 145.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=24 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.1840076842484585;  // std dev = 0.072, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.3125923211265252;  // std dev = 0.286, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( enzyme(A, H) )
%   | | then return 0.19198724320275629;  // std dev = 0.937, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, I), interaction(J, A) )
%   | | | then return -0.14569691665132967;  // std dev = 1.816, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.0013028304607443308;  // std dev = 1.533, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( interaction(A, K) )
%   | then return -0.07877675473109148;  // std dev = 6.65e-09, 166.000 (wgt'ed) examples reached here.  /* #neg=166 */
%   | else return -0.0787767547310915;  // std dev = 6.78e-09, 158.000 (wgt'ed) examples reached here.  /* #neg=158 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( complex(D, F), recursion_proteinclass(D, B) )
%   | | then if ( enzyme(A, G), enzyme(D, G) )
%   | | | then return 0.23972359511246047;  // std dev = 0.058, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1829439450615135;  // std dev = 0.142, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( enzyme(D, H), interaction(I, D) )
%   | | | then return 0.0011658573156181715;  // std dev = 3.815, 111.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=54 */
%   | | | else return 0.07973684331396587;  // std dev = 5.892, 295.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=171 */
%   | else if ( phenotype(A, J), interaction(A, K) )
%   | | then if ( phenotype(K, J), enzyme(A, L) )
%   | | | then return 0.6072951767748486;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.13801683002837603;  // std dev = 2.121, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.19204391872909088;  // std dev = 0.721, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.4336572441819155;  // std dev = 0.850, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.07324622576333713;  // std dev = 3.23e-09, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then if ( phenotype(E, F), phenotype(A, G) )
%   | | then if ( complex(E, H), interaction(E, I) )
%   | | | then return 0.20756842501027528;  // std dev = 1.482, 24.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | | else return 0.3560769212736012;  // std dev = 0.319, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(E, J) )
%   | | | then return 0.02852747942018481;  // std dev = 1.822, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | | else return 0.32527038717171847;  // std dev = 0.647, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then if ( interaction(L, K), location(A, M) )
%   | | | then return 0.1619447024022416;  // std dev = 0.161, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return 0.28054372045501164;  // std dev = 0.123, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, N), interaction(P, A) )
%   | | | then return 0.020038287937910414;  // std dev = 3.626, 115.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=56 */
%   | | | else return 0.065285523180212;  // std dev = 5.697, 237.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=138 */
%   else return -0.06842697784420317;  // std dev = 0.000, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(D, D), recursion_proteinclass(D, B) )
%   | | then if ( enzyme(A, E) )
%   | | | then return 0.1803964554950972;  // std dev = 0.059, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1370814246972772;  // std dev = 0.112, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.23328918637738413;  // std dev = 0.505, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.012451273236033055;  // std dev = 3.078, 78.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=41 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.16239779354284936;  // std dev = 0.122, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.28393365796791736;  // std dev = 0.081, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.06522356481935006;  // std dev = 5.624, 263.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=155 */
%   | | | else return 0.008191509672149506;  // std dev = 3.775, 85.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=43 */
%   else return -0.06419184008202572;  // std dev = 8.79e-09, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
Inference time using transfer learning 6.002134561538696
Refined model CLL: -0.206289


******************************************
Best model found
******************************************
Results 

CLL : -0.192625 

AUC ROC : 0.993149 

AUC PR : 0.604314 

Precision : 0.204545 

Recall : 0.880435 

F1 : 0.331967 

Total Learning Time : 60.97600817680359 

Total Inference Time : 53.91766691207886 

Total revision time: 163.22022438049316
Best scored revision CLL: -0.206289


Results 

CLL : -0.192625 

AUC ROC : 0.993149 

AUC PR : 0.604314 

Precision : 0.204545 

Recall : 0.880435 

F1 : 0.331967 

Total Learning Time : 163.22970271110535 

Total Inference Time : 53.91766691207886 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos examples: 86
Target test neg examples: 10998

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 11.232401132583618
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4539384087837185;  // std dev = 0.491, 475.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048743;  // std dev = 1.38e-08, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.3439235971480587;  // std dev = 10.623, 456.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=251 */
%   | else return 0.37530318247501515;  // std dev = 3.658, 55.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=32 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839216;  // std dev = 0.000, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
%   | | | else return -0.12544463852839144;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.293461190216275;  // std dev = 0.496, 503.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360629;  // std dev = 0.000, 383.000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5508104703200332;  // std dev = 5.472, 285.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=251 */
%   | else return -0.17159979599127864;  // std dev = 5.152, 200.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=32 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783662;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #neg=317 */
%   | | | else return -0.10159632948783631;  // std dev = 2.11e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.17561571419828387;  // std dev = 8.918, 434.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=251 */
%   | else return 0.4114468260346901;  // std dev = 3.040, 45.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=32 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926075;  // std dev = 8.54e-09, 383.000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.11801960830179734;  // std dev = 9.792, 507.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=280 */
%   | | else return 0.13843581674333072;  // std dev = 1.149, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839678;  // std dev = 1.15e-07, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
%   | | else return -0.08518475138839685;  // std dev = 2.58e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.13203908327708738;  // std dev = 0.427, 472.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109143;  // std dev = 3.65e-08, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.08072028752768544;  // std dev = 9.452, 484.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=280 */
%   | else return -0.06704647201489722;  // std dev = 1.335, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0732462257633373;  // std dev = 0.000, 403.000 (wgt'ed) examples reached here.  /* #neg=403 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06553796068794036;  // std dev = 9.453, 487.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420325;  // std dev = 0.000, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06287688737345165;  // std dev = 9.297, 473.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202565;  // std dev = 9.36e-09, 381.000 (wgt'ed) examples reached here.  /* #neg=381 */
Inference time using transfer learning 2.8104379177093506
Parameter learned model CLL:-0.274924 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.491, 192, 283], 'false,true': [0.0, 0, 0], 'false,false': [1.38e-08, 374, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [10.623, 205, 251], 'true,false': [3.658, 23, 32], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 336, 0], 'false,false,false,false': [0.0, 35, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.496, 220, 283], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 383, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [5.472, 34, 251], 'true,false': [5.152, 168, 32], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 317, 0], 'false,false,false,false': [2.11e-08, 44, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [8.918, 183, 251], 'true,false': [3.04, 13, 32], 'false,true': [0.0, 0, 0], 'false,false': [8.54e-09, 383, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [9.792, 227, 280], 'true,true,false': [1.149, 3, 3], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.15e-07, 336, 0], 'false,false,false': [2.58e-08, 46, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.427, 189, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.65e-08, 310, 0], 'false,false,false': [0.0, 20, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.452, 204, 280], 'true,false': [1.335, 5, 3], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 403, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.453, 204, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 365, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.297, 190, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.36e-09, 381, 0]}]
{'': [0.24082437673130494, 1.8760988009708529e-16], 'false': [nan, 1.8760988009708529e-16]}
{'': [0.24710383308887326, -1.220946075598555e-16], 'true': [0.247455947983993, 0.2433057851239678], 'false': [nan, -1.220946075598555e-16], 'false,false': [nan, -1.220946075598555e-16], 'false,false,false': [-1.163090787702545e-16, -1.586032892321652e-17]}
{'': [0.2460140529692456, -2.3190037067888386e-17], 'false': [nan, -2.3190037067888386e-17], 'false,false': [nan, -2.3190037067888386e-17]}
{'': [0.24293329569401748, 5.4127216713027023e-17], 'true': [0.10506617420744807, 0.13272419336184121], 'false': [nan, 5.4127216713027023e-17], 'false,false': [nan, 5.4127216713027023e-17], 'false,false,false': [-4.3428282351267954e-17, 1.0092936587501423e-17]}
{'': [0.19006571761136515, 7.1889114910454e-17], 'true': [0.1832475146312691, 0.20543209876543245], 'false': [nan, 7.1889114910454e-17]}
{'': [0.1895008025088501, 3.836372755249232e-17], 'true': [0.1895008025088501, nan], 'true,true': [0.18913305921529514, 0.22016316435316233], 'false': [nan, 3.836372755249232e-17], 'false,false': [3.9650822308041306e-17, 1.4481169886415085e-17]}
{'': [0.18230896859212384, 1.2111523905001707e-17], 'true': [0.18230896859212384, nan], 'false': [nan, 1.2111523905001707e-17], 'false,false': [4.2976375146780255e-18, -6.938893903907229e-19]}
{'': [0.1855468749201374, -9.917625033872366e-18], 'true': [0.1845737182253083, 0.22294288062956932], 'false': [nan, -9.917625033872366e-18], 'false,false': [nan, -9.917625033872366e-18]}
{'': [0.18347494072383524, -1.0098466963713753e-16], 'true': [0.18347494072383524, nan], 'false': [nan, -1.0098466963713753e-16], 'false,false': [nan, -1.0098466963713753e-16]}
{'': [0.18271663100288574, 8.858472427455317e-17], 'true': [0.18271663100288574, nan], 'false': [nan, 8.858472427455317e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 23.893474817276
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(D, A), interaction(F, D) )
%   | | | then return 0.8581489350995124;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | | else return 0.38756069980539465;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.1418510649004877;  // std dev = 2.98e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0.5304178426625363;  // std dev = 5.120, 119.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=80 */
%   | else if ( enzyme(A, G), complex(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995121;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.3534760379032474;  // std dev = 7.314, 214.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=106 */
%   else return -0.14185106490048746;  // std dev = 2.56e-07, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), complex(D, E) )
%   | | then return 0.7383010699300554;  // std dev = 0.145, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else if ( phenotype(A, F), location(A, G) )
%   | | | then return 0.4434493059405534;  // std dev = 1.338, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.7306002848540785;  // std dev = 0.078, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5810324082227329;  // std dev = 2.133, 36.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=30 */
%   | | | else return 0.2119870591156893;  // std dev = 5.509, 134.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=56 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.31014204106257753;  // std dev = 3.389, 53.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=27 */
%   | | | else return 0.4001171202777227;  // std dev = 7.082, 214.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=128 */
%   else if ( interaction(M, A) )
%   | then return -0.12544463852839216;  // std dev = 0.000, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
%   | else return -0.1254446385283915;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( interaction(E, E) )
%   | | | then return 0.5758749969970732;  // std dev = 0.149, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.2990156723381514;  // std dev = 1.397, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.6186525078401532;  // std dev = 0.081, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7153509152160867;  // std dev = 0.073, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(A, A) )
%   | | then if ( location(A, G) )
%   | | | then return -0.16408223018717258;  // std dev = 0.043, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.257769302718885;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, H), complex(A, I) )
%   | | | then return 0.1907287274841895;  // std dev = 4.732, 105.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=49 */
%   | | | else return 0.30586917398427915;  // std dev = 8.678, 331.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=193 */
%   else return -0.11231637819360657;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A), location(A, G) )
%   | | | then return 0.4435874261298422;  // std dev = 0.086, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5131354513733162;  // std dev = 0.147, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.24108407906774137;  // std dev = 0.363, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.18243391808777812;  // std dev = 4.760, 105.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=55 */
%   | else if ( location(A, H), phenotype(A, I) )
%   | | then if ( location(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.2846858059640912;  // std dev = 5.740, 162.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=102 */
%   | | | else return -0.31570074415297533;  // std dev = 0.207, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.44091196328661525;  // std dev = 0.923, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.2759344198853483;  // std dev = 5.831, 153.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=93 */
%   else return -0.101596329487836;  // std dev = 1.00e-08, 388.000 (wgt'ed) examples reached here.  /* #neg=388 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), phenotype(D, F) )
%   | | then if ( complex(D, E) )
%   | | | then return 0.38798233806059834;  // std dev = 0.284, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.16455540304077243;  // std dev = 0.709, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.361156013276164;  // std dev = 0.141, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.43513019306631373;  // std dev = 0.155, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then if ( interaction(H, H), phenotype(H, I) )
%   | | | then return -0.021427944333714883;  // std dev = 1.391, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return 0.09022633888898524;  // std dev = 3.032, 69.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=31 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.39399528175896276;  // std dev = 1.018, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.16243374718368644;  // std dev = 9.069, 356.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=191 */
%   else return -0.09269127618926076;  // std dev = 8.54e-09, 384.000 (wgt'ed) examples reached here.  /* #neg=384 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(A, E) )
%   | then if ( interaction(F, A), complex(F, E) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.30499620285857676;  // std dev = 0.304, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.028526294326647095;  // std dev = 2.396, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | | else if ( complex(D, G), location(A, H) )
%   | | | then return 0.2870225971200061;  // std dev = 2.855, 52.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=38 */
%   | | | else return 0.5700957943352115;  // std dev = 0.084, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.2765337903508701;  // std dev = 0.067, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.162830066391333;  // std dev = 0.131, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.12374352221014741;  // std dev = 6.472, 200.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=112 */
%   | | | else return 0.1674707120760985;  // std dev = 5.621, 147.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=89 */
%   else return -0.08518475138839678;  // std dev = 6.32e-09, 383.000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.23096877205331368;  // std dev = 0.107, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.3344191976794269;  // std dev = 0.238, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( phenotype(D, G), complex(A, H) )
%   | | | then return 0.14104925902884352;  // std dev = 2.134, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | | | else return -0.006389532589425724;  // std dev = 4.273, 95.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=39 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4331282545119654;  // std dev = 1.012, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return -0.39493974511687907;  // std dev = 0.849, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else if ( phenotype(A, K), location(A, L) )
%   | | | then return 0.23166107710175046;  // std dev = 3.414, 61.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=43 */
%   | | | else return 0.12163691458275669;  // std dev = 5.275, 123.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=73 */
%   else return -0.07877675473109141;  // std dev = 5.67e-09, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(D, D) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.14820931577059493;  // std dev = 0.057, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.19759519685246407;  // std dev = 0.066, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return -0.2025113720306381;  // std dev = 1.262, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.013043480601250315;  // std dev = 2.886, 85.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=37 */
%   | else if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( interaction(A, H), phenotype(A, I) )
%   | | | then return 0.031230130696351572;  // std dev = 1.819, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.2094197606694202;  // std dev = 3.381, 58.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=41 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.126852329554091;  // std dev = 3.326, 106.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=69 */
%   | | | else return 0.07108918390762282;  // std dev = 6.592, 184.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=107 */
%   else return -0.07324622576333721;  // std dev = 9.31e-10, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), phenotype(D, E) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.1641435126245708;  // std dev = 0.194, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.358641905612292;  // std dev = 0.948, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.17317484567022176;  // std dev = 0.110, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.2388916025762839;  // std dev = 0.196, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.08325328661690964;  // std dev = 8.345, 383.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=230 */
%   | | | else return -0.39044360778482706;  // std dev = 0.950, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return -0.19941240031942128;  // std dev = 1.945, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return 0.04865147795761853;  // std dev = 1.468, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else return -0.06842697784420322;  // std dev = 0.000, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), interaction(A, D) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.12193521056131774;  // std dev = 0.121, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.14071847688948244;  // std dev = 0.657, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(D, D), enzyme(A, F) )
%   | | | then return 0.1382892819161872;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.191889160246842;  // std dev = 0.224, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( complex(A, G), interaction(H, A) )
%   | | then if ( complex(H, G), phenotype(H, I) )
%   | | | then return -0.10438331331935824;  // std dev = 1.957, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return 0.023278580322366904;  // std dev = 4.054, 135.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=70 */
%   | | else if ( enzyme(A, J), location(A, K) )
%   | | | then return 0.11102601765331425;  // std dev = 3.845, 86.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=53 */
%   | | | else return 0.02985839629044772;  // std dev = 6.445, 197.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=108 */
%   else return -0.06419184008202587;  // std dev = 7.68e-09, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */
Inference time using transfer learning 3.290505886077881
Refined model CLL: -0.244733


******************************************
Best model found
******************************************
Results 

CLL : -0.253233 

AUC ROC : 0.951258 

AUC PR : 0.290242 

Precision : 0.0481 

Recall : 0.94186 

F1 : 0.091525 

Total Learning Time : 23.893474817276 

Total Inference Time : 19.85266661643982 

Total revision time: 81.88367295265198
Best scored revision CLL: -0.244733


Results 

CLL : -0.253233 

AUC ROC : 0.951258 

AUC PR : 0.290242 

Precision : 0.0481 

Recall : 0.94186 

F1 : 0.091525 

Total Learning Time : 81.89315128326416 

Total Inference Time : 19.85266661643982 

Run: 4

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 10.783451318740845
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.43720437657794736;  // std dev = 0.494, 487.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048754;  // std dev = 1.22e-08, 352.000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.3946692825598146;  // std dev = 7.889, 259.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=155 */
%   | else return 0.3389487268392588;  // std dev = 7.621, 234.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=127 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1254446385283921;  // std dev = 0.000, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */
%   | | | else return -0.1254446385283916;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3064156803337897;  // std dev = 0.494, 489.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360658;  // std dev = 0.000, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6111151633679436;  // std dev = 3.637, 254.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=240 */
%   | else return -0.14280088591519996;  // std dev = 5.785, 219.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783652;  // std dev = 0.000, 180.000 (wgt'ed) examples reached here.  /* #neg=180 */
%   | | | else return -0.10159632948783645;  // std dev = 0.000, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.20265740372948562;  // std dev = 7.134, 259.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=155 */
%   | else return 0.16478493463812874;  // std dev = 6.234, 223.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=127 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926065;  // std dev = 9.31e-09, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.19159334113901416;  // std dev = 8.104, 369.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=237 */
%   | | else return 0.05460187333968914;  // std dev = 4.088, 91.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 7.30e-08, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
%   | | else return -0.08518475138839678;  // std dev = 6.99e-08, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07411068453820673;  // std dev = 0.432, 510.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109147;  // std dev = 7.74e-08, 195.000 (wgt'ed) examples reached here.  /* #neg=195 */
%   | | else return -0.07877675473109148;  // std dev = 8.30e-08, 171.000 (wgt'ed) examples reached here.  /* #neg=171 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.07868419255189443;  // std dev = 8.665, 406.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=237 */
%   | else return 0.041408373684231344;  // std dev = 4.001, 87.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=45 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333721;  // std dev = 1.61e-09, 394.000 (wgt'ed) examples reached here.  /* #neg=394 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.03913071127065255;  // std dev = 9.750, 509.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420324;  // std dev = 0.000, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04826731383090833;  // std dev = 9.498, 491.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202568;  // std dev = 9.22e-09, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
Inference time using transfer learning 6.620993137359619
Parameter learned model CLL:-0.26573 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.494, 205, 282], 'false,true': [0.0, 0, 0], 'false,false': [1.22e-08, 352, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [7.889, 104, 155], 'true,false': [7.621, 107, 127], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 296, 0], 'false,false,false,false': [0.0, 58, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.494, 207, 282], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 335, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [3.637, 14, 240], 'true,false': [5.785, 177, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 180, 0], 'false,false,false,false': [0.0, 148, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [7.134, 104, 155], 'true,false': [6.234, 96, 127], 'false,true': [0.0, 0, 0], 'false,false': [9.31e-09, 371, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [8.104, 132, 237], 'true,true,false': [4.088, 46, 45], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.3e-08, 174, 0], 'false,false,false': [6.99e-08, 165, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.432, 228, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.74e-08, 195, 0], 'false,false,false': [8.3e-08, 171, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.665, 169, 237], 'true,false': [4.001, 42, 45], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [1.61e-09, 394, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.75, 227, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 364, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.498, 209, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.22e-09, 371, 0]}]
{'': [0.24375023717265198, 1.4887081466564598e-16], 'false': [nan, 1.4887081466564598e-16]}
{'': [0.2448148315771783, -1.1792199357600533e-16], 'true': [0.24030649513274588, 0.24817371612242997], 'false': [nan, -1.1792199357600533e-16], 'false,false': [nan, -1.1792199357600533e-16], 'false,false,false': [-1.0802169969325848e-16, -4.0197730201945323e-17]}
{'': [0.24410295520306452, -3.7117904106870906e-17], 'false': [nan, -3.7117904106870906e-17], 'false,false': [nan, -3.7117904106870906e-17]}
{'': [0.24003557728414063, -1.624716621402668e-17], 'true': [0.052063800593026295, 0.1528245943402562], 'false': [nan, -1.624716621402668e-17], 'false,false': [nan, -1.624716621402668e-17], 'false,false,false': [-8.388351741612294e-17, -5.8511754000515e-17]}
{'': [0.18656742300386964, 8.498742290931118e-17], 'true': [0.19648839808799082, 0.17427412960831884], 'false': [nan, 8.498742290931118e-17]}
{'': [0.18206620173415708, 3.929993007522678e-17], 'true': [0.18206620173415708, nan], 'true,true': [0.17797021124529264, 0.18362109122037798], 'false': [nan, 3.929993007522678e-17], 'false,false': [3.062684205862501e-17, 2.960594732333751e-17]}
{'': [0.18631540222343856, 2.3053811440303798e-17], 'true': [0.18631540222343856, nan], 'false': [nan, 2.3053811440303798e-17], 'false,false': [3.0744637605004337e-17, 4.025370030804661e-17]}
{'': [0.18496022500258982, 2.254259948477475e-18], 'true': [0.1849249200217293, 0.18398069843807927], 'false': [nan, 2.254259948477475e-18], 'false,false': [nan, 2.254259948477475e-18]}
{'': [0.18675753357429453, -1.0065208739733562e-16], 'true': [0.18675753357429453, nan], 'false': [nan, -1.0065208739733562e-16], 'false,false': [nan, -1.0065208739733562e-16]}
{'': [0.18371216329929776, 8.438891993107659e-17], 'true': [0.18371216329929776, nan], 'false': [nan, 8.438891993107659e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 18.356226682662964
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995118;  // std dev = 1.46e-07, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( enzyme(D, F), phenotype(D, G) )
%   | | | then return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.7528857772047755;  // std dev = 1.338, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(H, I), phenotype(H, J) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( interaction(A, K), interaction(K, A) )
%   | | | then return 0.25208832903890505;  // std dev = 3.970, 66.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=26 */
%   | | | else return 0.4072818830763893;  // std dev = 9.256, 346.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=190 */
%   else return -0.1418510649004874;  // std dev = 2.83e-07, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(D, E) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.7194734122109543;  // std dev = 5.96e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.32362280293530543;  // std dev = 1.084, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.7455901400415512;  // std dev = 0.143, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( interaction(F, A), location(A, G) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.21393138264092473;  // std dev = 4.043, 69.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=27 */
%   | | | else return 0.3661369974754483;  // std dev = 8.345, 288.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=164 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.43738945687857866;  // std dev = 2.256, 22.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   | | | else return 0.5551342983611864;  // std dev = 2.744, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   else if ( interaction(I, A) )
%   | then return -0.1254446385283921;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( location(A, E), location(D, E) )
%   | | then if ( complex(D, F) )
%   | | | then return 0.6045801465277287;  // std dev = 0.317, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return 0.4842174133359291;  // std dev = 1.224, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | else return 0.2777654080444269;  // std dev = 1.146, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( interaction(H, A), interaction(G, H) )
%   | | | then return 0.06893242579082416;  // std dev = 2.983, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | | else return 0.2703499585468155;  // std dev = 3.653, 55.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=31 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.17336036894959048;  // std dev = 3.604, 56.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=25 */
%   | | | else return 0.2926941976904255;  // std dev = 8.523, 298.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=167 */
%   else if ( interaction(K, A) )
%   | then return -0.11231637819360664;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #neg=327 */
%   | else return -0.11231637819360632;  // std dev = 4.37e-09, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(A, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(D, F), interaction(A, D) )
%   | | | then return 0.6041471514353184;  // std dev = 1.157, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return 0.28108455049541303;  // std dev = 1.821, 21.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.07322904814452476;  // std dev = 4.664, 108.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=42 */
%   | | | else return 0.2850189337687494;  // std dev = 6.784, 198.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=122 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5946163477345154;  // std dev = 0.960, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return -0.3478502364908228;  // std dev = 0.086, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5260167646158954;  // std dev = 0.131, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.19034033758558683;  // std dev = 3.612, 53.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=29 */
%   else return -0.10159632948783612;  // std dev = 8.64e-09, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.29820955240400865;  // std dev = 0.216, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.10269214414174821;  // std dev = 0.888, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, G), interaction(H, D) )
%   | | | then return 0.4385349620880285;  // std dev = 0.108, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.5015672240126955;  // std dev = 0.137, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( enzyme(I, J), complex(I, K) )
%   | | | then return 0.0541455608973066;  // std dev = 0.854, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.44996697953791;  // std dev = 0.244, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( complex(A, L), interaction(A, M) )
%   | | | then return 0.052757166535992356;  // std dev = 4.631, 105.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=40 */
%   | | | else return 0.18385161529711802;  // std dev = 8.571, 312.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=176 */
%   else return -0.09269127618926058;  // std dev = 9.94e-09, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), location(A, E) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.21609801018556005;  // std dev = 0.006, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.25763846148603253;  // std dev = 0.097, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( enzyme(D, G) )
%   | | | then return 0.406967121393725;  // std dev = 0.132, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.33417552479473756;  // std dev = 0.202, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(H, I), enzyme(A, J) )
%   | | | then return 0.43235585906608925;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.34170879022973644;  // std dev = 0.117, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( phenotype(A, K), location(A, L) )
%   | | | then return 0.1546973069766605;  // std dev = 7.046, 216.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=121 */
%   | | | else return 0.07909019218545134;  // std dev = 6.731, 194.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=95 */
%   else return -0.08518475138839678;  // std dev = 6.38e-09, 381.000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A), interaction(A, G) )
%   | | | then return 0.09260895026055305;  // std dev = 1.202, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.3762006983772841;  // std dev = 1.839, 38.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   | | else if ( complex(A, H), interaction(I, D) )
%   | | | then return -0.06365790196824495;  // std dev = 4.429, 104.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=38 */
%   | | | else return 0.04256245258015813;  // std dev = 5.712, 138.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=69 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( complex(J, K), location(A, L) )
%   | | | then return -0.08955013008306059;  // std dev = 2.892, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | | | else return 0.15872864761115651;  // std dev = 2.140, 25.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=16 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.14014819023914307;  // std dev = 3.964, 77.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=48 */
%   | | | else return 0.23809721260016967;  // std dev = 3.373, 62.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=45 */
%   else return -0.07877675473109144;  // std dev = 6.04e-09, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), complex(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.1981426662052407;  // std dev = 0.185, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.517480255318861;  // std dev = 0.622, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.3126214496547148;  // std dev = 0.115, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.47446874466173766;  // std dev = 0.089, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.010887712564945659;  // std dev = 1.272, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return 0.21964814995599735;  // std dev = 0.289, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.2636049595755695;  // std dev = 0.048, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.08510876762612647;  // std dev = 8.818, 347.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=199 */
%   else return -0.07324622576333721;  // std dev = 1.32e-09, 366.000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E), interaction(A, A) )
%   | | then return -0.04755839108080859;  // std dev = 0.785, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.16272912002590093;  // std dev = 0.180, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return 0.2461928343961708;  // std dev = 0.149, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.13266592200272184;  // std dev = 8.234, 356.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=225 */
%   | | | else return -0.4308903388993821;  // std dev = 0.872, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.2735771040854427;  // std dev = 0.846, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.2098751567586379;  // std dev = 1.921, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   else return -0.0684269778442032;  // std dev = 0.000, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), enzyme(A, F) )
%   | | then if ( phenotype(A, G), interaction(H, D) )
%   | | | then return -0.1230469371130604;  // std dev = 0.815, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.15136175945557748;  // std dev = 0.134, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( complex(D, I), interaction(D, D) )
%   | | | then return 0.1267820029982364;  // std dev = 0.035, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.18613510220706386;  // std dev = 0.165, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( interaction(A, J), enzyme(A, K) )
%   | | then if ( interaction(J, L), complex(L, M) )
%   | | | then return 0.06342324318109872;  // std dev = 2.783, 51.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=29 */
%   | | | else return 0.24719851769242523;  // std dev = 1.286, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | else if ( interaction(N, A), interaction(N, N) )
%   | | | then return -0.05139238894980128;  // std dev = 3.683, 68.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=28 */
%   | | | else return 0.01986061122262888;  // std dev = 7.919, 306.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=166 */
%   else return -0.06419184008202573;  // std dev = 8.84e-09, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
Inference time using transfer learning 4.497775316238403
Refined model CLL: -0.26144


******************************************
Best model found
******************************************
Results 

CLL : -0.254097 

AUC ROC : 0.941749 

AUC PR : 0.144908 

Precision : 0.051231 

Recall : 0.885057 

F1 : 0.096855 

Total Learning Time : 18.356226682662964 

Total Inference Time : 14.79443073272705 

Total revision time: 70.03324604034424
Best scored revision CLL: -0.26144


Results 

CLL : -0.254097 

AUC ROC : 0.941749 

AUC PR : 0.144908 

Precision : 0.051231 

Recall : 0.885057 

F1 : 0.096855 

Total Learning Time : 70.04267764091492 

Total Inference Time : 14.79443073272705 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos examples: 104
Target test neg examples: 16320

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 10.422789812088013
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4354909830297912;  // std dev = 0.494, 459.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048746;  // std dev = 1.34e-08, 370.000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.3596228670138411;  // std dev = 9.870, 396.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=223 */
%   | else return 0.3880408496571726;  // std dev = 4.142, 71.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839205;  // std dev = 0.000, 273.000 (wgt'ed) examples reached here.  /* #neg=273 */
%   | | | else return -0.1254446385283916;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.30720243674292846;  // std dev = 0.494, 460.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360653;  // std dev = 0.000, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5891616249624703;  // std dev = 4.184, 242.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=223 */
%   | else return -0.13349091040496466;  // std dev = 5.763, 209.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783663;  // std dev = 0.000, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
%   | | | else return -0.10159632948783617;  // std dev = 4.71e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.18585166961608537;  // std dev = 8.061, 373.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=223 */
%   | else return 0.2659063100977423;  // std dev = 4.223, 73.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926064;  // std dev = 9.59e-09, 369.000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.1437479268947829;  // std dev = 8.995, 443.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=259 */
%   | | else return 0.10027213078124814;  // std dev = 1.772, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839678;  // std dev = 1.01e-07, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
%   | | else return -0.08518475138839683;  // std dev = 3.65e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.08838895352547185;  // std dev = 0.431, 475.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109144;  // std dev = 5.37e-08, 268.000 (wgt'ed) examples reached here.  /* #neg=268 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.09900681151282352;  // std dev = 8.830, 433.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=259 */
%   | else return 0.25863253462284114;  // std dev = 1.390, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333714;  // std dev = 3.36e-09, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05894459169493947;  // std dev = 9.221, 456.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0684269778442033;  // std dev = 0.000, 386.000 (wgt'ed) examples reached here.  /* #neg=386 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04020252832414139;  // std dev = 9.250, 462.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202597;  // std dev = 6.59e-09, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
Inference time using transfer learning 4.227474689483643
Parameter learned model CLL:-0.272705 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.494, 194, 265], 'false,true': [0.0, 0, 0], 'false,false': [1.34e-08, 370, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [9.87, 173, 223], 'true,false': [4.142, 29, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 273, 0], 'false,false,false,false': [0.0, 59, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.494, 195, 265], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 344, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [4.184, 19, 223], 'true,false': [5.763, 167, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 285, 0], 'false,false,false,false': [4.71e-08, 68, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [8.061, 150, 223], 'true,false': [4.223, 31, 42], 'false,true': [0.0, 0, 0], 'false,false': [9.59e-09, 369, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [8.995, 184, 259], 'true,true,false': [1.772, 7, 6], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.01e-07, 279, 0], 'false,false,false': [3.65e-08, 60, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.431, 210, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.37e-08, 268, 0], 'false,false,false': [0.0, 49, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.83, 174, 259], 'true,false': [1.39, 3, 6], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.36e-09, 359, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.221, 191, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 386, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.25, 197, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.59e-09, 298, 0]}]
{'': [0.24401820762195292, 1.848371305862423e-16], 'false': [nan, 1.848371305862423e-16]}
{'': [0.2454502519613498, -1.1503515676838971e-16], 'true': [0.24601443730231234, 0.24161872644316504], 'false': [nan, -1.1503515676838971e-16], 'false,false': [nan, -1.1503515676838971e-16], 'false,false,false': [-1.0085542494763327e-16, -3.95164127408954e-17]}
{'': [0.24423040617243938, -3.356488213983031e-17], 'false': [nan, -3.356488213983031e-17], 'false,false': [nan, -3.356488213983031e-17]}
{'': [0.242310035613808, 3.7741292621818353e-17], 'true': [0.0723482002595443, 0.15888875240025627], 'false': [nan, 3.7741292621818353e-17], 'false,false': [nan, 3.7741292621818353e-17], 'false,false,false': [-5.4537271385095406e-17, 3.2653618371328135e-17]}
{'': [0.1865782045329062, 9.026203452237045e-17], 'true': [0.1742278788585949, 0.24432351285419351], 'false': [nan, 9.026203452237045e-17]}
{'': [0.184386239463075, 3.929993007522678e-17], 'true': [0.184386239463075, nan], 'true,true': [0.18265377402469685, 0.24158707180078962], 'false': [nan, 3.929993007522678e-17], 'false,false': [3.660950475466466e-17, 2.2204460492503132e-17]}
{'': [0.18571450621668867, 2.1714141175633977e-17], 'true': [0.18571450621668867, nan], 'false': [nan, 2.1714141175633977e-17], 'false,false': [1.0770820388154504e-17, 0.0]}
{'': [0.18128561409799232, 1.2988681625141107e-17], 'true': [0.18007386146465948, 0.21462283929452067], 'false': [nan, 1.2988681625141107e-17], 'false,false': [nan, 1.2988681625141107e-17]}
{'': [0.1864573384645672, -1.1332328282443309e-16], 'true': [0.1864573384645672, nan], 'false': [nan, -1.1332328282443309e-16], 'false,false': [nan, -1.1332328282443309e-16]}
{'': [0.18519830344545535, 4.396185131066056e-17], 'true': [0.18519830344545535, nan], 'false': [nan, 4.396185131066056e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 17.579554557800293
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, G) )
%   | | | then return 0.858148935099512;  // std dev = 1.03e-07, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.3555311340523889;  // std dev = 6.910, 191.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=95 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995117;  // std dev = 2.46e-07, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return -0.14185106490048768;  // std dev = 3.94e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.7748156017661789;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.454175425165738;  // std dev = 6.030, 151.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=90 */
%   else return -0.1418510649004878;  // std dev = 1.15e-07, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(D, A), complex(D, F) )
%   | | | then return 0.6138586558685364;  // std dev = 0.790, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.7604248035761487;  // std dev = 0.169, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7146197322394651;  // std dev = 0.876, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.275717461593109;  // std dev = 5.595, 137.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=65 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( location(H, J) )
%   | | | then return 0.3923415518932724;  // std dev = 5.815, 144.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=86 */
%   | | | else return 0.1463896385555819;  // std dev = 1.273, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return 0.45656502471887833;  // std dev = 1.616, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.29734229295212644;  // std dev = 5.280, 117.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=59 */
%   else return -0.1254446385283921;  // std dev = 0.000, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then if ( complex(E, F), phenotype(D, G) )
%   | | | then return 0.5794424208834785;  // std dev = 0.098, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.6876132145133922;  // std dev = 0.201, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(H, D), enzyme(H, I) )
%   | | | then return 0.0792369867375868;  // std dev = 1.052, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.5006377575103298;  // std dev = 1.264, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( interaction(J, A), interaction(A, J) )
%   | | then if ( interaction(J, J), location(J, K) )
%   | | | then return -0.057639100109351325;  // std dev = 1.762, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | | else return 0.19509719954931246;  // std dev = 2.511, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.2070189781170664;  // std dev = 4.056, 66.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=31 */
%   | | | else return 0.3309711796746644;  // std dev = 8.002, 290.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=173 */
%   else return -0.11231637819360667;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E) )
%   | | then if ( interaction(A, D), location(A, F) )
%   | | | then return 0.49179870451884344;  // std dev = 0.134, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.5926330216464615;  // std dev = 0.141, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( location(D, G) )
%   | | | then return 0.43507062852413136;  // std dev = 1.108, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | | | else return 0.17605065958527297;  // std dev = 0.795, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), enzyme(A, J) )
%   | | | then return 0.22168423151193814;  // std dev = 0.632, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5468495609090926;  // std dev = 0.244, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( phenotype(A, K), enzyme(A, L) )
%   | | | then return 0.3284752533743122;  // std dev = 3.696, 67.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=44 */
%   | | | else return 0.18120964820012753;  // std dev = 8.651, 334.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=165 */
%   else return -0.10159632948783638;  // std dev = 2.95e-09, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D) )
%   | | then if ( interaction(D, E), complex(E, F) )
%   | | | then return 0.31968631570456013;  // std dev = 0.618, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.42143773868521694;  // std dev = 0.338, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return 0.22907547586382276;  // std dev = 0.962, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, G), interaction(H, A) )
%   | | then if ( enzyme(G, I), interaction(H, H) )
%   | | | then return -0.08622655615296619;  // std dev = 1.650, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.10594873756570398;  // std dev = 5.696, 151.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=72 */
%   | | else if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.10600951092930055;  // std dev = 3.382, 54.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=28 */
%   | | | else return 0.22741785589544766;  // std dev = 6.620, 204.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=121 */
%   else return -0.09269127618926043;  // std dev = 1.83e-07, 313.000 (wgt'ed) examples reached here.  /* #neg=313 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(D, F), phenotype(E, F) )
%   | | | then return 0.2600295210180634;  // std dev = 0.070, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.3183974830752;  // std dev = 0.136, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.45950889288616603;  // std dev = 0.098, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.35515502603899723;  // std dev = 0.150, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( enzyme(I, J), enzyme(A, K) )
%   | | | then return -0.1767867739956214;  // std dev = 1.251, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.049072604585054434;  // std dev = 4.034, 76.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=32 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.10171452313285645;  // std dev = 5.175, 138.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=71 */
%   | | | else return 0.15825141134448445;  // std dev = 6.891, 203.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=119 */
%   else return -0.08518475138839678;  // std dev = 6.11e-09, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F), phenotype(F, G) )
%   | | | then return 0.3173421758163396;  // std dev = 3.144, 88.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=76 */
%   | | | else return 0.49548907238042555;  // std dev = 1.126, 59.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=58 */
%   | | else if ( complex(A, H), interaction(A, I) )
%   | | | then return -0.2733507594560762;  // std dev = 0.455, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.43636654881232767;  // std dev = 0.454, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.30037433006538233;  // std dev = 0.226, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.034666372220445836;  // std dev = 2.775, 43.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=22 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.08961734949021492;  // std dev = 2.651, 37.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=20 */
%   | | | else return 0.17697635539304246;  // std dev = 5.369, 131.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=83 */
%   else return -0.07877675473109143;  // std dev = 1.61e-09, 317.000 (wgt'ed) examples reached here.  /* #neg=317 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, A) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.19828133382750532;  // std dev = 0.174, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.21653141026558637;  // std dev = 0.261, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( enzyme(A, E) )
%   | | | then return 0.40008701732149515;  // std dev = 1.202, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.16162210655939405;  // std dev = 2.585, 36.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=22 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.18670419337988678;  // std dev = 0.042, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2623312103954055;  // std dev = 0.176, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return 0.01375618266816704;  // std dev = 4.447, 121.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=56 */
%   | | | else return 0.07813467479500752;  // std dev = 6.732, 234.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=136 */
%   else return -0.07324622576333706;  // std dev = 8.30e-08, 329.000 (wgt'ed) examples reached here.  /* #neg=329 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(D, F), interaction(D, G) )
%   | | | then return 0.14203721632758906;  // std dev = 0.036, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.1902582287411058;  // std dev = 0.096, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( complex(A, H), phenotype(D, I) )
%   | | | then return 0.21919921473592913;  // std dev = 0.072, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.26561423366226034;  // std dev = 0.135, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( enzyme(A, K), interaction(L, A) )
%   | | | then return -0.18585235352740526;  // std dev = 1.118, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.02960451900612485;  // std dev = 3.370, 67.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=33 */
%   | | else if ( enzyme(A, M), interaction(N, A) )
%   | | | then return 0.16514187447948145;  // std dev = 3.848, 91.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=64 */
%   | | | else return 0.05416100118601525;  // std dev = 6.555, 224.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=125 */
%   else return -0.06842697784420312;  // std dev = 0.000, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), location(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.15122420684083904;  // std dev = 0.096, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.36682217071091294;  // std dev = 1.496, 88.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=85 */
%   | | else if ( interaction(A, G), enzyme(G, D) )
%   | | | then return -0.3188760465314203;  // std dev = 0.310, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.48151498647863644;  // std dev = 0.795, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else if ( interaction(A, H), phenotype(A, I) )
%   | | then if ( location(H, J), location(A, J) )
%   | | | then return 0.1489901790722046;  // std dev = 2.270, 57.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=41 */
%   | | | else return -0.04527147644393987;  // std dev = 1.288, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.1804573767696715;  // std dev = 2.174, 34.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
%   | | | else return 0.04414371864862626;  // std dev = 5.702, 168.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=97 */
%   else return -0.0641918400820259;  // std dev = 1.28e-07, 312.000 (wgt'ed) examples reached here.  /* #neg=312 */
Inference time using transfer learning 4.637599468231201
Refined model CLL: -0.235678


******************************************
Best model found
******************************************
Results 

CLL : -0.237273 

AUC ROC : 0.981246 

AUC PR : 0.232517 

Precision : 0.066488 

Recall : 0.951923 

F1 : 0.124294 

Total Learning Time : 17.579554557800293 

Total Inference Time : 10.668994426727295 

Total revision time: 60.15835094451904
Best scored revision CLL: -0.235678


Results 

CLL : -0.237273 

AUC ROC : 0.981246 

AUC PR : 0.232517 

Precision : 0.066488 

Recall : 0.951923 

F1 : 0.124294 

Total Learning Time : 60.16778254508972 

Total Inference Time : 10.668994426727295 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos examples: 92
Target test neg examples: 12594

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 10.584693908691406
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4066637865846564;  // std dev = 0.498, 505.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1418510649004875;  // std dev = 1.30e-08, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.39546393918146405;  // std dev = 10.111, 424.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=252 */
%   | else return 0.31132839817260516;  // std dev = 3.499, 49.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=25 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839216;  // std dev = 0.000, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.32387318853331937;  // std dev = 0.492, 468.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360632;  // std dev = 0.000, 378.000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5528574061856408;  // std dev = 5.254, 283.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=252 */
%   | else return -0.1962007534589544;  // std dev = 4.724, 181.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=25 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783665;  // std dev = 0.000, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.1659056588936615;  // std dev = 8.907, 439.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=252 */
%   | else return 0.3469862216334268;  // std dev = 3.062, 40.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=25 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926082;  // std dev = 7.90e-09, 392.000 (wgt'ed) examples reached here.  /* #neg=392 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.15786813805449723;  // std dev = 8.977, 451.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=271 */
%   | | else return 0.25605718690871393;  // std dev = 1.515, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839678;  // std dev = 1.13e-07, 330.000 (wgt'ed) examples reached here.  /* #neg=330 */
%   | | else return -0.08518475138839689;  // std dev = 7.45e-09, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09578692828612853;  // std dev = 0.429, 484.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109143;  // std dev = 4.21e-08, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.08178050390278739;  // std dev = 9.091, 467.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=271 */
%   | else return 0.23546002914718933;  // std dev = 1.392, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0732462257633372;  // std dev = 1.32e-09, 382.000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.044753567672509986;  // std dev = 9.563, 488.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420307;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #neg=317 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05428421058478258;  // std dev = 9.276, 470.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202569;  // std dev = 9.08e-09, 366.000 (wgt'ed) examples reached here.  /* #neg=366 */
Inference time using transfer learning 2.8604140281677246
Parameter learned model CLL:-0.272431 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.498, 228, 277], 'false,true': [0.0, 0, 0], 'false,false': [1.3e-08, 363, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [10.111, 172, 252], 'true,false': [3.499, 24, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 336, 0], 'false,false,false,false': [0.0, 30, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.492, 191, 277], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 378, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [5.254, 31, 252], 'true,false': [4.724, 156, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 311, 0], 'false,false,false,false': [0.0, 28, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [8.907, 187, 252], 'true,false': [3.062, 15, 25], 'false,true': [0.0, 0, 0], 'false,false': [7.9e-09, 392, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [8.977, 180, 271], 'true,true,false': [1.515, 4, 6], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.13e-07, 330, 0], 'false,false,false': [7.45e-09, 32, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.429, 207, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.21e-08, 331, 0], 'false,false,false': [0.0, 27, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.091, 196, 271], 'true,false': [1.392, 3, 6], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [1.32e-09, 382, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.563, 211, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 317, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.276, 193, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.08e-09, 366, 0]}]
{'': [0.2476463091853769, 1.6882730291820563e-16], 'false': [nan, 1.6882730291820563e-16]}
{'': [0.24266858565497015, -1.2376256667952564e-16], 'true': [0.24110003559986062, 0.24989587671803526], 'false': [nan, -1.2376256667952564e-16], 'false,false': [nan, -1.2376256667952564e-16], 'false,false,false': [-1.163090787702545e-16, -9.25185853854297e-18]}
{'': [0.24171110231239534, -2.5846461948945442e-17], 'false': [nan, -2.5846461948945442e-17], 'false,false': [nan, -2.5846461948945442e-17]}
{'': [0.24108792469825754, 9.169983684219582e-18], 'true': [0.09754148509783263, 0.12331255047884453], 'false': [nan, 9.169983684219582e-18], 'false,false': [nan, 9.169983684219582e-18], 'false,false,false': [-4.8549945771389484e-17, -1.982541115402065e-18]}
{'': [0.18771729133906687, 6.230843505549347e-17], 'true': [0.1807278006732751, 0.234375], 'false': [nan, 6.230843505549347e-17]}
{'': [0.1799872315931271, 3.925650473812708e-17], 'true': [0.1799872315931271, nan], 'true,true': [0.17867696023894816, 0.22964851461014496], 'false': [nan, 3.925650473812708e-17], 'false,false': [3.902602147167217e-17, 1.734723475976807e-18]}
{'': [0.1838601330013266, 2.7290398370674238e-17], 'true': [0.1838601330013266, nan], 'false': [nan, 2.7290398370674238e-17], 'false,false': [5.3666369770400316e-18, 0.0]}
{'': [0.17812088780433907, 1.1625371985603734e-18], 'true': [0.1769577748248479, 0.21530267889546886], 'false': [nan, 1.1625371985603734e-18], 'false,false': [nan, 1.1625371985603734e-18]}
{'': [0.18738893944190813, -7.004561669559347e-17], 'true': [0.18738893944190813, nan], 'false': [nan, -7.004561669559347e-17], 'false,false': [nan, -7.004561669559347e-17]}
{'': [0.1830829734624021, 8.190169853792139e-17], 'true': [0.1830829734624021, nan], 'false': [nan, 8.190169853792139e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 19.842171907424927
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), complex(D, F) )
%   | | then if ( interaction(D, G), phenotype(D, H) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( interaction(I, A), enzyme(A, J) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4547875905616982;  // std dev = 5.352, 119.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=71 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.37960108031402995;  // std dev = 8.695, 303.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=158 */
%   else return -0.14185106490048752;  // std dev = 2.37e-07, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E), phenotype(A, F) )
%   | | then return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.7227447557564463;  // std dev = 0.086, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14574702552512644;  // std dev = 0.172, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0.3431699732683769;  // std dev = 3.954, 63.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=34 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.28086670073029363;  // std dev = 6.214, 155.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=76 */
%   | | | else return 0.3987023822191697;  // std dev = 7.101, 209.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=124 */
%   else if ( interaction(I, A) )
%   | then return -0.12544463852839216;  // std dev = 0.000, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */
%   | else return -0.1254446385283915;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), location(A, F) )
%   | | then if ( interaction(A, G), complex(G, H) )
%   | | | then return -0.010684659095304827;  // std dev = 1.110, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.6253221214807922;  // std dev = 0.129, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5621911441101696;  // std dev = 0.108, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.736191790672339;  // std dev = 0.010, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, A) )
%   | | then if ( interaction(A, J), complex(J, K) )
%   | | | then return -0.11030807771674134;  // std dev = 7.45e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.12867549957564728;  // std dev = 0.064, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.45366312905436357;  // std dev = 1.345, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return 0.30446244068686473;  // std dev = 9.721, 384.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=217 */
%   else return -0.11231637819360639;  // std dev = 0.000, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(D, E) )
%   | | then if ( recursion_proteinclass(E, B), interaction(A, D) )
%   | | | then return 0.43155064530105725;  // std dev = 0.250, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.12420468425874254;  // std dev = 1.330, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.45631123641893107;  // std dev = 0.083, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5528663869792096;  // std dev = 0.106, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(A, G), interaction(H, A) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.42748122695236657;  // std dev = 3.053, 58.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=45 */
%   | | | else return 0.049431315454275516;  // std dev = 5.184, 131.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=46 */
%   | | else if ( location(A, J) )
%   | | | then return 0.2597159618611266;  // std dev = 7.467, 233.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=137 */
%   | | | else return 0.07572994926604133;  // std dev = 1.895, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   else return -0.10159632948783646;  // std dev = 0.000, 332.000 (wgt'ed) examples reached here.  /* #neg=332 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), enzyme(A, F) )
%   | | then if ( phenotype(D, E) )
%   | | | then return 0.45023815174949144;  // std dev = 0.129, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.06136073109095627;  // std dev = 0.871, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.31993608651223227;  // std dev = 0.099, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.44881465075854754;  // std dev = 0.196, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, A) )
%   | | then if ( interaction(A, H), enzyme(H, I) )
%   | | | then return -0.23272212463223685;  // std dev = 0.293, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.11074110661082519;  // std dev = 0.038, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.2226330569822506;  // std dev = 5.723, 141.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=84 */
%   | | | else return 0.13910016385563062;  // std dev = 8.210, 284.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=150 */
%   else return -0.09269127618926068;  // std dev = 9.22e-09, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.24929865703524884;  // std dev = 0.016, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.3243730782822269;  // std dev = 0.095, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, D), interaction(D, F) )
%   | | | then return 0.4072148953807392;  // std dev = 0.059, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3169691126726566;  // std dev = 0.157, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( complex(A, G), interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3787150779306221;  // std dev = 1.745, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | | | else return 0.026827769645115858;  // std dev = 4.823, 108.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=45 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.14414299122332072;  // std dev = 7.164, 218.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=121 */
%   | | | else return 0.23265220147223045;  // std dev = 3.848, 67.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=45 */
%   else return -0.08518475138839678;  // std dev = 6.18e-09, 327.000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.20528675226793483;  // std dev = 0.012, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.28399645442123594;  // std dev = 0.111, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( phenotype(D, F), interaction(A, G) )
%   | | | then return -0.24727662016432028;  // std dev = 0.896, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.22425900889555184;  // std dev = 0.145, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( enzyme(A, H), interaction(A, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.23032907089709828;  // std dev = 1.675, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return -0.021722475600062092;  // std dev = 3.898, 67.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=27 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.152363948892232;  // std dev = 3.489, 66.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=37 */
%   | | | else return 0.09930690817018009;  // std dev = 8.118, 282.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=157 */
%   else return -0.07877675473109141;  // std dev = 5.74e-09, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, D) )
%   | | | then return 0.33000889304561676;  // std dev = 0.765, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return 0.06535198877886997;  // std dev = 1.582, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | else if ( interaction(D, G), enzyme(G, H) )
%   | | | then return -0.1603291960393483;  // std dev = 3.482, 73.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=20 */
%   | | | else return 0.047273703921027276;  // std dev = 3.601, 66.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=33 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.17257640087193235;  // std dev = 7.098, 245.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=165 */
%   | | | else return -0.4784895532082276;  // std dev = 0.138, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.05430256585233806;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3908250135077113;  // std dev = 0.950, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.07324622576333716;  // std dev = 3.09e-09, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(D, E) )
%   | then if ( interaction(D, A), complex(D, F) )
%   | | then if ( interaction(D, D), phenotype(D, G) )
%   | | | then return 0.037642709599822174;  // std dev = 1.263, 21.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | | else return -0.09914448111028014;  // std dev = 2.918, 51.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=24 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.31749249587115147;  // std dev = 0.713, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | | else return -0.006636858138938756;  // std dev = 5.867, 164.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=73 */
%   | else if ( phenotype(A, I), location(A, J) )
%   | | then if ( phenotype(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.341284110769265;  // std dev = 2.781, 78.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=69 */
%   | | | else return -0.4814603607056264;  // std dev = 0.324, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.013275583341799112;  // std dev = 2.079, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.1248079593552595;  // std dev = 4.051, 81.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=53 */
%   else return -0.06842697784420324;  // std dev = 0.000, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, E), interaction(E, F) )
%   | | | then return 0.2609787814384084;  // std dev = 1.142, 41.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   | | | else return -0.1386552156848154;  // std dev = 1.470, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return -0.17751144390738924;  // std dev = 1.945, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return 0.029185694884951503;  // std dev = 5.505, 171.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=93 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4067581501965148;  // std dev = 0.986, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.4297953944311845;  // std dev = 0.384, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.09053581342461092;  // std dev = 4.416, 105.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=67 */
%   | | | else return -0.027659546129283532;  // std dev = 3.039, 41.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=21 */
%   else return -0.06419184008202575;  // std dev = 8.59e-09, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
Inference time using transfer learning 3.1389975547790527
Refined model CLL: -0.246301


******************************************
Best model found
******************************************
Results 

CLL : -0.23559 

AUC ROC : 0.96399 

AUC PR : 0.301632 

Precision : 0.078517 

Recall : 0.782609 

F1 : 0.142716 

Total Learning Time : 19.842171907424927 

Total Inference Time : 20.103220224380493 

Total revision time: 76.27727174758911
Best scored revision CLL: -0.246301


Results 

CLL : -0.23559 

AUC ROC : 0.96399 

AUC PR : 0.301632 

Precision : 0.078517 

Recall : 0.782609 

F1 : 0.142716 

Total Learning Time : 76.28670334815979 

Total Inference Time : 20.103220224380493 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos examples: 86
Target test neg examples: 10998

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 14.225505113601685
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.43688104143897627;  // std dev = 0.494, 489.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048754;  // std dev = 1.22e-08, 352.000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.4113289041219812;  // std dev = 7.522, 239.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=147 */
%   | else return 0.35136818343203163;  // std dev = 7.779, 245.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=136 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839205;  // std dev = 0.000, 273.000 (wgt'ed) examples reached here.  /* #neg=273 */
%   | | | else return -0.1254446385283915;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.32436493054683496;  // std dev = 0.490, 474.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360642;  // std dev = 0.000, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5851181016662571;  // std dev = 4.322, 271.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=251 */
%   | else return -0.1797400108030763;  // std dev = 5.144, 196.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=32 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.1015963294878365;  // std dev = 0.000, 177.000 (wgt'ed) examples reached here.  /* #neg=177 */
%   | | | else return -0.1015963294878365;  // std dev = 0.000, 176.000 (wgt'ed) examples reached here.  /* #neg=176 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.19361804691292073;  // std dev = 6.875, 247.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=147 */
%   | else return 0.1991165704488379;  // std dev = 6.167, 221.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=136 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926065;  // std dev = 9.41e-09, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.18174173543766783;  // std dev = 8.195, 378.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=243 */
%   | | else return 0.013603799279294988;  // std dev = 4.009, 87.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=40 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 8.02e-08, 204.000 (wgt'ed) examples reached here.  /* #neg=204 */
%   | | else return -0.08518475138839678;  // std dev = 6.50e-08, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09673174114119731;  // std dev = 0.423, 485.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109147;  // std dev = 8.02e-08, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
%   | | else return -0.07877675473109147;  // std dev = 8.02e-08, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.06582420671768668;  // std dev = 8.777, 415.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=243 */
%   | else return -0.019604556569236674;  // std dev = 3.994, 90.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=40 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333728;  // std dev = 0.000, 391.000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04962126763063864;  // std dev = 9.544, 492.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420321;  // std dev = 0.000, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.0432424833223711;  // std dev = 9.415, 490.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202582;  // std dev = 8.07e-09, 333.000 (wgt'ed) examples reached here.  /* #neg=333 */
Inference time using transfer learning 3.0231947898864746
Parameter learned model CLL:-0.269627 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.494, 206, 283], 'false,true': [0.0, 0, 0], 'false,false': [1.22e-08, 352, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [7.522, 92, 147], 'true,false': [7.779, 109, 136], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 273, 0], 'false,false,false,false': [0.0, 39, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.49, 191, 283], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 362, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [4.322, 20, 251], 'true,false': [5.144, 164, 32], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 177, 0], 'false,false,false,false': [0.0, 176, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.875, 100, 147], 'true,false': [6.167, 85, 136], 'false,true': [0.0, 0, 0], 'false,false': [9.41e-09, 371, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [8.195, 135, 243], 'true,true,false': [4.009, 47, 40], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.02e-08, 204, 0], 'false,false,false': [6.5e-08, 154, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.423, 202, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.02e-08, 187, 0], 'false,false,false': [8.02e-08, 183, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.777, 172, 243], 'true,false': [3.994, 50, 40], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 391, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.544, 209, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 355, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.415, 207, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.07e-09, 333, 0]}]
{'': [0.2438012554313536, 1.4887081466564598e-16], 'false': [nan, 1.4887081466564598e-16]}
{'': [0.2428240898845693, -1.1102230246251565e-16], 'true': [0.23676056091454772, 0.24696376509787363], 'false': [nan, -1.1102230246251565e-16], 'false,false': [nan, -1.1102230246251565e-16], 'false,false,false': [-1.0085542494763327e-16, -2.2773805633336544e-17]}
{'': [0.24046122785031343, -2.944237855359531e-17], 'false': [nan, -2.944237855359531e-17], 'false,false': [nan, -2.944237855359531e-17]}
{'': [0.23913973526559068, 3.7741292621818353e-17], 'true': [0.06893732809314673, 0.13499063677815806], 'false': [nan, 3.7741292621818353e-17], 'false,false': [nan, 3.7741292621818353e-17], 'false,false,false': [-8.279629336187608e-17, -8.074349270001139e-17]}
{'': [0.18227198423198449, 8.618442886578034e-17], 'true': [0.1913787130334116, 0.17207791886433277], 'false': [nan, 8.618442886578034e-17]}
{'': [0.18327605548240453, 3.9695124902798894e-17], 'true': [0.18327605548240453, nan], 'true,true': [0.17765178832376627, 0.18473145521432824], 'false': [nan, 3.9695124902798894e-17], 'false,false': [3.1565164425617195e-17, 2.739511359464672e-17]}
{'': [0.17926632549971225, 2.5205063261760312e-17], 'true': [0.17926632549971225, nan], 'false': [nan, 2.5205063261760312e-17], 'false,false': [3.4434724827946034e-17, 3.5187396408884745e-17]}
{'': [0.1852030489019393, -6.814668181842393e-18], 'true': [0.1856202826727245, 0.17728171080842417], 'false': [nan, -6.814668181842393e-18], 'false,false': [nan, -6.814668181842393e-18]}
{'': [0.1851219172955609, -9.569809733388673e-17], 'true': [0.1851219172955609, nan], 'false': [nan, -9.569809733388673e-17], 'false,false': [nan, -9.569809733388673e-17]}
{'': [0.1808958087319068, 6.534646030826747e-17], 'true': [0.1808958087319068, nan], 'false': [nan, 6.534646030826747e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 44.244184255599976
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E) )
%   | | then return 0.8581489350995118;  // std dev = 1.46e-07, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(A, I), interaction(J, A) )
%   | | | then return 0.3294865147173479;  // std dev = 6.255, 157.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=74 */
%   | | | else return 0.4389181658687402;  // std dev = 7.956, 260.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=151 */
%   else return -0.14185106490048752;  // std dev = 2.37e-07, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), complex(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.7839872047659188;  // std dev = 0.249, 50.000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | | else return -0.19976454393230939;  // std dev = 0.036, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( enzyme(A, G), phenotype(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.6292177710889446;  // std dev = 2.041, 31.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | | | else return -0.19808193984733222;  // std dev = 0.039, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.45901940332982455;  // std dev = 3.808, 70.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=47 */
%   | | | else return 0.37750427399238523;  // std dev = 8.080, 274.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=160 */
%   else if ( interaction(K, A) )
%   | then return -0.12544463852839213;  // std dev = 0.000, 319.000 (wgt'ed) examples reached here.  /* #neg=319 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), phenotype(D, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.6028578554002076;  // std dev = 0.127, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.12206299342825366;  // std dev = 0.855, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( enzyme(A, H), complex(A, I) )
%   | | | then return 0.5393842078372818;  // std dev = 1.49e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.6475866754789306;  // std dev = 0.144, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( interaction(A, A) )
%   | | then if ( enzyme(A, J) )
%   | | | then return -0.19463687610624283;  // std dev = 0.088, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.26668755833376184;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.6226776433793226;  // std dev = 0.169, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.2877956492306638;  // std dev = 9.584, 406.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=225 */
%   else return -0.1123163781936063;  // std dev = 0.000, 381.000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), phenotype(D, F) )
%   | | then if ( phenotype(A, G), interaction(E, A) )
%   | | | then return 0.4595826414985817;  // std dev = 0.113, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.539370109470653;  // std dev = 0.148, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.01587579972880517;  // std dev = 1.262, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.412978845182575;  // std dev = 0.733, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( phenotype(A, L), complex(J, M) )
%   | | | then return 0.29265494137950193;  // std dev = 2.158, 26.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=16 */
%   | | | else return 0.10448306417974629;  // std dev = 3.617, 65.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=28 */
%   | | else if ( enzyme(A, N), phenotype(A, P) )
%   | | | then return 0.30106355667126233;  // std dev = 2.992, 56.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=36 */
%   | | | else return 0.21503655979757116;  // std dev = 8.346, 293.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=161 */
%   else return -0.10159632948783633;  // std dev = 5.27e-09, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F), interaction(A, E) )
%   | | | then return 0.48940108103395796;  // std dev = 1.555, 57.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=55 */
%   | | | else return 0.075698397989621;  // std dev = 1.955, 23.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.31068273106836963;  // std dev = 0.566, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0.1623457983030101;  // std dev = 8.161, 308.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=171 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( complex(A, I), interaction(G, J) )
%   | | | then return 0.34781491508370493;  // std dev = 1.217, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.07965146315774875;  // std dev = 2.472, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | else if ( enzyme(A, K), interaction(A, L) )
%   | | | then return 0.22066408734867204;  // std dev = 1.239, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.428680392991997;  // std dev = 1.558, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   else return -0.09269127618926043;  // std dev = 1.10e-08, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), interaction(A, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F), interaction(F, E) )
%   | | | then return 0.19144038802740085;  // std dev = 1.245, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | | else return 0.3586363545714295;  // std dev = 0.213, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( enzyme(E, G), interaction(E, E) )
%   | | | then return 0.27720854707073417;  // std dev = 1.362, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | | else return 0.03227184197272943;  // std dev = 6.230, 206.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=88 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4959040322853863;  // std dev = 0.534, 53.000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | | | else return -0.3493229545685133;  // std dev = 0.326, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.1556085871676692;  // std dev = 5.922, 150.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=89 */
%   | | | else return -0.03860270570949543;  // std dev = 1.206, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   else return -0.08518475138839678;  // std dev = 6.32e-09, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return 0.37007927980535804;  // std dev = 4.519, 263.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=239 */
%   | | | else return -0.1934628875623497;  // std dev = 4.260, 143.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=30 */
%   | | else if ( enzyme(A, G), interaction(H, A) )
%   | | | then return -0.28933532512732596;  // std dev = 0.333, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.4187074987175413;  // std dev = 0.424, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( interaction(I, I) )
%   | | | then return 0.13482915847567772;  // std dev = 0.490, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.15432325001530267;  // std dev = 1.895, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.023894324872905243;  // std dev = 1.063, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.4198049156895827;  // std dev = 0.133, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.07877675473109144;  // std dev = 5.43e-09, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(D, E) )
%   | | | then return 0.2777683390376627;  // std dev = 1.549, 64.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=62 */
%   | | | else return 0.0449279345363659;  // std dev = 1.199, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | else if ( interaction(A, F), interaction(F, F) )
%   | | | then return -0.10946697401914808;  // std dev = 2.027, 44.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | | | else return 0.016075461731523834;  // std dev = 7.176, 343.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=169 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( phenotype(G, H), phenotype(A, I) )
%   | | | then return 0.494375757603598;  // std dev = 0.180, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.20192052199858318;  // std dev = 1.539, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.057053589085079404;  // std dev = 1.641, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.18994601009371764;  // std dev = 1.983, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   else return -0.07324622576333768;  // std dev = 0.000, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), interaction(D, F) )
%   | | then if ( phenotype(A, G), complex(F, H) )
%   | | | then return -0.01606514772920309;  // std dev = 0.553, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.16286593152587164;  // std dev = 0.126, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(I, A), interaction(A, I) )
%   | | | then return 0.15282688997582036;  // std dev = 0.150, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.2441758294607437;  // std dev = 0.193, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return 0.001075097172674307;  // std dev = 0.493, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2224519758244258;  // std dev = 0.168, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1579731923320027;  // std dev = 0.045, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.07099944458964558;  // std dev = 7.870, 406.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=225 */
%   else return -0.06842697784420326;  // std dev = 0.000, 369.000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return 0.19599287777788646;  // std dev = 1.124, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | | | else return 0.3365407734604821;  // std dev = 0.750, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1384800088569497;  // std dev = 0.080, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.3606873607902006;  // std dev = 0.937, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(H, H) )
%   | | | then return 0.1578265928908396;  // std dev = 0.956, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return 0.0048243024516889;  // std dev = 3.366, 97.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=50 */
%   | | else if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return -0.008032903950058005;  // std dev = 1.794, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | | else return 0.15322354370153698;  // std dev = 5.187, 193.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=132 */
%   else return -0.06419184008202576;  // std dev = 8.48e-09, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
Inference time using transfer learning 3.8002991676330566
Refined model CLL: -0.208777


******************************************
Best model found
******************************************
Results 

CLL : -0.205768 

AUC ROC : 0.988698 

AUC PR : 0.445098 

Precision : 0.176596 

Recall : 0.965116 

F1 : 0.298561 

Total Learning Time : 44.244184255599976 

Total Inference Time : 36.550742626190186 

Total revision time: 133.86567854881287
Best scored revision CLL: -0.208777


Results 

CLL : -0.205768 

AUC ROC : 0.988698 

AUC PR : 0.445098 

Precision : 0.176596 

Recall : 0.965116 

F1 : 0.298561 

Total Learning Time : 133.87511014938354 

Total Inference Time : 36.550742626190186 

Starting experiments for fasttext using softcosine 

Run: 1

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.152716875076294
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4278459047964776;  // std dev = 0.495, 495.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048754;  // std dev = 1.22e-08, 352.000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3543782034289059;  // std dev = 7.078, 203.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=113 */
%   | else return 0.40783626037258613;  // std dev = 8.117, 277.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=169 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839216;  // std dev = 0.000, 334.000 (wgt'ed) examples reached here.  /* #neg=334 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.2943829954221838;  // std dev = 0.496, 498.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360636;  // std dev = 0.000, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, A), complex(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2739779061111861;  // std dev = 10.519, 464.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=282 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783644;  // std dev = 0.000, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | | | else return -0.10159632948783656;  // std dev = 0.000, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.1617196458332617;  // std dev = 7.121, 205.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=113 */
%   | else return 0.2122613380209995;  // std dev = 8.071, 275.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=169 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0926912761892607;  // std dev = 9.13e-09, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.19384451973562786;  // std dev = 8.117, 281.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=178 */
%   | | else return 0.02446550378128406;  // std dev = 7.323, 220.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 5.16e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | | else return -0.08518475138839678;  // std dev = 8.30e-08, 211.000 (wgt'ed) examples reached here.  /* #neg=211 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.11021232624650523;  // std dev = 0.491, 482.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.07877675473109151;  // std dev = 7.52e-08, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | | else return -0.07877675473109146;  // std dev = 6.83e-08, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.09528085610685534;  // std dev = 8.377, 291.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=178 */
%   | else return 0.0038065884681734302;  // std dev = 7.233, 214.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=104 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333714;  // std dev = 3.36e-09, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09255939470173656;  // std dev = 10.459, 462.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420325;  // std dev = 0.000, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.08273803135258928;  // std dev = 10.248, 454.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202589;  // std dev = 7.39e-09, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
Inference time using transfer learning 1.9544148445129395
Parameter learned model CLL:-0.339169 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.495, 213, 282], 'false,true': [0.0, 0, 0], 'false,false': [1.22e-08, 352, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true,true': [7.078, 90, 113], 'true,false': [8.117, 108, 169], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 334, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.496, 216, 282], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 371, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, A), complex(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [10.519, 182, 282], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 141, 0], 'false,false,false,false': [0.0, 208, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [7.121, 92, 113], 'true,false': [8.071, 106, 169], 'false,true': [0.0, 0, 0], 'false,false': [9.13e-09, 375, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [8.117, 103, 178], 'true,true,false': [7.323, 116, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.16e-08, 121, 0], 'false,false,false': [8.3e-08, 211, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.491, 200, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.52e-08, 136, 0], 'false,false,false': [6.83e-08, 230, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.377, 113, 178], 'true,false': [7.233, 110, 104], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.36e-09, 359, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [10.459, 180, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 368, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [10.248, 172, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.39e-09, 314, 0]}]
{'': [0.2451423324150626, 1.4887081466564598e-16], 'false': [nan, 1.4887081466564598e-16]}
{'': [0.24234374999999897, -1.1700554031977699e-16], 'true': [0.24679074959353473, 0.23787616155560323], 'false': [nan, -1.1700554031977699e-16], 'false,false': [nan, -1.1700554031977699e-16], 'false,false,false': [nan, -1.1700554031977699e-16]}
{'': [0.24574475696940723, -2.6334131042321772e-17], 'false': [nan, -2.6334131042321772e-17], 'false,false': [nan, -2.6334131042321772e-17]}
{'': [0.2384507087426851, 3.053908606418769e-17], 'true': [nan, 0.2384507087426851], 'false': [nan, 3.053908606418769e-17], 'false,false': [nan, 3.053908606418769e-17], 'false,false,false': [-5.196788625904988e-17, -8.326672684688674e-17]}
{'': [0.24198756170858401, 8.171241461241152e-17], 'true': [0.2473765615704952, 0.23687933884297635], 'false': [nan, 8.171241461241152e-17]}
{'': [0.2456169014456535, 3.879092495678258e-17], 'true': [0.2456169014456535, nan], 'true,true': [0.23447703880196039, 0.2437543674518169], 'false': [nan, 3.879092495678258e-17], 'false,false': [2.202095255454856e-17, 3.26226670742937e-17]}
{'': [0.24120175888042003, 2.3053811440303798e-17], 'true': [0.24120175888042003, nan], 'false': [nan, 2.3053811440303798e-17], 'false,false': [4.163336342344337e-17, 2.027363784098112e-17]}
{'': [0.24461790240071685, 1.2988681625141107e-17], 'true': [0.24115884083773806, 0.24449988726141625], 'false': [nan, 1.2988681625141107e-17], 'false,false': [nan, 1.2988681625141107e-17]}
{'': [0.23676777469080293, -1.0076480712630497e-16], 'true': [0.23676777469080293, nan], 'false': [nan, -1.0076480712630497e-16], 'false,false': [nan, -1.0076480712630497e-16]}
{'': [0.23132102401891366, 5.445042859626564e-17], 'true': [0.23132102401891366, nan], 'false': [nan, 5.445042859626564e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 33.2686710357666
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E) )
%   | | then return 0.8581489350995117;  // std dev = 1.79e-07, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( interaction(D, F), enzyme(F, G) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.47771415249081745;  // std dev = 4.657, 92.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=57 */
%   | | | else return 0.4140495562175216;  // std dev = 8.916, 322.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=179 */
%   else return -0.14185106490048752;  // std dev = 2.33e-07, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.7258167124981413;  // std dev = 0.055, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( enzyme(D, E), enzyme(A, E) )
%   | | | then return -0.11180245751243251;  // std dev = 0.949, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.182727711436612;  // std dev = 4.201, 79.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=30 */
%   | else if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.6883143126896326;  // std dev = 3.539, 134.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=120 */
%   | | | else return -0.2029179716025782;  // std dev = 0.058, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else if ( interaction(H, A), location(A, I) )
%   | | | then return 0.38451623890882236;  // std dev = 5.715, 137.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=81 */
%   | | | else return 0.25986243626481004;  // std dev = 3.822, 60.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=28 */
%   else return -0.1254446385283922;  // std dev = 0.000, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G), enzyme(F, H) )
%   | | | then return 0.41561292261088434;  // std dev = 1.309, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.6497124157487798;  // std dev = 1.500, 59.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=57 */
%   | | else if ( interaction(A, I), interaction(J, D) )
%   | | | then return 0.07797510642261486;  // std dev = 4.901, 130.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=44 */
%   | | | else return 0.31529996757461354;  // std dev = 6.756, 215.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=128 */
%   | else if ( interaction(A, K), complex(K, L) )
%   | | then if ( enzyme(A, M), phenotype(K, N) )
%   | | | then return 0.3333761234816729;  // std dev = 1.640, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return 0.5594925992751103;  // std dev = 1.767, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | | else if ( enzyme(A, P), interaction(A, Q) )
%   | | | then return -0.041638192786633665;  // std dev = 0.830, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.38642769310003033;  // std dev = 1.873, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   else return -0.11231637819360633;  // std dev = 0.000, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, D) )
%   | | | then return 0.5910140810547243;  // std dev = 0.456, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.31608741594239204;  // std dev = 0.187, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( phenotype(G, D), recursion_proteinclass(G, B) )
%   | | | then return -0.3745635258343312;  // std dev = 0.305, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.22484116201088794;  // std dev = 0.215, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(H, I), phenotype(H, J) )
%   | | | then return -0.14941158774258256;  // std dev = 0.791, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.42734661351228775;  // std dev = 1.402, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.5281249165737637;  // std dev = 1.117, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return 0.21464086277829467;  // std dev = 8.122, 311.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=168 */
%   else return -0.10159632948783656;  // std dev = 0.000, 323.000 (wgt'ed) examples reached here.  /* #neg=323 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F), complex(F, G) )
%   | | | then return 0.24934089426320122;  // std dev = 0.711, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.5101713977677255;  // std dev = 0.844, 40.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.19397856506261127;  // std dev = 0.257, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.36657110770049994;  // std dev = 0.187, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, I) )
%   | | | then return 0.3006800137369872;  // std dev = 0.045, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.47111813103709144;  // std dev = 0.211, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( interaction(J, A), interaction(A, J) )
%   | | | then return 0.10597746156583576;  // std dev = 3.036, 59.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=26 */
%   | | | else return 0.21164967877874843;  // std dev = 7.266, 284.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=172 */
%   else return -0.09269127618926087;  // std dev = 1.46e-07, 399.000 (wgt'ed) examples reached here.  /* #neg=399 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.24714283607249554;  // std dev = 0.082, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.07306052463127892;  // std dev = 1.058, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.3306726121513029;  // std dev = 0.134, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.39767992535341845;  // std dev = 0.225, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( complex(G, I), phenotype(G, J) )
%   | | | then return 0.15813070815289862;  // std dev = 2.337, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | | | else return -0.043154193824507345;  // std dev = 3.004, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
%   | | else if ( enzyme(A, K), interaction(L, A) )
%   | | | then return 0.22576925759640215;  // std dev = 3.430, 92.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=65 */
%   | | | else return 0.12707295797408205;  // std dev = 6.754, 231.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=132 */
%   else return -0.08518475138839678;  // std dev = 6.25e-09, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( phenotype(A, F), enzyme(E, G) )
%   | | | then return 0.06999911441799284;  // std dev = 0.577, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.23333396039350374;  // std dev = 0.295, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.2682396145891781;  // std dev = 0.149, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.32327536006648216;  // std dev = 0.166, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(A, J), interaction(J, J) )
%   | | | then return -0.036731860269278396;  // std dev = 2.001, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.061518496465961914;  // std dev = 3.017, 46.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=25 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.290388915363709;  // std dev = 0.812, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.07870547477437373;  // std dev = 7.846, 339.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=184 */
%   else return -0.07877675473109141;  // std dev = 5.67e-09, 390.000 (wgt'ed) examples reached here.  /* #neg=390 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, A) )
%   | then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | | then return 0.1686243480990954;  // std dev = 0.050, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( enzyme(A, E) )
%   | | | then return -0.11600770601313255;  // std dev = 0.062, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.23854941420263906;  // std dev = 0.355, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.2591287988032247;  // std dev = 0.203, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.1279662374667045;  // std dev = 1.086, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.09895828123686322;  // std dev = 6.518, 256.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=148 */
%   | | | else return 0.035718756869755515;  // std dev = 5.448, 163.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=88 */
%   else return -0.07324622576333714;  // std dev = 5.58e-08, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, F) )
%   | | | then return 0.33396070385868487;  // std dev = 2.241, 152.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=148 */
%   | | | else return 0.021873831010449152;  // std dev = 6.177, 232.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=121 */
%   | | else if ( phenotype(A, G) )
%   | | | then return -0.30502840007729193;  // std dev = 0.319, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.454959095250505;  // std dev = 0.501, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then return 0.17638365419963742;  // std dev = 1.026, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.19194318202657648;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.05971990436781384;  // std dev = 1.858, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   else return -0.06842697784420326;  // std dev = 0.000, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, D), location(D, E) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.11912518431197539;  // std dev = 0.136, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.008121573734674703;  // std dev = 0.778, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.11087320651024951;  // std dev = 0.447, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.22239625795598147;  // std dev = 0.168, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then if ( phenotype(A, J), location(A, K) )
%   | | | then return 0.005244873218399973;  // std dev = 2.483, 47.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=23 */
%   | | | else return -0.111851689089685;  // std dev = 1.614, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | else if ( phenotype(A, L), interaction(M, A) )
%   | | | then return 0.08610055571927135;  // std dev = 3.983, 139.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=87 */
%   | | | else return 0.03021787753382737;  // std dev = 6.239, 216.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=119 */
%   else return -0.06419184008202565;  // std dev = 1.80e-07, 380.000 (wgt'ed) examples reached here.  /* #neg=380 */
Inference time using transfer learning 4.605297327041626
Refined model CLL: -0.228172


******************************************
Best model found
******************************************
Results 

CLL : -0.215569 

AUC ROC : 0.981535 

AUC PR : 0.320798 

Precision : 0.094972 

Recall : 0.977011 

F1 : 0.173116 

Total Learning Time : 33.2686710357666 

Total Inference Time : 33.928666830062866 

Total revision time: 80.1701271533966
Best scored revision CLL: -0.228172


Results 

CLL : -0.215569 

AUC ROC : 0.981535 

AUC PR : 0.320798 

Precision : 0.094972 

Recall : 0.977011 

F1 : 0.173116 

Total Learning Time : 80.21137142181396 

Total Inference Time : 33.928666830062866 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos examples: 104
Target test neg examples: 16320

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.749205589294434
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.41958961306560966;  // std dev = 0.496, 472.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1418510649004876;  // std dev = 1.12e-08, 340.000 (wgt'ed) examples reached here.  /* #neg=340 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.35346104717985816;  // std dev = 6.905, 193.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=107 */
%   | else return 0.3736023566475923;  // std dev = 8.199, 275.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=158 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839213;  // std dev = 0.000, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3137940618038248;  // std dev = 0.494, 457.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360671;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #neg=317 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, A), complex(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23596113351241116;  // std dev = 10.705, 467.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=265 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783642;  // std dev = 0.000, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | | | else return -0.10159632948783653;  // std dev = 0.000, 205.000 (wgt'ed) examples reached here.  /* #neg=205 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.2148504574288275;  // std dev = 6.560, 179.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=107 */
%   | else return 0.22000710192938366;  // std dev = 7.873, 260.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=158 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926043;  // std dev = 1.03e-08, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17031810621465174;  // std dev = 7.885, 260.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=158 */
%   | | else return 0.120498964243536;  // std dev = 6.840, 191.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=107 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 5.67e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | | else return -0.08518475138839678;  // std dev = 8.02e-08, 204.000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.10555641275110438;  // std dev = 0.493, 456.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.07877675473109153;  // std dev = 7.15e-08, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | | else return -0.07877675473109146;  // std dev = 7.45e-08, 206.000 (wgt'ed) examples reached here.  /* #neg=206 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.07277773953253658;  // std dev = 8.169, 273.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=158 */
%   | else return 0.02081661347191234;  // std dev = 7.172, 207.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=107 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333711;  // std dev = 3.73e-09, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.051858100924884784;  // std dev = 10.707, 468.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420307;  // std dev = 0.000, 316.000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.062482745318243015;  // std dev = 10.417, 449.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202579;  // std dev = 8.28e-09, 340.000 (wgt'ed) examples reached here.  /* #neg=340 */
Inference time using transfer learning 2.503438711166382
Parameter learned model CLL:-0.327999 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.496, 207, 265], 'false,true': [0.0, 0, 0], 'false,false': [1.12e-08, 340, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true,true': [6.905, 86, 107], 'true,false': [8.199, 117, 158], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 322, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.494, 192, 265], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 317, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, A), complex(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [10.705, 202, 265], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 142, 0], 'false,false,false,false': [0.0, 205, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.56, 72, 107], 'true,false': [7.873, 102, 158], 'false,true': [0.0, 0, 0], 'false,false': [1.03e-08, 311, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [7.885, 102, 158], 'true,true,false': [6.84, 84, 107], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.67e-08, 134, 0], 'false,false,false': [8.02e-08, 204, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.493, 191, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.15e-08, 126, 0], 'false,false,false': [7.45e-08, 206, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.169, 115, 158], 'true,false': [7.172, 100, 107], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.73e-09, 348, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [10.707, 203, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 316, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [10.417, 184, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.28e-09, 340, 0]}]
{'': [0.24622504309106888, 1.2538989454590003e-16], 'false': [nan, 1.2538989454590003e-16]}
{'': [0.24561235298414652, -1.130910410177178e-16], 'true': [0.24704018899836655, 0.24444297520661507], 'false': [nan, -1.130910410177178e-16], 'false,false': [nan, -1.130910410177178e-16], 'false,false,false': [nan, -1.130910410177178e-16]}
{'': [0.24368971460571412, -4.202737001735608e-17], 'false': [nan, -4.202737001735608e-17], 'false,false': [nan, -4.202737001735608e-17]}
{'': [0.2453744665867229, 2.6875715869888516e-17], 'true': [nan, 0.2453744665867229], 'false': [nan, 2.6875715869888516e-17], 'false,false': [nan, 2.6875715869888516e-17], 'false,false,false': [-5.942038723345908e-17, -8.881784197001253e-17]}
{'': [0.23924041124702008, 1.056675290318477e-16], 'true': [0.24044193377235495, 0.23840236686390182], 'false': [nan, 1.056675290318477e-16]}
{'': [0.2421780723846301, 3.9416202057697863e-17], 'true': [0.2421780723846301, nan], 'true,true': [0.2391125791439171, 0.24492016098376143], 'false': [nan, 3.9416202057697863e-17], 'false,false': [2.4027214712036968e-17, 3.1565164425617195e-17]}
{'': [0.2432463674925957, 6.6880905097900996e-18], 'true': [0.2432463674925957, nan], 'false': [nan, 6.6880905097900996e-18], 'false,false': [4.053195169266444e-17, 2.6947160791872732e-17]}
{'': [0.24686606729240707, 1.403730261020313e-17], 'true': [0.2444476214124386, 0.24852001039277066], 'false': [nan, 1.403730261020313e-17], 'false,false': [nan, 1.403730261020313e-17]}
{'': [0.24497499045418386, -6.95646072391712e-17], 'true': [0.24497499045418386, nan], 'false': [nan, -6.95646072391712e-17], 'false,false': [nan, -6.95646072391712e-17]}
{'': [0.24167096809058902, 6.922567094721564e-17], 'true': [0.24167096809058902, nan], 'false': [nan, 6.922567094721564e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 17.142899990081787
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( interaction(F, D), interaction(D, F) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.7043027812533584;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.35181982117546096;  // std dev = 4.444, 79.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=39 */
%   | | else if ( phenotype(A, H), enzyme(A, I) )
%   | | | then return 0.33814893509951105;  // std dev = 4.327, 75.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=36 */
%   | | | else return 0.42418667094856727;  // std dev = 8.068, 265.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=150 */
%   else return -0.14185106490048782;  // std dev = 1.07e-07, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.7207768736870132;  // std dev = 0.029, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.40612648817719127;  // std dev = 0.805, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7513625462169877;  // std dev = 0.121, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( complex(A, G), location(A, H) )
%   | | | then return 0.30737976265264394;  // std dev = 6.459, 167.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=84 */
%   | | | else return 0.4015051935558117;  // std dev = 7.509, 235.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=141 */
%   else return -0.12544463852839208;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.5640126419302628;  // std dev = 0.132, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0.7425929563340116;  // std dev = 0.052, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( phenotype(A, F), interaction(A, G) )
%   | | then if ( interaction(G, H), interaction(A, H) )
%   | | | then return 0.10480748830488805;  // std dev = 4.137, 76.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=27 */
%   | | | else return 0.259460855540852;  // std dev = 3.855, 61.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=32 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.5842794300193819;  // std dev = 0.122, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.258455966570217;  // std dev = 8.535, 297.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=154 */
%   else return -0.11231637819360679;  // std dev = 0.000, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( enzyme(A, E), interaction(F, A) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.2985001663174211;  // std dev = 1.128, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.7180421134506783;  // std dev = 0.036, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.07845685862352915;  // std dev = 1.802, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.33873534522184345;  // std dev = 2.972, 56.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=39 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.46146716498610996;  // std dev = 0.101, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5740381149926373;  // std dev = 0.055, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.1858776473937973;  // std dev = 4.451, 80.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=40 */
%   | | | else return 0.2699021298735805;  // std dev = 7.615, 248.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=149 */
%   else return -0.10159632948783662;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.5144107095480651;  // std dev = 0.528, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.6446821586110764;  // std dev = 0.222, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else if ( interaction(H, A), phenotype(H, E) )
%   | | | then return -0.4036526864816931;  // std dev = 0.127, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.3456874301265704;  // std dev = 0.102, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( enzyme(I, J), interaction(I, K) )
%   | | | then return 0.039902504018499374;  // std dev = 1.087, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.3935035265760945;  // std dev = 0.351, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.17563844182628296;  // std dev = 0.039, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.11770658243965369;  // std dev = 9.248, 350.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=176 */
%   else return -0.09269127618926058;  // std dev = 1.71e-07, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.2676948160097663;  // std dev = 0.145, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.15374507456871989;  // std dev = 0.991, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(D, D) )
%   | | | then return 0.4172600430600834;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3327519480249733;  // std dev = 0.124, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1486970299836281;  // std dev = 0.063, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.11025894470453804;  // std dev = 3.861, 70.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   | | | else return 0.17543412436646175;  // std dev = 8.319, 318.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=189 */
%   else if ( complex(A, G) )
%   | then return -0.08518475138839678;  // std dev = 5.37e-08, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | else return -0.08518475138839678;  // std dev = 7.74e-08, 204.000 (wgt'ed) examples reached here.  /* #neg=204 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), interaction(G, A) )
%   | | | then return 0.3599290971883964;  // std dev = 1.276, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | | | else return -0.10754977071604888;  // std dev = 1.352, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.012674552081820722;  // std dev = 3.505, 71.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=29 */
%   | | | else return 0.16978358532735432;  // std dev = 5.327, 137.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=87 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.38137994901359007;  // std dev = 2.167, 54.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=47 */
%   | | | else return -0.3523191455384138;  // std dev = 0.397, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.24516763607752273;  // std dev = 0.116, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.021353177346697023;  // std dev = 5.487, 131.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=56 */
%   else return -0.07877675473109141;  // std dev = 3.36e-09, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, G), interaction(A, H) )
%   | | | then return 0.16356539237517298;  // std dev = 0.533, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.32324692338317984;  // std dev = 0.463, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.25690006750151856;  // std dev = 0.628, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.021045653879884833;  // std dev = 5.056, 130.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=66 */
%   | else if ( interaction(A, I), phenotype(A, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.24678052028816977;  // std dev = 1.195, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return 0.0026670935320083937;  // std dev = 3.675, 81.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=37 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.13514691683260846;  // std dev = 5.207, 136.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=86 */
%   | | | else return 0.22916824346366688;  // std dev = 3.221, 52.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=37 */
%   else return -0.07324622576333717;  // std dev = 4.71e-08, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( enzyme(D, F), complex(D, G) )
%   | | then if ( complex(A, H), interaction(I, D) )
%   | | | then return 0.041149542268983944;  // std dev = 1.833, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | | else return 0.24499153330110837;  // std dev = 0.955, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | else if ( interaction(J, D), recursion_proteinclass(J, B) )
%   | | | then return 0.23908445441941295;  // std dev = 1.539, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | | | else return 0.003574785434960476;  // std dev = 6.529, 200.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=102 */
%   | else if ( interaction(A, K), complex(A, L) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.20800642039795772;  // std dev = 0.212, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.009579429082610178;  // std dev = 2.847, 45.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.18533752655481647;  // std dev = 1.479, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | | else return 0.11289042423498678;  // std dev = 4.595, 110.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=68 */
%   else return -0.06842697784420315;  // std dev = 0.000, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return -2.1698757757778603E-4;  // std dev = 0.765, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.236788264963054;  // std dev = 1.063, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | else if ( interaction(I, D), interaction(J, I) )
%   | | | then return 0.019401097721393173;  // std dev = 5.635, 158.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=79 */
%   | | | else return -0.10804185234144946;  // std dev = 4.369, 90.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=37 */
%   | else if ( enzyme(A, K) )
%   | | then if ( enzyme(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.3735103830141192;  // std dev = 0.842, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else return -0.3101034922571414;  // std dev = 0.567, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.1276416163227419;  // std dev = 2.233, 33.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=23 */
%   | | | else return 0.050574185982866365;  // std dev = 4.267, 82.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=50 */
%   else return -0.06419184008202593;  // std dev = 6.78e-09, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
Inference time using transfer learning 5.576390266418457
Refined model CLL: -0.258341


******************************************
Best model found
******************************************
Results 

CLL : -0.270307 

AUC ROC : 0.951288 

AUC PR : 0.172577 

Precision : 0.03832 

Recall : 0.903846 

F1 : 0.073524 

Total Learning Time : 17.142899990081787 

Total Inference Time : 13.076875686645508 

Total revision time: 43.33902192115784
Best scored revision CLL: -0.258341


Results 

CLL : -0.270307 

AUC ROC : 0.951288 

AUC PR : 0.172577 

Precision : 0.03832 

Recall : 0.903846 

F1 : 0.073524 

Total Learning Time : 43.380266189575195 

Total Inference Time : 13.076875686645508 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos examples: 92
Target test neg examples: 12594

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.793250560760498
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.42928295571806463;  // std dev = 0.495, 485.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1418510649004874;  // std dev = 1.42e-08, 379.000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3448643992098613;  // std dev = 6.861, 190.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=104 */
%   | else return 0.41535312101437255;  // std dev = 8.131, 280.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=173 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839222;  // std dev = 0.000, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3230698048261565;  // std dev = 0.491, 465.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360638;  // std dev = 0.000, 369.000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, A), complex(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2287858159345957;  // std dev = 10.918, 486.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=277 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783634;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | | else return -0.10159632948783659;  // std dev = 0.000, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.2317139764612955;  // std dev = 6.325, 169.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=104 */
%   | else return 0.18202185738107096;  // std dev = 8.499, 297.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=173 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926061;  // std dev = 9.68e-09, 366.000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1746119281491669;  // std dev = 8.058, 274.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=169 */
%   | | else return 0.09876215654388523;  // std dev = 7.014, 199.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=108 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 5.96e-08, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | | else return -0.08518475138839678;  // std dev = 8.69e-08, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.10558572321079426;  // std dev = 0.493, 474.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.07877675473109151;  // std dev = 7.74e-08, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | | else return -0.07877675473109146;  // std dev = 7.45e-08, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.10033742112030775;  // std dev = 8.105, 276.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=169 */
%   | else return 0.045376141331027;  // std dev = 7.032, 200.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=108 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333716;  // std dev = 3.09e-09, 370.000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.02114579883575499;  // std dev = 11.207, 508.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420328;  // std dev = 0.000, 376.000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.022668229849440797;  // std dev = 11.119, 502.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202566;  // std dev = 9.27e-09, 376.000 (wgt'ed) examples reached here.  /* #neg=376 */
Inference time using transfer learning 2.2446985244750977
Parameter learned model CLL:-0.320298 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.495, 208, 277], 'false,true': [0.0, 0, 0], 'false,false': [1.42e-08, 379, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true,true': [6.861, 86, 104], 'true,false': [8.131, 107, 173], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 367, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.491, 188, 277], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 369, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, A), complex(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [10.918, 209, 277], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 112, 0], 'false,false,false,false': [0.0, 246, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.325, 65, 104], 'true,false': [8.499, 124, 173], 'false,true': [0.0, 0, 0], 'false,false': [9.68e-09, 366, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [8.058, 105, 169], 'true,true,false': [7.014, 91, 108], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.96e-08, 140, 0], 'false,false,false': [8.69e-08, 225, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.493, 197, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.74e-08, 140, 0], 'false,false,false': [7.45e-08, 208, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.105, 107, 169], 'true,false': [7.032, 92, 108], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.09e-09, 370, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [11.207, 231, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 376, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [11.119, 225, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.27e-09, 376, 0]}]
{'': [0.2449399511106417, 1.9685220911559503e-16], 'false': [nan, 1.9685220911559503e-16]}
{'': [0.24201448619285124, -1.210052342915702e-16], 'true': [0.24775623268698388, 0.2361096938775545], 'false': [nan, -1.210052342915702e-16], 'false,false': [nan, -1.210052342915702e-16], 'false,false,false': [nan, -1.210052342915702e-16]}
{'': [0.24094349161761353, -2.647686345989533e-17], 'false': [nan, -2.647686345989533e-17], 'false,false': [nan, -2.647686345989533e-17]}
{'': [0.24529233269403355, 4.7137960822073685e-17], 'true': [nan, 0.24529233269403355], 'false': [nan, 4.7137960822073685e-17], 'false,false': [nan, 4.7137960822073685e-17], 'false,false,false': [-1.1895246692412391e-17, -6.679390554655414e-17]}
{'': [0.24140542059082323, 9.342860425807329e-17], 'true': [0.2366863905325459, 0.243195138818037], 'false': [nan, 9.342860425807329e-17]}
{'': [0.24266953416840295, 4.015053130151251e-17], 'true': [0.24266953416840295, nan], 'true,true': [0.23695864320786544, 0.2472000574977198], 'false': [nan, 4.015053130151251e-17], 'false,false': [2.5376526277146434e-17, 3.3553406966449176e-17]}
{'': [0.2427795593097289, 1.403730261020313e-17], 'true': [0.2427795593097289, nan], 'false': [nan, 1.403730261020313e-17], 'false,false': [4.282288809268461e-17, 2.6688053476566264e-17]}
{'': [0.24261811165475833, 9.601928861622976e-18], 'true': [0.23801016917934234, 0.24722554943848607], 'false': [nan, 9.601928861622976e-18], 'false,false': [nan, 9.601928861622976e-18]}
{'': [0.2472165566510138, -1.062979491662384e-16], 'true': [0.2472165566510138, nan], 'false': [nan, -1.062979491662384e-16], 'false,false': [nan, -1.062979491662384e-16]}
{'': [0.24627559465781698, 8.680999181909469e-17], 'true': [0.24627559465781698, nan], 'false': [nan, 8.680999181909469e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 22.564353704452515
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), interaction(A, D) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7528857772047755;  // std dev = 1.338, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return 0.40337506575277554;  // std dev = 9.934, 398.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=217 */
%   else return -0.14185106490048774;  // std dev = 1.52e-07, 317.000 (wgt'ed) examples reached here.  /* #neg=317 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.7244740793562467;  // std dev = 0.089, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.18255625322083663;  // std dev = 2.777, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | | else return 0.5377864760818292;  // std dev = 2.843, 42.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=31 */
%   | else if ( interaction(G, A) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.6780764905552578;  // std dev = 0.985, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return 0.3455645621971605;  // std dev = 8.623, 302.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=165 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5735536991660425;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.23643037901823513;  // std dev = 3.362, 46.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=20 */
%   else return -0.12544463852839213;  // std dev = 0.000, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(D, F), interaction(A, G) )
%   | | | then return 0.6767303923747552;  // std dev = 0.584, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return 0.2459609536444843;  // std dev = 2.107, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.22174419009604115;  // std dev = 0.312, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0.22702880022559305;  // std dev = 7.461, 232.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=117 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6777492924025087;  // std dev = 0.267, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.3575080690339141;  // std dev = 4.365, 85.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=54 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.631170458951332;  // std dev = 0.063, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.20987685684231702;  // std dev = 4.598, 85.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=39 */
%   else return -0.11231637819360658;  // std dev = 0.000, 333.000 (wgt'ed) examples reached here.  /* #neg=333 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), phenotype(E, F) )
%   | | then if ( interaction(A, E), interaction(G, A) )
%   | | | then return 0.45197289443495714;  // std dev = 0.385, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.09171951544734691;  // std dev = 1.005, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.5517194797764229;  // std dev = 0.180, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.4456024702893136;  // std dev = 0.134, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.45858605393107305;  // std dev = 1.915, 33.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=27 */
%   | | | else return 0.05896310358408725;  // std dev = 4.979, 121.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=42 */
%   | | else if ( interaction(M, A), location(M, N) )
%   | | | then return 0.2289525377767609;  // std dev = 8.192, 280.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=156 */
%   | | | else return 0.5294659057105663;  // std dev = 1.266, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.10159632948783599;  // std dev = 1.01e-08, 388.000 (wgt'ed) examples reached here.  /* #neg=388 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( complex(E, F), phenotype(A, G) )
%   | | | then return 0.15012401115262083;  // std dev = 1.302, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return 0.3506738882975035;  // std dev = 0.284, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(D, H), interaction(I, A) )
%   | | | then return 0.4533562695523892;  // std dev = 0.114, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.383655412322187;  // std dev = 0.134, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, J), location(A, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.38248804509842127;  // std dev = 2.325, 47.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=39 */
%   | | | else return 0.008523382681102986;  // std dev = 6.046, 174.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=59 */
%   | | else if ( interaction(M, A), location(M, N) )
%   | | | then return 0.17250339021494013;  // std dev = 7.641, 241.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=133 */
%   | | | else return -0.021533443240099648;  // std dev = 1.338, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else return -0.09269127618926055;  // std dev = 1.91e-07, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( enzyme(D, E) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.20783636356714735;  // std dev = 0.674, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.0561370081362312;  // std dev = 1.886, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | else if ( interaction(D, D), recursion_proteinclass(D, B) )
%   | | | then return 0.24801263351174377;  // std dev = 0.101, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.0624284428378697;  // std dev = 2.905, 64.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=29 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.08559712341106696;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.41927201840394845;  // std dev = 0.160, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.16502449430714294;  // std dev = 7.824, 256.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=146 */
%   | | | else return 0.23433418231252645;  // std dev = 4.167, 80.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=50 */
%   else return -0.08518475138839678;  // std dev = 6.25e-09, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(D, A), location(D, E) )
%   | | | then return 0.34939892817725304;  // std dev = 0.869, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return 0.1254218163696533;  // std dev = 1.773, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.265226571747033;  // std dev = 0.522, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0.06979693110000006;  // std dev = 5.649, 141.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=69 */
%   | else if ( phenotype(A, G), enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.44422456521244474;  // std dev = 1.408, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | | | else return -0.4581765318317006;  // std dev = 0.080, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.3576835513458738;  // std dev = 1.596, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | | else return 0.18681049416283962;  // std dev = 5.664, 145.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=94 */
%   else return -0.07877675473109143;  // std dev = 2.95e-09, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), interaction(F, G) )
%   | | | then return 0.2973026411768747;  // std dev = 0.816, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.49003115270100767;  // std dev = 0.761, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | else if ( interaction(H, A), interaction(A, H) )
%   | | | then return -0.19518134103939344;  // std dev = 0.100, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.37119167495573036;  // std dev = 0.180, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1583771853046156;  // std dev = 0.908, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | | else return 0.26764775705015437;  // std dev = 0.113, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return -0.045397658365481416;  // std dev = 3.642, 73.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=32 */
%   | | | else return 0.057677104275908574;  // std dev = 7.921, 282.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=152 */
%   else return -0.07324622576333717;  // std dev = 5.16e-08, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, D) )
%   | | | then return 0.2534357825772013;  // std dev = 1.257, 63.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=62 */
%   | | | else return 0.047406682292498906;  // std dev = 1.428, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.1968980529220736;  // std dev = 0.629, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0.10646896469963177;  // std dev = 5.012, 130.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=73 */
%   | else if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.0903561734716706;  // std dev = 6.403, 202.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=126 */
%   | | | else return -0.5101167831738823;  // std dev = 0.439, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.05882490057584877;  // std dev = 0.837, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.49022769621439116;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.06842697784420307;  // std dev = 0.000, 312.000 (wgt'ed) examples reached here.  /* #neg=312 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(D, E) )
%   | then if ( recursion_proteinclass(D, B), location(A, E) )
%   | | then if ( interaction(D, F), interaction(F, D) )
%   | | | then return 0.07751238970865724;  // std dev = 0.895, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | | | else return 0.2356968757304785;  // std dev = 0.183, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( complex(A, G), complex(D, G) )
%   | | | then return -0.08965019329812018;  // std dev = 2.642, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | | else return 0.0644377399398941;  // std dev = 5.198, 160.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=88 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( complex(A, J), phenotype(H, K) )
%   | | | then return 0.1401165307803464;  // std dev = 2.247, 34.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=23 */
%   | | | else return -0.0038198901828733938;  // std dev = 4.549, 101.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=52 */
%   | | else if ( location(A, L) )
%   | | | then return -0.05160307453381519;  // std dev = 4.695, 110.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=53 */
%   | | | else return 0.32636888178687584;  // std dev = 0.153, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06419184008202572;  // std dev = 1.69e-07, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
Inference time using transfer learning 3.269509792327881
Refined model CLL: -0.245034


******************************************
Best model found
******************************************
Results 

CLL : -0.24123 

AUC ROC : 0.933457 

AUC PR : 0.266269 

Precision : 0.04726 

Recall : 0.75 

F1 : 0.088918 

Total Learning Time : 22.564353704452515 

Total Inference Time : 18.833231210708618 

Total revision time: 53.357686281204224
Best scored revision CLL: -0.245034


Results 

CLL : -0.24123 

AUC ROC : 0.933457 

AUC PR : 0.266269 

Precision : 0.04726 

Recall : 0.75 

F1 : 0.088918 

Total Learning Time : 53.39893054962158 

Total Inference Time : 18.833231210708618 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos examples: 86
Target test neg examples: 10998

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.159449577331543
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.417437472648915;  // std dev = 0.496, 506.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1418510649004875;  // std dev = 1.30e-08, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.38192650991093585;  // std dev = 7.078, 206.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=120 */
%   | else return 0.34822378688782535;  // std dev = 8.576, 297.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=163 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1254446385283922;  // std dev = 0.000, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.29530193973950764;  // std dev = 0.496, 505.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360663;  // std dev = 0.000, 330.000 (wgt'ed) examples reached here.  /* #neg=330 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, A), complex(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.22646342798944197;  // std dev = 11.249, 512.000 (wgt'ed) examples reached here.  /* #neg=229 #pos=283 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783642;  // std dev = 0.000, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | | | else return -0.10159632948783659;  // std dev = 0.000, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.17822882325651795;  // std dev = 7.260, 214.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=120 */
%   | else return 0.19138176131098575;  // std dev = 8.411, 288.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=163 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926064;  // std dev = 9.50e-09, 369.000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.18511284152032617;  // std dev = 8.243, 286.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=174 */
%   | | else return 0.10259217903696226;  // std dev = 7.219, 208.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=109 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 6.32e-08, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
%   | | else return -0.08518475138839678;  // std dev = 8.02e-08, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.10937344100375722;  // std dev = 0.494, 498.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.07877675473109151;  // std dev = 7.88e-08, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   | | else return -0.07877675473109147;  // std dev = 7.45e-08, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.10567693753964762;  // std dev = 8.311, 289.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=174 */
%   | else return 0.09098407731315912;  // std dev = 6.905, 193.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=109 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333714;  // std dev = 3.36e-09, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.10031542118837061;  // std dev = 10.467, 462.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420326;  // std dev = 0.000, 369.000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.029964154949326777;  // std dev = 11.062, 499.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202575;  // std dev = 8.54e-09, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
Inference time using transfer learning 2.124732732772827
Parameter learned model CLL:-0.327576 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.496, 223, 283], 'false,true': [0.0, 0, 0], 'false,false': [1.3e-08, 363, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true,true': [7.078, 86, 120], 'true,false': [8.576, 134, 163], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 351, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.496, 222, 283], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 330, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, A), complex(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [11.249, 229, 283], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 136, 0], 'false,false,false,false': [0.0, 238, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [7.26, 94, 120], 'true,false': [8.411, 125, 163], 'false,true': [0.0, 0, 0], 'false,false': [9.5e-09, 369, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [8.243, 112, 174], 'true,true,false': [7.219, 99, 109], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [6.32e-08, 150, 0], 'false,false,false': [8.02e-08, 213, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.494, 215, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.88e-08, 144, 0], 'false,false,false': [7.45e-08, 196, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.311, 115, 174], 'true,false': [6.905, 84, 109], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.36e-09, 359, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [10.467, 179, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 369, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [11.062, 216, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.54e-09, 350, 0]}]
{'': [0.2464848693152554, 1.6882730291820563e-16], 'false': [nan, 1.6882730291820563e-16]}
{'': [0.2460782027516757, -1.1892987386297974e-16], 'true': [0.2431897445565088, 0.24761645637066604], 'false': [nan, -1.1892987386297974e-16], 'false,false': [nan, -1.1892987386297974e-16], 'false,false,false': [nan, -1.1892987386297974e-16]}
{'': [0.24643390487033495, -3.768029659333865e-17], 'false': [nan, -3.768029659333865e-17], 'false,false': [nan, -3.768029659333865e-17]}
{'': [0.24713469858343137, 7.718127978677559e-17], 'true': [nan, 0.24713469858343137], 'false': [nan, 7.718127978677559e-17], 'false,false': [nan, 7.718127978677559e-17], 'false,false,false': [-4.734774663842579e-17, -6.903907884223663e-17]}
{'': [0.24597220684797125, 8.785504693510724e-17], 'true': [0.2463097213730471, 0.24564766589505874], 'false': [nan, 8.785504693510724e-17]}
{'': [0.2446899808069211, 3.792497384394474e-17], 'true': [0.2446899808069211, nan], 'true,true': [0.23756945811170946, 0.250538264928432], 'false': [nan, 3.792497384394474e-17], 'false,false': [2.6645352591003756e-17, 3.023142508368971e-17]}
{'': [0.24385438478554108, 9.143013143971877e-18], 'true': [0.24385438478554108, nan], 'false': [nan, 9.143013143971877e-18], 'false,false': [4.3175339846533866e-17, 2.832201593431522e-17]}
{'': [0.24227305561010248, 1.2370172976324864e-17], 'true': [0.23902365526538574, 0.24700929948340597], 'false': [nan, 1.2370172976324864e-17], 'false,false': [nan, 1.2370172976324864e-17]}
{'': [0.2371192648410995, -1.0350046625231811e-16], 'true': [0.2371192648410995, nan], 'false': [nan, -1.0350046625231811e-16], 'false,false': [nan, -1.0350046625231811e-16]}
{'': [0.24524317815494573, 7.2957513046796e-17], 'true': [0.24524317815494573, nan], 'false': [nan, 7.2957513046796e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 19.583924770355225
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, E) )
%   | | | then return 0.8581489350995115;  // std dev = 2.60e-07, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return -0.0793510649004878;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.47218402281881006;  // std dev = 3.675, 57.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=35 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( complex(H, I), enzyme(H, J) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( enzyme(A, K), interaction(A, L) )
%   | | | then return 0.28672036367094034;  // std dev = 3.464, 49.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=21 */
%   | | | else return 0.43007875966091375;  // std dev = 8.353, 285.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=163 */
%   else return -0.1418510649004874;  // std dev = 2.83e-07, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), enzyme(A, E) )
%   | | then if ( interaction(A, F), interaction(D, F) )
%   | | | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.4098086555831175;  // std dev = 0.759, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7464298019400434;  // std dev = 0.217, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | else if ( phenotype(A, G), interaction(H, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14118885305216586;  // std dev = 0.061, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.30233855025529527;  // std dev = 7.094, 209.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=106 */
%   | | else if ( enzyme(A, I), interaction(A, J) )
%   | | | then return 0.5007147374594275;  // std dev = 2.735, 36.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=25 */
%   | | | else return 0.39308975821416897;  // std dev = 6.610, 185.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=111 */
%   else return -0.12544463852839216;  // std dev = 0.000, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), phenotype(D, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.5557013119239937;  // std dev = 0.089, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.11715162119086528;  // std dev = 0.864, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(D, H), interaction(H, D) )
%   | | | then return 0.5706816592076006;  // std dev = 0.097, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.6290211569424683;  // std dev = 0.174, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(K, I) )
%   | | | then return 0.36388097606378766;  // std dev = 1.003, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.6613529076816513;  // std dev = 0.109, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.19448589250901824;  // std dev = 5.190, 114.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=52 */
%   | | | else return 0.2765443843360959;  // std dev = 8.770, 319.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=173 */
%   else return -0.11231637819360664;  // std dev = 0.000, 328.000 (wgt'ed) examples reached here.  /* #neg=328 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, D), interaction(D, F) )
%   | | | then return 0.5333274816845595;  // std dev = 1.033, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | | else return 0.2748181053266382;  // std dev = 1.821, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.2359889611124176;  // std dev = 0.333, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0.202883883963637;  // std dev = 7.307, 227.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=122 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.4120559982838826;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.19337208490415092;  // std dev = 2.820, 32.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=17 */
%   | | else if ( enzyme(A, H), interaction(A, I) )
%   | | | then return 0.4890682412011668;  // std dev = 1.528, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return 0.30812897153017693;  // std dev = 5.081, 117.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=76 */
%   else return -0.101596329487836;  // std dev = 1.00e-08, 387.000 (wgt'ed) examples reached here.  /* #neg=387 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.3122873807455891;  // std dev = 0.119, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.4691099253393515;  // std dev = 0.305, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( complex(D, F) )
%   | | | then return 0.06256810719740762;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3538188385002627;  // std dev = 0.154, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( complex(A, G), interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.26994829383468133;  // std dev = 1.932, 36.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=27 */
%   | | | else return 0.01688377056881677;  // std dev = 3.995, 78.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=30 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.2989236625141683;  // std dev = 0.178, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.1907684925927717;  // std dev = 8.819, 324.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=184 */
%   else return -0.09269127618926044;  // std dev = 1.88e-07, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(E, A) )
%   | then if ( complex(A, F), phenotype(A, G) )
%   | | then if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.37385318000867684;  // std dev = 0.176, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.030456072920098665;  // std dev = 3.151, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | | else if ( interaction(A, E), location(A, I) )
%   | | | then return 0.12207712821162463;  // std dev = 1.960, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   | | | else return 0.25679818731677834;  // std dev = 3.921, 75.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=52 */
%   | else if ( interaction(J, A), location(A, K) )
%   | | then if ( interaction(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.2918580325470847;  // std dev = 1.970, 50.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=44 */
%   | | | else return 0.08110117706852187;  // std dev = 7.003, 217.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=108 */
%   | | else if ( complex(A, M), location(A, N) )
%   | | | then return -0.0011701466739497623;  // std dev = 2.596, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | | else return 0.08658893738700142;  // std dev = 3.484, 50.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=27 */
%   else return -0.08518475138839678;  // std dev = 6.25e-09, 332.000 (wgt'ed) examples reached here.  /* #neg=332 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.21539613578346722;  // std dev = 0.143, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.0483501387604203;  // std dev = 0.646, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.25972878974153446;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3570513671358411;  // std dev = 0.206, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( complex(G, I), complex(A, I) )
%   | | | then return -0.2880743046379363;  // std dev = 1.293, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.026849405839315343;  // std dev = 3.784, 77.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=34 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.33009993344397015;  // std dev = 0.305, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.09487069028330726;  // std dev = 9.051, 349.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=189 */
%   else return -0.07877675473109143;  // std dev = 4.56e-09, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G), phenotype(A, H) )
%   | | | then return 0.006584372424073152;  // std dev = 1.074, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.31494859915481166;  // std dev = 0.539, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.29197261427813487;  // std dev = 0.248, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.0028815597171635266;  // std dev = 3.957, 80.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=39 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B), interaction(A, K) )
%   | | | then return 0.2602741446399934;  // std dev = 1.482, 32.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=29 */
%   | | | else return 0.05031467974228518;  // std dev = 8.076, 283.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=151 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.5259311077109617;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.15366440042758595;  // std dev = 3.713, 62.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=40 */
%   else return -0.07324622576333767;  // std dev = 0.000, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( location(A, E), recursion_proteinclass(D, B) )
%   | | then if ( interaction(D, F), phenotype(A, G) )
%   | | | then return 0.034114049479289275;  // std dev = 1.303, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | | | else return 0.22590979827718663;  // std dev = 0.283, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( phenotype(D, H), interaction(D, I) )
%   | | | then return 0.030529016135070322;  // std dev = 5.121, 148.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=73 */
%   | | | else return -0.05457570590447705;  // std dev = 4.342, 83.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=35 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( location(A, L), location(J, L) )
%   | | | then return 0.08643806872450717;  // std dev = 2.469, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | | | else return 0.48736820678952664;  // std dev = 0.342, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.19170181399022312;  // std dev = 3.157, 50.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=35 */
%   | | | else return 0.10015104724694361;  // std dev = 5.216, 117.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=71 */
%   else return -0.06842697784420322;  // std dev = 0.000, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.14636967316776334;  // std dev = 0.100, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.2491840105651455;  // std dev = 0.262, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( phenotype(D, G) )
%   | | | then return 0.1650082033407041;  // std dev = 0.102, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.024634931345802955;  // std dev = 0.928, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( complex(A, I), location(H, J) )
%   | | | then return -0.10291165482495351;  // std dev = 2.474, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | | else return 0.060214950346601;  // std dev = 6.819, 216.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=122 */
%   | | else if ( phenotype(A, K), enzyme(A, L) )
%   | | | then return 0.1124143592037259;  // std dev = 2.818, 37.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=23 */
%   | | | else return -0.05925802292923296;  // std dev = 6.415, 169.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=81 */
%   else return -0.06419184008202564;  // std dev = 1.85e-07, 383.000 (wgt'ed) examples reached here.  /* #neg=383 */
Inference time using transfer learning 2.8356196880340576
Refined model CLL: -0.281874


******************************************
Best model found
******************************************
Results 

CLL : -0.280013 

AUC ROC : 0.893222 

AUC PR : 0.176555 

Precision : 0.032329 

Recall : 0.686047 

F1 : 0.061748 

Total Learning Time : 19.583924770355225 

Total Inference Time : 13.31284499168396 

Total revision time: 46.57181644439697
Best scored revision CLL: -0.281874


Results 

CLL : -0.280013 

AUC ROC : 0.893222 

AUC PR : 0.176555 

Precision : 0.032329 

Recall : 0.686047 

F1 : 0.061748 

Total Learning Time : 46.61306071281433 

Total Inference Time : 13.31284499168396 

Run: 2

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 7.745795249938965
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4154611880639348;  // std dev = 0.497, 506.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048752;  // std dev = 1.25e-08, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then return 0.3589705234426638;  // std dev = 10.889, 481.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=269 */
%   | else return 0.3906280551002018;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839224;  // std dev = 0.000, 387.000 (wgt'ed) examples reached here.  /* #neg=387 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3307049389413947;  // std dev = 0.491, 474.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360629;  // std dev = 0.000, 383.000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, A), complex(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.24574054824739552;  // std dev = 10.896, 487.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=282 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G) )
%   | | | then return -0.10159632948783665;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then return 0.20034293257146812;  // std dev = 10.503, 456.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=269 */
%   | else return 0.28708707865637695;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926043;  // std dev = 1.06e-08, 326.000 (wgt'ed) examples reached here.  /* #neg=326 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.14055406901956222;  // std dev = 10.846, 483.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=280 */
%   | | else return -0.04985492079650524;  // std dev = 1.063, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 1.15e-07, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */
%   | | else return -0.08518475138839683;  // std dev = 1.29e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.10959519139126069;  // std dev = 0.493, 483.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, F) )
%   | | then return -0.07877675473109141;  // std dev = 8.69e-08, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(C, D) )
%   | then return 0.0953487860263113;  // std dev = 10.628, 469.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=280 */
%   | else return -0.06466734720328719;  // std dev = 1.063, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333711;  // std dev = 3.84e-09, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.031985459849850725;  // std dev = 11.185, 506.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420329;  // std dev = 0.000, 376.000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04073274570165453;  // std dev = 10.963, 492.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202564;  // std dev = 9.45e-09, 383.000 (wgt'ed) examples reached here.  /* #neg=383 */
Inference time using transfer learning 2.8496131896972656
Parameter learned model CLL:-0.326589 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.497, 224, 282], 'false,true': [0.0, 0, 0], 'false,false': [1.25e-08, 354, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'location(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true,true': [10.889, 212, 269], 'true,false': [2.306, 9, 13], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 387, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.491, 192, 282], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 383, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, A), complex(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'location(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [10.896, 205, 282], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 310, 0], 'false,false,false,false': [0.0, 15, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'location(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [10.503, 187, 269], 'true,false': [2.026, 6, 13], 'false,true': [0.0, 0, 0], 'false,false': [1.06e-08, 326, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'location(A, G)'}, {'true,true,true': [10.846, 203, 280], 'true,true,false': [1.063, 3, 2], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.15e-07, 342, 0], 'false,false,false': [1.29e-08, 19, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'location(A, F)'}, {'true,true': [0.493, 201, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.69e-08, 361, 0], 'false,false,false': [0.0, 16, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'location(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [10.628, 189, 280], 'true,false': [1.063, 3, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.84e-09, 350, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [11.185, 224, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 376, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [10.963, 210, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.45e-09, 383, 0]}]
{'': [0.2467153056601444, 1.5304769379013457e-16], 'false': [nan, 1.5304769379013457e-16]}
{'': [0.2463232533230115, -1.2622690719252425e-16], 'true': [0.24648925272626626, 0.24173553719008234], 'false': [nan, -1.2622690719252425e-16], 'false,false': [nan, -1.2622690719252425e-16], 'false,false,false': [nan, -1.2622690719252425e-16]}
{'': [0.2409910370785248, -2.3190037067888386e-17], 'false': [nan, -2.3190037067888386e-17], 'false,false': [nan, -2.3190037067888386e-17]}
{'': [0.24379552305561125, -2.3229281746003274e-17], 'true': [nan, 0.24379552305561125], 'false': [nan, -2.3229281746003274e-17], 'false,false': [nan, -2.3229281746003274e-17], 'false,false,false': [-4.870655849968429e-17, -7.401486830834377e-18]}
{'': [0.24117075238781832, 1.1306565772256194e-16], 'true': [0.24191578177900788, 0.21606648199445963], 'false': [nan, 1.1306565772256194e-16]}
{'': [0.2437257719712023, 4.059541253477027e-17], 'true': [0.2437257719712023, nan], 'true,true': [0.24353646070722, 0.2261291278105347], 'false': [nan, 4.059541253477027e-17], 'false,false': [3.895519384649672e-17, 8.764918615461762e-18]}
{'': [0.24332830184897913, 2.70929756672452e-17], 'true': [0.24332830184897913, nan], 'false': [nan, 2.70929756672452e-17], 'false,false': [2.0912788275487714e-17, -8.673617379884035e-19]}
{'': [0.24093090741306825, 1.5225915766287862e-17], 'true': [0.2408193066716163, 0.2260639907225109], 'false': [nan, 1.5225915766287862e-17], 'false,false': [nan, 1.5225915766287862e-17]}
{'': [0.24724715749322224, -1.0098305170792647e-16], 'true': [0.24724715749322224, nan], 'false': [nan, -1.0098305170792647e-16], 'false,false': [nan, -1.0098305170792647e-16]}
{'': [0.24426902977499937, 8.928164271137029e-17], 'true': [0.24426902977499937, nan], 'false': [nan, 8.928164271137029e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;location(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;location(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;location(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 19.781060218811035
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, D), phenotype(A, G) )
%   | | | then return 0.8581489350995116;  // std dev = 2.15e-07, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return 0.524815601766179;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
%   | | else if ( interaction(H, D), interaction(H, A) )
%   | | | then return 0.2285193054698814;  // std dev = 4.346, 81.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=30 */
%   | | | else return 0.4335679295129206;  // std dev = 6.613, 179.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=103 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.4316783468642183;  // std dev = 5.768, 136.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=78 */
%   else return -0.14185106490048752;  // std dev = 2.37e-07, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E), phenotype(D, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.7504469666907129;  // std dev = 0.095, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.20825496066960905;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(H, D) )
%   | | | then return 0.7525776760979256;  // std dev = 0.256, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | | else return 0.43263514699806277;  // std dev = 0.874, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( enzyme(I, J), phenotype(I, K) )
%   | | | then return 0.341177647876712;  // std dev = 1.039, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.6991890923761932;  // std dev = 1.026, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1815557534342436;  // std dev = 0.052, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.31955350903719304;  // std dev = 10.087, 414.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=216 */
%   else return -0.1254446385283922;  // std dev = 0.000, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), complex(E, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.5813147864066857;  // std dev = 0.247, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.36227064612597226;  // std dev = 0.978, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( complex(A, H), interaction(I, D) )
%   | | | then return 0.5702003070651375;  // std dev = 0.096, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.6477962786250212;  // std dev = 0.180, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(A, J), interaction(K, A) )
%   | | then if ( interaction(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.6449906057226824;  // std dev = 1.052, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | | | else return 0.11318770545442888;  // std dev = 5.211, 127.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=46 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.2641541900392664;  // std dev = 2.829, 33.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=18 */
%   | | | else return 0.3407392752231225;  // std dev = 7.440, 231.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=138 */
%   else return -0.11231637819360636;  // std dev = 0.000, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( phenotype(A, F), enzyme(D, G) )
%   | | | then return 0.17301882627071322;  // std dev = 1.173, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.4299645187336768;  // std dev = 0.197, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.6096892994263747;  // std dev = 0.189, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.49927674464382377;  // std dev = 0.176, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, J), interaction(K, A) )
%   | | then if ( recursion_proteinclass(K, B), complex(K, L) )
%   | | | then return 0.5107798985365007;  // std dev = 0.139, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.11999944668851807;  // std dev = 5.687, 157.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=67 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.3050021111463691;  // std dev = 5.002, 111.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=71 */
%   | | | else return 0.24833360136096277;  // std dev = 6.129, 158.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=92 */
%   else return -0.10159632948783619;  // std dev = 7.68e-09, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G), interaction(F, A) )
%   | | | then return 0.07252217779782266;  // std dev = 1.502, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return 0.40349320419251067;  // std dev = 1.353, 42.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=40 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return -0.1250760190026942;  // std dev = 1.520, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return 0.11637365849057418;  // std dev = 7.050, 206.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=101 */
%   | else if ( complex(A, I), interaction(J, A) )
%   | | then if ( phenotype(A, K), location(J, L) )
%   | | | then return 0.20053272252793025;  // std dev = 1.812, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | | else return 0.5960330719692792;  // std dev = 0.393, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( phenotype(A, M), enzyme(A, N) )
%   | | | then return 0.35024467539711035;  // std dev = 2.255, 28.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
%   | | | else return 0.18862309928697912;  // std dev = 5.578, 138.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=82 */
%   else return -0.09269127618926064;  // std dev = 1.83e-07, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(A, E) )
%   | then if ( complex(D, E), recursion_proteinclass(D, B) )
%   | | then if ( phenotype(D, F) )
%   | | | then return 0.3124977624901985;  // std dev = 0.164, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.25736400286322675;  // std dev = 0.126, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( phenotype(D, G) )
%   | | | then return 0.07042188704816606;  // std dev = 4.654, 107.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=52 */
%   | | | else return -0.05176110340228817;  // std dev = 3.224, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | else if ( enzyme(A, H), interaction(I, A) )
%   | | then if ( complex(I, J) )
%   | | | then return 0.06212421375173223;  // std dev = 3.694, 63.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=30 */
%   | | | else return 0.2687396853349155;  // std dev = 1.973, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.21815574195312187;  // std dev = 4.868, 119.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=77 */
%   | | | else return 0.14742243096190538;  // std dev = 4.926, 104.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=62 */
%   else return -0.08518475138839678;  // std dev = 6.25e-09, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.2586794073722671;  // std dev = 0.344, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return -0.12920760180485538;  // std dev = 0.935, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(D, A) )
%   | | | then return 0.3146555091602741;  // std dev = 0.163, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.372910273261277;  // std dev = 0.184, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( interaction(G, A), enzyme(A, H) )
%   | | | then return -0.25777902178319184;  // std dev = 0.906, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.036309934997556886;  // std dev = 4.121, 81.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=38 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.14178245387425095;  // std dev = 6.225, 183.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=107 */
%   | | | else return 0.05031016956696538;  // std dev = 6.304, 169.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=90 */
%   else return -0.07877675473109143;  // std dev = 4.37e-09, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(A, E) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( recursion_proteinclass(D, B), interaction(D, F) )
%   | | | then return 0.20508316239292776;  // std dev = 0.105, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.29706703899414943;  // std dev = 0.134, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(D, D), phenotype(D, E) )
%   | | | then return -0.13300688418180653;  // std dev = 1.301, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.1591248481402418;  // std dev = 5.826, 169.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=109 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( complex(A, H), complex(G, I) )
%   | | | then return 0.002919887613635414;  // std dev = 1.165, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.24654234692615673;  // std dev = 1.809, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | else if ( complex(A, J), location(A, K) )
%   | | | then return -0.011080784564447726;  // std dev = 4.113, 82.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=42 */
%   | | | else return 0.05451437291068444;  // std dev = 5.928, 151.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=83 */
%   else return -0.07324622576333711;  // std dev = 7.30e-08, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), interaction(A, D) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.1660854602972684;  // std dev = 0.057, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.16854786109328232;  // std dev = 0.782, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.19942756020128355;  // std dev = 0.158, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.25917834968106734;  // std dev = 0.226, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( enzyme(A, I), phenotype(G, J) )
%   | | | then return 0.2029037039804539;  // std dev = 3.192, 57.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=38 */
%   | | | else return 0.0295238922954052;  // std dev = 5.914, 164.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=85 */
%   | | else if ( complex(A, K), enzyme(A, L) )
%   | | | then return 0.130235242743615;  // std dev = 2.576, 29.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
%   | | | else return -0.04600628658166642;  // std dev = 6.825, 197.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=94 */
%   else return -0.06842697784420326;  // std dev = 0.000, 369.000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(A, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, F), phenotype(A, G) )
%   | | | then return -0.0335452119706604;  // std dev = 1.319, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.2590143156908077;  // std dev = 0.709, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.11704046868574038;  // std dev = 3.737, 95.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=26 */
%   | | | else return 0.0508918755325148;  // std dev = 7.443, 239.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=138 */
%   | else if ( enzyme(A, J), interaction(A, K) )
%   | | then if ( location(A, L), complex(K, M) )
%   | | | then return 0.15613636400312997;  // std dev = 1.833, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | | else return -0.06590912513886985;  // std dev = 1.539, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( complex(A, N), phenotype(A, P) )
%   | | | then return 0.5437948447429691;  // std dev = 0.022, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.16495571053152736;  // std dev = 3.090, 49.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=33 */
%   else return -0.06419184008202575;  // std dev = 1.63e-07, 352.000 (wgt'ed) examples reached here.  /* #neg=352 */
Inference time using transfer learning 7.277662754058838
Refined model CLL: -0.286547


******************************************
Best model found
******************************************
Results 

CLL : -0.278779 

AUC ROC : 0.888168 

AUC PR : 0.104034 

Precision : 0.030271 

Recall : 0.655172 

F1 : 0.057868 

Total Learning Time : 19.781060218811035 

Total Inference Time : 17.947317600250244 

Total revision time: 63.01599740982056
Best scored revision CLL: -0.286547


Results 

CLL : -0.278779 

AUC ROC : 0.888168 

AUC PR : 0.104034 

Precision : 0.030271 

Recall : 0.655172 

F1 : 0.057868 

Total Learning Time : 63.04191040992737 

Total Inference Time : 17.947317600250244 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos examples: 104
Target test neg examples: 16320

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.36948299407959
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4367515551868442;  // std dev = 0.494, 458.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048774;  // std dev = 8.33e-09, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.36847966126384496;  // std dev = 6.766, 187.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=107 */
%   | else return 0.3411147341017567;  // std dev = 8.480, 290.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=158 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839208;  // std dev = 0.000, 340.000 (wgt'ed) examples reached here.  /* #neg=340 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3079700426242382;  // std dev = 0.494, 461.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360658;  // std dev = 0.000, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, A), complex(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.26718680225533803;  // std dev = 10.316, 443.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=265 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783645;  // std dev = 0.000, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   | | | else return -0.10159632948783655;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #neg=202 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.2291213806207569;  // std dev = 6.328, 171.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=107 */
%   | else return 0.174205931052165;  // std dev = 8.297, 280.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=158 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926042;  // std dev = 1.11e-08, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16613678872292872;  // std dev = 7.809, 259.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=158 */
%   | | else return 0.1276198258986311;  // std dev = 6.889, 190.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=107 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 6.32e-08, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | | else return -0.08518475138839678;  // std dev = 7.74e-08, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.1043704666890054;  // std dev = 0.494, 455.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.07877675473109153;  // std dev = 7.30e-08, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | | else return -0.07877675473109147;  // std dev = 7.45e-08, 203.000 (wgt'ed) examples reached here.  /* #neg=203 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.10546594930427088;  // std dev = 7.746, 256.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=158 */
%   | else return 0.06480739463023673;  // std dev = 6.925, 192.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=107 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333695;  // std dev = 6.11e-09, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07651951082636006;  // std dev = 10.264, 440.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420325;  // std dev = 0.000, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.020637417303428832;  // std dev = 10.725, 469.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202576;  // std dev = 8.48e-09, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
Inference time using transfer learning 2.439664602279663
Parameter learned model CLL:-0.333557 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.494, 193, 265], 'false,true': [0.0, 0, 0], 'false,false': [8.33e-09, 314, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true,true': [6.766, 80, 107], 'true,false': [8.48, 132, 158], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 340, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.494, 196, 265], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 336, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, A), complex(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [10.316, 178, 265], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 149, 0], 'false,false,false,false': [0.0, 202, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.328, 64, 107], 'true,false': [8.297, 122, 158], 'false,true': [0.0, 0, 0], 'false,false': [1.11e-08, 346, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [7.809, 101, 158], 'true,true,false': [6.889, 83, 107], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [6.32e-08, 148, 0], 'false,false,false': [7.74e-08, 193, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.494, 190, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.3e-08, 131, 0], 'false,false,false': [7.45e-08, 203, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [7.746, 98, 158], 'true,false': [6.925, 85, 107], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [6.11e-09, 291, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [10.264, 175, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 364, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [10.725, 204, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.48e-09, 345, 0]}]
{'': [0.24382162811540903, 6.788624863950002e-17], 'false': [nan, 6.788624863950002e-17]}
{'': [0.24691358024690838, -9.665471037913128e-17], 'true': [0.2447882410134698, 0.2479904875148653], 'false': [nan, -9.665471037913128e-17], 'false,false': [nan, -9.665471037913128e-17], 'false,false,false': [nan, -9.665471037913128e-17]}
{'': [0.2445114322664093, -3.700743415417188e-17], 'false': [nan, -3.700743415417188e-17], 'false,false': [nan, -3.700743415417188e-17]}
{'': [0.24022127462505014, 3.289549702593056e-17], 'true': [nan, 0.24022127462505014], 'false': [nan, 3.289549702593056e-17], 'false,false': [nan, 3.289549702593056e-17], 'false,false,false': [-5.960928991276008e-17, -8.57399959611507e-17]}
{'': [0.24215033366947447, 1.2321550331100002e-16], 'true': [0.23419171710953704, 0.24586734693877546], 'false': [nan, 1.2321550331100002e-16]}
{'': [0.24189373947505757, 3.9069431951618414e-17], 'true': [0.24189373947505757, nan], 'true,true': [0.2354684412328853, 0.24979666464439107], 'false': [nan, 3.9069431951618414e-17], 'false,false': [2.700542492331462e-17, 3.106323488588521e-17]}
{'': [0.24367333201302435, 7.97765047634843e-18], 'true': [0.24367333201302435, nan], 'false': [nan, 7.97765047634843e-18], 'false,false': [4.0679927619853064e-17, 2.73453946952009e-17]}
{'': [0.24135485534121187, 3.738895409390562e-17], 'true': [0.23434968105614185, 0.24975044882519978], 'false': [nan, 3.738895409390562e-17], 'false,false': [nan, 3.738895409390562e-17]}
{'': [0.23945233398651392, -9.455196088840619e-17], 'true': [0.23945233398651392, nan], 'false': [nan, -9.455196088840619e-17], 'false,false': [nan, -9.455196088840619e-17]}
{'': [0.24527059590316821, 7.144043810631442e-17], 'true': [0.24527059590316821, nan], 'false': [nan, 7.144043810631442e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 37.6022264957428
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), enzyme(A, F) )
%   | | then if ( interaction(D, G) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995124;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( enzyme(A, I), interaction(H, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.35814893509951146;  // std dev = 4.183, 70.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=35 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.35814893509951107;  // std dev = 4.243, 72.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | | else return 0.43769438964496415;  // std dev = 8.021, 264.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=153 */
%   else return -0.14185106490048768;  // std dev = 1.74e-07, 325.000 (wgt'ed) examples reached here.  /* #neg=325 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D) )
%   | | then return 0.7456746542868093;  // std dev = 0.224, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return 0.5961341642912548;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( complex(A, F), interaction(G, A) )
%   | | then if ( location(G, H), location(A, H) )
%   | | | then return 0.21478122664664867;  // std dev = 5.622, 132.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=55 */
%   | | | else return 0.4511769528890069;  // std dev = 2.132, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1583517513713781;  // std dev = 0.081, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.35592800016273024;  // std dev = 8.282, 281.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=157 */
%   else return -0.1254446385283922;  // std dev = 0.000, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), phenotype(E, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.5361302716786668;  // std dev = 1.039, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.2624891431821264;  // std dev = 1.083, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5562039021693684;  // std dev = 0.077, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.668446321708638;  // std dev = 0.044, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( interaction(J, A), interaction(A, J) )
%   | | | then return 0.04001567324141188;  // std dev = 2.323, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return 0.25945392885006224;  // std dev = 3.811, 60.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=31 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.23917821890776336;  // std dev = 3.988, 65.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=32 */
%   | | | else return 0.3237250515943766;  // std dev = 7.937, 263.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=154 */
%   else return -0.11231637819360636;  // std dev = 0.000, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( location(A, E), location(D, E) )
%   | | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.42610406833548786;  // std dev = 0.132, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.5885033906288548;  // std dev = 0.082, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0.12362086543412401;  // std dev = 0.958, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( complex(H, I), complex(G, I) )
%   | | | then return 0.14420540070831203;  // std dev = 5.081, 108.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=49 */
%   | | | else return 0.2636050290457978;  // std dev = 6.560, 186.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=109 */
%   | | else if ( interaction(A, J), enzyme(A, K) )
%   | | | then return 0.4969750080502091;  // std dev = 1.798, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | | | else return 0.3028820162537211;  // std dev = 4.270, 78.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
%   else if ( complex(A, L) )
%   | then return -0.10159632948783641;  // std dev = 0.000, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | else return -0.10159632948783655;  // std dev = 0.000, 203.000 (wgt'ed) examples reached here.  /* #neg=203 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(F, A) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.3458930208022101;  // std dev = 0.246, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.015509155341551395;  // std dev = 1.132, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.3901721133478287;  // std dev = 0.096, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.45199140231191137;  // std dev = 0.112, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( complex(A, I) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.2606006970496194;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.11447052772592159;  // std dev = 6.527, 174.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=84 */
%   | | else if ( interaction(A, J), enzyme(A, K) )
%   | | | then return 0.28354245798426536;  // std dev = 2.589, 33.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=22 */
%   | | | else return 0.17177314946812922;  // std dev = 7.126, 211.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=118 */
%   else return -0.09269127618926043;  // std dev = 1.04e-08, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(E, F), enzyme(A, G) )
%   | | | then return 0.3672057088509235;  // std dev = 4.089, 116.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=96 */
%   | | | else return 0.16606873393854782;  // std dev = 7.494, 263.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=159 */
%   | | else if ( location(H, D), interaction(H, A) )
%   | | | then return -0.34983928986674684;  // std dev = 0.375, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.4400695959412398;  // std dev = 0.177, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.4861877930318645;  // std dev = 0.224, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.34295398125851145;  // std dev = 0.345, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 8.797098903360705E-5;  // std dev = 1.317, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.30910586234568826;  // std dev = 0.875, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.08518475138839678;  // std dev = 6.25e-09, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.2214270469923266;  // std dev = 0.124, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.3894338371798511;  // std dev = 0.106, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( phenotype(A, G), location(D, H) )
%   | | | then return 0.08950955324846205;  // std dev = 5.160, 125.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=65 */
%   | | | else return 0.19890904569206355;  // std dev = 4.294, 97.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=64 */
%   | else if ( phenotype(A, I), interaction(A, J) )
%   | | then if ( phenotype(J, K), interaction(J, J) )
%   | | | then return 0.009660129266273701;  // std dev = 1.940, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.2191426147833053;  // std dev = 2.505, 35.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=26 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.19537520439822773;  // std dev = 0.797, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.024806935062558547;  // std dev = 5.435, 140.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=67 */
%   else return -0.07877675473109141;  // std dev = 4.37e-09, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A) )
%   | | then if ( location(A, E), enzyme(A, F) )
%   | | | then return 0.16082792424553835;  // std dev = 0.039, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.1944409159571827;  // std dev = 0.095, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.203016067873571;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.29572478299811666;  // std dev = 0.165, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( phenotype(I, J), interaction(K, I) )
%   | | | then return 0.1301335452076443;  // std dev = 6.438, 194.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=117 */
%   | | | else return -0.010036471321006898;  // std dev = 4.195, 88.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=41 */
%   | | else if ( interaction(L, A), complex(A, M) )
%   | | | then return -0.002525977725016837;  // std dev = 1.638, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.15881910354997586;  // std dev = 4.215, 90.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=60 */
%   else return -0.07324622576333711;  // std dev = 3.84e-09, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.18251995673442079;  // std dev = 0.237, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.4724391027056635;  // std dev = 0.543, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return -0.05740276948470583;  // std dev = 3.430, 63.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=25 */
%   | | | else return 0.17121354905473768;  // std dev = 4.211, 101.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=70 */
%   | else if ( enzyme(A, I), phenotype(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.3841020666223833;  // std dev = 0.446, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return -0.5256293243566115;  // std dev = 0.503, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return -0.032368909766035826;  // std dev = 4.093, 83.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=41 */
%   | | | else return 0.07110823235642622;  // std dev = 4.915, 114.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=70 */
%   else return -0.06842697784420326;  // std dev = 0.000, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), enzyme(F, G) )
%   | | then if ( phenotype(F, H), location(E, I) )
%   | | | then return 0.10374643332964525;  // std dev = 3.010, 53.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=35 */
%   | | | else return 0.34938331465088507;  // std dev = 1.379, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | else if ( interaction(E, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3254992320554314;  // std dev = 1.709, 63.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=60 */
%   | | | else return -0.44600360917635656;  // std dev = 0.627, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.05157321305477327;  // std dev = 6.806, 226.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=143 */
%   | | | else return -0.3611175892331923;  // std dev = 0.371, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( interaction(M, A) )
%   | | | then return -0.10111312828190334;  // std dev = 1.641, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return -0.292528843816835;  // std dev = 1.494, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   else return -0.06419184008202569;  // std dev = 9.08e-09, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
Inference time using transfer learning 5.713907957077026
Refined model CLL: -0.262481


******************************************
Best model found
******************************************
Results 

CLL : -0.261298 

AUC ROC : 0.953447 

AUC PR : 0.153209 

Precision : 0.043902 

Recall : 0.951923 

F1 : 0.083934 

Total Learning Time : 37.6022264957428 

Total Inference Time : 30.547948360443115 

Total revision time: 81.25533843040466
Best scored revision CLL: -0.262481


Results 

CLL : -0.261298 

AUC ROC : 0.953447 

AUC PR : 0.153209 

Precision : 0.043902 

Recall : 0.951923 

F1 : 0.083934 

Total Learning Time : 81.28125143051147 

Total Inference Time : 30.547948360443115 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos examples: 92
Target test neg examples: 12594

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.859720230102539
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.44130682983635006;  // std dev = 0.493, 475.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 1.07e-08, 333.000 (wgt'ed) examples reached here.  /* #neg=333 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.34291564258619667;  // std dev = 6.861, 190.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=104 */
%   | else return 0.38599090754038895;  // std dev = 8.417, 293.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=173 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839216;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3170674404320764;  // std dev = 0.492, 471.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360674;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #neg=315 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, A), complex(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21035719868279387;  // std dev = 11.185, 505.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=277 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783634;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | | else return -0.10159632948783656;  // std dev = 0.000, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.18188050043071763;  // std dev = 6.748, 185.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=104 */
%   | else return 0.14019070840009018;  // std dev = 9.011, 326.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=173 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926087;  // std dev = 7.33e-09, 402.000 (wgt'ed) examples reached here.  /* #neg=402 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.21600757717727184;  // std dev = 7.799, 264.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=169 */
%   | | else return 0.1051388169207745;  // std dev = 7.128, 204.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=108 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 4.94e-08, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | | else return -0.08518475138839678;  // std dev = 8.43e-08, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.13514427140148264;  // std dev = 0.489, 461.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.07877675473109153;  // std dev = 6.91e-08, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | | else return -0.07877675473109143;  // std dev = 6.66e-08, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.09224392653510857;  // std dev = 8.186, 280.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=169 */
%   | else return 0.023328509241938078;  // std dev = 7.295, 213.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=108 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333709;  // std dev = 4.06e-09, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.0466773564008188;  // std dev = 10.985, 493.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0684269778442032;  // std dev = 0.000, 349.000 (wgt'ed) examples reached here.  /* #neg=349 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.060162591758544694;  // std dev = 10.661, 472.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0641918400820257;  // std dev = 8.84e-09, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
Inference time using transfer learning 2.240234613418579
Parameter learned model CLL:-0.325493 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.493, 198, 277], 'false,true': [0.0, 0, 0], 'false,false': [1.07e-08, 333, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true,true': [6.861, 86, 104], 'true,false': [8.417, 120, 173], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 337, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.492, 194, 277], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 315, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, A), complex(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [11.185, 228, 277], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 116, 0], 'false,false,false,false': [0.0, 232, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.748, 81, 104], 'true,false': [9.011, 153, 173], 'false,true': [0.0, 0, 0], 'false,false': [7.33e-09, 402, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [7.799, 95, 169], 'true,true,false': [7.128, 96, 108], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.94e-08, 126, 0], 'false,false,false': [8.43e-08, 228, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.489, 184, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [6.91e-08, 130, 0], 'false,false,false': [6.66e-08, 236, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.186, 111, 169], 'true,false': [7.295, 105, 108], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.06e-09, 341, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [10.985, 216, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 349, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [10.661, 195, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.84e-09, 363, 0]}]
{'': [0.24308476454293934, 1.1202250338560137e-16], 'false': [nan, 1.1202250338560137e-16]}
{'': [0.24459790217285038, -1.1596394797271666e-16], 'true': [0.24775623268697738, 0.24181993966149856], 'false': [nan, -1.1596394797271666e-16], 'false,false': [nan, -1.1596394797271666e-16], 'false,false,false': [nan, -1.1596394797271666e-16]}
{'': [0.24212300813678037, -4.5113824492704774e-17], 'false': [nan, -4.5113824492704774e-17], 'false,false': [nan, -4.5113824492704774e-17]}
{'': [0.2477223095002936, 2.807460522040626e-17], 'true': [nan, 0.2477223095002936], 'false': [nan, 2.807460522040626e-17], 'false,false': [nan, 2.807460522040626e-17], 'false,false,false': [-2.871266442996095e-17, -7.465292751789846e-17]}
{'': [0.2484021840655668, 5.3025577295529864e-17], 'true': [0.2461358655953245, 0.2490590537844876], 'false': [nan, 5.3025577295529864e-17]}
{'': [0.24157318811215292, 3.888916809421452e-17], 'true': [0.24157318811215292, nan], 'true,true': [0.23040593068865664, 0.24909105085884606], 'false': [nan, 3.888916809421452e-17], 'false,false': [1.938484646170908e-17, 3.1164155077197375e-17]}
{'': [0.2386358361723766, 2.1840452943445702e-17], 'true': [0.2386358361723766, nan], 'false': [nan, 2.1840452943445702e-17], 'false,false': [3.6722761583755177e-17, 1.881733940042638e-17]}
{'': [0.24502977384856262, 1.6278929979841006e-17], 'true': [0.23930479075267805, 0.24985818229566248], 'false': [nan, 1.6278929979841006e-17], 'false,false': [nan, 1.6278929979841006e-17]}
{'': [0.24475083251056373, -9.288972011190421e-17], 'true': [0.24475083251056373, nan], 'false': [nan, -9.288972011190421e-17], 'false,false': [nan, -9.288972011190421e-17]}
{'': [0.2408179095347634, 7.829672019395044e-17], 'true': [0.2408179095347634, nan], 'false': [nan, 7.829672019395044e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 22.821064233779907
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E), complex(A, F) )
%   | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( enzyme(A, G), location(A, H) )
%   | | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.8581489350995115;  // std dev = 2.38e-07, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.3467852987358762;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=43 */
%   | | | else return 0.44224679442672743;  // std dev = 8.913, 327.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=191 */
%   else return -0.14185106490048752;  // std dev = 2.37e-07, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, A), enzyme(D, E) )
%   | | then return 0.5466101498798834;  // std dev = 0.882, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.7250873147818799;  // std dev = 0.083, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.13879322180091322;  // std dev = 0.823, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.6867995800735915;  // std dev = 1.326, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.2779748876773001;  // std dev = 6.034, 147.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=70 */
%   | | | else return 0.36091109156141293;  // std dev = 7.992, 262.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=147 */
%   else return -0.12544463852839222;  // std dev = 0.000, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), phenotype(A, F) )
%   | | then if ( enzyme(D, E) )
%   | | | then return 0.6341511571681308;  // std dev = 0.079, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.004950007658632072;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5230681146208191;  // std dev = 0.947, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.6722569214061684;  // std dev = 0.122, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1668557174590611;  // std dev = 0.019, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.2696480723670888;  // std dev = 4.197, 71.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=38 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.4209798380276101;  // std dev = 4.802, 108.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=74 */
%   | | | else return 0.3046788284820343;  // std dev = 7.091, 211.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=122 */
%   else return -0.11231637819360626;  // std dev = 0.000, 389.000 (wgt'ed) examples reached here.  /* #neg=389 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(D, E) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.4403778346305922;  // std dev = 0.141, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.12384141972540219;  // std dev = 1.073, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.4240170569295657;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5267581348980955;  // std dev = 0.205, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( complex(A, G), interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5870227872056186;  // std dev = 1.340, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return 0.05046889480500138;  // std dev = 5.166, 122.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=45 */
%   | | else if ( location(A, J) )
%   | | | then return 0.24040939214697454;  // std dev = 7.981, 269.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=156 */
%   | | | else return 0.12448047247618753;  // std dev = 2.328, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   else return -0.10159632948783612;  // std dev = 8.64e-09, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.33410945246960483;  // std dev = 0.118, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.3966148519401529;  // std dev = 0.204, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(A, F), complex(F, G) )
%   | | | then return -0.1340165713384439;  // std dev = 0.920, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.412076159413529;  // std dev = 0.179, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(H, A), location(A, I) )
%   | | then if ( location(H, I), interaction(A, J) )
%   | | | then return 0.08271787188713689;  // std dev = 6.008, 170.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=77 */
%   | | | else return 0.1808353324218391;  // std dev = 7.256, 214.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=121 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.21577047084678264;  // std dev = 2.934, 38.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=23 */
%   | | | else return 0.47814817186768704;  // std dev = 1.314, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else return -0.09269127618926044;  // std dev = 1.81e-07, 312.000 (wgt'ed) examples reached here.  /* #neg=312 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( enzyme(A, F), interaction(G, D) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.3040785683346604;  // std dev = 0.815, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.04507563811855473;  // std dev = 2.981, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.48712712061693514;  // std dev = 0.529, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.08010331539593485;  // std dev = 4.354, 85.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=44 */
%   | else if ( enzyme(A, I), complex(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.5660114019567375;  // std dev = 0.400, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.3966600230596772;  // std dev = 0.063, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.11177255024431142;  // std dev = 6.018, 168.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=95 */
%   | | | else return 0.20395910931881586;  // std dev = 4.870, 114.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=74 */
%   else return -0.08518475138839678;  // std dev = 6.25e-09, 338.000 (wgt'ed) examples reached here.  /* #neg=338 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(A, F), recursion_proteinclass(E, B) )
%   | | then if ( interaction(D, E), interaction(F, A) )
%   | | | then return 0.38728311936501153;  // std dev = 1.454, 62.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=61 */
%   | | | else return -0.046292602209721506;  // std dev = 1.517, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return -0.18417462772059054;  // std dev = 2.458, 51.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
%   | | | else return 0.12664488538546417;  // std dev = 7.435, 251.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=151 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.45625754321211925;  // std dev = 0.445, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.36332004614033986;  // std dev = 0.181, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return -0.08408165221936348;  // std dev = 1.545, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.022590004706500372;  // std dev = 3.622, 54.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=28 */
%   else return -0.07877675473109143;  // std dev = 4.56e-09, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then return 0.17055691208744594;  // std dev = 0.117, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( interaction(F, A), location(D, G) )
%   | | | then return 0.3206464720133334;  // std dev = 0.207, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.2441127844095747;  // std dev = 0.148, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.34235474986821646;  // std dev = 1.540, 33.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=30 */
%   | | | else return 0.06852611669247477;  // std dev = 6.114, 179.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=92 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.06850375171507178;  // std dev = 2.791, 46.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
%   | | | else return 0.06256948697227661;  // std dev = 6.065, 166.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=95 */
%   else return -0.07324622576333766;  // std dev = 0.000, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B), complex(A, E) )
%   | | then if ( interaction(D, F), interaction(F, A) )
%   | | | then return 0.1588551046188708;  // std dev = 0.111, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.2776908995377096;  // std dev = 0.187, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, G), location(A, H) )
%   | | | then return -0.03491418356659516;  // std dev = 4.609, 126.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=54 */
%   | | | else return 0.039524001132425976;  // std dev = 5.949, 163.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=93 */
%   | else if ( location(A, I), interaction(J, A) )
%   | | then if ( location(J, I), interaction(K, J) )
%   | | | then return 0.21538959480768916;  // std dev = 3.039, 62.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=46 */
%   | | | else return 0.008714584266446357;  // std dev = 3.657, 58.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=31 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.06045967520272259;  // std dev = 2.546, 37.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=21 */
%   | | | else return -0.07830608247738813;  // std dev = 2.206, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   else return -0.06842697784420326;  // std dev = 0.000, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), interaction(F, A) )
%   | | then if ( enzyme(D, G) )
%   | | | then return -0.08673780588292951;  // std dev = 2.753, 45.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=21 */
%   | | | else return 0.04742653860407843;  // std dev = 4.493, 120.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=71 */
%   | | else if ( enzyme(A, H), phenotype(A, E) )
%   | | | then return 0.33780595947413705;  // std dev = 0.950, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.10817157777744274;  // std dev = 5.582, 158.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=100 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.12752876803287874;  // std dev = 0.027, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.20985391936223108;  // std dev = 0.058, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.07974070252851824;  // std dev = 3.226, 52.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=23 */
%   | | | else return 0.008223105405301852;  // std dev = 4.277, 87.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=45 */
%   else return -0.06419184008202569;  // std dev = 1.74e-07, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
Inference time using transfer learning 2.7008626461029053
Refined model CLL: -0.275173


******************************************
Best model found
******************************************
Results 

CLL : -0.265343 

AUC ROC : 0.927334 

AUC PR : 0.284977 

Precision : 0.036028 

Recall : 0.847826 

F1 : 0.069118 

Total Learning Time : 22.821064233779907 

Total Inference Time : 22.051936626434326 

Total revision time: 56.69445037841797
Best scored revision CLL: -0.275173


Results 

CLL : -0.265343 

AUC ROC : 0.927334 

AUC PR : 0.284977 

Precision : 0.036028 

Recall : 0.847826 

F1 : 0.069118 

Total Learning Time : 56.72036337852478 

Total Inference Time : 22.051936626434326 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos examples: 86
Target test neg examples: 10998

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.146731376647949
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4356999555076712;  // std dev = 0.494, 490.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1418510649004875;  // std dev = 1.29e-08, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.33217196457270187;  // std dev = 7.464, 224.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=120 */
%   | else return 0.3765288532356405;  // std dev = 8.273, 281.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=163 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839222;  // std dev = 0.000, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.29487865107661265;  // std dev = 0.496, 503.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360635;  // std dev = 0.000, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, A), complex(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.24718935760274713;  // std dev = 10.948, 491.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=283 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783645;  // std dev = 0.000, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | | | else return -0.10159632948783655;  // std dev = 0.000, 201.000 (wgt'ed) examples reached here.  /* #neg=201 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.23550519887468335;  // std dev = 6.794, 195.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=120 */
%   | else return 0.17168610829901068;  // std dev = 8.449, 290.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=163 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0926912761892605;  // std dev = 1.05e-08, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.12475078351861221;  // std dev = 8.745, 311.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=174 */
%   | | else return 0.1729437134841538;  // std dev = 6.569, 180.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=109 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 6.32e-08, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   | | else return -0.08518475138839678;  // std dev = 8.69e-08, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09849492123988571;  // std dev = 0.496, 498.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.07877675473109148;  // std dev = 8.56e-08, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
%   | | else return -0.07877675473109147;  // std dev = 7.74e-08, 195.000 (wgt'ed) examples reached here.  /* #neg=195 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.12252344392586086;  // std dev = 8.199, 284.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=174 */
%   | else return -4.04363602431636E-4;  // std dev = 7.398, 218.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=109 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333716;  // std dev = 3.23e-09, 366.000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06093944143212028;  // std dev = 10.975, 494.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420336;  // std dev = 0.000, 404.000 (wgt'ed) examples reached here.  /* #neg=404 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04400842288929813;  // std dev = 11.004, 495.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202568;  // std dev = 9.17e-09, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
Inference time using transfer learning 1.9878485202789307
Parameter learned model CLL:-0.323152 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.494, 207, 283], 'false,true': [0.0, 0, 0], 'false,false': [1.29e-08, 360, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true,true': [7.464, 104, 120], 'true,false': [8.273, 118, 163], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 375, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.496, 220, 283], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 374, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, A), complex(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [10.948, 208, 283], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 148, 0], 'false,false,false,false': [0.0, 201, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.794, 75, 120], 'true,false': [8.449, 127, 163], 'false,true': [0.0, 0, 0], 'false,false': [1.05e-08, 353, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [8.745, 137, 174], 'true,true,false': [6.569, 71, 109], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [6.32e-08, 149, 0], 'false,false,false': [8.69e-08, 225, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.496, 215, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.56e-08, 165, 0], 'false,false,false': [7.74e-08, 195, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.199, 110, 174], 'true,false': [7.398, 109, 109], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.23e-09, 366, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [10.975, 211, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 404, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [11.004, 212, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.17e-09, 372, 0]}]
{'': [0.2439858392336556, 1.652998725553011e-16], 'false': [nan, 1.652998725553011e-16]}
{'': [0.24635231840014832, -1.2552921665095104e-16], 'true': [0.24872448979591807, 0.2435886070338507], 'false': [nan, -1.2552921665095104e-16], 'false,false': [nan, -1.2552921665095104e-16], 'false,false,false': [nan, -1.2552921665095104e-16]}
{'': [0.24617974041760277, -2.6122894697062506e-17], 'false': [nan, -2.6122894697062506e-17], 'false,false': [nan, -2.6122894697062506e-17]}
{'': [0.2441259912713804, 3.053908606418769e-17], 'true': [nan, 0.2441259912713804], 'false': [nan, 3.053908606418769e-17], 'false,false': [nan, 3.053908606418769e-17], 'false,false,false': [-5.8511754000515e-17, -8.837596215921645e-17]}
{'': [0.24332266753811863, 1.1070779169066716e-16], 'true': [0.23668639053254317, 0.24614744351961956], 'false': [nan, 1.1070779169066716e-16]}
{'': [0.24418149219065094, 4.0371746350005693e-17], 'true': [0.24418149219065094, nan], 'true,true': [0.2459253840371524, 0.23969732322020706], 'false': [nan, 4.0371746350005693e-17], 'false,false': [2.682418046074204e-17, 3.3553406966449176e-17]}
{'': [0.24576771655616897, 1.973729821555834e-17], 'true': [0.24576771655616897, nan], 'false': [nan, 1.973729821555834e-17], 'false,false': [4.4408920985006264e-17, 3.0744637605004337e-17]}
{'': [0.24663598604309972, 1.0313547223293805e-17], 'true': [0.23668322509223735, 0.2510529765154158], 'false': [nan, 1.0313547223293805e-17], 'false,false': [nan, 1.0313547223293805e-17]}
{'': [0.24381039573492014, -1.1596884069104358e-16], 'true': [0.24381039573492014, nan], 'false': [nan, -1.1596884069104358e-16], 'false,false': [nan, -1.1596884069104358e-16]}
{'': [0.24463315852223724, 8.475896209503883e-17], 'true': [0.24463315852223724, nan], 'false': [nan, 8.475896209503883e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 48.11467123031616
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), complex(D, E) )
%   | | then return 0.858148935099512;  // std dev = 1.03e-07, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else if ( interaction(D, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.44148226843284566;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else if ( interaction(F, A), interaction(F, F) )
%   | | then if ( phenotype(F, G), interaction(A, F) )
%   | | | then return 0.09814893509951236;  // std dev = 2.135, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return 0.36481560176617894;  // std dev = 4.330, 75.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=38 */
%   | | else if ( location(A, H) )
%   | | | then return 0.45559302455637746;  // std dev = 8.676, 313.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=187 */
%   | | | else return 0.31648226843284566;  // std dev = 2.441, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   else return -0.14185106490048732;  // std dev = 3.01e-07, 401.000 (wgt'ed) examples reached here.  /* #neg=401 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), phenotype(D, F) )
%   | | then if ( enzyme(D, E) )
%   | | | then return 0.7317634656431649;  // std dev = 0.067, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.10679832168006544;  // std dev = 0.843, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.7547027793076596;  // std dev = 0.229, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.650231012410237;  // std dev = 2.068, 32.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=27 */
%   | | | else return 0.23509821383537324;  // std dev = 7.823, 252.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=110 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.4926133219733822;  // std dev = 3.538, 60.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=42 */
%   | | | else return 0.3520218247513151;  // std dev = 5.205, 111.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=62 */
%   else return -0.12544463852839222;  // std dev = 0.000, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( complex(A, F), complex(E, G) )
%   | | | then return 0.5429525653416576;  // std dev = 4.162, 141.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=119 */
%   | | | else return 0.29361288465406027;  // std dev = 7.977, 267.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=150 */
%   | | else return -0.2603773838830439;  // std dev = 0.215, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.3669010982367462;  // std dev = 0.741, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6093545943844203;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.20537619962860995;  // std dev = 1.144, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.3561148577348149;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.11231637819360656;  // std dev = 0.000, 340.000 (wgt'ed) examples reached here.  /* #neg=340 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( interaction(D, E), interaction(A, D) )
%   | | | then return 0.5147780885878105;  // std dev = 1.448, 60.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | | else return 0.21617827635465406;  // std dev = 2.073, 22.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   | | else if ( interaction(A, F), interaction(F, E) )
%   | | | then return -0.1892153560863926;  // std dev = 2.206, 63.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=6 */
%   | | | else return 0.19277762499019896;  // std dev = 8.173, 293.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=151 */
%   | else if ( interaction(A, G), interaction(H, A) )
%   | | then return 0.49637420559851936;  // std dev = 0.894, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( enzyme(A, I), phenotype(A, J) )
%   | | | then return 0.39766836289204627;  // std dev = 1.483, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return 0.28430124357437736;  // std dev = 3.576, 59.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=37 */
%   else if ( complex(A, K) )
%   | then return -0.1015963294878365;  // std dev = 0.000, 175.000 (wgt'ed) examples reached here.  /* #neg=175 */
%   | else return -0.10159632948783655;  // std dev = 0.000, 197.000 (wgt'ed) examples reached here.  /* #neg=197 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(A, A), complex(A, E) )
%   | | | then return 0.2956658462144022;  // std dev = 0.005, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.3714811820684957;  // std dev = 0.131, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.24414065442225844;  // std dev = 1.512, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return 0.028206731022463367;  // std dev = 3.624, 80.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=31 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( location(A, I) )
%   | | | then return 0.21371038004771886;  // std dev = 7.234, 249.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=151 */
%   | | | else return 0.296481385028102;  // std dev = 3.743, 76.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=50 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.025431641485128904;  // std dev = 2.708, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | | else return 0.21727719265612475;  // std dev = 1.611, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   else return -0.09269127618926074;  // std dev = 8.74e-09, 381.000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( complex(A, F), enzyme(D, G) )
%   | | | then return 0.07566908176525614;  // std dev = 0.849, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.2782816625602959;  // std dev = 0.249, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( complex(D, H) )
%   | | | then return 0.3996871156574884;  // std dev = 0.116, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.5673925394008942;  // std dev = 0.090, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.23039035152167509;  // std dev = 0.097, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.1998507601659295;  // std dev = 4.171, 95.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=60 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.37258626667669537;  // std dev = 0.773, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.10198692954329197;  // std dev = 8.463, 332.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=173 */
%   else return -0.08518475138839678;  // std dev = 6.25e-09, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D) )
%   | | then if ( enzyme(A, E) )
%   | | | then return 0.23831158352732304;  // std dev = 0.060, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.19923492997839254;  // std dev = 0.042, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.3426831960554245;  // std dev = 0.169, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.41110168416136234;  // std dev = 0.187, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.3226276918345579;  // std dev = 0.948, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.037748897487493785;  // std dev = 4.704, 122.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=46 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.05500322368848435;  // std dev = 5.209, 134.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=75 */
%   | | | else return 0.13477166699224774;  // std dev = 6.548, 198.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=111 */
%   else return -0.07877675473109141;  // std dev = 5.59e-09, 387.000 (wgt'ed) examples reached here.  /* #neg=387 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(A, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, E), interaction(D, F) )
%   | | | then return 0.2864170698890625;  // std dev = 1.046, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return -0.31631326001305826;  // std dev = 1.689, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.3052439257486753;  // std dev = 0.580, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0.02717535831019176;  // std dev = 6.144, 173.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=87 */
%   | else if ( interaction(A, G), enzyme(A, H) )
%   | | then if ( interaction(G, G), complex(A, I) )
%   | | | then return -0.19058918515359596;  // std dev = 1.892, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.08693376312140534;  // std dev = 2.727, 43.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=27 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.2777073118913442;  // std dev = 0.328, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.1048804265613355;  // std dev = 6.342, 188.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=111 */
%   else return -0.07324622576333711;  // std dev = 7.30e-08, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, D) )
%   | | | then return 0.2723413871787021;  // std dev = 0.684, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else return -0.27465811451702177;  // std dev = 0.975, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return -0.09719103393817513;  // std dev = 3.163, 64.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=22 */
%   | | | else return 0.06999988011599809;  // std dev = 3.790, 69.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=41 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(A, K), interaction(K, A) )
%   | | | then return 0.047384362274985686;  // std dev = 1.650, 32.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=19 */
%   | | | else return 0.1735359500547743;  // std dev = 4.844, 108.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=68 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.16973393323600566;  // std dev = 2.603, 42.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=30 */
%   | | | else return 0.06416771045442216;  // std dev = 4.627, 102.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=60 */
%   else return -0.06842697784420332;  // std dev = 0.000, 388.000 (wgt'ed) examples reached here.  /* #neg=388 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, A) )
%   | then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | | then if ( complex(D, E) )
%   | | | then return 0.1034524408714664;  // std dev = 0.024, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.14727281073863238;  // std dev = 0.038, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, F), enzyme(A, G) )
%   | | | then return -0.3232549550137552;  // std dev = 0.263, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.18380388639205228;  // std dev = 0.184, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B), interaction(A, J) )
%   | | | then return 0.17183242904550045;  // std dev = 2.094, 53.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=46 */
%   | | | else return 0.05751817781502211;  // std dev = 7.812, 298.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=167 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.05706005611169195;  // std dev = 3.492, 60.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=37 */
%   | | | else return -0.07267664990438748;  // std dev = 2.847, 35.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=17 */
%   else return -0.06419184008202582;  // std dev = 8.01e-09, 330.000 (wgt'ed) examples reached here.  /* #neg=330 */
Inference time using transfer learning 3.637730360031128
Refined model CLL: -0.268789


******************************************
Best model found
******************************************
Results 

CLL : -0.267782 

AUC ROC : 0.93605 

AUC PR : 0.261406 

Precision : 0.041558 

Recall : 0.930233 

F1 : 0.079562 

Total Learning Time : 48.11467123031616 

Total Inference Time : 32.502612829208374 

Total revision time: 93.60692596435547
Best scored revision CLL: -0.268789


Results 

CLL : -0.267782 

AUC ROC : 0.93605 

AUC PR : 0.261406 

Precision : 0.041558 

Recall : 0.930233 

F1 : 0.079562 

Total Learning Time : 93.63283896446228 

Total Inference Time : 32.502612829208374 

Run: 3

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 7.699673652648926
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.43601778755852433;  // std dev = 0.494, 488.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048757;  // std dev = 1.18e-08, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then return 0.37119247413199136;  // std dev = 10.695, 468.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=269 */
%   | else return 0.5611120316986016;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839224;  // std dev = 0.000, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.2806655323749864;  // std dev = 0.497, 510.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360635;  // std dev = 0.000, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, A), complex(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2523954388687306;  // std dev = 10.844, 483.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=282 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G) )
%   | | | then return -0.10159632948783609;  // std dev = 1.75e-07, 376.000 (wgt'ed) examples reached here.  /* #neg=376 */
%   | | | else return -0.10159632948783626;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then return 0.16758900543386185;  // std dev = 10.945, 485.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=269 */
%   | else return 0.06704606557621595;  // std dev = 2.550, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926057;  // std dev = 1.00e-08, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1164964821669999;  // std dev = 11.288, 514.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=280 */
%   | | else return -0.21014722654627127;  // std dev = 1.220, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 1.15e-07, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
%   | | else return -0.08518475138839682;  // std dev = 5.27e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.1195361483676413;  // std dev = 0.494, 490.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, F) )
%   | | then return -0.07877675473109143;  // std dev = 6.66e-08, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(C, D) )
%   | then return 0.07196894477765224;  // std dev = 11.116, 501.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=280 */
%   | else return 0.08367919865160789;  // std dev = 0.978, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333716;  // std dev = 3.09e-09, 370.000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09549032549121193;  // std dev = 10.624, 470.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420324;  // std dev = 0.000, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.053415159298373094;  // std dev = 10.860, 485.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202566;  // std dev = 9.31e-09, 376.000 (wgt'ed) examples reached here.  /* #neg=376 */
Inference time using transfer learning 2.9581053256988525
Parameter learned model CLL:-0.325495 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.494, 206, 282], 'false,true': [0.0, 0, 0], 'false,false': [1.18e-08, 345, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'location(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true,true': [10.695, 199, 269], 'true,false': [1.749, 4, 13], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 385, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.497, 228, 282], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 374, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, A), complex(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'location(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [10.844, 201, 282], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.75e-07, 376, 0], 'false,false,false,false': [0.0, 12, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'location(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [10.945, 216, 269], 'true,false': [2.55, 13, 13], 'false,true': [0.0, 0, 0], 'false,false': [1e-08, 360, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'location(A, G)'}, {'true,true,true': [11.288, 234, 280], 'true,true,false': [1.22, 7, 2], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.15e-07, 335, 0], 'false,false,false': [5.27e-09, 19, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'location(A, F)'}, {'true,true': [0.494, 208, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [6.66e-08, 345, 0], 'false,false,false': [0.0, 15, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'location(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [11.116, 221, 280], 'true,false': [0.978, 2, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.09e-09, 370, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [10.624, 188, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 360, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [10.86, 203, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.31e-09, 376, 0]}]
{'': [0.2439364418167189, 1.3644480070755548e-16], 'false': [nan, 1.3644480070755548e-16]}
{'': [0.24336698905302553, -1.2457567445144613e-16], 'true': [0.24440700562494538, 0.1799307958477506], 'false': [nan, -1.2457567445144613e-16], 'false,false': [nan, -1.2457567445144613e-16], 'false,false,false': [nan, -1.2457567445144613e-16]}
{'': [0.24739443413464704, -2.6122894697062506e-17], 'false': [nan, -2.6122894697062506e-17], 'false,false': [nan, -2.6122894697062506e-17]}
{'': [0.24345415549010416, 1.0072126408970492e-16], 'true': [nan, 0.24345415549010416], 'false': [nan, 1.0072126408970492e-16], 'false,false': [nan, 1.0072126408970492e-16], 'false,false,false': [8.149509436078277e-17, -2.3129646346357427e-18]}
{'': [0.2476546375810098, 1.0115365335473648e-16], 'true': [0.24701456052715412, 0.24999999999999994], 'false': [nan, 1.0115365335473648e-16]}
{'': [0.24829494916308342, 4.014365738757628e-17], 'true': [0.24829494916308342, nan], 'true,true': [0.2479117905626548, 0.1653175208919672], 'false': [nan, 4.014365738757628e-17], 'false,false': [3.9769182971647396e-17, 1.460819769243627e-18]}
{'': [0.24360662566457364, 1.973729821555834e-17], 'true': [0.24360662566457364, nan], 'false': [nan, 1.973729821555834e-17], 'false,false': [1.2872151010146743e-17, -1.8503717077085942e-18]}
{'': [0.24656140505074858, 9.601928861622976e-18], 'true': [0.24661860811701242, 0.2392606771339883], 'false': [nan, 9.601928861622976e-18], 'false,false': [nan, 9.601928861622976e-18]}
{'': [0.24013402657221722, -9.190179481619351e-17], 'true': [0.24013402657221722, nan], 'false': [nan, -9.190179481619351e-17], 'false,false': [nan, -9.190179481619351e-17]}
{'': [0.24315271839781202, 8.562890349502537e-17], 'true': [0.24315271839781202, nan], 'false': [nan, 8.562890349502537e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;location(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;location(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;location(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 54.991755962371826
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D) )
%   | | then return 0.8581489350995118;  // std dev = 2.31e-07, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.3569942006884226;  // std dev = 10.404, 433.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=216 */
%   else return -0.1418510649004875;  // std dev = 2.44e-07, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), phenotype(E, F) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.7194734122109543;  // std dev = 4.21e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.4528067455442876;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | else return 0.7343829404408568;  // std dev = 0.091, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( enzyme(A, G), interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8089196851717234;  // std dev = 4.21e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.21595049675598804;  // std dev = 4.261, 76.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=31 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.6718522069505087;  // std dev = 0.981, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.3904346213619525;  // std dev = 8.615, 307.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=178 */
%   else return -0.1254446385283922;  // std dev = 0.000, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(A, A), complex(A, G) )
%   | | | then return 0.24353804869034013;  // std dev = 0.764, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5631031214067421;  // std dev = 0.078, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.5841775468032429;  // std dev = 0.174, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.520404554740338;  // std dev = 2.121, 27.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=22 */
%   | | | else return 0.14236201461262582;  // std dev = 5.402, 130.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=50 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.5309822469096296;  // std dev = 1.011, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return 0.31458118416286396;  // std dev = 7.949, 259.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=148 */
%   else return -0.11231637819360656;  // std dev = 0.000, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0.45270350819155303;  // std dev = 0.859, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.6546842951068492;  // std dev = 1.498, 83.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=81 */
%   | | else if ( interaction(A, G), enzyme(G, D) )
%   | | | then return -0.24438648709152982;  // std dev = 0.078, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.31687502557718394;  // std dev = 0.445, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( complex(H, I), complex(A, I) )
%   | | | then return 0.4462360655485351;  // std dev = 0.196, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.24497450988049443;  // std dev = 1.531, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.20210405947066365;  // std dev = 0.036, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.176904251023546;  // std dev = 8.394, 298.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=151 */
%   else return -0.10159632948783648;  // std dev = 0.000, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), enzyme(A, F) )
%   | | then if ( complex(A, G), complex(D, H) )
%   | | | then return 0.4169619756329606;  // std dev = 0.713, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.16338108013172234;  // std dev = 1.312, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else if ( complex(D, I), phenotype(A, J) )
%   | | | then return 0.01788058269443222;  // std dev = 3.160, 58.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=24 */
%   | | | else return 0.13407230596942812;  // std dev = 3.076, 50.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=27 */
%   | else if ( enzyme(A, K), location(A, L) )
%   | | then if ( enzyme(M, K), recursion_proteinclass(M, B) )
%   | | | then return 0.45831507941355026;  // std dev = 1.764, 79.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=76 */
%   | | | else return -0.24282727531558085;  // std dev = 0.348, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else if ( phenotype(A, N), interaction(A, P) )
%   | | | then return 0.3320762598119472;  // std dev = 2.495, 35.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=26 */
%   | | | else return 0.21102183805398905;  // std dev = 6.588, 195.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=116 */
%   else return -0.0926912761892606;  // std dev = 1.87e-07, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.3661836192737399;  // std dev = 0.503, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.12199224971465635;  // std dev = 0.587, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.2983450093161682;  // std dev = 0.299, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.07276558682891152;  // std dev = 4.512, 103.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=52 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(G, H), complex(G, I) )
%   | | | then return -0.08856747318636375;  // std dev = 0.725, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.34009580183048;  // std dev = 0.256, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.18691496967119367;  // std dev = 0.058, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.17836608780661725;  // std dev = 7.373, 299.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=179 */
%   else return -0.08518475138839678;  // std dev = 6.25e-09, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(A, E) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.19840627814966316;  // std dev = 0.050, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2679683864601987;  // std dev = 0.179, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( enzyme(A, H), interaction(A, I) )
%   | | | then return 0.15867942424960457;  // std dev = 1.792, 30.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=19 */
%   | | | else return 0.020910119281386384;  // std dev = 6.253, 201.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=94 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( enzyme(A, K) )
%   | | | then return 0.1961097125874726;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.279471816589698;  // std dev = 0.140, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(L, A), interaction(A, M) )
%   | | | then return 0.037124017414925804;  // std dev = 3.346, 70.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=31 */
%   | | | else return 0.11434128582211375;  // std dev = 5.644, 169.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=95 */
%   else return -0.07877675473109141;  // std dev = 5.82e-09, 393.000 (wgt'ed) examples reached here.  /* #neg=393 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.18549818346563432;  // std dev = 0.142, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.37089813314918757;  // std dev = 0.694, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   | | else if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.30774221506849453;  // std dev = 0.223, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.2457135422609004;  // std dev = 0.421, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(H, J), enzyme(J, I) )
%   | | | then return -0.06918875144014236;  // std dev = 2.639, 44.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=19 */
%   | | | else return 0.03865584719638967;  // std dev = 2.792, 39.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else if ( location(A, K) )
%   | | | then return 0.0808047653617296;  // std dev = 7.277, 240.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=138 */
%   | | | else return -0.07547936698331285;  // std dev = 1.663, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   else return -0.0732462257633371;  // std dev = 7.74e-08, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, D) )
%   | | | then return 0.3154466076433492;  // std dev = 3.484, 169.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=154 */
%   | | | else return -0.3559816335812508;  // std dev = 1.064, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( enzyme(A, G) )
%   | | | then return -0.20389414119537175;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.43318143410430915;  // std dev = 0.293, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.18797118313182623;  // std dev = 1.464, 33.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=30 */
%   | | | else return -0.024583398493720137;  // std dev = 4.885, 135.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=61 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return -0.052395277149417746;  // std dev = 1.972, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.23662226249704033;  // std dev = 2.236, 38.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=28 */
%   else return -0.06842697784420315;  // std dev = 0.000, 334.000 (wgt'ed) examples reached here.  /* #neg=334 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.28915322571695307;  // std dev = 3.425, 243.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=230 */
%   | | | else return -0.1935421538741043;  // std dev = 4.463, 180.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=39 */
%   | | else if ( phenotype(A, G) )
%   | | | then return -0.2702218744205479;  // std dev = 0.481, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.3993735274765803;  // std dev = 0.804, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return 0.132758023409189;  // std dev = 0.461, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4687384928787729;  // std dev = 0.263, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.034769783219473265;  // std dev = 0.829, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.2504535340117331;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.06419184008202564;  // std dev = 1.86e-07, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
Inference time using transfer learning 6.061960697174072
Refined model CLL: -0.187876


******************************************
Best model found
******************************************
Results 

CLL : -0.181209 

AUC ROC : 0.992012 

AUC PR : 0.528236 

Precision : 0.16129 

Recall : 0.977011 

F1 : 0.276873 

Total Learning Time : 54.991755962371826 

Total Inference Time : 55.293023109436035 

Total revision time: 135.25872492790222
Best scored revision CLL: -0.187876


Results 

CLL : -0.181209 

AUC ROC : 0.992012 

AUC PR : 0.528236 

Precision : 0.16129 

Recall : 0.977011 

F1 : 0.276873 

Total Learning Time : 135.28432941436768 

Total Inference Time : 55.293023109436035 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos examples: 104
Target test neg examples: 16320

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 7.340541839599609
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4207816314901662;  // std dev = 0.496, 471.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048774;  // std dev = 8.54e-09, 317.000 (wgt'ed) examples reached here.  /* #neg=317 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then return 0.40313084031309065;  // std dev = 10.046, 422.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=255 */
%   | else return 0.32518122694317786;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.125444638528392;  // std dev = 0.000, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.26980058101715415;  // std dev = 0.498, 488.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360657;  // std dev = 0.000, 338.000 (wgt'ed) examples reached here.  /* #neg=338 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, A), complex(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23879732579869842;  // std dev = 10.694, 466.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=265 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G) )
%   | | | then return -0.10159632948783635;  // std dev = 8.16e-08, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then return 0.20919500600097457;  // std dev = 10.170, 429.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=255 */
%   | else return 0.22131210684775063;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926043;  // std dev = 1.08e-08, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1091116966799837;  // std dev = 10.968, 485.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=264 */
%   | | else return -0.09170783571373048;  // std dev = 0.823, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 1.15e-07, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
%   | | else return -0.08518475138839686;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.1193701170029502;  // std dev = 0.493, 456.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, F) )
%   | | then return -0.07877675473109143;  // std dev = 4.21e-08, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
%   | | else return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(C, D) )
%   | then return 0.08437440947806464;  // std dev = 10.576, 458.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=264 */
%   | else return 0.06549097635311671;  // std dev = 0.719, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333706;  // std dev = 4.75e-09, 328.000 (wgt'ed) examples reached here.  /* #neg=328 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.048814183483736215;  // std dev = 10.777, 472.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420312;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #neg=326 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.053667080934855595;  // std dev = 10.567, 458.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202584;  // std dev = 7.74e-09, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
Inference time using transfer learning 3.548816680908203
Parameter learned model CLL:-0.324782 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.496, 206, 265], 'false,true': [0.0, 0, 0], 'false,false': [8.54e-09, 317, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'location(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true,true': [10.046, 167, 255], 'true,false': [2.176, 9, 10], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 290, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.498, 223, 265], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 338, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, A), complex(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'location(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [10.694, 201, 265], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [8.16e-08, 344, 0], 'false,false,false,false': [0.0, 20, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'location(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [10.17, 174, 255], 'true,false': [2.029, 7, 10], 'false,true': [0.0, 0, 0], 'false,false': [1.08e-08, 335, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'location(A, G)'}, {'true,true,true': [10.968, 221, 264], 'true,true,false': [0.823, 2, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.15e-07, 335, 0], 'false,false,false': [0.0, 11, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'location(A, F)'}, {'true,true': [0.493, 191, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.21e-08, 295, 0], 'false,false,false': [3.73e-09, 13, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'location(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [10.576, 194, 264], 'true,false': [0.719, 1, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.75e-09, 328, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [10.777, 207, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 326, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [10.567, 193, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.74e-09, 324, 0]}]
{'': [0.24607714534283875, 7.284744136341721e-17], 'false': [nan, 7.284744136341721e-17]}
{'': [0.2398177714018349, -8.269247355828753e-17], 'true': [0.23912872576986255, 0.24930747922437657], 'false': [nan, -8.269247355828753e-17], 'false,false': [nan, -8.269247355828753e-17], 'false,false,false': [nan, -8.269247355828753e-17]}
{'': [0.2483041663578091, -3.416070845000482e-17], 'false': [nan, -3.416070845000482e-17], 'false,false': [nan, -3.416070845000482e-17]}
{'': [0.24540083963329792, 5.856121448572254e-17], 'true': [nan, 0.24540083963329792], 'false': [nan, 5.856121448572254e-17], 'false,false': [nan, 5.856121448572254e-17], 'false,false,false': [1.9364355080671336e-17, -1.1102230246251566e-17]}
{'': [0.24113592232343625, 1.166562700501657e-16], 'true': [0.24108758374492714, 0.2422145328719724], 'false': [nan, 1.166562700501657e-16]}
{'': [0.24813691937897633, 3.850484478468751e-17], 'true': [0.24813691937897633, nan], 'true,true': [0.2480267905429823, 0.22586051761901213], 'false': [nan, 3.850484478468751e-17], 'false,false': [3.9769182971647396e-17, -5.046468293750712e-18]}
{'': [0.24320684103214776, 3.6046202098219365e-18], 'true': [0.24320684103214776, nan], 'false': [nan, 3.6046202098219365e-18], 'false,false': [6.021548608136442e-18, 1.0675221390626506e-18]}
{'': [0.24429694471466482, 2.2339853544286688e-17], 'true': [0.24423488966375106, 0.2581525176927609], 'false': [nan, 2.2339853544286688e-17], 'false,false': [nan, 2.2339853544286688e-17]}
{'': [0.24605199217046125, -7.083631568160508e-17], 'true': [0.24605199217046125, nan], 'false': [nan, -7.083631568160508e-17], 'false,false': [nan, -7.083631568160508e-17]}
{'': [0.2437809516977934, 6.030841121420603e-17], 'true': [0.2437809516977934, nan], 'false': [nan, 6.030841121420603e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;location(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;location(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;location(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 17.67996072769165
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995117;  // std dev = 2.46e-07, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( phenotype(A, E) )
%   | | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.7549743319249073;  // std dev = 3.414, 126.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=113 */
%   | | | else return -0.14185106490048763;  // std dev = 8.43e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4206489350995102;  // std dev = 6.874, 192.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=108 */
%   else return -0.14185106490048766;  // std dev = 1.79e-07, 328.000 (wgt'ed) examples reached here.  /* #neg=328 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.720980459267367;  // std dev = 0.028, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( interaction(F, D), interaction(D, F) )
%   | | | then return 0.2684164671569019;  // std dev = 0.949, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7342698742193673;  // std dev = 0.030, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(A, H) )
%   | | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7194734122109546;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.3848856194486563;  // std dev = 5.480, 140.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=83 */
%   | | | else return 0.2877920321829525;  // std dev = 7.640, 257.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=126 */
%   else return -0.1254446385283922;  // std dev = 0.000, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5588862637126865;  // std dev = 0.111, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, F) )
%   | | | then return 0.3090834009595593;  // std dev = 0.660, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5885687613123559;  // std dev = 0.152, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.26159985657000684;  // std dev = 0.187, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.26509134364947173;  // std dev = 9.343, 397.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=209 */
%   else return -0.1123163781936065;  // std dev = 0.000, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.4269951326194553;  // std dev = 0.169, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( interaction(F, D), enzyme(F, G) )
%   | | | then return -0.05740288439269861;  // std dev = 0.958, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4390067095406208;  // std dev = 0.118, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then if ( interaction(H, H), enzyme(H, I) )
%   | | | then return -0.22165197214339874;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.12723786988029961;  // std dev = 3.041, 50.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=21 */
%   | | else if ( interaction(A, J), phenotype(A, K) )
%   | | | then return 0.16331155791187288;  // std dev = 4.248, 103.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=51 */
%   | | | else return 0.2515576955039853;  // std dev = 7.685, 267.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=153 */
%   else if ( location(A, L) )
%   | then return -0.10159632948783659;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #neg=320 */
%   | else return -0.10159632948783626;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(F, A), enzyme(F, E) )
%   | | | then return 0.3175593592915409;  // std dev = 1.05e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.38979577162638784;  // std dev = 0.091, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(D, G), phenotype(D, H) )
%   | | | then return 0.21662884612180927;  // std dev = 2.339, 29.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   | | | else return 0.06232121780413622;  // std dev = 3.271, 61.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=28 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B), location(I, K) )
%   | | | then return 0.4563513444882139;  // std dev = 1.125, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | | else return 0.16856483430832342;  // std dev = 6.776, 227.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=125 */
%   | | else if ( location(A, L) )
%   | | | then return 0.269508164070203;  // std dev = 3.771, 76.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=49 */
%   | | | else return 0.46189707102883476;  // std dev = 0.926, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926042;  // std dev = 1.10e-08, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( complex(D, F), complex(A, F) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.27581098660041026;  // std dev = 0.219, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.08528090007800349;  // std dev = 2.859, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.35412948398823535;  // std dev = 1.772, 35.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   | | | else return 0.09842964801312205;  // std dev = 7.710, 294.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=151 */
%   | else if ( enzyme(A, H), interaction(A, I) )
%   | | then if ( interaction(I, J), enzyme(J, K) )
%   | | | then return 0.3338623543559477;  // std dev = 1.006, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.050945494966512996;  // std dev = 1.730, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.25691877633945936;  // std dev = 1.936, 24.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=17 */
%   | | | else return 0.4164302468054153;  // std dev = 1.326, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else return -0.08518475138839678;  // std dev = 6.25e-09, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( recursion_proteinclass(D, B), interaction(F, G) )
%   | | | then return 0.23181970335166133;  // std dev = 0.185, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.40831366893509985;  // std dev = 0.436, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(D, H), enzyme(H, I) )
%   | | | then return -0.06701394476700097;  // std dev = 2.995, 65.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=22 */
%   | | | else return 0.05738944706331715;  // std dev = 4.094, 85.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=44 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(A, L), complex(A, K) )
%   | | | then return -0.08047634606913827;  // std dev = 0.966, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.2124489548316496;  // std dev = 4.291, 107.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=73 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.05310317509833944;  // std dev = 4.904, 115.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=60 */
%   | | | else return 0.22923861116763086;  // std dev = 2.713, 47.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=34 */
%   else return -0.07877675473109143;  // std dev = 2.28e-09, 330.000 (wgt'ed) examples reached here.  /* #neg=330 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(A, A), location(A, E) )
%   | | | then return 0.17118151210027677;  // std dev = 0.118, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.20538462804909247;  // std dev = 0.078, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(D, D) )
%   | | | then return -0.19732618165443164;  // std dev = 1.664, 40.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=6 */
%   | | | else return 0.09768369500084899;  // std dev = 1.961, 27.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=16 */
%   | else if ( enzyme(A, F), interaction(G, A) )
%   | | then if ( interaction(A, H), interaction(G, H) )
%   | | | then return 0.3938310595684186;  // std dev = 0.949, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.06995022257115849;  // std dev = 4.702, 112.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=63 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.08055625660867403;  // std dev = 3.797, 79.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=46 */
%   | | | else return 0.19385538117541595;  // std dev = 5.010, 150.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=105 */
%   else return -0.07324622576333711;  // std dev = 3.73e-09, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, E) )
%   | | | then return 0.26903085653538555;  // std dev = 0.605, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return -0.09019980333765915;  // std dev = 0.841, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.21079222271445788;  // std dev = 0.413, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.08991220054850635;  // std dev = 3.598, 84.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=51 */
%   | else if ( interaction(G, A), location(A, H) )
%   | | then if ( complex(G, I), location(G, H) )
%   | | | then return -0.0134602034405718;  // std dev = 4.957, 124.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=65 */
%   | | | else return 0.0894078245033554;  // std dev = 5.359, 150.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=93 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.11736834493430134;  // std dev = 2.224, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.03137113550411972;  // std dev = 2.530, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   else return -0.06842697784420317;  // std dev = 0.000, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(A, D), recursion_proteinclass(E, B) )
%   | | then if ( complex(D, F), phenotype(E, G) )
%   | | | then return 0.10541175458142599;  // std dev = 0.980, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return 0.2669818977216378;  // std dev = 0.734, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else if ( interaction(D, E), interaction(A, H) )
%   | | | then return -0.08028604642284211;  // std dev = 3.198, 65.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=23 */
%   | | | else return 0.06630810188731671;  // std dev = 6.303, 206.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=123 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(K, A) )
%   | | | then return 0.3706861270091097;  // std dev = 0.277, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.04181263374454732;  // std dev = 3.114, 53.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=30 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return -0.023692480149933446;  // std dev = 2.616, 36.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=19 */
%   | | | else return -0.12014125680856345;  // std dev = 2.908, 44.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=20 */
%   else return -0.06419184008202578;  // std dev = 8.38e-09, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
Inference time using transfer learning 5.3295793533325195
Refined model CLL: -0.266418


******************************************
Best model found
******************************************
Results 

CLL : -0.258926 

AUC ROC : 0.959993 

AUC PR : 0.172251 

Precision : 0.041302 

Recall : 0.951923 

F1 : 0.079168 

Total Learning Time : 17.67996072769165 

Total Inference Time : 11.355557441711426 

Total revision time: 52.25918006896973
Best scored revision CLL: -0.266418


Results 

CLL : -0.258926 

AUC ROC : 0.959993 

AUC PR : 0.172251 

Precision : 0.041302 

Recall : 0.951923 

F1 : 0.079168 

Total Learning Time : 52.28478455543518 

Total Inference Time : 11.355557441711426 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos examples: 92
Target test neg examples: 12594

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.9570577144622803
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.44876727198650157;  // std dev = 0.492, 469.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048757;  // std dev = 1.18e-08, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.37533667766279616;  // std dev = 6.601, 179.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=104 */
%   | else return 0.3470467460226957;  // std dev = 8.797, 313.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=173 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1254446385283922;  // std dev = 0.000, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3466917075709618;  // std dev = 0.486, 449.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360639;  // std dev = 0.000, 366.000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, A), complex(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25054065042235907;  // std dev = 10.604, 466.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=277 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783633;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | | | else return -0.10159632948783656;  // std dev = 0.000, 219.000 (wgt'ed) examples reached here.  /* #neg=219 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.10335468296050898;  // std dev = 7.140, 204.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=104 */
%   | else return 0.21601555356842497;  // std dev = 8.154, 281.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=173 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926043;  // std dev = 1.07e-08, 330.000 (wgt'ed) examples reached here.  /* #neg=330 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16904009852441967;  // std dev = 8.150, 277.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=169 */
%   | | else return 0.07499283165536241;  // std dev = 7.121, 206.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=108 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 5.87e-08, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | | else return -0.08518475138839678;  // std dev = 8.02e-08, 203.000 (wgt'ed) examples reached here.  /* #neg=203 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07701585494139072;  // std dev = 0.497, 500.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.07877675473109151;  // std dev = 7.88e-08, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | | else return -0.07877675473109144;  // std dev = 6.32e-08, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.11135217726725653;  // std dev = 8.123, 275.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=169 */
%   | else return 0.051025091501611386;  // std dev = 7.009, 201.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=108 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333716;  // std dev = 3.09e-09, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06320084082468733;  // std dev = 10.756, 477.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420329;  // std dev = 0.000, 377.000 (wgt'ed) examples reached here.  /* #neg=377 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.020714458312508538;  // std dev = 11.082, 501.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202569;  // std dev = 9.08e-09, 366.000 (wgt'ed) examples reached here.  /* #neg=366 */
Inference time using transfer learning 2.168412208557129
Parameter learned model CLL:-0.322794 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.492, 192, 277], 'false,true': [0.0, 0, 0], 'false,false': [1.18e-08, 347, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true,true': [6.601, 75, 104], 'true,false': [8.797, 140, 173], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 347, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.486, 172, 277], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 366, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, A), complex(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [10.604, 189, 277], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 111, 0], 'false,false,false,false': [0.0, 219, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [7.14, 100, 104], 'true,false': [8.154, 108, 173], 'false,true': [0.0, 0, 0], 'false,false': [1.07e-08, 330, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [8.15, 108, 169], 'true,true,false': [7.121, 98, 108], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.87e-08, 137, 0], 'false,false,false': [8.02e-08, 203, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.497, 223, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.88e-08, 143, 0], 'false,false,false': [6.32e-08, 243, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.123, 106, 169], 'true,false': [7.009, 93, 108], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.09e-09, 371, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [10.756, 200, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 377, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [11.082, 224, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.08e-09, 366, 0]}]
{'': [0.2417883170198384, 1.4077755931846366e-16], 'false': [nan, 1.4077755931846366e-16]}
{'': [0.2460299755436632, -1.1774123142998778e-16], 'true': [0.24343809494085625, 0.24722105972297156], 'false': [nan, -1.1774123142998778e-16], 'false,false': [nan, -1.1774123142998778e-16], 'false,false,false': [nan, -1.1774123142998778e-16]}
{'': [0.23635737879252272, -2.669388693087808e-17], 'false': [nan, -2.669388693087808e-17], 'false,false': [nan, -2.669388693087808e-17]}
{'': [0.24130708650815633, -1.2111523905001707e-17], 'true': [nan, 0.24130708650815633], 'false': [nan, -1.2111523905001707e-17], 'false,false': [nan, -1.2111523905001707e-17], 'false,false,false': [-1.200241107702872e-17, -7.908437983631252e-17]}
{'': [0.24530240621099422, 1.1304088978001593e-16], 'true': [0.2499038831218771, 0.23662314307063145], 'false': [nan, 1.1304088978001593e-16]}
{'': [0.24466708990175678, 3.918434204559376e-17], 'true': [0.24466708990175678, nan], 'true,true': [0.23976718494469051, 0.24618326270838442], 'false': [nan, 3.918434204559376e-17], 'false,false': [2.5121834863780915e-17, 3.172065784643304e-17]}
{'': [0.2467121879333747, 3.106323488588521e-17], 'true': [0.2467121879333747, nan], 'false': [nan, 3.106323488588521e-17], 'false,false': [4.347726530000613e-17, 1.644774851296528e-17]}
{'': [0.24270698204628072, 8.977544673518785e-18], 'true': [0.23993415851594901, 0.24439807622492135], 'false': [nan, 8.977544673518785e-18], 'false,false': [nan, 8.977544673518785e-18]}
{'': [0.24254795696266915, -1.0189314761811781e-16], 'true': [0.24254795696266915, nan], 'false': [nan, -1.0189314761811781e-16], 'false,false': [nan, -1.0189314761811781e-16]}
{'': [0.24512477006352426, 8.190169853792139e-17], 'true': [0.24512477006352426, nan], 'false': [nan, 8.190169853792139e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 83.31463599205017
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), phenotype(A, E) )
%   | then if ( location(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, F) )
%   | | | then return 0.7689769605772168;  // std dev = 3.571, 157.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=143 */
%   | | | else return -3.4163093822349943E-4;  // std dev = 3.589, 106.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=15 */
%   | | else return -0.14185106490048768;  // std dev = 3.80e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.4357886866523073;  // std dev = 6.267, 161.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=93 */
%   else return -0.14185106490048763;  // std dev = 1.98e-07, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then return 0.7285783273468902;  // std dev = 0.049, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.39790059426153773;  // std dev = 1.427, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.7455330584418004;  // std dev = 0.124, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.7273137558002322;  // std dev = 0.026, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.42238384872569235;  // std dev = 1.537, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.2648402284263202;  // std dev = 4.399, 86.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=40 */
%   | | | else return 0.3496154963620083;  // std dev = 8.410, 319.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=177 */
%   else return -0.1254446385283922;  // std dev = 0.000, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), location(A, F) )
%   | | then if ( enzyme(D, E) )
%   | | | then return 0.5733238400728649;  // std dev = 0.091, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.05365165060640886;  // std dev = 0.868, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.5783706790802514;  // std dev = 0.239, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( interaction(I, A), enzyme(A, H) )
%   | | | then return -0.07556565614321731;  // std dev = 1.442, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return 0.20339413696092115;  // std dev = 4.390, 90.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=40 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.27240526416464134;  // std dev = 6.616, 202.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=112 */
%   | | | else return 0.34847121299048994;  // std dev = 5.176, 128.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=79 */
%   else return -0.11231637819360639;  // std dev = 0.000, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), complex(A, E) )
%   | | then if ( interaction(A, A), phenotype(D, F) )
%   | | | then return 0.428737011147246;  // std dev = 0.020, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.07639272730852735;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(D, G) )
%   | | | then return 0.512371705213729;  // std dev = 0.159, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.42461703534096107;  // std dev = 0.766, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else if ( interaction(A, H), complex(A, I) )
%   | | then if ( interaction(J, A), complex(J, I) )
%   | | | then return -0.017121161790534436;  // std dev = 2.597, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | | else return 0.23233413581241522;  // std dev = 3.794, 72.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=39 */
%   | | else if ( enzyme(A, K), complex(A, L) )
%   | | | then return 0.40553644834193775;  // std dev = 1.754, 20.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | | | else return 0.2437616962491505;  // std dev = 7.808, 292.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=168 */
%   else return -0.10159632948783617;  // std dev = 7.79e-09, 366.000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), enzyme(E, F) )
%   | | then if ( phenotype(D, G), interaction(D, E) )
%   | | | then return 0.017728333370267683;  // std dev = 0.968, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.3429226252568392;  // std dev = 0.157, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(H, D), interaction(H, A) )
%   | | | then return 0.3506448749778863;  // std dev = 0.121, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.44329322918095787;  // std dev = 0.116, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then if ( interaction(I, I) )
%   | | | then return 0.022457932119442015;  // std dev = 2.498, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0.21750827066804612;  // std dev = 2.904, 44.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=26 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.17600696178188416;  // std dev = 5.245, 163.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=92 */
%   | | | else return 0.24693423099087303;  // std dev = 6.168, 165.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=104 */
%   else return -0.09269127618926043;  // std dev = 2.00e-07, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.2698566189682001;  // std dev = 0.156, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.027625892209117847;  // std dev = 0.860, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.3912209613189997;  // std dev = 0.260, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.2955580383228919;  // std dev = 0.086, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( complex(A, G), phenotype(A, H) )
%   | | then if ( complex(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.5232832509991548;  // std dev = 0.764, 53.000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | | | else return -0.30520336578394075;  // std dev = 0.416, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( complex(A, J), location(A, K) )
%   | | | then return -0.01007576180599672;  // std dev = 3.579, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | | | else return 0.103991885514128;  // std dev = 7.780, 294.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=156 */
%   else return -0.08518475138839678;  // std dev = 6.25e-09, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( phenotype(A, E), enzyme(A, F) )
%   | | | then return 0.2722808509428851;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.21212181398798893;  // std dev = 0.097, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( interaction(D, D) )
%   | | | then return -0.08072230771934152;  // std dev = 2.484, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | | else return 0.030632758978659812;  // std dev = 3.260, 58.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=27 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( enzyme(A, I), interaction(A, J) )
%   | | | then return 0.22007341816012754;  // std dev = 1.411, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.04253873974358536;  // std dev = 3.911, 83.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=44 */
%   | | else if ( phenotype(A, K), interaction(L, A) )
%   | | | then return 0.10760589043930568;  // std dev = 4.117, 124.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=74 */
%   | | | else return 0.17521311826300537;  // std dev = 5.400, 138.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=88 */
%   else return -0.07877675473109143;  // std dev = 2.95e-09, 334.000 (wgt'ed) examples reached here.  /* #neg=334 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( recursion_proteinclass(D, B), location(A, F) )
%   | | then if ( complex(D, G), interaction(H, D) )
%   | | | then return 0.288168307662641;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.20545431436785713;  // std dev = 0.068, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(D, I), complex(A, J) )
%   | | | then return 0.11833922156926728;  // std dev = 2.205, 37.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=21 */
%   | | | else return -0.023140280464230004;  // std dev = 4.713, 109.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=51 */
%   | else if ( interaction(K, A), location(A, L) )
%   | | then if ( enzyme(A, M), complex(K, N) )
%   | | | then return 0.25008785875349215;  // std dev = 2.197, 37.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=29 */
%   | | | else return 0.08490287986096007;  // std dev = 5.999, 226.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=134 */
%   | | else if ( interaction(A, P), complex(P, Q) )
%   | | | then return 0.18068385501263332;  // std dev = 2.410, 31.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   | | | else return 0.4444420014914742;  // std dev = 0.806, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.07324622576333707;  // std dev = 8.43e-08, 332.000 (wgt'ed) examples reached here.  /* #neg=332 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), phenotype(A, E) )
%   | then if ( location(F, D), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, E) )
%   | | | then return 0.2522932663550151;  // std dev = 4.132, 187.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=158 */
%   | | | else return -0.380052219745601;  // std dev = 0.801, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( complex(A, G), interaction(H, A) )
%   | | | then return -0.26518067127153244;  // std dev = 0.152, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.34662798047062165;  // std dev = 0.248, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( complex(A, I), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.4103275281928051;  // std dev = 0.428, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.5970970713551192;  // std dev = 0.148, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, L), enzyme(A, M) )
%   | | | then return -0.10381809441267915;  // std dev = 1.955, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.0031226932357897625;  // std dev = 6.272, 175.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=96 */
%   else return -0.06842697784420326;  // std dev = 0.000, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, D) )
%   | | | then return 0.2589379421181596;  // std dev = 2.851, 173.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=158 */
%   | | | else return -0.29567283430331104;  // std dev = 0.764, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else if ( interaction(A, G), location(G, E) )
%   | | | then return -0.21933833894868338;  // std dev = 0.133, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.286683239586157;  // std dev = 0.095, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(A, I), location(A, J) )
%   | | | then return 0.1391069586190845;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.18494781936452004;  // std dev = 0.105, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.12200259460829094;  // std dev = 2.571, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return 0.01500953923222587;  // std dev = 6.105, 161.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=88 */
%   else return -0.06419184008202573;  // std dev = 1.67e-07, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
Inference time using transfer learning 6.94531512260437
Refined model CLL: -0.218505


******************************************
Best model found
******************************************
Results 

CLL : -0.227165 

AUC ROC : 0.961323 

AUC PR : 0.439195 

Precision : 0.046765 

Recall : 0.934783 

F1 : 0.089073 

Total Learning Time : 83.31463599205017 

Total Inference Time : 87.51660084724426 

Total revision time: 183.46309876441956
Best scored revision CLL: -0.218505


Results 

CLL : -0.227165 

AUC ROC : 0.961323 

AUC PR : 0.439195 

Precision : 0.046765 

Recall : 0.934783 

F1 : 0.089073 

Total Learning Time : 183.488703250885 

Total Inference Time : 87.51660084724426 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos examples: 86
Target test neg examples: 10998

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 7.93988037109375
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4163343394387584;  // std dev = 0.497, 507.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048743;  // std dev = 1.38e-08, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then return 0.3743654009945521;  // std dev = 10.695, 468.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=269 */
%   | else return 0.4995790762082182;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1254446385283922;  // std dev = 0.000, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3034287596212957;  // std dev = 0.495, 495.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360658;  // std dev = 0.000, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, A), complex(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2567879568574087;  // std dev = 10.785, 481.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=283 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, G) )
%   | | | then return -0.10159632948783637;  // std dev = 7.30e-08, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then return 0.1889159396821611;  // std dev = 10.648, 465.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=269 */
%   | else return 0.358044855782363;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926071;  // std dev = 8.93e-09, 377.000 (wgt'ed) examples reached here.  /* #neg=377 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.15604817531866053;  // std dev = 10.667, 471.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=280 */
%   | | else return -0.08778016083344098;  // std dev = 1.269, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 1.05e-07, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */
%   | | else return -0.08518475138839682;  // std dev = 7.45e-09, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07717567896312807;  // std dev = 0.497, 511.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( location(A, F) )
%   | | then return -0.07877675473109143;  // std dev = 4.21e-08, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
%   | | else return -0.07877675473109176;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(C, D) )
%   | then return 0.07271726840820623;  // std dev = 10.995, 492.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=280 */
%   | else return -0.045960298857554274;  // std dev = 1.239, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0732462257633371;  // std dev = 4.06e-09, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05433031444599433;  // std dev = 11.057, 498.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420317;  // std dev = 0.000, 338.000 (wgt'ed) examples reached here.  /* #neg=338 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07604543173753993;  // std dev = 10.593, 469.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202565;  // std dev = 9.36e-09, 381.000 (wgt'ed) examples reached here.  /* #neg=381 */
Inference time using transfer learning 2.5857932567596436
Parameter learned model CLL:-0.329741 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.497, 224, 283], 'false,true': [0.0, 0, 0], 'false,false': [1.38e-08, 375, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'location(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true,true': [10.695, 199, 269], 'true,false': [2.049, 6, 14], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 355, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.495, 212, 283], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 335, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, A), complex(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'location(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [10.785, 198, 283], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.3e-08, 343, 0], 'false,false,false,false': [0.0, 17, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'location(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [10.648, 196, 269], 'true,false': [1.764, 4, 14], 'false,true': [0.0, 0, 0], 'false,false': [8.93e-09, 377, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'location(A, G)'}, {'true,true,true': [10.667, 191, 280], 'true,true,false': [1.269, 5, 3], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.05e-07, 296, 0], 'false,false,false': [7.45e-09, 21, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'location(A, F)'}, {'true,true': [0.497, 228, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.21e-08, 298, 0], 'false,false,false': [0.0, 25, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'location(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [10.995, 212, 280], 'true,false': [1.239, 4, 3], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.06e-09, 345, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [11.057, 215, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 338, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [10.593, 186, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.36e-09, 381, 0]}]
{'': [0.2466144587218808, 1.9184653865522705e-16], 'false': [nan, 1.9184653865522705e-16]}
{'': [0.24361310803547467, -1.2009172998762255e-16], 'true': [0.24440700562495465, 0.2100000000000001], 'false': [nan, -1.2009172998762255e-16], 'false,false': [nan, -1.2009172998762255e-16], 'false,false,false': [nan, -1.2009172998762255e-16]}
{'': [0.2447981684342915, -3.7117904106870906e-17], 'false': [nan, -3.7117904106870906e-17], 'false,false': [nan, -3.7117904106870906e-17]}
{'': [0.24182094752346484, 5.057682667736824e-17], 'true': [nan, 0.24182094752346484], 'false': [nan, 5.057682667736824e-17], 'false,false': [nan, 5.057682667736824e-17], 'false,false,false': [1.5536648741110063e-17, -8.163404592832034e-18]}
{'': [0.24221894782613346, 7.892301607414906e-17], 'true': [0.24383859405711372, 0.17283950617283955], 'false': [nan, 7.892301607414906e-17]}
{'': [0.24187211404898212, 3.922554534953235e-17], 'true': [0.24187211404898212, nan], 'true,true': [0.24156813654265136, 0.2013094718061355], 'false': [nan, 3.922554534953235e-17], 'false,false': [3.750753461571475e-17, 2.64338815386942e-18]}
{'': [0.2469878492060155, 1.3748891945822373e-18], 'true': [0.2469878492060155, nan], 'false': [nan, 1.3748891945822373e-18], 'false,false': [5.960928991276008e-18, -3.3306690738754695e-18]}
{'': [0.24555079013383083, 1.6733796313190766e-17], 'true': [0.24572629180826364, 0.21932874087799892], 'false': [nan, 1.6733796313190766e-17], 'false,false': [nan, 1.6733796313190766e-17]}
{'': [0.24550397384306327, -7.81754674144341e-17], 'true': [0.24550397384306327, nan], 'false': [nan, -7.81754674144341e-17], 'false,false': [nan, -7.81754674144341e-17]}
{'': [0.23927949960745426, 8.858472427455317e-17], 'true': [0.23927949960745426, nan], 'false': [nan, 8.858472427455317e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;location(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;location(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;location(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 22.45160222053528
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then return 0.8581489350995117;  // std dev = 1.79e-07, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( complex(A, F), complex(D, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.48314893509951223;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(A, H), phenotype(G, H) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.3466985534201194;  // std dev = 8.091, 262.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=128 */
%   | | | else return 0.47994380689438454;  // std dev = 6.057, 156.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=97 */
%   else return -0.14185106490048754;  // std dev = 2.33e-07, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( location(F, D), location(E, D) )
%   | | | then return 0.732612829793781;  // std dev = 1.497, 63.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=61 */
%   | | | else return 0.32840408579656144;  // std dev = 1.768, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.19342042909387566;  // std dev = 0.051, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return 0.3711044896368154;  // std dev = 8.500, 299.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=171 */
%   | else if ( phenotype(A, G), enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.784790811003846;  // std dev = 0.071, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.20887122142999115;  // std dev = 0.020, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.3663770568952471;  // std dev = 1.983, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return 0.5510174532270227;  // std dev = 2.305, 30.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=23 */
%   else return -0.1254446385283922;  // std dev = 0.000, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), phenotype(D, F) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.599596248612858;  // std dev = 0.295, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.05211954513266161;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.5941438951061934;  // std dev = 0.249, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1706789087812097;  // std dev = 0.087, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( complex(A, G), interaction(H, A) )
%   | | | then return 0.1988406835890755;  // std dev = 6.272, 173.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=80 */
%   | | | else return 0.2991438752831635;  // std dev = 8.084, 280.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=161 */
%   else return -0.11231637819360667;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), location(A, E) )
%   | | then return 0.41145740023859156;  // std dev = 0.131, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( complex(D, F) )
%   | | | then return 0.5234641315609969;  // std dev = 0.209, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.6138661050930688;  // std dev = 0.163, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( interaction(G, G), complex(A, I) )
%   | | | then return 0.3026869170833074;  // std dev = 2.223, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | | | else return 0.11840550805361595;  // std dev = 5.343, 140.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=60 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.22520190225524905;  // std dev = 6.712, 191.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=105 */
%   | | | else return 0.3772993497664962;  // std dev = 3.965, 83.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=60 */
%   else if ( location(A, L) )
%   | then return -0.1015963294878363;  // std dev = 9.88e-08, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
%   | else return -0.1015963294878362;  // std dev = 9.13e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then if ( interaction(D, E), interaction(A, D) )
%   | | | then return 0.3218375641006432;  // std dev = 0.135, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.09969983723738472;  // std dev = 0.836, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(D, F), phenotype(A, F) )
%   | | | then return 0.5785816944744174;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3896031900334999;  // std dev = 0.216, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( interaction(A, G), phenotype(A, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.37886953306833016;  // std dev = 2.103, 37.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=29 */
%   | | | else return 0.025309226097491696;  // std dev = 4.373, 100.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=37 */
%   | | else if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return 0.3666098649473808;  // std dev = 2.371, 30.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=22 */
%   | | | else return 0.18120083762858358;  // std dev = 7.921, 269.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=153 */
%   else return -0.09269127618926055;  // std dev = 1.01e-08, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, D) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.26347001672508363;  // std dev = 0.158, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.08171158008921013;  // std dev = 0.944, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( complex(D, F) )
%   | | | then return 0.3286433444615811;  // std dev = 0.203, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.4366878992583299;  // std dev = 0.149, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(I, G), enzyme(I, J) )
%   | | | then return 0.22109057986130629;  // std dev = 4.847, 117.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=75 */
%   | | | else return 0.10592994147744822;  // std dev = 5.323, 126.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=65 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.05761296363086125;  // std dev = 5.668, 134.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=70 */
%   | | | else return 0.16251199623778984;  // std dev = 3.293, 54.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=32 */
%   else return -0.08518475138839678;  // std dev = 6.32e-09, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), complex(D, F) )
%   | | then if ( interaction(A, G), complex(G, F) )
%   | | | then return 0.21399386262270478;  // std dev = 0.096, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.3478831989950639;  // std dev = 0.161, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(D, H) )
%   | | | then return 0.23443835038806038;  // std dev = 0.173, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.14590392197260987;  // std dev = 1.123, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then if ( complex(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.4794614678897608;  // std dev = 1.316, 60.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=59 */
%   | | | else return -0.38358804045819705;  // std dev = 0.739, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.20834340405001756;  // std dev = 2.644, 42.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=28 */
%   | | | else return 0.11944957847478375;  // std dev = 7.757, 264.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=154 */
%   else return -0.07877675473109141;  // std dev = 4.06e-09, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( recursion_proteinclass(D, B), enzyme(A, F) )
%   | | then if ( interaction(A, G), enzyme(G, E) )
%   | | | then return 0.17856519199491738;  // std dev = 0.094, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.2523019849037979;  // std dev = 0.110, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, E) )
%   | | | then return -0.3247670684089544;  // std dev = 1.209, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return 0.03741306838679192;  // std dev = 4.692, 112.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=61 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(A, J), enzyme(A, K) )
%   | | | then return 0.24566768467806666;  // std dev = 1.716, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.10122084288166337;  // std dev = 5.386, 160.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=97 */
%   | | else if ( interaction(L, A), enzyme(A, M) )
%   | | | then return 0.13357101835666138;  // std dev = 2.400, 28.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=18 */
%   | | | else return 0.006419133849414472;  // std dev = 5.423, 147.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=76 */
%   else return -0.07324622576333716;  // std dev = 6.14e-08, 366.000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(D, F), phenotype(A, F) )
%   | | | then return 0.15414117435381078;  // std dev = 0.055, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.17976692017978316;  // std dev = 0.118, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( phenotype(A, G), phenotype(D, G) )
%   | | | then return 0.2965520055575978;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.22472191284498177;  // std dev = 0.168, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(A, I), phenotype(A, J) )
%   | | | then return -0.0883707242886084;  // std dev = 0.592, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2635409629470038;  // std dev = 0.271, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.20592752805458653;  // std dev = 0.262, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.04535096674181287;  // std dev = 9.288, 412.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=225 */
%   else return -0.06842697784420314;  // std dev = 0.000, 334.000 (wgt'ed) examples reached here.  /* #neg=334 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), interaction(G, E) )
%   | | then if ( interaction(G, F), interaction(F, F) )
%   | | | then return -0.01513975487959747;  // std dev = 2.001, 56.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | | else return 0.12822250073890953;  // std dev = 2.783, 59.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=38 */
%   | | else if ( phenotype(E, H), interaction(I, E) )
%   | | | then return 0.020726771827347622;  // std dev = 4.023, 79.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=44 */
%   | | | else return -0.10629948757135449;  // std dev = 2.907, 42.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=18 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.14898033843311317;  // std dev = 0.080, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.2244890887909852;  // std dev = 0.138, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.16343375908708485;  // std dev = 1.810, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | | | else return 0.0488634894231998;  // std dev = 6.845, 208.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=120 */
%   else return -0.06419184008202562;  // std dev = 9.59e-09, 389.000 (wgt'ed) examples reached here.  /* #neg=389 */
Inference time using transfer learning 3.059906005859375
Refined model CLL: -0.271562


******************************************
Best model found
******************************************
Results 

CLL : -0.275907 

AUC ROC : 0.924067 

AUC PR : 0.201604 

Precision : 0.034596 

Recall : 0.860465 

F1 : 0.066517 

Total Learning Time : 22.45160222053528 

Total Inference Time : 16.878391981124878 

Total revision time: 65.55519509315491
Best scored revision CLL: -0.271562


Results 

CLL : -0.275907 

AUC ROC : 0.924067 

AUC PR : 0.201604 

Precision : 0.034596 

Recall : 0.860465 

F1 : 0.066517 

Total Learning Time : 65.58079957962036 

Total Inference Time : 16.878391981124878 

Run: 4

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.152113437652588
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4210231865965139;  // std dev = 0.496, 501.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 1.07e-08, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3500461339209;  // std dev = 7.121, 205.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=113 */
%   | else return 0.3856321772813322;  // std dev = 8.356, 288.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=169 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1254446385283922;  // std dev = 0.000, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3227787203197102;  // std dev = 0.492, 478.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360642;  // std dev = 0.000, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, A), complex(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2659659070731289;  // std dev = 10.607, 469.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=282 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783649;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
%   | | | else return -0.10159632948783655;  // std dev = 0.000, 205.000 (wgt'ed) examples reached here.  /* #neg=205 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.1388197942669956;  // std dev = 7.284, 213.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=113 */
%   | else return 0.196965503075268;  // std dev = 8.251, 283.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=169 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926061;  // std dev = 9.68e-09, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.19106553705568363;  // std dev = 8.198, 284.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=178 */
%   | | else return 0.03512887186056816;  // std dev = 7.301, 217.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 6.14e-08, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | | else return -0.08518475138839678;  // std dev = 8.43e-08, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09308134101636338;  // std dev = 0.495, 500.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.07877675473109151;  // std dev = 7.81e-08, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | | else return -0.07877675473109147;  // std dev = 7.60e-08, 202.000 (wgt'ed) examples reached here.  /* #neg=202 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.1507592748440776;  // std dev = 7.859, 271.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=178 */
%   | else return 0.05724773441963814;  // std dev = 6.907, 195.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=104 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333714;  // std dev = 3.23e-09, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.08645129813472595;  // std dev = 10.453, 464.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420332;  // std dev = 0.000, 389.000 (wgt'ed) examples reached here.  /* #neg=389 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.028162697988336656;  // std dev = 10.968, 492.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202579;  // std dev = 8.28e-09, 340.000 (wgt'ed) examples reached here.  /* #neg=340 */
Inference time using transfer learning 1.9396109580993652
Parameter learned model CLL:-0.331266 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.496, 219, 282], 'false,true': [0.0, 0, 0], 'false,false': [1.07e-08, 335, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true,true': [7.121, 92, 113], 'true,false': [8.356, 119, 169], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 356, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.492, 196, 282], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 362, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, A), complex(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [10.607, 187, 282], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 164, 0], 'false,false,false,false': [0.0, 205, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [7.284, 100, 113], 'true,false': [8.251, 114, 169], 'false,true': [0.0, 0, 0], 'false,false': [9.68e-09, 368, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [8.198, 106, 178], 'true,true,false': [7.301, 113, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [6.14e-08, 143, 0], 'false,false,false': [8.43e-08, 217, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.495, 218, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.81e-08, 142, 0], 'false,false,false': [7.6e-08, 202, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [7.859, 93, 178], 'true,false': [6.907, 91, 104], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.23e-09, 365, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [10.453, 182, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 389, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [10.968, 210, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.28e-09, 340, 0]}]
{'': [0.24604682849869414, 1.166562700501657e-16], 'false': [nan, 1.166562700501657e-16]}
{'': [0.24481483157717, -1.197543936674326e-16], 'true': [0.2473765615704937, 0.24246479552469133], 'false': [nan, -1.197543936674326e-16], 'false,false': [nan, -1.197543936674326e-16], 'false,false,false': [nan, -1.197543936674326e-16]}
{'': [0.24158510491006355, -2.944237855359531e-17], 'false': [nan, -2.944237855359531e-17], 'false,false': [nan, -2.944237855359531e-17]}
{'': [0.23989816005921466, 6.859914623700155e-17], 'true': [nan, 0.23989816005921466], 'false': [nan, 6.859914623700155e-17], 'false,false': [nan, 6.859914623700155e-17], 'false,false,false': [-7.175831744528451e-17, -8.448526431293874e-17]}
{'': [0.24504085918059687, 9.412760426169805e-17], 'true': [0.24906874738257478, 0.2405573799148458], 'false': [nan, 9.412760426169805e-17]}
{'': [0.24652287050706176, 3.947459643111668e-17], 'true': [0.24652287050706176, nan], 'true,true': [0.23663708500579347, 0.24567689100642578], 'false': [nan, 3.947459643111668e-17], 'false,false': [2.6396911075003722e-17, 3.2743904873737336e-17]}
{'': [0.24487423957272156, 1.290957005378089e-17], 'true': [0.24487423957272156, nan], 'false': [nan, 1.290957005378089e-17], 'false,false': [4.300159602421381e-17, 2.85799986537169e-17]}
{'': [0.23704482577996153, 9.125120750343752e-18], 'true': [0.22792968215539464, 0.24462727077651145], 'false': [nan, 9.125120750343752e-18], 'false,false': [nan, 9.125120750343752e-18]}
{'': [0.23550737174613529, -1.141617506041292e-16], 'true': [0.23550737174613529, nan], 'false': [nan, -1.141617506041292e-16], 'false,false': [nan, -1.141617506041292e-16]}
{'': [0.2445260605765806, 6.922567094721564e-17], 'true': [0.2445260605765806, nan], 'false': [nan, 6.922567094721564e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 18.313360691070557
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995117;  // std dev = 1.79e-07, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( interaction(F, D), interaction(D, F) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(A, H) )
%   | | | then return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.34727936988211694;  // std dev = 9.589, 368.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=180 */
%   | | | else return 0.4683184266249349;  // std dev = 3.746, 59.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=36 */
%   else return -0.14185106490048757;  // std dev = 2.19e-07, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E) )
%   | | then return 0.7306126969192659;  // std dev = 0.144, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.4121317431970144;  // std dev = 0.753, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7194734122109543;  // std dev = 5.96e-08, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.18958321149315702;  // std dev = 1.05e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.294348861609532;  // std dev = 4.111, 68.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=33 */
%   | | else if ( location(A, H) )
%   | | | then return 0.3703021325141316;  // std dev = 9.086, 340.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=193 */
%   | | | else return 0.2034694588982383;  // std dev = 2.455, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   else return -0.1254446385283922;  // std dev = 0.000, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E), enzyme(A, F) )
%   | | then if ( enzyme(D, F) )
%   | | | then return 0.6004542130459863;  // std dev = 0.175, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.3897149646483145;  // std dev = 0.071, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( complex(D, G), enzyme(D, H) )
%   | | | then return 0.3872166585617388;  // std dev = 0.840, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.5804777465665495;  // std dev = 0.906, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5997901090003883;  // std dev = 2.113, 36.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=31 */
%   | | | else return 0.0963724122306633;  // std dev = 5.122, 122.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=42 */
%   | | else if ( location(A, L) )
%   | | | then return 0.31356278250437686;  // std dev = 7.991, 266.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=154 */
%   | | | else return 0.7453048755067893;  // std dev = 0.204, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.1123163781936064;  // std dev = 0.000, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(A, E) )
%   | then if ( phenotype(E, D), interaction(E, E) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.4166775331748619;  // std dev = 0.085, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.03778932591707373;  // std dev = 2.269, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( phenotype(E, F), interaction(E, E) )
%   | | | then return 0.6463212916424799;  // std dev = 0.020, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.30198950613530695;  // std dev = 4.591, 103.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=66 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, G) )
%   | | | then return 0.41298775270860116;  // std dev = 0.989, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | | else return 0.12039671069385031;  // std dev = 0.874, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1538090731880432;  // std dev = 7.761, 251.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=116 */
%   | | | else return 0.2696179974195447;  // std dev = 4.312, 80.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=49 */
%   else return -0.10159632948783619;  // std dev = 7.68e-09, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, E) )
%   | | then if ( enzyme(A, F), complex(E, G) )
%   | | | then return 0.07587038199497455;  // std dev = 0.666, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.33545959020328553;  // std dev = 0.191, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.18313229548451151;  // std dev = 0.580, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.43446922731076304;  // std dev = 0.351, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.3818372494420893;  // std dev = 1.997, 27.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=22 */
%   | | | else return 0.06126023465684239;  // std dev = 5.253, 116.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=50 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.1722109762657569;  // std dev = 7.110, 213.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=114 */
%   | | | else return 0.26503598126772226;  // std dev = 4.106, 77.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=50 */
%   else return -0.09269127618926065;  // std dev = 1.80e-07, 370.000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.2521082976270589;  // std dev = 0.063, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.049772408545428116;  // std dev = 0.799, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, F), phenotype(D, G) )
%   | | | then return 0.36987858418268943;  // std dev = 0.230, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.3163910789692915;  // std dev = 0.184, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(A, J), interaction(H, J) )
%   | | | then return 0.04761437592406669;  // std dev = 3.649, 75.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=32 */
%   | | | else return 0.17679924743158848;  // std dev = 6.975, 207.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=120 */
%   | | else if ( phenotype(A, K), enzyme(A, L) )
%   | | | then return 0.13444867406554623;  // std dev = 2.790, 32.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   | | | else return 0.01381344641379564;  // std dev = 5.916, 150.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=66 */
%   else return -0.08518475138839678;  // std dev = 6.32e-09, 369.000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.21160311850857325;  // std dev = 0.160, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( interaction(F, D), interaction(D, F) )
%   | | | then return 0.43783960117457266;  // std dev = 0.203, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.31849453337032624;  // std dev = 0.189, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, G), interaction(G, A) )
%   | | then if ( complex(A, H), phenotype(A, I) )
%   | | | then return -0.05658661628118691;  // std dev = 2.128, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | | else return 0.08373658224165562;  // std dev = 2.344, 36.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.2528343177126797;  // std dev = 4.872, 110.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=76 */
%   | | | else return 0.12021971349412382;  // std dev = 7.340, 231.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=130 */
%   else if ( complex(A, K) )
%   | then return -0.0787767547310915;  // std dev = 8.56e-08, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
%   | else return -0.07877675473109144;  // std dev = 6.14e-08, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, D) )
%   | | | then return 0.30728973953539185;  // std dev = 0.809, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | | else return -0.38675687902865746;  // std dev = 0.848, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.3075706216471241;  // std dev = 0.435, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.02829436982366487;  // std dev = 3.966, 71.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=36 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), interaction(H, H) )
%   | | | then return 0.040535205522626336;  // std dev = 5.209, 130.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=69 */
%   | | | else return 0.13976260471779267;  // std dev = 6.285, 178.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=113 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.3583429475198859;  // std dev = 0.951, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.2027521811264975;  // std dev = 2.096, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   else return -0.07324622576333714;  // std dev = 3.48e-09, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, D) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.16094041150848926;  // std dev = 0.187, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.12269054641227169;  // std dev = 0.687, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(F, A), interaction(A, F) )
%   | | | then return 0.29546714032401167;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.21889079546930612;  // std dev = 0.252, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( phenotype(A, H), enzyme(A, I) )
%   | | | then return -0.13228607681732307;  // std dev = 2.407, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return 0.0034093681564841024;  // std dev = 5.834, 162.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=75 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.039247494260411964;  // std dev = 5.769, 144.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=78 */
%   | | | else return 0.1137000043909658;  // std dev = 4.903, 110.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=72 */
%   else return -0.06842697784420318;  // std dev = 0.000, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( phenotype(D, H), interaction(F, F) )
%   | | | then return 0.033818703823470235;  // std dev = 1.968, 37.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=20 */
%   | | | else return 0.22494231826172573;  // std dev = 3.718, 95.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=72 */
%   | | else if ( enzyme(D, I), location(A, E) )
%   | | | then return -0.03912067074775729;  // std dev = 2.835, 45.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=23 */
%   | | | else return 0.09350939286519568;  // std dev = 6.451, 192.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=122 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( interaction(J, J), phenotype(J, L) )
%   | | | then return 0.1421944908923442;  // std dev = 1.550, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return -0.006230573396898235;  // std dev = 2.874, 39.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=23 */
%   | | else if ( interaction(A, M), interaction(M, N) )
%   | | | then return -0.03692769444060426;  // std dev = 2.027, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return -0.20306135657354704;  // std dev = 1.601, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   else return -0.06419184008202583;  // std dev = 7.96e-09, 330.000 (wgt'ed) examples reached here.  /* #neg=330 */
Inference time using transfer learning 4.584967136383057
Refined model CLL: -0.29508


******************************************
Best model found
******************************************
Results 

CLL : -0.286536 

AUC ROC : 0.888992 

AUC PR : 0.170866 

Precision : 0.028645 

Recall : 0.770115 

F1 : 0.055235 

Total Learning Time : 18.313360691070557 

Total Inference Time : 15.187096357345581 

Total revision time: 47.26521110534668
Best scored revision CLL: -0.29508


Results 

CLL : -0.286536 

AUC ROC : 0.888992 

AUC PR : 0.170866 

Precision : 0.028645 

Recall : 0.770115 

F1 : 0.055235 

Total Learning Time : 47.29185676574707 

Total Inference Time : 15.187096357345581 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos examples: 104
Target test neg examples: 16320

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.654559135437012
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.45099009841047;  // std dev = 0.491, 447.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048766;  // std dev = 1.00e-08, 328.000 (wgt'ed) examples reached here.  /* #neg=328 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3541771361701716;  // std dev = 6.860, 191.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=107 */
%   | else return 0.3791528972715863;  // std dev = 8.096, 270.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=158 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1254446385283922;  // std dev = 0.000, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.32796248130224914;  // std dev = 0.490, 441.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1123163781936066;  // std dev = 0.000, 330.000 (wgt'ed) examples reached here.  /* #neg=330 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, A), complex(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.24112277320198894;  // std dev = 10.504, 454.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=265 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783641;  // std dev = 0.000, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | | | else return -0.10159632948783652;  // std dev = 0.000, 198.000 (wgt'ed) examples reached here.  /* #neg=198 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.21281230289968445;  // std dev = 6.477, 176.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=107 */
%   | else return 0.1631587814537255;  // std dev = 8.297, 280.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=158 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926061;  // std dev = 9.68e-09, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16798670451891026;  // std dev = 7.814, 258.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=158 */
%   | | else return 0.08483851861342902;  // std dev = 7.134, 203.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=107 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 6.14e-08, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
%   | | else return -0.08518475138839678;  // std dev = 7.45e-08, 197.000 (wgt'ed) examples reached here.  /* #neg=197 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.0818031972390593;  // std dev = 0.496, 475.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.07877675473109153;  // std dev = 6.83e-08, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | | else return -0.07877675473109147;  // std dev = 7.60e-08, 191.000 (wgt'ed) examples reached here.  /* #neg=191 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.1202682437760322;  // std dev = 7.667, 252.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=158 */
%   | else return 0.08870825540821171;  // std dev = 6.785, 187.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=107 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333703;  // std dev = 4.93e-09, 316.000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.031136699608397884;  // std dev = 10.854, 478.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420315;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04731144542102078;  // std dev = 10.562, 458.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202584;  // std dev = 7.74e-09, 323.000 (wgt'ed) examples reached here.  /* #neg=323 */
Inference time using transfer learning 2.4665963649749756
Parameter learned model CLL:-0.327901 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.491, 182, 265], 'false,true': [0.0, 0, 0], 'false,false': [1e-08, 328, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true,true': [6.86, 84, 107], 'true,false': [8.096, 112, 158], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 358, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.49, 176, 265], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 330, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, A), complex(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [10.504, 189, 265], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 137, 0], 'false,false,false,false': [0.0, 198, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.477, 69, 107], 'true,false': [8.297, 122, 158], 'false,true': [0.0, 0, 0], 'false,false': [9.68e-09, 367, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [7.814, 100, 158], 'true,true,false': [7.134, 96, 107], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [6.14e-08, 153, 0], 'false,false,false': [7.45e-08, 197, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.496, 210, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [6.83e-08, 129, 0], 'false,false,false': [7.6e-08, 191, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [7.667, 94, 158], 'true,false': [6.785, 80, 107], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.93e-09, 316, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [10.854, 213, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 337, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [10.562, 193, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.74e-09, 323, 0]}]
{'': [0.2413805183950705, 9.748299728416009e-17], 'false': [nan, 9.748299728416009e-17]}
{'': [0.24439937700274314, -1.215663200148216e-16], 'true': [0.2463748252515006, 0.24274348422496608], 'false': [nan, -1.215663200148216e-16], 'false,false': [nan, -1.215663200148216e-16], 'false,false,false': [nan, -1.215663200148216e-16]}
{'': [0.23986497545473362, -4.5754645863339784e-17], 'false': [nan, -4.5754645863339784e-17], 'false,false': [nan, -4.5754645863339784e-17]}
{'': [0.24303524005668928, 0.0], 'true': [nan, 0.24303524005668928], 'false': [nan, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [-5.5105960346358135e-17, -9.195786668612408e-17]}
{'': [0.24354860699900813, 9.438408274742475e-17], 'true': [0.23834581611570266, 0.2458673469387745], 'false': [nan, 9.438408274742475e-17]}
{'': [0.244558245786237, 3.8064789415719653e-17], 'true': [0.244558245786237, nan], 'true,true': [0.23665964209320303, 0.25072763712065194], 'false': [nan, 3.8064789415719653e-17], 'false,false': [2.4671622769447922e-17, 2.817824935596844e-17]}
{'': [0.2460852604909042, 1.3877787807814458e-18], 'true': [0.2460852604909042, nan], 'false': [nan, 1.3877787807814458e-18], 'false,false': [3.6146796150586495e-17, 3.022596716256971e-17]}
{'': [0.23900563412643056, 2.4593548013848403e-17], 'true': [0.2332501041718469, 0.2461899947302442], 'false': [nan, 2.4593548013848403e-17], 'false,false': [nan, 2.4593548013848403e-17]}
{'': [0.2464844482648192, -8.433741670743029e-17], 'true': [0.2464844482648192, nan], 'false': [nan, -8.433741670743029e-17], 'false,false': [nan, -8.433741670743029e-17]}
{'': [0.24355569461607168, 5.980767996432732e-17], 'true': [0.24355569461607168, nan], 'false': [nan, 5.980767996432732e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 14.796841382980347
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( location(D, E), location(A, E) )
%   | | then if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0.7043027812533584;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else if ( interaction(D, D) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.41747096899781627;  // std dev = 3.813, 59.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=33 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.34344305274656994;  // std dev = 4.121, 68.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=33 */
%   | | | else return 0.4239852340318956;  // std dev = 8.309, 281.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=159 */
%   else return -0.14185106490048752;  // std dev = 2.33e-07, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7555822258346432;  // std dev = 0.251, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( interaction(A, E), complex(A, F) )
%   | | then if ( complex(E, F), interaction(E, E) )
%   | | | then return 0.059606515446576434;  // std dev = 1.726, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.26296479520009175;  // std dev = 4.505, 82.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=38 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.38807177873214876;  // std dev = 8.610, 308.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=182 */
%   else return -0.12544463852839213;  // std dev = 0.000, 316.000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.554330793653888;  // std dev = 0.093, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0.6559690817855863;  // std dev = 0.034, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G), location(F, H) )
%   | | | then return 0.6715233260255807;  // std dev = 0.114, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.2875377655670849;  // std dev = 1.071, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.13716289236311702;  // std dev = 4.395, 86.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=32 */
%   | | | else return 0.25317647116428305;  // std dev = 9.200, 343.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=177 */
%   else return -0.11231637819360663;  // std dev = 0.000, 329.000 (wgt'ed) examples reached here.  /* #neg=329 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then if ( interaction(D, D), recursion_proteinclass(D, B) )
%   | | then return 0.4151603388271978;  // std dev = 0.083, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.14391253347769545;  // std dev = 0.065, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0.17564228373727164;  // std dev = 3.351, 47.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=24 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.43410307253446606;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.49830705359983635;  // std dev = 0.036, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( location(A, G) )
%   | | | then return 0.2990634983827624;  // std dev = 8.615, 318.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=197 */
%   | | | else return 0.12329228766302443;  // std dev = 1.977, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   else if ( complex(A, H) )
%   | then return -0.10159632948783641;  // std dev = 0.000, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | else return -0.10159632948783653;  // std dev = 0.000, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( complex(A, E), recursion_proteinclass(D, B) )
%   | | then if ( interaction(A, F), interaction(F, D) )
%   | | | then return 0.18092023104623825;  // std dev = 1.153, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.39926665319547533;  // std dev = 0.195, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.5145590119252766;  // std dev = 1.022, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.071065316043965;  // std dev = 6.835, 204.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=91 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( location(A, I), enzyme(A, J) )
%   | | | then return 0.34584164454784666;  // std dev = 2.546, 35.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=26 */
%   | | | else return 0.2187381485590041;  // std dev = 4.869, 108.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=68 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.259375708309926;  // std dev = 2.234, 26.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=17 */
%   | | | else return 0.08149884006035045;  // std dev = 3.992, 66.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=30 */
%   else return -0.09269127618926043;  // std dev = 1.09e-08, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), phenotype(D, F) )
%   | | then return 0.14133082401871178;  // std dev = 0.911, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.27416066692648655;  // std dev = 0.154, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.39940759347334487;  // std dev = 0.213, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4596216625923173;  // std dev = 1.577, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | | else return 0.014764079069482282;  // std dev = 5.219, 124.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=50 */
%   | | else if ( phenotype(A, K), enzyme(A, L) )
%   | | | then return 0.2902621478770847;  // std dev = 2.793, 39.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=28 */
%   | | | else return 0.14396165508422806;  // std dev = 7.134, 213.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=121 */
%   else if ( complex(A, M) )
%   | then return -0.08518475138839678;  // std dev = 4.75e-09, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | else return -0.08518475138839678;  // std dev = 5.82e-09, 227.000 (wgt'ed) examples reached here.  /* #neg=227 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(A, E) )
%   | then if ( interaction(F, D), complex(D, G) )
%   | | then if ( complex(A, H), interaction(F, A) )
%   | | | then return -0.00652863453908753;  // std dev = 2.902, 56.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=27 */
%   | | | else return 0.1695469183436656;  // std dev = 5.178, 126.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=80 */
%   | | else if ( phenotype(A, I), complex(D, J) )
%   | | | then return 0.26028988606479053;  // std dev = 1.404, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.0014830791594125856;  // std dev = 6.812, 209.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=102 */
%   | else if ( interaction(A, K), complex(K, L) )
%   | | then if ( location(A, M), location(K, M) )
%   | | | then return 0.021109568285393586;  // std dev = 2.998, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | | else return 0.24865373815997588;  // std dev = 1.826, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | | else if ( interaction(A, N), interaction(N, P) )
%   | | | then return 0.4583962875745759;  // std dev = 0.952, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.16715264830068174;  // std dev = 1.691, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   else return -0.07877675473109143;  // std dev = 1.61e-09, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(D, D), complex(A, F) )
%   | | | then return 0.22854506411868025;  // std dev = 0.023, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.2072719516325784;  // std dev = 0.115, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( complex(A, G), phenotype(A, H) )
%   | | | then return 0.2428930656853651;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.30171142485237107;  // std dev = 0.057, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, A) )
%   | | then if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.1451360448421029;  // std dev = 0.024, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.1565091670348032;  // std dev = 0.011, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.1328258511241472;  // std dev = 6.802, 211.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=130 */
%   | | | else return 0.07899953270332197;  // std dev = 6.358, 167.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=94 */
%   else return -0.0732462257633371;  // std dev = 4.06e-09, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.18907604700665365;  // std dev = 0.061, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.48799716384965725;  // std dev = 0.583, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else if ( interaction(A, H), interaction(I, A) )
%   | | | then return -0.4227425036498967;  // std dev = 0.403, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.5330738866943301;  // std dev = 0.211, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( enzyme(A, K), phenotype(J, L) )
%   | | | then return 0.050030259542589786;  // std dev = 0.605, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2189046388021669;  // std dev = 0.345, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else if ( interaction(A, M), interaction(M, A) )
%   | | | then return -0.061087561616936806;  // std dev = 2.738, 51.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
%   | | | else return 0.0778272811214422;  // std dev = 8.137, 279.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=166 */
%   else return -0.06842697784420317;  // std dev = 0.000, 340.000 (wgt'ed) examples reached here.  /* #neg=340 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.22247845433530672;  // std dev = 0.620, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | | else return 0.439820545042876;  // std dev = 0.637, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.12267623141662036;  // std dev = 0.019, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.4275568962251033;  // std dev = 0.649, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.15428346611007845;  // std dev = 0.094, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.23440843028139227;  // std dev = 0.038, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return -0.09799800122017639;  // std dev = 3.437, 55.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=21 */
%   | | | else return 0.011041749315965474;  // std dev = 7.208, 218.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=119 */
%   else return -0.0641918400820258;  // std dev = 8.12e-09, 334.000 (wgt'ed) examples reached here.  /* #neg=334 */
Inference time using transfer learning 4.902045249938965
Refined model CLL: -0.253801


******************************************
Best model found
******************************************
Results 

CLL : -0.263911 

AUC ROC : 0.947579 

AUC PR : 0.153471 

Precision : 0.033175 

Recall : 0.942308 

F1 : 0.064094 

Total Learning Time : 14.796841382980347 

Total Inference Time : 10.675845623016357 

Total revision time: 38.700875997543335
Best scored revision CLL: -0.253801


Results 

CLL : -0.263911 

AUC ROC : 0.947579 

AUC PR : 0.153471 

Precision : 0.033175 

Recall : 0.942308 

F1 : 0.064094 

Total Learning Time : 38.727521657943726 

Total Inference Time : 10.675845623016357 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos examples: 92
Target test neg examples: 12594

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.786043882369995
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.45384785983069076;  // std dev = 0.491, 465.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048752;  // std dev = 1.25e-08, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.34964957082777415;  // std dev = 6.794, 187.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=104 */
%   | else return 0.40697501551241755;  // std dev = 8.177, 282.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=173 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839216;  // std dev = 0.000, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.30159096084544595;  // std dev = 0.494, 479.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360651;  // std dev = 0.000, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, A), complex(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21288538470194013;  // std dev = 11.119, 500.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=277 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.1015963294878364;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | | | else return -0.10159632948783658;  // std dev = 0.000, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.20579684519142094;  // std dev = 6.549, 177.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=104 */
%   | else return 0.1793583865922447;  // std dev = 8.577, 301.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=173 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926042;  // std dev = 1.10e-08, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.20785864589936134;  // std dev = 7.781, 263.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=169 */
%   | | else return 0.06005506526631772;  // std dev = 7.346, 217.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=108 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 5.67e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | | else return -0.08518475138839678;  // std dev = 8.94e-08, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.1065245009102293;  // std dev = 0.492, 479.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.0787767547310915;  // std dev = 8.16e-08, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | | else return -0.07877675473109146;  // std dev = 7.45e-08, 206.000 (wgt'ed) examples reached here.  /* #neg=206 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.06338333110800624;  // std dev = 8.475, 293.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=169 */
%   | else return 0.05306655095941044;  // std dev = 7.089, 203.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=108 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333714;  // std dev = 3.48e-09, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06569805559502351;  // std dev = 10.775, 478.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420326;  // std dev = 0.000, 369.000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04758747224666756;  // std dev = 10.804, 479.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202572;  // std dev = 8.84e-09, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
Inference time using transfer learning 2.170177698135376
Parameter learned model CLL:-0.325373 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.491, 188, 277], 'false,true': [0.0, 0, 0], 'false,false': [1.25e-08, 356, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true,true': [6.794, 83, 104], 'true,false': [8.177, 109, 173], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 341, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.494, 202, 277], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 345, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, A), complex(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [11.119, 223, 277], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 128, 0], 'false,false,false,false': [0.0, 231, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.549, 73, 104], 'true,false': [8.577, 128, 173], 'false,true': [0.0, 0, 0], 'false,false': [1.1e-08, 345, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [7.781, 94, 169], 'true,true,false': [7.346, 109, 108], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.67e-08, 134, 0], 'false,false,false': [8.94e-08, 232, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.492, 202, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.16e-08, 148, 0], 'false,false,false': [7.45e-08, 206, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.475, 124, 169], 'true,false': [7.089, 95, 108], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.48e-09, 365, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [10.775, 201, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 369, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [10.804, 202, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.84e-09, 359, 0]}]
{'': [0.2408417158052985, 1.571776416885053e-16], 'false': [nan, 1.571776416885053e-16]}
{'': [0.24178831701983644, -1.1720829585485523e-16], 'true': [0.24684720752666903, 0.23712338413560854], 'false': [nan, -1.1720829585485523e-16], 'false,false': [nan, -1.1720829585485523e-16], 'false,false,false': [nan, -1.1720829585485523e-16]}
{'': [0.2438146220848108, -3.346759262638153e-17], 'false': [nan, -3.346759262638153e-17], 'false,false': [nan, -3.346759262638153e-17]}
{'': [0.24728528670997543, 4.9480691905299454e-17], 'true': [nan, 0.24728528670997543], 'false': [nan, 4.9480691905299454e-17], 'false,false': [nan, 4.9480691905299454e-17], 'false,false,false': [-3.642919299551295e-17, -7.305363625239126e-17]}
{'': [0.2438047490614496, 1.2228543459639405e-16], 'true': [0.24233138625554534, 0.2444123133298749], 'false': [nan, 1.2228543459639405e-16]}
{'': [0.2439844930662203, 4.004083039631712e-17], 'true': [0.2439844930662203, nan], 'true,true': [0.23023433035917037, 0.24867970495000122], 'false': [nan, 4.004083039631712e-17], 'false,false': [2.4027214712036968e-17, 3.4455197315953135e-17]}
{'': [0.24230297474283186, 1.7562850107064625e-17], 'true': [0.24230297474283186, nan], 'false': [nan, 1.7562850107064625e-17], 'false,false': [4.50090415388577e-17, 2.6947160791872732e-17]}
{'': [0.246155628393945, 1.0341803517056253e-17], 'true': [0.24516014299296804, 0.24752958753829762], 'false': [nan, 1.0341803517056253e-17], 'false,false': [nan, 1.0341803517056253e-17]}
{'': [0.24289561050239217, -9.748299728416009e-17], 'true': [0.24289561050239217, nan], 'false': [nan, -9.748299728416009e-17], 'false,false': [nan, -9.748299728416009e-17]}
{'': [0.24369256426669955, 7.855059839966288e-17], 'true': [0.24369256426669955, nan], 'false': [nan, 7.855059839966288e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 43.16887593269348
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), enzyme(A, F) )
%   | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( interaction(A, G), interaction(G, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.35814893509951107;  // std dev = 4.243, 72.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.7993254056877476;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return 0.4181489350995089;  // std dev = 8.949, 325.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=182 */
%   else return -0.14185106490048757;  // std dev = 2.19e-07, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.7281685274220242;  // std dev = 0.100, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(E, F), interaction(E, G) )
%   | | | then return 0.06359983064803716;  // std dev = 0.843, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.7214971156679073;  // std dev = 0.031, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( enzyme(A, H), interaction(I, A) )
%   | | | then return 0.4099108950291264;  // std dev = 5.251, 117.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=71 */
%   | | | else return 0.30173136684012025;  // std dev = 8.520, 293.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=146 */
%   else return -0.12544463852839224;  // std dev = 0.000, 387.000 (wgt'ed) examples reached here.  /* #neg=387 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.5640101438841345;  // std dev = 0.129, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else if ( complex(D, F), phenotype(D, G) )
%   | | | then return -0.0380878611309855;  // std dev = 1.093, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.5658968188227982;  // std dev = 0.014, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.16514193188064347;  // std dev = 0.024, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.2797766035217542;  // std dev = 4.189, 71.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=38 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5577737021263757;  // std dev = 0.039, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.2878113508190954;  // std dev = 9.065, 332.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=182 */
%   else return -0.11231637819360636;  // std dev = 0.000, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E) )
%   | | then if ( complex(D, E) )
%   | | | then return 0.42812887038884784;  // std dev = 0.168, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.5187734853344139;  // std dev = 0.203, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.4229848762843801;  // std dev = 0.062, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.20324260787745702;  // std dev = 1.048, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( enzyme(G, H) )
%   | | | then return 3.4207257650722094E-4;  // std dev = 2.513, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return 0.16960310588891325;  // std dev = 3.488, 53.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=24 */
%   | | else if ( interaction(A, I), interaction(I, A) )
%   | | | then return 0.39176167310404975;  // std dev = 2.358, 27.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=19 */
%   | | | else return 0.21746519223578792;  // std dev = 8.935, 329.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=181 */
%   else return -0.10159632948783612;  // std dev = 8.64e-09, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), complex(A, E) )
%   | then if ( location(F, D), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, E) )
%   | | | then return 0.5331683598475195;  // std dev = 1.678, 103.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=102 */
%   | | | else return -0.3684529274479921;  // std dev = 0.773, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return -0.37280908335959034;  // std dev = 0.056, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.31946915833413386;  // std dev = 0.035, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.04975489577369609;  // std dev = 3.060, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | | else if ( phenotype(A, H), location(A, I) )
%   | | | then return 0.2650617439059167;  // std dev = 4.973, 110.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=72 */
%   | | | else return 0.22821457294476605;  // std dev = 5.348, 123.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=75 */
%   else return -0.09269127618926044;  // std dev = 1.90e-07, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, A), location(A, D) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.23130712292699535;  // std dev = 0.096, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.14100290216703168;  // std dev = 0.080, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, F), enzyme(A, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.4152270141952187;  // std dev = 1.046, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return 0.13917974966267802;  // std dev = 3.166, 48.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=28 */
%   | | else if ( interaction(I, A), phenotype(A, J) )
%   | | | then return 0.131487127043106;  // std dev = 6.302, 196.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=113 */
%   | | | else return 0.18165453719447305;  // std dev = 5.723, 164.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=102 */
%   else if ( complex(A, K) )
%   | then return -0.08518475138839678;  // std dev = 5.27e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | else return -0.08518475138839678;  // std dev = 8.02e-08, 200.000 (wgt'ed) examples reached here.  /* #neg=200 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(A, E) )
%   | then if ( interaction(F, A), interaction(F, D) )
%   | | then if ( phenotype(A, G), phenotype(D, G) )
%   | | | then return 0.20445349145731628;  // std dev = 1.142, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return -0.011797055940789326;  // std dev = 2.239, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else if ( interaction(D, H), interaction(A, H) )
%   | | | then return 0.5394305094074104;  // std dev = 0.139, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2662499775711847;  // std dev = 1.689, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( complex(A, I), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.4197670563804982;  // std dev = 0.285, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.33955844342677094;  // std dev = 0.084, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.14331856389714884;  // std dev = 4.218, 96.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=60 */
%   | | | else return 0.09097830633776256;  // std dev = 7.283, 266.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=153 */
%   else return -0.07877675473109143;  // std dev = 4.75e-09, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), phenotype(D, F) )
%   | | then return 0.08198918182676361;  // std dev = 0.901, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(D, D), interaction(A, G) )
%   | | | then return 0.17885221136854615;  // std dev = 0.083, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.2305212216627769;  // std dev = 0.203, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.2716547683805908;  // std dev = 2.175, 39.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=32 */
%   | | | else return -0.1146130383600067;  // std dev = 4.555, 123.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=40 */
%   | | else if ( interaction(K, A), location(A, L) )
%   | | | then return 0.08806034871958435;  // std dev = 7.054, 247.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=141 */
%   | | | else return -0.06061441374168339;  // std dev = 3.242, 47.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=21 */
%   else return -0.07324622576333766;  // std dev = 0.000, 334.000 (wgt'ed) examples reached here.  /* #neg=334 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then if ( interaction(E, A), complex(E, D) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.1581430001780585;  // std dev = 0.119, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.08697701905760347;  // std dev = 2.395, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | else if ( complex(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.36563388597479257;  // std dev = 0.838, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | | | else return -0.3303284936560517;  // std dev = 0.434, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), interaction(G, H) )
%   | | | then return 0.17792264724587095;  // std dev = 0.054, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.2553921334712494;  // std dev = 0.121, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( location(A, I), enzyme(A, J) )
%   | | | then return -0.08852524933361132;  // std dev = 5.159, 112.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=49 */
%   | | | else return 0.0022453806270071883;  // std dev = 7.080, 212.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=104 */
%   else return -0.06842697784420329;  // std dev = 0.000, 376.000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), phenotype(A, E) )
%   | then if ( location(F, D), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, E) )
%   | | | then return 0.3312978382879951;  // std dev = 3.049, 169.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=158 */
%   | | | else return -0.414109638923617;  // std dev = 0.874, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.266516342276591;  // std dev = 0.123, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.46809003289142476;  // std dev = 0.225, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( interaction(I, I), enzyme(I, J) )
%   | | | then return 0.16438191370864383;  // std dev = 0.429, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.07413463408785906;  // std dev = 2.062, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.18932291931526105;  // std dev = 1.675, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.03390981229745389;  // std dev = 5.552, 149.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=84 */
%   else return -0.06419184008202578;  // std dev = 8.38e-09, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
Inference time using transfer learning 4.917315244674683
Refined model CLL: -0.223827


******************************************
Best model found
******************************************
Results 

CLL : -0.214007 

AUC ROC : 0.972081 

AUC PR : 0.455624 

Precision : 0.054156 

Recall : 0.934783 

F1 : 0.102381 

Total Learning Time : 43.16887593269348 

Total Inference Time : 42.596418380737305 

Total revision time: 97.5630931854248
Best scored revision CLL: -0.223827


Results 

CLL : -0.214007 

AUC ROC : 0.972081 

AUC PR : 0.455624 

Precision : 0.054156 

Recall : 0.934783 

F1 : 0.102381 

Total Learning Time : 97.5897388458252 

Total Inference Time : 42.596418380737305 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos examples: 86
Target test neg examples: 10998

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.0229551792144775
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.46806272820295625;  // std dev = 0.488, 464.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1418510649004876;  // std dev = 1.10e-08, 338.000 (wgt'ed) examples reached here.  /* #neg=338 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3493004365901951;  // std dev = 7.282, 215.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=120 */
%   | else return 0.394864605410178;  // std dev = 8.037, 270.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=163 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1254446385283922;  // std dev = 0.000, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.29152232684903223;  // std dev = 0.495, 497.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360646;  // std dev = 0.000, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, A), complex(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.24128701270487693;  // std dev = 10.893, 487.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=283 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783645;  // std dev = 0.000, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   | | | else return -0.10159632948783655;  // std dev = 0.000, 200.000 (wgt'ed) examples reached here.  /* #neg=200 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.14871481064063313;  // std dev = 7.445, 223.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=120 */
%   | else return 0.14123977706448343;  // std dev = 8.645, 301.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=163 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926078;  // std dev = 8.23e-09, 386.000 (wgt'ed) examples reached here.  /* #neg=386 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.21971867123322159;  // std dev = 7.843, 268.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=174 */
%   | | else return 0.12033741382091231;  // std dev = 6.952, 197.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=109 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 6.32e-08, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
%   | | else return -0.08518475138839678;  // std dev = 7.60e-08, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.10523623365692748;  // std dev = 0.493, 488.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.07877675473109151;  // std dev = 7.96e-08, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
%   | | else return -0.07877675473109146;  // std dev = 6.83e-08, 214.000 (wgt'ed) examples reached here.  /* #neg=214 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.07967603070612128;  // std dev = 8.474, 295.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=174 */
%   | else return 0.032758943817434924;  // std dev = 7.194, 209.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=109 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333718;  // std dev = 2.08e-09, 380.000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04502937425661243;  // std dev = 11.126, 504.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420326;  // std dev = 0.000, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04419870684462391;  // std dev = 10.991, 495.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202565;  // std dev = 9.36e-09, 381.000 (wgt'ed) examples reached here.  /* #neg=381 */
Inference time using transfer learning 1.9492356777191162
Parameter learned model CLL:-0.322791 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.488, 181, 283], 'false,true': [0.0, 0, 0], 'false,false': [1.1e-08, 338, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true,true': [7.282, 95, 120], 'true,false': [8.037, 107, 163], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 343, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.495, 214, 283], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 354, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, A), complex(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [10.893, 204, 283], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 145, 0], 'false,false,false,false': [0.0, 200, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [7.445, 103, 120], 'true,false': [8.645, 138, 163], 'false,true': [0.0, 0, 0], 'false,false': [8.23e-09, 386, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [7.843, 94, 174], 'true,true,false': [6.952, 88, 109], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [6.32e-08, 146, 0], 'false,false,false': [7.6e-08, 196, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.493, 205, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.96e-08, 146, 0], 'false,false,false': [6.83e-08, 214, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.474, 121, 174], 'true,false': [7.194, 100, 109], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.08e-09, 380, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [11.126, 221, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 371, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [10.991, 212, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.36e-09, 381, 0]}]
{'': [0.23791895808561545, 1.2087635297694012e-16], 'false': [nan, 1.2087635297694012e-16]}
{'': [0.24302688914869566, -1.1652486555832546e-16], 'true': [0.24661979448350457, 0.23924554183813387], 'false': [nan, -1.1652486555832546e-16], 'false,false': [nan, -1.1652486555832546e-16], 'false,false,false': [nan, -1.1652486555832546e-16]}
{'': [0.24550940977131938, -3.010774304068221e-17], 'false': [nan, -3.010774304068221e-17], 'false,false': [nan, -3.010774304068221e-17]}
{'': [0.24362928544574944, 2.0595441616234788e-17], 'true': [nan, 0.24362928544574944], 'false': [nan, 2.0595441616234788e-17], 'false,false': [nan, 2.0595441616234788e-17], 'false,false,false': [-5.665965780845627e-17, -8.659739592076221e-17]}
{'': [0.24840470145258559, 6.787892067656397e-17], 'true': [0.24854712541977378, 0.2482754053487286], 'false': [nan, 6.787892067656397e-17]}
{'': [0.23862149630460397, 3.765668738494683e-17], 'true': [0.23862149630460397, nan], 'true,true': [0.22950111455595004, 0.2453365794081709], 'false': [nan, 3.765668738494683e-17], 'false,false': [2.7375362251031256e-17, 2.945489657168783e-17]}
{'': [0.2426828308759195, 1.973729821555834e-17], 'true': [0.2426828308759195, nan], 'false': [nan, 1.973729821555834e-17], 'false,false': [4.3344323564132825e-17, 2.1789423847783445e-17]}
{'': [0.2456869856136047, 4.674623261579606e-18], 'true': [0.24341613096140952, 0.24760385049908187], 'false': [nan, 4.674623261579606e-18], 'false,false': [nan, 4.674623261579606e-18]}
{'': [0.24562064354876853, -1.047380211910525e-16], 'true': [0.24562064354876853, nan], 'false': [nan, -1.047380211910525e-16], 'false,false': [nan, -1.047380211910525e-16]}
{'': [0.24404037552170058, 8.800193003590479e-17], 'true': [0.24404037552170058, nan], 'false': [nan, 8.800193003590479e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 31.117653608322144
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), complex(D, E) )
%   | | then return 0.858148935099512;  // std dev = 1.03e-07, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else if ( complex(D, F), phenotype(D, G) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.7470378239884012;  // std dev = 1.333, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | else if ( phenotype(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.837740771834206;  // std dev = 0.990, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.14185106490048768;  // std dev = 4.47e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.4740219509725243;  // std dev = 8.633, 315.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=194 */
%   else return -0.14185106490048746;  // std dev = 2.63e-07, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), enzyme(A, F) )
%   | | then if ( complex(D, G), phenotype(D, E) )
%   | | | then return 0.439200895277622;  // std dev = 0.692, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7377894324012291;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7567725258726437;  // std dev = 0.205, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.32551216618075857;  // std dev = 4.315, 80.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=43 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6651746248058317;  // std dev = 0.955, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.3258482633759319;  // std dev = 8.976, 342.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=183 */
%   else return -0.12544463852839216;  // std dev = 0.000, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, D), enzyme(A, E) )
%   | | then return 0.44927412639645925;  // std dev = 0.746, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.5949596813893901;  // std dev = 0.275, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), enzyme(A, H) )
%   | | | then return 0.2795755502999293;  // std dev = 0.742, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5839875981100221;  // std dev = 0.104, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return 0.1802474072077567;  // std dev = 6.028, 165.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=72 */
%   | | | else return 0.28295689680014396;  // std dev = 8.024, 279.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=153 */
%   else return -0.11231637819360639;  // std dev = 0.000, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E), complex(A, F) )
%   | | then if ( interaction(D, G), enzyme(G, H) )
%   | | | then return 0.17397304240739062;  // std dev = 1.075, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.419717122470552;  // std dev = 0.093, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.44560210294618124;  // std dev = 0.210, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1376747965291621;  // std dev = 0.017, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(I, A), location(A, J) )
%   | | | then return 0.2665196357398721;  // std dev = 8.694, 342.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=204 */
%   | | | else return 0.17294434102479195;  // std dev = 4.142, 76.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=38 */
%   else if ( complex(A, K) )
%   | then return -0.1015963294878365;  // std dev = 0.000, 171.000 (wgt'ed) examples reached here.  /* #neg=171 */
%   | else return -0.10159632948783652;  // std dev = 0.000, 186.000 (wgt'ed) examples reached here.  /* #neg=186 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(F, D) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.34848866777603765;  // std dev = 0.257, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return 0.06046181261040708;  // std dev = 0.583, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( location(D, G), interaction(H, D) )
%   | | | then return 0.42954192060327334;  // std dev = 0.022, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.39652107981947293;  // std dev = 0.062, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then if ( complex(A, I), phenotype(A, J) )
%   | | | then return -0.22989940463755631;  // std dev = 0.277, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.12641433650091458;  // std dev = 0.010, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.17022140617379322;  // std dev = 8.667, 336.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=187 */
%   | | | else return 0.2947613683984244;  // std dev = 3.875, 78.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=54 */
%   else return -0.09269127618926074;  // std dev = 8.64e-09, 380.000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, D) )
%   | | | then return 0.4771624173671704;  // std dev = 1.439, 119.000 (wgt'ed) examples reached here.  /* #pos=119 */
%   | | | else return -0.3779772879004297;  // std dev = 0.719, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else if ( phenotype(A, G) )
%   | | | then return -0.28982573019218044;  // std dev = 0.375, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.4080713985290017;  // std dev = 0.031, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.05329401941724514;  // std dev = 2.710, 39.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | | else return 0.24158500615883444;  // std dev = 1.776, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.22196053102083646;  // std dev = 4.303, 88.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=59 */
%   | | | else return 0.15399496451508213;  // std dev = 5.110, 117.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=71 */
%   else return -0.08518475138839678;  // std dev = 6.18e-09, 319.000 (wgt'ed) examples reached here.  /* #neg=319 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), interaction(D, F) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.19894764116569397;  // std dev = 0.154, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.07989356433960806;  // std dev = 0.517, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.20361591229719345;  // std dev = 0.090, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.24986265505177563;  // std dev = 0.137, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.31680220456741814;  // std dev = 2.302, 43.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=35 */
%   | | | else return -0.06277632834615723;  // std dev = 4.408, 130.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=43 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.11813507200651893;  // std dev = 4.654, 132.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=77 */
%   | | | else return 0.06105859226878667;  // std dev = 5.908, 160.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=87 */
%   else return -0.07877675473109141;  // std dev = 4.06e-09, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then if ( complex(D, F), interaction(G, A) )
%   | | then if ( enzyme(G, H), phenotype(G, E) )
%   | | | then return 0.020104076300021236;  // std dev = 2.355, 34.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=19 */
%   | | | else return 0.11391080387178314;  // std dev = 3.214, 88.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=55 */
%   | | else if ( interaction(I, A), complex(A, J) )
%   | | | then return 0.2296119799246037;  // std dev = 0.504, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.02535063714251022;  // std dev = 3.553, 70.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=33 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( complex(K, M), phenotype(A, N) )
%   | | | then return 0.16734524930374087;  // std dev = 2.797, 54.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=36 */
%   | | | else return 0.04786361304338516;  // std dev = 4.890, 122.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=68 */
%   | | else if ( phenotype(A, P) )
%   | | | then return 0.09418982272232707;  // std dev = 2.509, 36.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=21 */
%   | | | else return 0.2071295688128697;  // std dev = 3.140, 64.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=47 */
%   else return -0.07324622576333714;  // std dev = 3.48e-09, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, D), interaction(D, A) )
%   | | | then return 0.29293433770950933;  // std dev = 1.008, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return 0.05075558635538657;  // std dev = 0.592, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.3034351515181124;  // std dev = 0.862, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0.1063160974763245;  // std dev = 4.029, 104.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=64 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.36751320323022113;  // std dev = 1.235, 66.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=65 */
%   | | | else return -0.3829059762655676;  // std dev = 0.798, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.020996110207922625;  // std dev = 4.795, 114.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=62 */
%   | | | else return -0.05430963030765231;  // std dev = 4.476, 91.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=45 */
%   else return -0.06842697784420324;  // std dev = 0.000, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( enzyme(D, E), complex(D, F) )
%   | | then if ( phenotype(A, G), phenotype(D, G) )
%   | | | then return 0.14939111115313075;  // std dev = 0.262, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.40960092470945564;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(D, H) )
%   | | | then return -0.00763858783963155;  // std dev = 1.442, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0.12309695180374487;  // std dev = 2.285, 58.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=42 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.17492211107502337;  // std dev = 1.105, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return -0.02742979394861645;  // std dev = 3.656, 86.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=42 */
%   | | else if ( location(A, L), interaction(M, A) )
%   | | | then return 0.059072806229242415;  // std dev = 6.609, 254.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=152 */
%   | | | else return 0.12984169792651273;  // std dev = 1.831, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   else return -0.06419184008202569;  // std dev = 9.13e-09, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
Inference time using transfer learning 3.3847434520721436
Refined model CLL: -0.241315


******************************************
Best model found
******************************************
Results 

CLL : -0.243372 

AUC ROC : 0.973941 

AUC PR : 0.354233 

Precision : 0.054569 

Recall : 0.965116 

F1 : 0.103298 

Total Learning Time : 31.117653608322144 

Total Inference Time : 27.346783876419067 

Total revision time: 71.20816230773926
Best scored revision CLL: -0.241315


Results 

CLL : -0.243372 

AUC ROC : 0.973941 

AUC PR : 0.354233 

Precision : 0.054569 

Recall : 0.965116 

F1 : 0.103298 

Total Learning Time : 71.23480796813965 

Total Inference Time : 27.346783876419067 

Starting experiments for fasttext using wmd 

Run: 1

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.096047401428223
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.47656998773108694;  // std dev = 0.486, 456.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1418510649004876;  // std dev = 1.12e-08, 340.000 (wgt'ed) examples reached here.  /* #neg=340 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.36045887584892033;  // std dev = 6.965, 198.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=113 */
%   | else return 0.37860197935787837;  // std dev = 8.336, 287.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=169 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839213;  // std dev = 0.000, 323.000 (wgt'ed) examples reached here.  /* #neg=323 */
%   | | | else return -0.12544463852839158;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.29466602766091354;  // std dev = 0.495, 492.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360667;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.61484640018178;  // std dev = 3.245, 251.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=240 */
%   | else return -0.17069675192527567;  // std dev = 5.902, 246.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783642;  // std dev = 0.000, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   | | | else return -0.10159632948783655;  // std dev = 0.000, 215.000 (wgt'ed) examples reached here.  /* #neg=215 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.16661747774507318;  // std dev = 6.044, 201.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=113 */
%   | else return 0.16126393821531426;  // std dev = 7.518, 298.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=169 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926047;  // std dev = 1.08e-08, 352.000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.18072485037529415;  // std dev = 7.120, 283.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=178 */
%   | | else return 0.07516872575672341;  // std dev = 6.138, 204.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=104 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 5.87e-08, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | | else return -0.08518475138839678;  // std dev = 8.30e-08, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.10160893314083248;  // std dev = 0.425, 491.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.0787767547310915;  // std dev = 8.30e-08, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
%   | | else return -0.07877675473109146;  // std dev = 7.60e-08, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.08211465479796344;  // std dev = 7.389, 302.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=178 */
%   | else return 0.08407508961124023;  // std dev = 5.750, 182.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=104 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333714;  // std dev = 3.23e-09, 349.000 (wgt'ed) examples reached here.  /* #neg=349 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.0474528106026307;  // std dev = 9.560, 500.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420308;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.03293851812813608;  // std dev = 9.636, 501.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202578;  // std dev = 8.38e-09, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
Inference time using transfer learning 1.9621682167053223
Parameter learned model CLL:-0.26345 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.486, 174, 282], 'false,true': [0.0, 0, 0], 'false,false': [1.12e-08, 340, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [6.965, 85, 113], 'true,false': [8.336, 118, 169], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 323, 0], 'false,false,false,false': [0.0, 52, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.495, 210, 282], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 324, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [3.245, 11, 240], 'true,false': [5.902, 204, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 144, 0], 'false,false,false,false': [0.0, 215, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.044, 88, 113], 'true,false': [7.518, 129, 169], 'false,true': [0.0, 0, 0], 'false,false': [1.08e-08, 352, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [7.12, 105, 178], 'true,true,false': [6.138, 100, 104], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.87e-08, 136, 0], 'false,false,false': [8.3e-08, 213, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.425, 209, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.3e-08, 152, 0], 'false,false,false': [7.6e-08, 208, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [7.389, 124, 178], 'true,false': [5.75, 78, 104], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.23e-09, 349, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.56, 218, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 320, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.636, 219, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.38e-09, 344, 0]}]
{'': [0.2359764542936319, 1.2538989454590003e-16], 'false': [nan, 1.2538989454590003e-16]}
{'': [0.24336698905303472, -1.2552921665095104e-16], 'true': [0.2450005101520256, 0.24210564654178135], 'false': [nan, -1.2552921665095104e-16], 'false,false': [nan, -1.2552921665095104e-16], 'false,false,false': [-1.1274091395574345e-16, -3.416070845000482e-17]}
{'': [0.24469289844011824, -3.8378079863585656e-17], 'false': [nan, -3.8378079863585656e-17], 'false,false': [nan, -3.8378079863585656e-17]}
{'': [0.24552715919474521, 4.9480691905299454e-17], 'true': [0.04195298612863156, 0.14159598248920674], 'false': [nan, 4.9480691905299454e-17], 'false,false': [nan, 4.9480691905299454e-17], 'false,false,false': [-6.167905692361981e-17, -8.26212483441977e-17]}
{'': [0.18646904114590634, 1.148071536828287e-16], 'true': [0.18171912998664985, 0.18966129571942866], 'false': [nan, 1.148071536828287e-16]}
{'': [0.18414672677802246, 3.9446319499575764e-17], 'true': [0.18414672677802246, nan], 'true,true': [0.17911170522323627, 0.18465681506868506], 'false': [nan, 3.9446319499575764e-17], 'false,false': [2.5306554237779303e-17, 3.2316350951530376e-17]}
{'': [0.18079949825591926, 1.973729821555834e-17], 'true': [0.18079949825591926, nan], 'false': [nan, 1.973729821555834e-17], 'false,false': [4.5285412846552437e-17, 2.7755575615628914e-17]}
{'': [0.18109392330219826, 9.543464395058652e-18], 'true': [0.18076863183336392, 0.18163129456751723], 'false': [nan, 9.543464395058652e-18], 'false,false': [nan, 9.543464395058652e-18]}
{'': [0.18280033082050828, -7.28583859910259e-17], 'true': [0.18280033082050828, nan], 'false': [nan, -7.28583859910259e-17], 'false,false': [nan, -7.28583859910259e-17]}
{'': [0.18533974918827, 7.10026352957949e-17], 'true': [0.18533974918827, nan], 'false': [nan, 7.10026352957949e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 52.094606161117554
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then return 0.8581489350995117;  // std dev = 1.69e-07, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else if ( complex(A, F), complex(D, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.5581489350995122;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else if ( interaction(A, G), interaction(H, A) )
%   | | then if ( interaction(H, H), location(A, I) )
%   | | | then return 0.16926004621062346;  // std dev = 3.106, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return 0.3711924133603829;  // std dev = 5.360, 115.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=59 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.4306680190689753;  // std dev = 8.008, 262.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=150 */
%   else return -0.1418510649004875;  // std dev = 2.46e-07, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), interaction(D, A) )
%   | | then if ( interaction(A, F), interaction(D, F) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.40494429298960877;  // std dev = 0.770, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7295987582712558;  // std dev = 0.135, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( interaction(G, A), location(G, H) )
%   | | | then return 0.0955302390730352;  // std dev = 2.277, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.28836360083793344;  // std dev = 3.999, 64.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=31 */
%   | | else if ( complex(A, I), enzyme(A, J) )
%   | | | then return 0.28888131728219235;  // std dev = 3.820, 59.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=29 */
%   | | | else return 0.3804392964825066;  // std dev = 8.357, 290.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=169 */
%   else if ( interaction(K, A) )
%   | then return -0.12544463852839208;  // std dev = 0.000, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
%   | else return -0.12544463852839152;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), complex(A, E) )
%   | then if ( location(F, D), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, E) )
%   | | | then return 0.6941851424235742;  // std dev = 0.914, 111.000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | | | else return -0.2470063796960372;  // std dev = 0.264, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.17723272063915965;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.25875055412762643;  // std dev = 0.029, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( enzyme(A, G), phenotype(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.7201859289443211;  // std dev = 0.333, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return -0.25862510671297323;  // std dev = 0.228, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(A, A), phenotype(A, J) )
%   | | | then return 0.10180504407200767;  // std dev = 0.825, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.2772370703709804;  // std dev = 7.726, 249.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=137 */
%   else return -0.11231637819360628;  // std dev = 0.000, 386.000 (wgt'ed) examples reached here.  /* #neg=386 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.5613795984013209;  // std dev = 3.026, 240.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=230 */
%   | | | else return -0.06619425013810847;  // std dev = 4.822, 173.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=39 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.20633690287082396;  // std dev = 0.094, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.31174372163654906;  // std dev = 0.263, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else if ( phenotype(A, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.06416357702844766;  // std dev = 0.683, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.029859780385045016;  // std dev = 0.746, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.2070171804814545;  // std dev = 1.779, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.0379483399382458;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   else return -0.10159632948783635;  // std dev = 4.56e-09, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.3066170823089759;  // std dev = 1.258, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return 0.4806121559049671;  // std dev = 0.476, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.1858582769713494;  // std dev = 0.184, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.2124127608580502;  // std dev = 0.239, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.31894142826955346;  // std dev = 0.357, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0.13377963125648468;  // std dev = 5.519, 196.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=101 */
%   | | else if ( phenotype(A, L), interaction(A, M) )
%   | | | then return 0.3427628651489371;  // std dev = 2.239, 34.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
%   | | | else return 0.23681630081925592;  // std dev = 4.281, 115.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=73 */
%   else return -0.09269127618926057;  // std dev = 1.01e-08, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B), interaction(A, D) )
%   | | then if ( recursion_proteinclass(D, B), location(A, F) )
%   | | | then return 0.2355002475463887;  // std dev = 0.214, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.415938456564226;  // std dev = 1.071, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.2078115307345766;  // std dev = 0.462, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0.1186877259197152;  // std dev = 5.951, 269.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=153 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(H, J), enzyme(J, K) )
%   | | | then return 0.35292405776222296;  // std dev = 0.931, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.15499184216171058;  // std dev = 1.704, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | else if ( interaction(A, L), phenotype(A, M) )
%   | | | then return 0.09164722365013456;  // std dev = 2.425, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | | else return 0.2099288866592826;  // std dev = 3.072, 60.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=39 */
%   else return -0.08518475138839678;  // std dev = 6.32e-09, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B), interaction(E, D) )
%   | | then if ( complex(A, F), interaction(A, D) )
%   | | | then return 0.12748938357873701;  // std dev = 0.662, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.27846904453375637;  // std dev = 0.400, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else if ( complex(D, G), complex(A, G) )
%   | | | then return 0.00789096140077854;  // std dev = 2.185, 57.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=21 */
%   | | | else return 0.11867455432929318;  // std dev = 6.221, 291.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=176 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.33534547621610794;  // std dev = 0.193, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.15973940570365316;  // std dev = 1.795, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0.23226299511734058;  // std dev = 2.547, 38.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=24 */
%   else if ( complex(A, K) )
%   | then return -0.07877675473109153;  // std dev = 6.59e-09, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | else return -0.07877675473109147;  // std dev = 5.89e-09, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), location(F, E) )
%   | | | then return 0.24066078317326092;  // std dev = 1.407, 57.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=55 */
%   | | | else return 0.009489423088357013;  // std dev = 1.265, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | else if ( interaction(H, D), interaction(D, H) )
%   | | | then return 0.031500667910870875;  // std dev = 4.804, 169.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=83 */
%   | | | else return 0.08720459000981644;  // std dev = 4.256, 145.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=89 */
%   | else if ( location(A, I), phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.289834857806741;  // std dev = 1.619, 29.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=24 */
%   | | | else return -0.33612661463461574;  // std dev = 0.446, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.3501292464762293;  // std dev = 0.919, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.1818633118803107;  // std dev = 1.631, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   else return -0.0732462257633375;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(E, D), enzyme(F, G) )
%   | | | then return -0.027312460003031842;  // std dev = 1.097, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.24842067384806768;  // std dev = 0.530, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return -0.06160616119284525;  // std dev = 2.501, 79.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=26 */
%   | | | else return 0.06556012615617622;  // std dev = 3.680, 117.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=69 */
%   | else if ( complex(A, J), location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.11015820855542918;  // std dev = 2.342, 72.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=52 */
%   | | | else return -0.27122205984787945;  // std dev = 0.286, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.1698644054526766;  // std dev = 2.269, 41.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=29 */
%   | | | else return 0.09927644889551057;  // std dev = 4.261, 106.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=67 */
%   else return -0.06842697784420318;  // std dev = 0.000, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), complex(E, F) )
%   | | then if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return -0.11410319322484107;  // std dev = 0.820, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.10196795395846751;  // std dev = 0.941, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | else if ( phenotype(A, I), phenotype(D, J) )
%   | | | then return 0.30981000939918896;  // std dev = 0.092, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.19529991503817626;  // std dev = 0.181, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( enzyme(L, M), phenotype(K, N) )
%   | | | then return 0.047586792480452986;  // std dev = 3.623, 127.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=71 */
%   | | | else return -0.025127776894760506;  // std dev = 5.123, 194.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=89 */
%   | | else if ( interaction(A, P), complex(P, Q) )
%   | | | then return -0.007454055628992863;  // std dev = 3.035, 67.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=36 */
%   | | | else return 0.08646980993263945;  // std dev = 2.938, 62.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=40 */
%   else return -0.06419184008202568;  // std dev = 9.17e-09, 370.000 (wgt'ed) examples reached here.  /* #neg=370 */
Inference time using transfer learning 5.914870023727417
Refined model CLL: -0.205397


******************************************
Best model found
******************************************
Results 

CLL : -0.19984 

AUC ROC : 0.994582 

AUC PR : 0.532523 

Precision : 0.171657 

Recall : 0.988506 

F1 : 0.292517 

Total Learning Time : 52.094606161117554 

Total Inference Time : 45.58492946624756 

Total revision time: 110.42862558364868
Best scored revision CLL: -0.205397


Results 

CLL : -0.19984 

AUC ROC : 0.994582 

AUC PR : 0.532523 

Precision : 0.171657 

Recall : 0.988506 

F1 : 0.292517 

Total Learning Time : 110.44521450996399 

Total Inference Time : 45.58492946624756 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos examples: 104
Target test neg examples: 16320

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.573798418045044
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4256007552279876;  // std dev = 0.495, 467.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048752;  // std dev = 1.25e-08, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3672389241311057;  // std dev = 6.790, 188.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=107 */
%   | else return 0.4176978310981478;  // std dev = 7.753, 255.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=158 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839202;  // std dev = 0.000, 262.000 (wgt'ed) examples reached here.  /* #neg=262 */
%   | | | else return -0.12544463852839158;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.32478725100773437;  // std dev = 0.490, 443.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360663;  // std dev = 0.000, 329.000 (wgt'ed) examples reached here.  /* #neg=329 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5715072881160399;  // std dev = 4.378, 244.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=223 */
%   | else return -0.14682052420095248;  // std dev = 5.812, 215.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.1015963294878364;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | | | else return -0.1015963294878365;  // std dev = 0.000, 171.000 (wgt'ed) examples reached here.  /* #neg=171 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.1835814826491189;  // std dev = 5.936, 186.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=107 */
%   | else return 0.2094564455824721;  // std dev = 6.816, 256.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=158 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926043;  // std dev = 1.09e-08, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.13498558018533557;  // std dev = 7.221, 272.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=158 */
%   | | else return 0.08978199988933247;  // std dev = 6.095, 202.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=107 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839679;  // std dev = 5.05e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | | else return -0.08518475138839678;  // std dev = 8.82e-08, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.11450812639458058;  // std dev = 0.428, 451.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.07877675473109151;  // std dev = 7.74e-08, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | | else return -0.07877675473109147;  // std dev = 7.74e-08, 199.000 (wgt'ed) examples reached here.  /* #neg=199 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.06115970151111704;  // std dev = 7.307, 281.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=158 */
%   | else return 0.08561875947306065;  // std dev = 5.754, 183.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=107 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333714;  // std dev = 3.36e-09, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07031121998442479;  // std dev = 9.095, 449.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420318;  // std dev = 0.000, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06085564796108617;  // std dev = 8.993, 443.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202587;  // std dev = 7.57e-09, 321.000 (wgt'ed) examples reached here.  /* #neg=321 */
Inference time using transfer learning 2.53711199760437
Parameter learned model CLL:-0.276939 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.495, 202, 265], 'false,true': [0.0, 0, 0], 'false,false': [1.25e-08, 354, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [6.79, 81, 107], 'true,false': [7.753, 97, 158], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 262, 0], 'false,false,false,false': [0.0, 54, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.49, 178, 265], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 329, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [4.378, 21, 223], 'true,false': [5.812, 173, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 129, 0], 'false,false,false,false': [0.0, 171, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.936, 79, 107], 'true,false': [6.816, 98, 158], 'false,true': [0.0, 0, 0], 'false,false': [1.09e-08, 346, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [7.221, 114, 158], 'true,true,false': [6.095, 95, 107], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.05e-08, 121, 0], 'false,false,false': [8.82e-08, 230, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.428, 186, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.74e-08, 140, 0], 'false,false,false': [7.74e-08, 199, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [7.307, 123, 158], 'true,false': [5.754, 76, 107], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.36e-09, 336, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.095, 184, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 341, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [8.993, 178, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.57e-09, 321, 0]}]
{'': [0.24545025196135836, 1.5304769379013457e-16], 'false': [nan, 1.5304769379013457e-16]}
{'': [0.24035791265177484, -1.12427648063307e-16], 'true': [0.24521842462652932, 0.23569396386005528], 'false': [nan, -1.12427648063307e-16], 'false,false': [nan, -1.12427648063307e-16], 'false,false,false': [-9.491983111299048e-17, -3.700743415417188e-17]}
{'': [0.24027064641318024, -3.7794826370218094e-17], 'false': [nan, -3.7794826370218094e-17], 'false,false': [nan, -3.7794826370218094e-17]}
{'': [0.2438307310612013, -5.181040781584064e-17], 'true': [0.07855984431618396, 0.15709605622162653], 'false': [nan, -5.181040781584064e-17], 'false,false': [nan, -5.181040781584064e-17], 'false,false,false': [-3.7868072157757277e-17, -7.920889415454333e-17]}
{'': [0.18498857350721928, 1.2064851365868752e-16], 'true': [0.18945801792557204, 0.18145950173487], 'false': [nan, 1.2064851365868752e-16]}
{'': [0.18887036372131608, 3.9221554146301825e-17], 'true': [0.18887036372131608, nan], 'true,true': [0.19169485390354232, 0.18389452669301606], 'false': [nan, 3.9221554146301825e-17], 'false,false': [2.1103412864775703e-17, 3.37893964016352e-17]}
{'': [0.18295222814203918, 1.7029969699264938e-17], 'true': [0.18295222814203918, nan], 'false': [nan, 1.7029969699264938e-17], 'false,false': [4.282288809268461e-17, 3.0126654939577113e-17]}
{'': [0.18657335107061188, 1.057355261547768e-17], 'true': [0.19002322918405845, 0.18091369769850008], 'false': [nan, 1.057355261547768e-17], 'false,false': [nan, 1.057355261547768e-17]}
{'': [0.18424856354604893, -8.074349270001139e-17], 'true': [0.18424856354604893, nan], 'false': [nan, -8.074349270001139e-17], 'false,false': [nan, -8.074349270001139e-17]}
{'': [0.18257871471237347, 5.810513026075585e-17], 'true': [0.18257871471237347, nan], 'false': [nan, 5.810513026075585e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 18.33711290359497
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( interaction(F, D), complex(F, G) )
%   | | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7993254056877476;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return 0.37166244861302267;  // std dev = 10.083, 407.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=209 */
%   else return -0.1418510649004877;  // std dev = 1.66e-07, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.725688964947389;  // std dev = 0.118, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then if ( interaction(E, E) )
%   | | | then return 0.057309944112302155;  // std dev = 2.076, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | | else return 0.3186800194305203;  // std dev = 2.666, 29.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6061911912464263;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return 0.37044037443613287;  // std dev = 9.104, 337.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=190 */
%   else if ( interaction(G, A) )
%   | then return -0.12544463852839188;  // std dev = 0.000, 257.000 (wgt'ed) examples reached here.  /* #neg=257 */
%   | else return -0.12544463852839116;  // std dev = 6.50e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E) )
%   | | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.5538310785560991;  // std dev = 4.21e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.6057142948749136;  // std dev = 0.063, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(G, A), phenotype(D, H) )
%   | | | then return 0.6180573599070917;  // std dev = 0.061, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3441100766196786;  // std dev = 1.041, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5224627931884548;  // std dev = 1.477, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.18425765869831232;  // std dev = 5.432, 128.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=54 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.23899869534170803;  // std dev = 3.341, 46.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | | | else return 0.37088042620326356;  // std dev = 6.965, 215.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=137 */
%   else return -0.1123163781936066;  // std dev = 0.000, 333.000 (wgt'ed) examples reached here.  /* #neg=333 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( location(D, E) )
%   | | | then return 0.41637582091974856;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.43138301152318537;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, D), location(D, F) )
%   | | | then return -0.010641185630885149;  // std dev = 1.850, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.12507727213314201;  // std dev = 3.937, 63.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=28 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(G, H), phenotype(A, I) )
%   | | | then return 0.1379454461443841;  // std dev = 0.847, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.46230172917193285;  // std dev = 0.149, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.1647438861929151;  // std dev = 3.855, 62.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | | else return 0.2728557469129353;  // std dev = 7.888, 265.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=159 */
%   else return -0.10159632948783653;  // std dev = 0.000, 325.000 (wgt'ed) examples reached here.  /* #neg=325 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), location(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.35208770046779997;  // std dev = 0.179, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.6064032448094285;  // std dev = 1.075, 86.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=85 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.2544091462611245;  // std dev = 0.204, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.3723852425139414;  // std dev = 0.252, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3298207567517347;  // std dev = 0.053, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.049553748317681355;  // std dev = 5.405, 130.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=55 */
%   | | else if ( interaction(A, K), interaction(L, A) )
%   | | | then return 0.11617260124128997;  // std dev = 3.439, 58.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=30 */
%   | | | else return 0.2072744073571353;  // std dev = 5.169, 115.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=69 */
%   else return -0.09269127618926044;  // std dev = 1.09e-08, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then if ( phenotype(A, F), phenotype(E, F) )
%   | | | then return 0.2513777599280312;  // std dev = 0.006, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.28445623888748506;  // std dev = 0.123, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(G, D), phenotype(A, H) )
%   | | | then return 0.3828492493631258;  // std dev = 0.118, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.31409900438382965;  // std dev = 0.153, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( enzyme(I, K), interaction(L, I) )
%   | | | then return 0.04937041435411862;  // std dev = 2.625, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | | else return 0.1795454563632212;  // std dev = 5.204, 141.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=83 */
%   | | else if ( interaction(M, A) )
%   | | | then return 0.05604831721530083;  // std dev = 6.087, 182.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=86 */
%   | | | else return 0.15920322822222077;  // std dev = 3.742, 71.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=42 */
%   else return -0.08518475138839678;  // std dev = 6.18e-09, 316.000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.0789840213188594;  // std dev = 0.834, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.4731098588909519;  // std dev = 0.961, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1767597011223915;  // std dev = 0.052, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.3755905714188111;  // std dev = 0.554, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else if ( interaction(A, G), enzyme(A, H) )
%   | | then if ( interaction(I, A) )
%   | | | then return 0.259996284582646;  // std dev = 1.908, 38.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=30 */
%   | | | else return 0.02536356164364799;  // std dev = 1.899, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.24904084987412284;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=24 */
%   | | | else return 0.11530868498708885;  // std dev = 6.839, 233.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=138 */
%   else return -0.07877675473109143;  // std dev = 3.95e-09, 320.000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( location(D, E), location(A, F) )
%   | | then if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.2786199169567188;  // std dev = 1.749, 53.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=49 */
%   | | | else return 0.04182069987189643;  // std dev = 7.403, 314.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=163 */
%   | | else if ( phenotype(D, H) )
%   | | | then return 0.44383692762651156;  // std dev = 0.340, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.11337000166770528;  // std dev = 1.286, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.2579106083085136;  // std dev = 0.075, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J) )
%   | | | then return -0.05539207079831824;  // std dev = 3.954, 82.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=33 */
%   | | | else return 0.2930494685735439;  // std dev = 0.856, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.07324622576333704;  // std dev = 1.61e-09, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return -0.07324622576333709;  // std dev = 4.27e-09, 316.000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( complex(D, E), phenotype(D, F) )
%   | | then if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.24013630428452618;  // std dev = 0.926, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return 0.04949325562309496;  // std dev = 4.637, 139.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=74 */
%   | | else if ( recursion_proteinclass(D, B), interaction(H, D) )
%   | | | then return 0.1470519397197287;  // std dev = 0.877, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return -0.007972142787159022;  // std dev = 6.592, 225.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=108 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.07361606663168456;  // std dev = 1.827, 24.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | | else return 0.273914541869247;  // std dev = 1.684, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.3886448281465366;  // std dev = 0.091, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.01944620547600628;  // std dev = 2.174, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   else return -0.06842697784420325;  // std dev = 0.000, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F), location(A, G) )
%   | | | then return 0.12492308050912271;  // std dev = 0.058, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.17874365435121042;  // std dev = 0.105, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(D, H), phenotype(A, I) )
%   | | | then return 0.09061556469313409;  // std dev = 1.702, 26.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=16 */
%   | | | else return -0.08706588854826433;  // std dev = 3.355, 65.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=25 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.28555085726420393;  // std dev = 0.798, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return 0.035911505926902954;  // std dev = 6.359, 228.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=122 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.07115649672507107;  // std dev = 3.329, 52.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=31 */
%   | | | else return 0.26652945185139937;  // std dev = 1.942, 29.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   else return -0.06419184008202578;  // std dev = 8.38e-09, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
Inference time using transfer learning 5.3079705238342285
Refined model CLL: -0.247389


******************************************
Best model found
******************************************
Results 

CLL : -0.260009 

AUC ROC : 0.954477 

AUC PR : 0.190059 

Precision : 0.045265 

Recall : 0.836538 

F1 : 0.085884 

Total Learning Time : 18.33711290359497 

Total Inference Time : 10.775703430175781 

Total revision time: 42.26768398284912
Best scored revision CLL: -0.247389


Results 

CLL : -0.260009 

AUC ROC : 0.954477 

AUC PR : 0.190059 

Precision : 0.045265 

Recall : 0.836538 

F1 : 0.085884 

Total Learning Time : 42.28427290916443 

Total Inference Time : 10.775703430175781 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos examples: 92
Target test neg examples: 12594

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 12.292189121246338
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.40884476014920973;  // std dev = 0.497, 503.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048757;  // std dev = 1.18e-08, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.3774356454722849;  // std dev = 10.329, 437.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=252 */
%   | else return 0.31098068820334196;  // std dev = 3.499, 49.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=25 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839216;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #neg=326 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.2899076934952707;  // std dev = 0.497, 499.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360674;  // std dev = 0.000, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.576671677133522;  // std dev = 4.938, 279.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=252 */
%   | else return -0.190272009446334;  // std dev = 4.716, 188.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=25 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783663;  // std dev = 0.000, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
%   | | | else return -0.10159632948783633;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.15267902993355165;  // std dev = 9.141, 458.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=252 */
%   | else return 0.2827706819204655;  // std dev = 3.333, 45.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=25 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926065;  // std dev = 9.31e-09, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.16362704910377185;  // std dev = 9.014, 457.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=271 */
%   | | else return 0.27188253645566723;  // std dev = 1.533, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839678;  // std dev = 1.10e-07, 321.000 (wgt'ed) examples reached here.  /* #neg=321 */
%   | | else return -0.08518475138839682;  // std dev = 1.67e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09508636890837704;  // std dev = 0.426, 498.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109141;  // std dev = 7.30e-08, 349.000 (wgt'ed) examples reached here.  /* #neg=349 */
%   | | else return -0.07877675473109179;  // std dev = 5.27e-09, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.1000150519083776;  // std dev = 8.979, 459.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=271 */
%   | else return 0.051782602638795354;  // std dev = 1.770, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333709;  // std dev = 4.06e-09, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.0628063610337609;  // std dev = 9.395, 478.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420325;  // std dev = 0.000, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06883690060893131;  // std dev = 9.037, 463.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0641918400820259;  // std dev = 7.09e-09, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
Inference time using transfer learning 2.981057643890381
Parameter learned model CLL:-0.2713 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.497, 226, 277], 'false,true': [0.0, 0, 0], 'false,false': [1.18e-08, 346, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [10.329, 185, 252], 'true,false': [3.499, 24, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 326, 0], 'false,false,false,false': [0.0, 31, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.497, 222, 277], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 314, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [4.938, 27, 252], 'true,false': [4.716, 163, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 305, 0], 'false,false,false,false': [0.0, 19, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.141, 206, 252], 'true,false': [3.333, 20, 25], 'false,true': [0.0, 0, 0], 'false,false': [9.31e-09, 373, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [9.014, 186, 271], 'true,true,false': [1.533, 4, 6], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.1e-07, 321, 0], 'false,false,false': [1.67e-08, 24, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.426, 221, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.3e-08, 349, 0], 'false,false,false': [5.27e-09, 26, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.979, 188, 271], 'true,false': [1.77, 7, 6], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.06e-09, 337, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.395, 201, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 365, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.037, 186, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.09e-09, 311, 0]}]
{'': [0.24742993332253294, 1.3861744122487504e-16], 'false': [nan, 1.3861744122487504e-16]}
{'': [0.24510575962336562, -1.2190684191962504e-16], 'true': [0.24412339175468448, 0.24989587671803373], 'false': [nan, -1.2190684191962504e-16], 'false,false': [nan, -1.2190684191962504e-16], 'false,false,false': [-1.1442789456259283e-16, -8.953411488912552e-18]}
{'': [0.2470899389190901, -4.6671795939656264e-17], 'false': [nan, -4.6671795939656264e-17], 'false,false': [nan, -4.6671795939656264e-17]}
{'': [0.2413096767395006, -2.4671622769447922e-17], 'true': [0.08740894901144412, 0.11829477604195268], 'false': [nan, -2.4671622769447922e-17], 'false,false': [nan, -2.4671622769447922e-17], 'false,false,false': [-5.241708706426969e-17, -1.0225738384705389e-17]}
{'': [0.18960058068547303, 8.691290165966373e-17], 'true': [0.18245532972600645, 0.24691358024691373], 'false': [nan, 8.691290165966373e-17]}
{'': [0.17925191249858344, 3.8616453030440226e-17], 'true': [0.17925191249858344, nan], 'true,true': [0.17778080475154964, 0.23501323354531456], 'false': [nan, 3.8616453030440226e-17], 'false,false': [3.735329802477162e-17, 1.1564823173178714e-17]}
{'': [0.1817228863948331, 2.4868995751603507e-17], 'true': [0.1817228863948331, nan], 'false': [nan, 2.4868995751603507e-17], 'false,false': [1.5269543032093844e-17, 1.0675221390626506e-18]}
{'': [0.17750472794130845, 1.7789923836723578e-17], 'true': [0.1756443796858911, 0.2409270362931267], 'false': [nan, 1.7789923836723578e-17], 'false,false': [nan, 1.7789923836723578e-17]}
{'': [0.18465609036822553, -1.0220135240385003e-16], 'true': [0.18465609036822553, nan], 'false': [nan, -1.0220135240385003e-16], 'false,false': [nan, -1.0220135240385003e-16]}
{'': [0.17637261647313948, 4.997788535290094e-17], 'true': [0.17637261647313948, nan], 'false': [nan, 4.997788535290094e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 38.51780366897583
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), enzyme(A, F) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( location(A, G), interaction(H, A) )
%   | | then if ( interaction(A, I), interaction(H, H) )
%   | | | then return 0.26631220040563447;  // std dev = 3.440, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | | | else return 0.3918732752754635;  // std dev = 9.212, 341.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=182 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.4098730730305468;  // std dev = 2.678, 29.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=16 */
%   | | | else return 0.7002541982574071;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else return -0.1418510649004877;  // std dev = 1.66e-07, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.7211090839837005;  // std dev = 0.061, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return 0.5631660001050113;  // std dev = 0.926, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return -0.178825553355628;  // std dev = 0.021, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( location(A, F), interaction(A, G) )
%   | | | then return 0.26423827133340444;  // std dev = 7.271, 213.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=98 */
%   | | | else return 0.39831580731333677;  // std dev = 7.392, 227.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=136 */
%   else if ( interaction(H, A) )
%   | then return -0.12544463852839208;  // std dev = 0.000, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
%   | else return -0.12544463852839136;  // std dev = 1.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(D, E) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.5627025245202197;  // std dev = 0.174, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.1528348614238179;  // std dev = 1.328, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5549624963692548;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7338870448659021;  // std dev = 0.078, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), interaction(H, G) )
%   | | | then return 0.234493636727826;  // std dev = 0.833, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5757480194489051;  // std dev = 0.134, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1528380064457467;  // std dev = 1.83e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0.2704872324353639;  // std dev = 10.132, 409.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=217 */
%   else return -0.11231637819360647;  // std dev = 0.000, 352.000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D) )
%   | | then if ( interaction(A, F), interaction(F, A) )
%   | | | then return 0.39549089199890414;  // std dev = 0.681, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.5630610776764496;  // std dev = 0.422, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.17505494332282862;  // std dev = 1.078, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( phenotype(A, I), enzyme(G, J) )
%   | | | then return 0.11450056969050554;  // std dev = 3.660, 54.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=23 */
%   | | | else return 0.22991301205431597;  // std dev = 6.977, 205.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=112 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.18767026356812275;  // std dev = 3.126, 44.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=23 */
%   | | | else return 0.32583178405322055;  // std dev = 5.116, 117.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=76 */
%   else if ( interaction(M, A) )
%   | then return -0.10159632948783662;  // std dev = 0.000, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
%   | else return -0.10159632948783634;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.5163348831670985;  // std dev = 4.226, 256.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=239 */
%   | | | else return -0.165119096568155;  // std dev = 4.158, 116.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=24 */
%   | | else if ( interaction(A, G), complex(A, H) )
%   | | | then return -0.2867242285944449;  // std dev = 0.257, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.3712710833712542;  // std dev = 0.125, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( complex(A, I) )
%   | | then if ( enzyme(A, J) )
%   | | | then return -0.046227924556142296;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.11966514221518454;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, K), interaction(L, A) )
%   | | | then return 0.36688359477693705;  // std dev = 0.848, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.013587564140844246;  // std dev = 1.862, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else return -0.09269127618926044;  // std dev = 1.09e-08, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, A), interaction(A, F) )
%   | | | then return 0.10563165957770601;  // std dev = 1.610, 28.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=24 */
%   | | | else return 0.3519673074691393;  // std dev = 2.686, 62.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=52 */
%   | | else if ( interaction(A, G), interaction(D, G) )
%   | | | then return -0.09056551039644782;  // std dev = 3.140, 97.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=23 */
%   | | | else return 0.09669907543378926;  // std dev = 7.088, 289.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=153 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5830679914187605;  // std dev = 0.947, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.3426539417744033;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.15889073645936305;  // std dev = 1.681, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.570297962159377;  // std dev = 0.196, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.08518475138839678;  // std dev = 6.18e-09, 328.000 (wgt'ed) examples reached here.  /* #neg=328 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( location(D, E), location(A, E) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.19203384118228817;  // std dev = 0.844, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | | else return 0.39573056747469726;  // std dev = 0.195, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.16374041823843943;  // std dev = 0.769, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, G), complex(A, H) )
%   | | then if ( complex(G, H), location(A, I) )
%   | | | then return -0.07889704014768362;  // std dev = 2.595, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return 0.16510377277375496;  // std dev = 2.949, 51.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=30 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0.20997858138868764;  // std dev = 2.829, 57.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=36 */
%   | | | else return 0.09046752999750866;  // std dev = 6.950, 278.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=154 */
%   else if ( interaction(L, A) )
%   | then return -0.07877675473109143;  // std dev = 2.63e-09, 332.000 (wgt'ed) examples reached here.  /* #neg=332 */
%   | else return -0.0787767547310918;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return 0.3656657066559087;  // std dev = 2.543, 150.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=144 */
%   | | | else return -0.036211272699119106;  // std dev = 2.628, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | else if ( interaction(A, G), location(G, H) )
%   | | | then return -0.30002754051462344;  // std dev = 0.604, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return -0.39951951999314406;  // std dev = 0.393, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( location(A, I), interaction(A, J) )
%   | | then if ( interaction(K, A), interaction(J, K) )
%   | | | then return 0.13374275010159234;  // std dev = 1.444, 28.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=19 */
%   | | | else return -0.044344752603955186;  // std dev = 3.452, 73.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=30 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return -0.012902519418048576;  // std dev = 2.463, 36.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | | else return 0.1025417186171328;  // std dev = 3.845, 86.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=51 */
%   else return -0.07324622576333724;  // std dev = 0.000, 383.000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), interaction(E, A) )
%   | then if ( phenotype(A, F), interaction(G, E) )
%   | | then if ( interaction(A, E), recursion_proteinclass(G, B) )
%   | | | then return 0.24379859605011603;  // std dev = 0.961, 41.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   | | | else return 0.010997960630462019;  // std dev = 4.585, 181.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=89 */
%   | | else if ( complex(E, H), location(E, D) )
%   | | | then return 0.05732095748391617;  // std dev = 3.706, 93.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=53 */
%   | | | else return 0.1300563523950548;  // std dev = 3.323, 86.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=57 */
%   | else if ( location(A, I), enzyme(A, J) )
%   | | then if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.26500146941691066;  // std dev = 1.015, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.4867067015613474;  // std dev = 0.094, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.02381777314963629;  // std dev = 1.670, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.2196492135333545;  // std dev = 2.247, 28.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
%   else return -0.06842697784420317;  // std dev = 0.000, 340.000 (wgt'ed) examples reached here.  /* #neg=340 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( complex(A, F), complex(D, F) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.42294934084023605;  // std dev = 0.221, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09229664552606483;  // std dev = 0.752, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( enzyme(A, I), recursion_proteinclass(D, B) )
%   | | | then return 0.14310801769710502;  // std dev = 0.136, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.043659413473538404;  // std dev = 3.952, 113.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=53 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.10907992250041738;  // std dev = 6.187, 295.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=199 */
%   | | | else return -0.29025214390764986;  // std dev = 0.528, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.018735236710350156;  // std dev = 1.735, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return -0.31742630745089634;  // std dev = 1.158, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return -0.06419184008202572;  // std dev = 8.84e-09, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
Inference time using transfer learning 4.955115556716919
Refined model CLL: -0.212282


******************************************
Best model found
******************************************
Results 

CLL : -0.204643 

AUC ROC : 0.989139 

AUC PR : 0.560203 

Precision : 0.180085 

Recall : 0.923913 

F1 : 0.301418 

Total Learning Time : 38.51780366897583 

Total Inference Time : 40.14807939529419 

Total revision time: 116.92940783500671
Best scored revision CLL: -0.212282


Results 

CLL : -0.204643 

AUC ROC : 0.989139 

AUC PR : 0.560203 

Precision : 0.180085 

Recall : 0.923913 

F1 : 0.301418 

Total Learning Time : 116.94599676132202 

Total Inference Time : 40.14807939529419 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos examples: 86
Target test neg examples: 10998

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 14.267512559890747
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.44045346184847917;  // std dev = 0.493, 486.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048738;  // std dev = 1.47e-08, 392.000 (wgt'ed) examples reached here.  /* #neg=392 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.372156576635261;  // std dev = 7.890, 255.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=147 */
%   | else return 0.34407308517416046;  // std dev = 7.837, 248.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=136 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839213;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
%   | | | else return -0.1254446385283915;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.30303146513030416;  // std dev = 0.495, 495.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360651;  // std dev = 0.000, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.567724008205138;  // std dev = 5.019, 279.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=251 */
%   | else return -0.18457419001539113;  // std dev = 5.205, 216.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=32 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783653;  // std dev = 0.000, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   | | | else return -0.1015963294878365;  // std dev = 0.000, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.23004703269999627;  // std dev = 6.719, 237.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=147 */
%   | else return 0.17317502078811922;  // std dev = 6.513, 237.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=136 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926065;  // std dev = 9.41e-09, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.15061062715807028;  // std dev = 8.706, 411.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=243 */
%   | | else return 0.04089191118313156;  // std dev = 3.951, 85.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=40 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 8.30e-08, 206.000 (wgt'ed) examples reached here.  /* #neg=206 */
%   | | else return -0.08518475138839678;  // std dev = 7.74e-08, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.12904800916356352;  // std dev = 0.424, 469.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109146;  // std dev = 9.19e-08, 211.000 (wgt'ed) examples reached here.  /* #neg=211 */
%   | | else return -0.07877675473109148;  // std dev = 8.30e-08, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.10673597385770438;  // std dev = 8.368, 394.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=243 */
%   | else return -0.029060543159758243;  // std dev = 4.038, 93.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=40 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333718;  // std dev = 2.46e-09, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06302629871137956;  // std dev = 9.345, 483.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420314;  // std dev = 0.000, 332.000 (wgt'ed) examples reached here.  /* #neg=332 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06746349114809826;  // std dev = 9.086, 465.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202573;  // std dev = 8.69e-09, 352.000 (wgt'ed) examples reached here.  /* #neg=352 */
Inference time using transfer learning 2.880035877227783
Parameter learned model CLL:-0.276178 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.493, 203, 283], 'false,true': [0.0, 0, 0], 'false,false': [1.47e-08, 392, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [7.89, 108, 147], 'true,false': [7.837, 112, 136], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 310, 0], 'false,false,false,false': [0.0, 40, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.495, 212, 283], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 346, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [5.019, 28, 251], 'true,false': [5.205, 184, 32], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 196, 0], 'false,false,false,false': [0.0, 172, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.719, 90, 147], 'true,false': [6.513, 101, 136], 'false,true': [0.0, 0, 0], 'false,false': [9.41e-09, 371, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [8.706, 168, 243], 'true,true,false': [3.951, 45, 40], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.3e-08, 206, 0], 'false,false,false': [7.74e-08, 187, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.424, 186, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [9.19e-08, 211, 0], 'false,false,false': [8.3e-08, 174, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.368, 151, 243], 'true,false': [4.038, 53, 40], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.46e-09, 364, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.345, 200, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 332, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.086, 182, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.69e-09, 352, 0]}]
{'': [0.24322596487663084, 2.1751308237554087e-16], 'false': [nan, 2.1751308237554087e-16]}
{'': [0.24607820275169323, -1.1926967350258825e-16], 'true': [0.24415224913494546, 0.2476586888657622], 'false': [nan, -1.1926967350258825e-16], 'false,false': [nan, -1.1926967350258825e-16], 'false,false,false': [-1.1173857538162865e-16, -2.4980018054066023e-17]}
{'': [0.24476075866090338, -3.337086548006251e-17], 'false': [nan, -3.337086548006251e-17], 'false,false': [nan, -3.337086548006251e-17]}
{'': [0.24483583086652674, 6.637202864606914e-17], 'true': [0.09030312912996694, 0.12544911696554933], 'false': [nan, 6.637202864606914e-17], 'false,false': [nan, 6.637202864606914e-17], 'false,false,false': [-9.06304509898087e-17, -8.003933433344151e-17]}
{'': [0.18555173731481236, 8.618442886578034e-17], 'true': [0.19047622096383318, 0.17901004079633728], 'false': [nan, 8.618442886578034e-17]}
{'': [0.18600558933673816, 3.8419931640972337e-17], 'true': [0.18600558933673816, nan], 'true,true': [0.18442948304940118, 0.18365132756873623], 'false': [nan, 3.8419931640972337e-17], 'false,false': [3.3414479381922185e-17, 3.2059916219122166e-17]}
{'': [0.1796101956154302, 4.2678703284291734e-17], 'true': [0.1796101956154302, nan], 'false': [nan, 4.2678703284291734e-17], 'false,false': [3.998907576848905e-17, 3.9559670992390636e-17]}
{'': [0.18011867063605683, 5.490113858036488e-18], 'true': [0.17772958350080179, 0.17532101438077033], 'false': [nan, 5.490113858036488e-18], 'false,false': [nan, 5.490113858036488e-18]}
{'': [0.18078941214916788, -7.42378046586701e-17], 'true': [0.18078941214916788, nan], 'false': [nan, -7.42378046586701e-17], 'false,false': [nan, -7.42378046586701e-17]}
{'': [0.17752887020796804, 7.506621586954184e-17], 'true': [0.17752887020796804, nan], 'false': [nan, 7.506621586954184e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 67.12224054336548
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( enzyme(A, G), recursion_proteinclass(D, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4251592443778624;  // std dev = 4.880, 97.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=55 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( complex(H, I), location(A, J) )
%   | | | then return 0.4206489350995113;  // std dev = 3.437, 48.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=27 */
%   | | | else return 0.2374592799270985;  // std dev = 2.613, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | else if ( interaction(K, A), complex(A, L) )
%   | | | then return 0.5331489350995129;  // std dev = 4.189, 80.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=54 */
%   | | | else return 0.4203379898258783;  // std dev = 7.034, 201.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=113 */
%   else return -0.14185106490048752;  // std dev = 2.44e-07, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), complex(D, E) )
%   | | then return 0.7635969203330432;  // std dev = 0.171, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else if ( interaction(A, F), complex(F, G) )
%   | | | then return 0.49280560737489665;  // std dev = 1.203, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.7598943822897324;  // std dev = 0.144, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( location(A, H), interaction(I, A) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return 0.22409184817127015;  // std dev = 5.058, 105.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=45 */
%   | | | else return 0.34984218350408347;  // std dev = 8.298, 279.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=155 */
%   | | else if ( location(A, K), phenotype(A, L) )
%   | | | then return 0.31828686059195466;  // std dev = 2.866, 33.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | | else return 0.5272238704535611;  // std dev = 2.563, 33.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=24 */
%   else if ( interaction(M, A) )
%   | then return -0.1254446385283921;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), enzyme(E, F) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.5831088263634415;  // std dev = 0.151, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.23667293274995901;  // std dev = 0.942, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.6285197751206433;  // std dev = 0.200, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.7184201474241342;  // std dev = 0.128, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, A) )
%   | | then if ( interaction(H, A), phenotype(H, I) )
%   | | | then return -0.24631796464519276;  // std dev = 0.026, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.29993300907083315;  // std dev = 7.45e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.4256514801675782;  // std dev = 3.801, 69.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=48 */
%   | | | else return 0.2772767235846346;  // std dev = 9.312, 354.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=194 */
%   else return -0.11231637819360626;  // std dev = 0.000, 390.000 (wgt'ed) examples reached here.  /* #neg=390 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return 0.5925322990316813;  // std dev = 3.432, 251.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=239 */
%   | | | else return -0.11316170342561162;  // std dev = 4.751, 141.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=30 */
%   | | else if ( enzyme(A, G) )
%   | | | then return -0.3414905885361357;  // std dev = 0.098, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.3119483903969313;  // std dev = 0.140, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.5529023971508392;  // std dev = 0.107, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return -0.07750184271293793;  // std dev = 1.459, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.20263488094094864;  // std dev = 1.857, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   else if ( interaction(A, K) )
%   | then return -0.10159632948783649;  // std dev = 0.000, 169.000 (wgt'ed) examples reached here.  /* #neg=169 */
%   | else return -0.1015963294878365;  // std dev = 0.000, 177.000 (wgt'ed) examples reached here.  /* #neg=177 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( location(A, F), interaction(D, D) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.32640074373813366;  // std dev = 0.155, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.009141614210159375;  // std dev = 3.423, 69.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=26 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.3021136379743742;  // std dev = 2.318, 35.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=27 */
%   | | | else return 0.11885689244950043;  // std dev = 6.198, 220.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=115 */
%   | else if ( interaction(A, H), complex(A, I) )
%   | | then if ( complex(H, I), recursion_proteinclass(H, B) )
%   | | | then return 0.4366524470478359;  // std dev = 0.467, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.02830345510800243;  // std dev = 3.021, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.23971529099939115;  // std dev = 3.614, 87.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=58 */
%   | | | else return 0.43469029039661944;  // std dev = 2.123, 24.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   else return -0.09269127618926075;  // std dev = 8.64e-09, 383.000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), location(E, F) )
%   | | then if ( complex(E, G) )
%   | | | then return 0.29142008242930484;  // std dev = 0.392, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return 0.1029016973463025;  // std dev = 0.943, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.476177968691451;  // std dev = 0.132, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A), interaction(A, I) )
%   | | then if ( interaction(H, H), interaction(I, I) )
%   | | | then return 0.002525009785482921;  // std dev = 2.528, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | | else return 0.12604335167834455;  // std dev = 4.513, 116.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=64 */
%   | | else if ( location(A, J) )
%   | | | then return 0.14713574096474352;  // std dev = 6.959, 267.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=157 */
%   | | | else return -0.04800189904976689;  // std dev = 1.986, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   else if ( interaction(A, K) )
%   | then return -0.08518475138839678;  // std dev = 5.74e-09, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   | else return -0.08518475138839678;  // std dev = 5.35e-09, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.3467668002409871;  // std dev = 1.896, 60.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | | else return 0.07411348086989612;  // std dev = 1.805, 21.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.27831513838951555;  // std dev = 0.494, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0.06777936655595666;  // std dev = 7.522, 332.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=179 */
%   | else if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.3417064077562044;  // std dev = 2.561, 39.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=30 */
%   | | | else return -0.36689414240888923;  // std dev = 0.090, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.17020707153340656;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( interaction(A, H) )
%   | then return -0.07877675473109147;  // std dev = 6.52e-09, 191.000 (wgt'ed) examples reached here.  /* #neg=191 */
%   | else return -0.07877675473109148;  // std dev = 6.18e-09, 176.000 (wgt'ed) examples reached here.  /* #neg=176 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F), interaction(A, F) )
%   | | | then return 0.369961971732775;  // std dev = 2.032, 140.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=138 */
%   | | | else return 0.021158435032749733;  // std dev = 6.598, 261.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=131 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.21141604739947717;  // std dev = 0.192, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.3338024764699198;  // std dev = 0.199, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( interaction(J, H), interaction(J, J) )
%   | | | then return 0.24145454282349194;  // std dev = 0.740, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.5482744367365099;  // std dev = 0.138, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.1233310657485541;  // std dev = 0.905, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( location(A, K) )
%   | then return -0.07324622576333716;  // std dev = 3.09e-09, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
%   | else return -0.07324622576333706;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(F, A), interaction(A, F) )
%   | | | then return 0.041596149627556006;  // std dev = 1.278, 26.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | | | else return 0.2117078279352365;  // std dev = 0.218, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( complex(D, G), complex(A, G) )
%   | | | then return -0.11643100443880765;  // std dev = 2.585, 60.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=17 */
%   | | | else return 0.02837203487389572;  // std dev = 4.790, 164.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=88 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.38462568958544546;  // std dev = 0.393, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.40347801890607177;  // std dev = 0.549, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.1123875266263962;  // std dev = 4.533, 134.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=81 */
%   | | | else return -0.005614411994316739;  // std dev = 2.212, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   else return -0.06842697784420332;  // std dev = 0.000, 388.000 (wgt'ed) examples reached here.  /* #neg=388 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), enzyme(G, D) )
%   | | | then return 0.21037162189938646;  // std dev = 0.804, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return 0.3500341142782723;  // std dev = 0.395, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return -0.44900839901256656;  // std dev = 0.729, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.335507158082564;  // std dev = 0.537, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( complex(A, J), interaction(A, A) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.11374450288813814;  // std dev = 0.047, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.27165763980807933;  // std dev = 0.838, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.0663993062023778;  // std dev = 5.962, 297.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=178 */
%   | | | else return 0.1367943131433858;  // std dev = 2.988, 64.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=42 */
%   else return -0.06419184008202564;  // std dev = 9.45e-09, 384.000 (wgt'ed) examples reached here.  /* #neg=384 */
Inference time using transfer learning 5.164682865142822
Refined model CLL: -0.2078


******************************************
Best model found
******************************************
Results 

CLL : -0.195012 

AUC ROC : 0.992783 

AUC PR : 0.507622 

Precision : 0.152878 

Recall : 0.988372 

F1 : 0.264798 

Total Learning Time : 67.12224054336548 

Total Inference Time : 57.405766248703 

Total revision time: 178.2400302886963
Best scored revision CLL: -0.2078


Results 

CLL : -0.195012 

AUC ROC : 0.992783 

AUC PR : 0.507622 

Precision : 0.152878 

Recall : 0.988372 

F1 : 0.264798 

Total Learning Time : 178.2566192150116 

Total Inference Time : 57.405766248703 

Run: 2

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 10.899341821670532
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4568750497491895;  // std dev = 0.490, 471.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048752;  // std dev = 1.25e-08, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.33496141062512874;  // std dev = 8.426, 286.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=155 */
%   | else return 0.35002091252673595;  // std dev = 7.501, 228.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=127 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839213;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #neg=320 */
%   | | | else return -0.12544463852839155;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.31037886990948504;  // std dev = 0.494, 487.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360646;  // std dev = 0.000, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5784608045940435;  // std dev = 4.582, 263.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=240 */
%   | else return -0.1451795023134591;  // std dev = 5.847, 223.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783653;  // std dev = 0.000, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
%   | | | else return -0.10159632948783649;  // std dev = 0.000, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.21710751476610124;  // std dev = 7.100, 260.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=155 */
%   | else return 0.1536112121593225;  // std dev = 6.342, 227.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=127 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926043;  // std dev = 1.08e-08, 330.000 (wgt'ed) examples reached here.  /* #neg=330 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1493412583542058;  // std dev = 8.690, 407.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=237 */
%   | | else return 0.06422487841702702;  // std dev = 4.119, 87.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 8.56e-08, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
%   | | else return -0.08518475138839678;  // std dev = 7.15e-08, 171.000 (wgt'ed) examples reached here.  /* #neg=171 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.113206931047691;  // std dev = 0.432, 482.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109147;  // std dev = 9.31e-08, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
%   | | else return -0.07877675473109148;  // std dev = 8.56e-08, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.07596467913060964;  // std dev = 8.815, 414.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=237 */
%   | else return 0.00971368404950737;  // std dev = 4.035, 94.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=45 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333724;  // std dev = 0.000, 384.000 (wgt'ed) examples reached here.  /* #neg=384 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06645705397677619;  // std dev = 9.457, 490.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420328;  // std dev = 0.000, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06978904458513359;  // std dev = 9.236, 470.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0641918400820257;  // std dev = 8.93e-09, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
Inference time using transfer learning 6.69405460357666
Parameter learned model CLL:-0.272309 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.49, 189, 282], 'false,true': [0.0, 0, 0], 'false,false': [1.25e-08, 356, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [8.426, 131, 155], 'true,false': [7.501, 101, 127], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 320, 0], 'false,false,false,false': [0.0, 50, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.494, 205, 282], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 355, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [4.582, 23, 240], 'true,false': [5.847, 181, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 189, 0], 'false,false,false,false': [0.0, 170, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [7.1, 105, 155], 'true,false': [6.342, 100, 127], 'false,true': [0.0, 0, 0], 'false,false': [1.08e-08, 330, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [8.69, 170, 237], 'true,true,false': [4.119, 42, 45], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.56e-08, 208, 0], 'false,false,false': [7.15e-08, 171, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.432, 200, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [9.31e-08, 193, 0], 'false,false,false': [8.56e-08, 163, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.815, 177, 237], 'true,false': [4.035, 49, 45], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 384, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.457, 208, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 374, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.236, 188, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.93e-09, 363, 0]}]
{'': [0.24025315428618096, 1.571776416885053e-16], 'false': [nan, 1.571776416885053e-16]}
{'': [0.24763433208678312, -1.248250752010987e-16], 'true': [0.2482395227150463, 0.24674899969221212], 'false': [nan, -1.248250752010987e-16], 'false,false': [nan, -1.248250752010987e-16], 'false,false,false': [-1.1102230246251565e-16, -3.3306690738754695e-17]}
{'': [0.24375717475880526, -3.002293249690564e-17], 'false': [nan, -3.002293249690564e-17], 'false,false': [nan, -3.002293249690564e-17]}
{'': [0.24358023368229806, 4.9480691905299454e-17], 'true': [0.07982660486458022, 0.153329463260729], 'false': [nan, 4.9480691905299454e-17], 'false,false': [nan, 4.9480691905299454e-17], 'false,false,false': [-9.046261682130905e-17, -7.706253935633439e-17]}
{'': [0.18710869887956866, 1.1438661465834946e-16], 'true': [0.19388350219802933, 0.17719652167279437], 'false': [nan, 1.1438661465834946e-16]}
{'': [0.1882611115252818, 3.866739821913474e-17], 'true': [0.1882611115252818, nan], 'true,true': [0.18554557017257473, 0.19499595856747987], 'false': [nan, 3.866739821913474e-17], 'false,false': [3.5228230589067465e-17, 2.9865648615647484e-17]}
{'': [0.1870432478754586, 3.2433481618263e-17], 'true': [0.1870432478754586, nan], 'false': [nan, 3.2433481618263e-17], 'false,false': [4.4869117057389745e-17, 4.495381572101861e-17]}
{'': [0.1856718240964944, -3.469446951953614e-18], 'true': [0.1876882233819724, 0.17321406622620075], 'false': [nan, -3.469446951953614e-18], 'false,false': [nan, -3.469446951953614e-18]}
{'': [0.18252249205980148, -1.0033566372280826e-16], 'true': [0.18252249205980148, nan], 'false': [nan, -1.0033566372280826e-16], 'false,false': [nan, -1.0033566372280826e-16]}
{'': [0.1814825352451348, 8.074349270001139e-17], 'true': [0.1814825352451348, nan], 'false': [nan, 8.074349270001139e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 44.11313819885254
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), interaction(A, A) )
%   | | then if ( phenotype(D, F), complex(D, E) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.8581489350995124;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.3827390990339347;  // std dev = 8.722, 305.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=160 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.41648226843284547;  // std dev = 5.440, 120.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=67 */
%   else return -0.14185106490048766;  // std dev = 1.91e-07, 332.000 (wgt'ed) examples reached here.  /* #neg=332 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E), phenotype(D, F) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.733712618997386;  // std dev = 0.078, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.13297914220403614;  // std dev = 0.720, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.7450413111151396;  // std dev = 0.233, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | else if ( interaction(G, A), complex(A, H) )
%   | | then if ( interaction(A, I), complex(I, H) )
%   | | | then return 0.1317001835842778;  // std dev = 3.098, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | | else return 0.3383565843428018;  // std dev = 5.044, 105.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=57 */
%   | | else if ( location(A, J) )
%   | | | then return 0.41213980184963256;  // std dev = 7.705, 252.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=154 */
%   | | | else return 0.20470753513643772;  // std dev = 2.405, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   else if ( interaction(K, A) )
%   | then return -0.12544463852839208;  // std dev = 0.000, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
%   | else return -0.12544463852839155;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(F, E), interaction(A, G) )
%   | | | then return 0.47650472353904744;  // std dev = 0.909, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.6992035099167224;  // std dev = 0.204, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.2303182817866739;  // std dev = 0.129, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.23279502506771138;  // std dev = 4.969, 104.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), interaction(I, H) )
%   | | | then return 0.566424493684325;  // std dev = 0.137, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.6191645246375954;  // std dev = 0.222, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.6387101013927102;  // std dev = 0.028, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.26668567681851707;  // std dev = 8.860, 319.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=168 */
%   else return -0.11231637819360636;  // std dev = 0.000, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, A), phenotype(A, G) )
%   | | | then return 0.33863510230855187;  // std dev = 0.551, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.5712493903711438;  // std dev = 0.666, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else if ( interaction(E, H), complex(H, D) )
%   | | | then return -0.011524533997124645;  // std dev = 2.193, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.3433425646784305;  // std dev = 2.859, 41.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=28 */
%   | else if ( interaction(I, A), interaction(A, I) )
%   | | then if ( interaction(A, A), recursion_proteinclass(I, B) )
%   | | | then return 0.4270539853120692;  // std dev = 0.074, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.03183343413105237;  // std dev = 2.855, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.31235221321745876;  // std dev = 4.172, 79.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=52 */
%   | | | else return 0.21483711084403656;  // std dev = 7.706, 247.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=134 */
%   else return -0.1015963294878363;  // std dev = 5.74e-09, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, D) )
%   | | | then return 0.4808132929243449;  // std dev = 1.095, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | | | else return -0.14317187970017467;  // std dev = 0.693, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.2661388647902124;  // std dev = 0.329, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0.170351340470424;  // std dev = 6.311, 170.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=95 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), interaction(H, I) )
%   | | | then return 0.32833516251595646;  // std dev = 0.125, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.4095703506862707;  // std dev = 0.204, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.27170060695325576;  // std dev = 4.592, 97.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=62 */
%   | | | else return 0.18919608650367595;  // std dev = 5.006, 107.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=61 */
%   else return -0.09269127618926065;  // std dev = 9.41e-09, 370.000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, F) )
%   | | | then return 0.44169191739000363;  // std dev = 2.136, 151.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=148 */
%   | | | else return 0.09567337653261518;  // std dev = 7.410, 243.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=121 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.25030268698271285;  // std dev = 0.288, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.42922709113959184;  // std dev = 0.157, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( phenotype(A, H) )
%   | | then return 0.16373284034507;  // std dev = 0.710, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.6057215379174542;  // std dev = 0.129, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.36279248344616777;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, J) )
%   | then return -0.08518475138839678;  // std dev = 5.82e-09, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
%   | else return -0.08518475138839678;  // std dev = 5.27e-09, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, D), interaction(D, A) )
%   | | | then return 0.27202725952670137;  // std dev = 1.134, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return 0.02716903574638197;  // std dev = 1.463, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | else if ( interaction(D, G), enzyme(G, H) )
%   | | | then return -0.10643408147414472;  // std dev = 3.558, 90.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=29 */
%   | | | else return 0.10919116436885737;  // std dev = 3.833, 88.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=55 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5247875132761803;  // std dev = 1.046, 51.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=50 */
%   | | | else return -0.38488145535344104;  // std dev = 0.333, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( location(A, K) )
%   | | | then return 0.17199847025591158;  // std dev = 5.198, 124.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=76 */
%   | | | else return -0.022527828452945785;  // std dev = 1.868, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   else return -0.07877675473109141;  // std dev = 6.52e-09, 384.000 (wgt'ed) examples reached here.  /* #neg=384 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.17289552920269505;  // std dev = 0.271, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.008134777468473514;  // std dev = 2.696, 62.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=29 */
%   | | else if ( complex(E, G), location(A, H) )
%   | | | then return 0.28291195688609805;  // std dev = 2.962, 61.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=47 */
%   | | | else return 0.11887129686583969;  // std dev = 3.238, 66.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=41 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.1628751503532582;  // std dev = 0.122, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.31904857353113786;  // std dev = 0.099, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return -0.12437114669261957;  // std dev = 2.762, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | | else return 0.05219489350077529;  // std dev = 6.007, 200.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=111 */
%   else return -0.0732462257633372;  // std dev = 2.08e-09, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, D), interaction(D, A) )
%   | | | then return 0.21128353816928733;  // std dev = 1.039, 54.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=53 */
%   | | | else return -0.04144908848892915;  // std dev = 1.701, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | else if ( enzyme(E, F), phenotype(E, G) )
%   | | | then return -0.11502907835017001;  // std dev = 2.937, 70.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=18 */
%   | | | else return -0.006449321876399608;  // std dev = 4.363, 113.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=58 */
%   | else if ( interaction(A, H), enzyme(A, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.3371857495099862;  // std dev = 0.213, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.4889924094745522;  // std dev = 0.151, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(K, A), location(A, L) )
%   | | | then return 0.0785824154446295;  // std dev = 6.286, 214.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=127 */
%   | | | else return 0.2787154890687458;  // std dev = 1.123, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.06842697784420324;  // std dev = 0.000, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.1707474211835379;  // std dev = 0.460, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.39028869910448516;  // std dev = 0.490, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else if ( interaction(H, A), interaction(A, H) )
%   | | | then return -0.16034527813868668;  // std dev = 0.095, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.40915639392271397;  // std dev = 0.385, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( complex(I, J), phenotype(A, K) )
%   | | | then return 0.05723739952831012;  // std dev = 0.847, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.16351372431886513;  // std dev = 0.354, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return -0.006073923215365429;  // std dev = 5.861, 205.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=102 */
%   | | | else return 0.04388070085413681;  // std dev = 5.273, 148.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=83 */
%   else return -0.0641918400820257;  // std dev = 8.93e-09, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
Inference time using transfer learning 5.778610706329346
Refined model CLL: -0.234373


******************************************
Best model found
******************************************
Results 

CLL : -0.226139 

AUC ROC : 0.97151 

AUC PR : 0.34948 

Precision : 0.062305 

Recall : 0.91954 

F1 : 0.116703 

Total Learning Time : 44.11313819885254 

Total Inference Time : 37.564204692840576 

Total revision time: 119.67613649368286
Best scored revision CLL: -0.234373


Results 

CLL : -0.226139 

AUC ROC : 0.97151 

AUC PR : 0.34948 

Precision : 0.062305 

Recall : 0.91954 

F1 : 0.116703 

Total Learning Time : 119.69317722320557 

Total Inference Time : 37.564204692840576 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos examples: 104
Target test neg examples: 16320

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 11.692427635192871
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4113848432414704;  // std dev = 0.497, 479.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 1.07e-08, 334.000 (wgt'ed) examples reached here.  /* #neg=334 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.3701385106436557;  // std dev = 7.953, 258.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=147 */
%   | else return 0.3441498706265082;  // std dev = 7.337, 217.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=118 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839205;  // std dev = 0.000, 277.000 (wgt'ed) examples reached here.  /* #neg=277 */
%   | | | else return -0.1254446385283916;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.32974715177890324;  // std dev = 0.491, 447.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360671;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #neg=317 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6341184797425271;  // std dev = 2.778, 231.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=223 */
%   | else return -0.14575515074823764;  // std dev = 5.831, 225.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783649;  // std dev = 0.000, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
%   | | | else return -0.10159632948783645;  // std dev = 0.000, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.203384822282513;  // std dev = 6.890, 252.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=147 */
%   | else return 0.16032910541845136;  // std dev = 6.009, 206.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=118 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926046;  // std dev = 9.31e-09, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.14569285619925182;  // std dev = 8.640, 405.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=237 */
%   | | else return 0.11600145255465376;  // std dev = 2.910, 50.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=28 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 7.88e-08, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   | | else return -0.08518475138839678;  // std dev = 5.87e-08, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.10592269269252805;  // std dev = 0.427, 457.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109148;  // std dev = 8.30e-08, 176.000 (wgt'ed) examples reached here.  /* #neg=176 */
%   | | else return -0.07877675473109151;  // std dev = 7.52e-08, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.09434311798841559;  // std dev = 8.509, 398.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=237 */
%   | else return -0.011343434401724119;  // std dev = 3.232, 58.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=28 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.073246225763337;  // std dev = 5.43e-09, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06633036084596822;  // std dev = 9.033, 453.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420325;  // std dev = 0.000, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04477598358709989;  // std dev = 9.091, 459.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202579;  // std dev = 8.28e-09, 338.000 (wgt'ed) examples reached here.  /* #neg=338 */
Inference time using transfer learning 6.057947158813477
Parameter learned model CLL:-0.268274 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.497, 214, 265], 'false,true': [0.0, 0, 0], 'false,false': [1.07e-08, 334, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [7.953, 111, 147], 'true,false': [7.337, 99, 118], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 277, 0], 'false,false,false,false': [0.0, 60, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.491, 182, 265], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 317, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [2.778, 8, 223], 'true,false': [5.831, 183, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 168, 0], 'false,false,false,false': [0.0, 148, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.89, 105, 147], 'true,false': [6.009, 88, 118], 'false,true': [0.0, 0, 0], 'false,false': [9.31e-09, 281, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [8.64, 168, 237], 'true,true,false': [2.91, 22, 28], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.88e-08, 196, 0], 'false,false,false': [5.87e-08, 137, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.427, 192, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.3e-08, 176, 0], 'false,false,false': [7.52e-08, 136, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.509, 161, 237], 'true,false': [3.232, 30, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.43e-09, 310, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.033, 188, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 362, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.091, 194, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.28e-09, 338, 0]}]
{'': [0.2471659380843036, 1.1168710666887802e-16], 'false': [nan, 1.1168710666887802e-16]}
{'': [0.24664819944598063, -1.1596394797271666e-16], 'true': [0.2451325040562434, 0.24808341650916124], 'false': [nan, -1.1596394797271666e-16], 'false,false': [nan, -1.1596394797271666e-16], 'false,false,false': [-1.0260544920723469e-16, -4.070817756958907e-17]}
{'': [0.2414006830811308, -4.202737001735608e-17], 'false': [nan, -4.202737001735608e-17], 'false,false': [nan, -4.202737001735608e-17]}
{'': [0.24351316818892432, -4.6376404826114135e-17], 'true': [0.0334040042780381, 0.15112246863622691], 'false': [nan, -4.6376404826114135e-17], 'false,false': [nan, -4.6376404826114135e-17], 'false,false,false': [-7.533656238527848e-17, -5.8511754000515e-17]}
{'': [0.18293228181145355, 8.692137559342863e-17], 'true': [0.18835705839728237, 0.17527615547348205], 'false': [nan, 8.692137559342863e-17]}
{'': [0.18274903566269177, 3.867443569264809e-17], 'true': [0.18274903566269177, nan], 'true,true': [0.18430619603026865, 0.16935133409761174], 'false': [nan, 3.867443569264809e-17], 'false,false': [3.172065784643304e-17, 2.5121834863780915e-17]}
{'': [0.18256305547174254, 4.270088556250602e-18], 'true': [0.18256305547174254, nan], 'false': [nan, 4.270088556250602e-18], 'false,false': [3.9110129276568017e-17, 4.163336342344337e-17]}
{'': [0.18293929375957638, 2.9367189683633174e-17], 'true': [0.18192882877289623, 0.18012422758951374], 'false': [nan, 2.9367189683633174e-17], 'false,false': [nan, 2.9367189683633174e-17]}
{'': [0.1801109896253098, -9.384758163958505e-17], 'true': [0.1801109896253098, nan], 'false': [nan, -9.384758163958505e-17], 'false,false': [nan, -9.384758163958505e-17]}
{'': [0.1800733890101963, 6.832141690000964e-17], 'true': [0.1800733890101963, nan], 'false': [nan, 6.832141690000964e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 17.97683024406433
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), enzyme(D, F) )
%   | | then if ( interaction(D, G), phenotype(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( interaction(H, A), interaction(A, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.8146706742299468;  // std dev = 0.978, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return 0.23314893509951184;  // std dev = 5.477, 128.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=48 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.3918568002680488;  // std dev = 6.656, 178.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=95 */
%   | | | else return 0.4858085095675964;  // std dev = 4.687, 94.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=59 */
%   else return -0.1418510649004877;  // std dev = 1.58e-07, 319.000 (wgt'ed) examples reached here.  /* #neg=319 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D) )
%   | | then return 0.7443736520081976;  // std dev = 0.240, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return 0.6051933349476798;  // std dev = 0.914, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(F, G) )
%   | | | then return 0.564966243819192;  // std dev = 0.824, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.7194734122109544;  // std dev = 4.21e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.3771641289970749;  // std dev = 5.903, 145.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=83 */
%   | | | else return 0.28856242484093153;  // std dev = 7.946, 258.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=126 */
%   else if ( interaction(I, A) )
%   | then return -0.12544463852839197;  // std dev = 0.000, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
%   | else return -0.12544463852839122;  // std dev = 5.16e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(A, E) )
%   | then if ( enzyme(A, F), complex(A, G) )
%   | | then if ( phenotype(D, E) )
%   | | | then return 0.2824319802779612;  // std dev = 1.810, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.5565116167640803;  // std dev = 1.278, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5027690791060898;  // std dev = 1.521, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | | else return 0.13488599724654393;  // std dev = 4.687, 98.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=38 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( phenotype(I, J), interaction(I, K) )
%   | | | then return -0.08818246066759472;  // std dev = 0.781, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5554520899487625;  // std dev = 0.057, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.5896768526133617;  // std dev = 0.906, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.2767941289800505;  // std dev = 8.436, 290.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=154 */
%   else return -0.1123163781936065;  // std dev = 0.000, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.4296946788335942;  // std dev = 0.052, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.4114499277761822;  // std dev = 1.49e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.641340240210619;  // std dev = 0.081, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5180431934686422;  // std dev = 0.123, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6352186139286825;  // std dev = 1.684, 89.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=86 */
%   | | | else return -0.31303179081884797;  // std dev = 0.420, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | else if ( interaction(K, A), location(A, L) )
%   | | | then return 0.18731378063151585;  // std dev = 7.105, 218.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=108 */
%   | | | else return 0.33127277679005973;  // std dev = 3.177, 47.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=31 */
%   else return -0.10159632948783655;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, G), complex(A, G) )
%   | | | then return 0.3948216277665583;  // std dev = 0.441, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.17478019415768667;  // std dev = 1.242, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( interaction(A, H), complex(H, E) )
%   | | | then return -0.026398048838880583;  // std dev = 2.264, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return 0.16311237692716796;  // std dev = 5.685, 162.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=85 */
%   | else if ( interaction(A, I), phenotype(A, J) )
%   | | then if ( interaction(K, A), interaction(K, I) )
%   | | | then return 0.10215876452605083;  // std dev = 1.622, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.34402886053068343;  // std dev = 2.582, 47.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=36 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.2678645283976493;  // std dev = 3.799, 80.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=53 */
%   | | | else return 0.11873297297353655;  // std dev = 4.279, 85.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=44 */
%   else return -0.09269127618926043;  // std dev = 1.09e-08, 340.000 (wgt'ed) examples reached here.  /* #neg=340 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.243769026755357;  // std dev = 0.052, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.2904508893766254;  // std dev = 0.064, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( phenotype(D, H), phenotype(A, H) )
%   | | | then return 0.45521762331685145;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3490961108780062;  // std dev = 0.078, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( interaction(J, A), interaction(J, J) )
%   | | | then return -0.1433439480212243;  // std dev = 1.495, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | | | else return 0.1436673177942402;  // std dev = 3.269, 57.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=33 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.0913092626031027;  // std dev = 4.571, 139.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=71 */
%   | | | else return 0.16568807872709782;  // std dev = 6.901, 203.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=115 */
%   else return -0.08518475138839678;  // std dev = 6.25e-09, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(A, E) )
%   | then if ( complex(D, E), recursion_proteinclass(D, B) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.20298608808291918;  // std dev = 0.040, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.27563183362108157;  // std dev = 0.132, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( complex(D, E), interaction(F, A) )
%   | | | then return -0.09994601172539552;  // std dev = 2.410, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | | else return 0.07555048226962927;  // std dev = 3.321, 60.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=32 */
%   | else if ( phenotype(A, G), complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4886554110683018;  // std dev = 0.547, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.3782598368769478;  // std dev = 0.450, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(A, J), interaction(J, A) )
%   | | | then return 0.06206838147121229;  // std dev = 1.993, 38.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=23 */
%   | | | else return 0.15144344443398836;  // std dev = 7.104, 250.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=152 */
%   else return -0.07877675473109141;  // std dev = 5.43e-09, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(A, E) )
%   | then if ( phenotype(A, F), complex(D, G) )
%   | | then if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.3305741265988327;  // std dev = 0.682, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.034445821005452966;  // std dev = 2.148, 31.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=17 */
%   | | else if ( location(A, J), location(D, J) )
%   | | | then return 0.25277008926161243;  // std dev = 1.319, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | | | else return 0.373549775267616;  // std dev = 0.720, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(K, A), complex(A, L) )
%   | | then if ( interaction(M, K), recursion_proteinclass(M, B) )
%   | | | then return 0.21470061932771112;  // std dev = 1.066, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | | | else return -0.0014650924243754884;  // std dev = 4.149, 112.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=48 */
%   | | else if ( interaction(A, N), phenotype(N, P) )
%   | | | then return 0.0719017522040277;  // std dev = 3.884, 74.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=43 */
%   | | | else return 0.11936451912053808;  // std dev = 5.666, 155.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=96 */
%   else return -0.07324622576333717;  // std dev = 2.79e-09, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( phenotype(D, F), complex(A, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1351938786062164;  // std dev = 0.675, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.10827483178687415;  // std dev = 1.864, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.17400442133907346;  // std dev = 0.953, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.12700067747837282;  // std dev = 3.401, 68.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=26 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.12966752740673687;  // std dev = 7.123, 306.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=199 */
%   | | | else return -0.4160118742847508;  // std dev = 0.570, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( interaction(K, A), interaction(A, K) )
%   | | | then return -0.2235762906174818;  // std dev = 0.928, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.0322956610184555;  // std dev = 1.492, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   else return -0.06842697784420312;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #neg=326 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, A), complex(A, F) )
%   | | | then return 0.14227652810115904;  // std dev = 0.054, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.18336350142614974;  // std dev = 0.181, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return -0.4401842810721412;  // std dev = 0.725, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.18397537801692826;  // std dev = 0.949, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(J, A), complex(H, K) )
%   | | | then return 0.10021067822397371;  // std dev = 2.030, 27.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=16 */
%   | | | else return -0.08552001171285263;  // std dev = 2.938, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.05017815561614874;  // std dev = 6.418, 244.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=136 */
%   | | | else return 0.14711151324454208;  // std dev = 3.492, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   else return -0.06419184008202584;  // std dev = 7.74e-09, 323.000 (wgt'ed) examples reached here.  /* #neg=323 */
Inference time using transfer learning 5.67041277885437
Refined model CLL: -0.246376


******************************************
Best model found
******************************************
Results 

CLL : -0.238746 

AUC ROC : 0.965267 

AUC PR : 0.222081 

Precision : 0.050553 

Recall : 0.923077 

F1 : 0.095856 

Total Learning Time : 17.97683024406433 

Total Inference Time : 14.97035002708435 

Total revision time: 73.27428078651428
Best scored revision CLL: -0.246376


Results 

CLL : -0.238746 

AUC ROC : 0.965267 

AUC PR : 0.222081 

Precision : 0.050553 

Recall : 0.923077 

F1 : 0.095856 

Total Learning Time : 73.29132151603699 

Total Inference Time : 14.97035002708435 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos examples: 92
Target test neg examples: 12594

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 11.172547101974487
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4257718859191801;  // std dev = 0.495, 488.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048757;  // std dev = 1.16e-08, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.36949098157943394;  // std dev = 10.392, 441.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=252 */
%   | else return 0.4390880511765042;  // std dev = 2.996, 39.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=25 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1254446385283921;  // std dev = 0.000, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3152064874895556;  // std dev = 0.493, 474.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360685;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5822261446292997;  // std dev = 4.591, 275.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=252 */
%   | else return -0.20686523347802166;  // std dev = 4.595, 192.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=25 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783659;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #neg=318 */
%   | | | else return -0.10159632948783634;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.17061973684049572;  // std dev = 8.766, 435.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=252 */
%   | else return 0.2391558905151865;  // std dev = 3.378, 46.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=25 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926087;  // std dev = 7.33e-09, 399.000 (wgt'ed) examples reached here.  /* #neg=399 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.13465267614683485;  // std dev = 9.212, 469.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=271 */
%   | | else return 0.06145627112387426;  // std dev = 1.838, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839678;  // std dev = 1.17e-07, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
%   | | else return -0.0851847513883968;  // std dev = 1.67e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.1076747744841439;  // std dev = 0.426, 476.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109141;  // std dev = 4.71e-08, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
%   | | else return -0.07877675473109176;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.06846984773507515;  // std dev = 9.239, 479.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=271 */
%   | else return 0.1633765657349532;  // std dev = 1.598, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333714;  // std dev = 3.23e-09, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05483042923851555;  // std dev = 9.389, 487.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0684269778442032;  // std dev = 0.000, 349.000 (wgt'ed) examples reached here.  /* #neg=349 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.03642140276112296;  // std dev = 9.477, 491.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202566;  // std dev = 9.17e-09, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
Inference time using transfer learning 2.855226755142212
Parameter learned model CLL:-0.264235 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.495, 211, 277], 'false,true': [0.0, 0, 0], 'false,false': [1.16e-08, 343, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [10.392, 189, 252], 'true,false': [2.996, 14, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 307, 0], 'false,false,false,false': [0.0, 26, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.493, 197, 277], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 300, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [4.591, 23, 252], 'true,false': [4.595, 167, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 318, 0], 'false,false,false,false': [0.0, 27, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [8.766, 183, 252], 'true,false': [3.378, 21, 25], 'false,true': [0.0, 0, 0], 'false,false': [7.33e-09, 399, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [9.212, 198, 271], 'true,true,false': [1.838, 9, 6], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.17e-07, 355, 0], 'false,false,false': [1.67e-08, 38, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.426, 199, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.71e-08, 291, 0], 'false,false,false': [0.0, 32, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.239, 208, 271], 'true,false': [1.598, 5, 6], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.23e-09, 364, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.389, 210, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 349, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.477, 214, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.17e-09, 373, 0]}]
{'': [0.24542713652244316, 1.3206151429943553e-16], 'false': [nan, 1.3206151429943553e-16]}
{'': [0.24405815972222553, -1.1468970584716332e-16], 'true': [0.24489795918367677, 0.2301117685733076], 'false': [nan, -1.1468970584716332e-16], 'false,false': [nan, -1.1468970584716332e-16], 'false,false,false': [-1.0993739396939661e-16, -6.4051328343759035e-18]}
{'': [0.24279841967417481, -7.401486830834377e-17], 'false': [nan, -7.401486830834377e-17], 'false,false': [nan, -7.401486830834377e-17]}
{'': [0.24109638651996543, 2.0595441616234788e-17], 'true': [0.07664132231405084, 0.10997819975682892], 'false': [nan, 2.0595441616234788e-17], 'false,false': [nan, 2.0595441616234788e-17], 'false,false,false': [-4.0498701527206965e-17, -1.2335811384723961e-17]}
{'': [0.1838798122914151, 5.2311260308152736e-17], 'true': [0.17663847960071985, 0.24810964083175788], 'false': [nan, 5.2311260308152736e-17]}
{'': [0.18246909958640656, 3.7289933651531976e-17], 'true': [0.18246909958640656, nan], 'true,true': [0.18093237353336655, 0.22532573198283742], 'false': [nan, 3.7289933651531976e-17], 'false,false': [3.877962114183645e-17, 7.304098846218135e-18]}
{'': [0.1817016248003428, 0.0], 'true': [0.1817016248003428, nan], 'false': [nan, 0.0], 'false,false': [7.630398794674616e-18, -1.734723475976807e-18]}
{'': [0.17962811352821262, 9.150189763394147e-18], 'true': [0.17822191382249006, 0.2320566381339572], 'false': [nan, 9.150189763394147e-18], 'false,false': [nan, 9.150189763394147e-18]}
{'': [0.18102527101257154, -9.288972011190421e-17], 'true': [0.18102527101257154, nan], 'false': [nan, -9.288972011190421e-17], 'false,false': [nan, -9.288972011190421e-17]}
{'': [0.18293597649872773, 8.274584473077575e-17], 'true': [0.18293597649872773, nan], 'false': [nan, 8.274584473077575e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 21.06602644920349
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E) )
%   | | then return 0.858148935099512;  // std dev = 1.03e-07, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else if ( interaction(D, F), interaction(F, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.5854216623722395;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else if ( interaction(A, G), complex(A, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7152917922423695;  // std dev = 1.604, 21.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | | | else return 0.2002541982574069;  // std dev = 4.136, 76.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=26 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.4014015302552179;  // std dev = 8.468, 289.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=157 */
%   | | | else return 0.5456489350995118;  // std dev = 3.211, 48.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=33 */
%   else return -0.14185106490048757;  // std dev = 2.19e-07, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.7541110217979486;  // std dev = 0.280, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then if ( interaction(F, A), interaction(G, F) )
%   | | | then return 0.1418463471399668;  // std dev = 4.098, 78.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=27 */
%   | | | else return 0.5318750840147202;  // std dev = 1.640, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.49947504215955757;  // std dev = 2.958, 44.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=31 */
%   | | | else return 0.33675495655224963;  // std dev = 8.699, 307.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=165 */
%   else if ( interaction(J, A) )
%   | then return -0.12544463852839216;  // std dev = 0.000, 325.000 (wgt'ed) examples reached here.  /* #neg=325 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( enzyme(A, F), location(A, E) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.6012823932104581;  // std dev = 0.172, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.3221654749442594;  // std dev = 4.731, 94.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=55 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.571093799533042;  // std dev = 2.250, 61.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=55 */
%   | | | else return 0.21084930704470398;  // std dev = 8.139, 275.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=130 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( phenotype(A, J), enzyme(I, K) )
%   | | | then return 0.6039825904748443;  // std dev = 0.949, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.21423517323375088;  // std dev = 2.280, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.38930203814001124;  // std dev = 0.756, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7348803392689759;  // std dev = 0.058, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.1123163781936065;  // std dev = 0.000, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, E) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.41389735744582057;  // std dev = 0.139, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.12107929085960448;  // std dev = 1.060, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.47078193278603875;  // std dev = 0.138, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5560470723640942;  // std dev = 0.235, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4023856384420526;  // std dev = 1.567, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return 0.1140822161719359;  // std dev = 4.487, 87.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=40 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.18858609393355752;  // std dev = 4.093, 73.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=36 */
%   | | | else return 0.26125754986504696;  // std dev = 7.780, 251.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=146 */
%   else return -0.10159632948783598;  // std dev = 1.04e-08, 391.000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, D) )
%   | | | then return 0.32401208226648937;  // std dev = 0.173, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return 0.08138546509692683;  // std dev = 0.689, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(D, F) )
%   | | | then return 0.5065619444769732;  // std dev = 0.090, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.5750545080284166;  // std dev = 0.097, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(G, A), location(G, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.34715355998902175;  // std dev = 3.012, 61.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=49 */
%   | | | else return 0.15467355577606023;  // std dev = 8.733, 316.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=163 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.04967771609896602;  // std dev = 2.481, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.08236958589118643;  // std dev = 2.481, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   else return -0.09269127618926043;  // std dev = 1.09e-08, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, A), location(A, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.24577704881961143;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.24369465837210796;  // std dev = 0.008, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return -0.39463477101671735;  // std dev = 0.311, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.3200289320001317;  // std dev = 0.153, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( enzyme(A, I), location(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.5288168310895006;  // std dev = 1.600, 90.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=88 */
%   | | | else return -0.4283101214287306;  // std dev = 0.587, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.37071766113720517;  // std dev = 0.288, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.15607564274407948;  // std dev = 7.709, 264.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=152 */
%   else return -0.08518475138839678;  // std dev = 6.45e-09, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.20356953980468834;  // std dev = 0.046, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.02069561432515063;  // std dev = 0.681, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.28460076806456763;  // std dev = 0.121, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.33406530270852147;  // std dev = 0.105, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, G) )
%   | | | then return 0.32153882038054854;  // std dev = 0.283, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.04615699270363274;  // std dev = 0.806, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.11698222462808305;  // std dev = 4.638, 140.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=80 */
%   | | | else return 0.050725100282883406;  // std dev = 8.003, 281.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=137 */
%   else return -0.07877675473109143;  // std dev = 5.82e-09, 381.000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( phenotype(A, F), recursion_proteinclass(D, B) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.1792311542015763;  // std dev = 0.111, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.2914051388281642;  // std dev = 0.224, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( enzyme(A, H), interaction(I, D) )
%   | | | then return 0.13044351476041502;  // std dev = 3.638, 91.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=58 */
%   | | | else return 0.05288733068664759;  // std dev = 6.834, 224.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=120 */
%   | else if ( interaction(J, A), complex(A, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.3375799555544519;  // std dev = 0.563, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.37338917434341135;  // std dev = 0.279, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.258932794485193;  // std dev = 2.195, 34.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=27 */
%   | | | else return 0.15773236052564116;  // std dev = 3.340, 57.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=37 */
%   else return -0.07324622576333768;  // std dev = 0.000, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), interaction(A, E) )
%   | then if ( location(E, D) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.21735878992316182;  // std dev = 1.959, 73.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=67 */
%   | | | else return -0.08661795229307084;  // std dev = 4.985, 150.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=57 */
%   | | else if ( phenotype(A, G), interaction(H, A) )
%   | | | then return 0.2044448909059267;  // std dev = 1.263, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.05337329355585442;  // std dev = 1.484, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3791166597543163;  // std dev = 0.546, 50.000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | | | else return -0.3773276374757977;  // std dev = 0.217, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.17104372257696984;  // std dev = 3.975, 71.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=46 */
%   | | | else return 0.11356756814614069;  // std dev = 3.832, 67.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=41 */
%   else return -0.06842697784420325;  // std dev = 0.000, 366.000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G), phenotype(D, H) )
%   | | | then return -0.07989639877856766;  // std dev = 1.167, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.20783369277370095;  // std dev = 1.523, 47.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=44 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.357446477751169;  // std dev = 1.004, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return 0.009053770457842494;  // std dev = 6.330, 225.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=117 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( phenotype(I, K) )
%   | | | then return 0.29611537983302;  // std dev = 1.452, 24.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | | else return 0.01698767059387947;  // std dev = 1.448, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.1096022473378968;  // std dev = 2.425, 38.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=24 */
%   | | | else return 0.03003971405810126;  // std dev = 4.362, 93.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=55 */
%   else return -0.06419184008202579;  // std dev = 8.23e-09, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
Inference time using transfer learning 2.8148233890533447
Refined model CLL: -0.24972


******************************************
Best model found
******************************************
Results 

CLL : -0.240897 

AUC ROC : 0.95744 

AUC PR : 0.33948 

Precision : 0.05168 

Recall : 0.869565 

F1 : 0.097561 

Total Learning Time : 21.06602644920349 

Total Inference Time : 14.85270619392395 

Total revision time: 72.57605576515198
Best scored revision CLL: -0.24972


Results 

CLL : -0.240897 

AUC ROC : 0.95744 

AUC PR : 0.33948 

Precision : 0.05168 

Recall : 0.869565 

F1 : 0.097561 

Total Learning Time : 72.59309649467468 

Total Inference Time : 14.85270619392395 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos examples: 86
Target test neg examples: 10998

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.60750412940979
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.43102342902663343;  // std dev = 0.495, 494.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048732;  // std dev = 1.48e-08, 406.000 (wgt'ed) examples reached here.  /* #neg=406 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.36059503457817915;  // std dev = 7.238, 213.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=120 */
%   | else return 0.3877944630329659;  // std dev = 8.169, 276.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=163 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839216;  // std dev = 0.000, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */
%   | | | else return -0.1254446385283915;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.30024167361605447;  // std dev = 0.495, 496.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360639;  // std dev = 0.000, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5565260400566393;  // std dev = 5.255, 282.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=251 */
%   | else return -0.1632035745460626;  // std dev = 5.153, 188.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=32 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783648;  // std dev = 0.000, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
%   | | | else return -0.10159632948783655;  // std dev = 0.000, 206.000 (wgt'ed) examples reached here.  /* #neg=206 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.17217997564029672;  // std dev = 6.396, 215.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=120 */
%   | else return 0.19470296559022243;  // std dev = 7.203, 273.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=163 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0926912761892608;  // std dev = 8.12e-09, 389.000 (wgt'ed) examples reached here.  /* #neg=389 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17836166741468495;  // std dev = 7.197, 284.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=174 */
%   | | else return 0.07289468584848204;  // std dev = 6.366, 213.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=109 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839679;  // std dev = 7.15e-08, 166.000 (wgt'ed) examples reached here.  /* #neg=166 */
%   | | else return -0.08518475138839678;  // std dev = 8.30e-08, 210.000 (wgt'ed) examples reached here.  /* #neg=210 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.10913903004687618;  // std dev = 0.430, 490.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.07877675473109151;  // std dev = 7.96e-08, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   | | else return -0.07877675473109144;  // std dev = 7.74e-08, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.10499271703898978;  // std dev = 7.244, 285.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=174 */
%   | else return 0.07589589309059731;  // std dev = 5.928, 195.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=109 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333721;  // std dev = 1.61e-09, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04253521775399492;  // std dev = 9.784, 504.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420326;  // std dev = 0.000, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.03035201102404774;  // std dev = 9.790, 508.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0641918400820256;  // std dev = 9.81e-09, 400.000 (wgt'ed) examples reached here.  /* #neg=400 */
Inference time using transfer learning 1.8582110404968262
Parameter learned model CLL:-0.267051 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.495, 211, 283], 'false,true': [0.0, 0, 0], 'false,false': [1.48e-08, 406, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [7.238, 93, 120], 'true,false': [8.169, 113, 163], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 331, 0], 'false,false,false,false': [0.0, 41, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.495, 213, 283], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 365, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [5.255, 31, 251], 'true,false': [5.153, 156, 32], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 162, 0], 'false,false,false,false': [0.0, 206, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.396, 95, 120], 'true,false': [7.203, 110, 163], 'false,true': [0.0, 0, 0], 'false,false': [8.12e-09, 389, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [7.197, 110, 174], 'true,true,false': [6.366, 104, 109], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.15e-08, 166, 0], 'false,false,false': [8.3e-08, 210, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.43, 207, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.96e-08, 144, 0], 'false,false,false': [7.74e-08, 249, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [7.244, 111, 174], 'true,false': [5.928, 86, 109], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [1.61e-09, 362, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.784, 221, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 367, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.79, 225, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.81e-09, 400, 0]}]
{'': [0.24468930813486828, 2.2313842071283937e-16], 'false': [nan, 2.2313842071283937e-16]}
{'': [0.2438012554313539, -1.2415397264625405e-16], 'true': [0.24598293989287484, 0.2417953161100567], 'false': [nan, -1.2415397264625405e-16], 'false,false': [nan, -1.2415397264625405e-16], 'false,false,false': [-1.1538269500636068e-16, -2.4370749321040022e-17]}
{'': [0.24495763814357624, -2.6767020867675008e-17], 'false': [nan, -2.6767020867675008e-17], 'false,false': [nan, -2.6767020867675008e-17]}
{'': [0.23958339175732257, 6.637202864606914e-17], 'true': [0.09793330484046837, 0.14125209125091157], 'false': [nan, 6.637202864606914e-17], 'false,false': [nan, 6.637202864606914e-17], 'false,false,false': [-6.853228547068867e-17, -8.623091453399274e-17]}
{'': [0.19026290939282123, 6.621381535039494e-17], 'true': [0.19025682318439974, 0.1900442060618493], 'false': [nan, 6.621381535039494e-17]}
{'': [0.1884749991677931, 3.7794826370218094e-17], 'true': [0.1884749991677931, nan], 'true,true': [0.1823813813752183, 0.190243660490837], 'false': [nan, 3.7794826370218094e-17], 'false,false': [3.076521634503446e-17, 3.277801310798081e-17]}
{'': [0.18466717110518466, 4.293992359873379e-17], 'true': [0.18466717110518466, nan], 'false': [nan, 4.293992359873379e-17], 'false,false': [4.394632805807911e-17, 2.407712583524436e-17]}
{'': [0.18272470461397491, 1.840148659599707e-18], 'true': [0.18411978080898986, 0.180183063407126], 'false': [nan, 1.840148659599707e-18], 'false,false': [nan, 1.840148659599707e-18]}
{'': [0.1899489880806782, -9.680418743325616e-17], 'true': [0.1899489880806782, nan], 'false': [nan, -9.680418743325616e-17], 'false,false': [nan, -9.680418743325616e-17]}
{'': [0.18865453346778358, 9.658940314238862e-17], 'true': [0.18865453346778358, nan], 'false': [nan, 9.658940314238862e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 19.795968770980835
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E), complex(A, F) )
%   | | then if ( complex(D, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.858148935099512;  // std dev = 1.46e-07, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(A, H) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(A, I), interaction(J, A) )
%   | | | then return 0.30663378358436205;  // std dev = 6.388, 165.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=74 */
%   | | | else return 0.39360992800731076;  // std dev = 8.375, 282.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=151 */
%   else return -0.14185106490048738;  // std dev = 2.87e-07, 389.000 (wgt'ed) examples reached here.  /* #neg=389 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( recursion_proteinclass(D, B), interaction(D, A) )
%   | | then return 0.7194734122109543;  // std dev = 5.96e-08, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.18852804443513604;  // std dev = 0.095, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.3256236427780292;  // std dev = 4.481, 81.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=42 */
%   | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F), phenotype(E, G) )
%   | | | then return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.7253929862456535;  // std dev = 0.084, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.27459049615763287;  // std dev = 4.806, 94.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=44 */
%   | | | else return 0.3917838004237164;  // std dev = 7.983, 265.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=156 */
%   else if ( interaction(J, A) )
%   | then return -0.12544463852839216;  // std dev = 0.000, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( interaction(E, D), complex(A, F) )
%   | | | then return 0.390703633657337;  // std dev = 1.166, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.6003766152818886;  // std dev = 0.271, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.553904214383089;  // std dev = 1.49e-08, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6426613940754635;  // std dev = 0.041, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( complex(A, H), location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.2918915060321551;  // std dev = 6.303, 167.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=93 */
%   | | | else return -0.23404129726137582;  // std dev = 0.154, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.1884109628950002;  // std dev = 2.801, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return 0.35528130107404404;  // std dev = 7.168, 219.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=135 */
%   else return -0.11231637819360625;  // std dev = 0.000, 392.000 (wgt'ed) examples reached here.  /* #neg=392 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(D, A), interaction(D, D) )
%   | | | then return 0.43382559796746073;  // std dev = 0.106, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.5045216370146317;  // std dev = 0.157, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( phenotype(D, F), phenotype(A, G) )
%   | | | then return 0.01557522789143915;  // std dev = 1.112, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.45623135959030947;  // std dev = 0.174, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, H), phenotype(A, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3769132352096555;  // std dev = 2.810, 36.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=24 */
%   | | | else return 0.08030379080487202;  // std dev = 4.613, 98.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=37 */
%   | | else if ( location(A, K), interaction(L, A) )
%   | | | then return 0.2723435745134238;  // std dev = 7.761, 264.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=159 */
%   | | | else return 0.21305154384560016;  // std dev = 3.136, 41.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=22 */
%   else return -0.10159632948783605;  // std dev = 9.77e-09, 382.000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B), complex(D, F) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.2559564175704716;  // std dev = 0.783, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.42429077815411226;  // std dev = 0.213, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( complex(A, I), enzyme(D, J) )
%   | | | then return 0.055873696720278955;  // std dev = 3.233, 48.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=19 */
%   | | | else return 0.1942565199012272;  // std dev = 8.762, 342.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=200 */
%   | else if ( enzyme(A, K), complex(A, L) )
%   | | then if ( interaction(A, M), complex(M, L) )
%   | | | then return 0.2653278740222118;  // std dev = 0.732, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5321165436983415;  // std dev = 0.932, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( phenotype(A, N), interaction(A, P) )
%   | | | then return 0.3119527097158238;  // std dev = 1.942, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.16115006912553168;  // std dev = 2.408, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   else return -0.09269127618926043;  // std dev = 1.13e-08, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(D, E) )
%   | | | then return 0.2748454182325803;  // std dev = 0.081, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.12262987016132575;  // std dev = 0.866, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.3823924228695617;  // std dev = 0.051, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3416201647014967;  // std dev = 0.092, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(G, A), enzyme(A, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.2862110851559933;  // std dev = 1.860, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | | else return 0.03244177523528244;  // std dev = 5.725, 139.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=62 */
%   | | else if ( location(A, J) )
%   | | | then return 0.11153222059017044;  // std dev = 8.245, 294.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=157 */
%   | | | else return 0.28242036947682697;  // std dev = 1.641, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   else return -0.08518475138839678;  // std dev = 6.65e-09, 370.000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then if ( interaction(D, D), complex(D, E) )
%   | | then if ( complex(A, E), recursion_proteinclass(D, B) )
%   | | | then return 0.23043064644450872;  // std dev = 0.044, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.08884154791829349;  // std dev = 2.366, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | else if ( location(D, F) )
%   | | | then return 0.16199671986198022;  // std dev = 3.128, 56.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=36 */
%   | | | else return -0.10897490736873887;  // std dev = 0.887, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( complex(A, I), enzyme(G, J) )
%   | | | then return 0.525409982975906;  // std dev = 0.446, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.17328651101291592;  // std dev = 6.382, 189.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=121 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.25835261237442375;  // std dev = 2.290, 24.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=17 */
%   | | | else return 0.0669867807216369;  // std dev = 5.648, 139.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=77 */
%   else return -0.07877675473109147;  // std dev = 1.02e-08, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( enzyme(A, F), enzyme(D, G) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.23403318937862988;  // std dev = 0.118, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1604129594015863;  // std dev = 2.501, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | else if ( enzyme(D, H), interaction(I, D) )
%   | | | then return 0.16920373787770213;  // std dev = 2.864, 40.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=26 */
%   | | | else return 0.04036388469482748;  // std dev = 7.453, 250.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=137 */
%   | else if ( interaction(J, A) )
%   | | then if ( phenotype(A, K), enzyme(A, L) )
%   | | | then return 0.5070756411611677;  // std dev = 0.125, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.15283782126431547;  // std dev = 4.316, 97.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=65 */
%   | | else if ( enzyme(A, M), phenotype(A, N) )
%   | | | then return -0.08982399451866847;  // std dev = 2.310, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return 0.07980983177047435;  // std dev = 2.935, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   else return -0.07324622576333768;  // std dev = 0.000, 369.000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), interaction(D, F) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.20462108461032402;  // std dev = 0.135, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.12552302826206163;  // std dev = 0.742, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.18717161140259486;  // std dev = 0.060, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.28947980599780554;  // std dev = 0.186, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.45996143231464537;  // std dev = 1.605, 93.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=91 */
%   | | | else return -0.44197470511397496;  // std dev = 0.786, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.11906561644261261;  // std dev = 3.182, 52.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=30 */
%   | | | else return -0.026043893713064464;  // std dev = 7.676, 243.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=121 */
%   else return -0.0684269778442033;  // std dev = 0.000, 381.000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), interaction(A, D) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.1510139704089373;  // std dev = 0.048, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.12508239787492592;  // std dev = 0.815, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.16112275956805786;  // std dev = 0.084, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.20686210452982548;  // std dev = 0.167, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( interaction(A, A) )
%   | | then if ( phenotype(A, G), location(A, H) )
%   | | | then return -0.20544710090799131;  // std dev = 0.140, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.29752508141638534;  // std dev = 0.191, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.23142778534839048;  // std dev = 0.170, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.05927835543263966;  // std dev = 9.007, 397.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=225 */
%   else return -0.06419184008202569;  // std dev = 9.08e-09, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
Inference time using transfer learning 2.7906651496887207
Refined model CLL: -0.268363


******************************************
Best model found
******************************************
Results 

CLL : -0.255144 

AUC ROC : 0.959523 

AUC PR : 0.186793 

Precision : 0.247387 

Recall : 0.825581 

F1 : 0.380697 

Total Learning Time : 19.795968770980835 

Total Inference Time : 14.133443832397461 

Total revision time: 47.6308012008667
Best scored revision CLL: -0.267051


Results 

CLL : -0.255144 

AUC ROC : 0.959523 

AUC PR : 0.186793 

Precision : 0.247387 

Recall : 0.825581 

F1 : 0.380697 

Total Learning Time : 47.647841930389404 

Total Inference Time : 14.133443832397461 

Run: 3

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 10.869904279708862
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.43720437657794736;  // std dev = 0.494, 487.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048754;  // std dev = 1.21e-08, 349.000 (wgt'ed) examples reached here.  /* #neg=349 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.38111934448157464;  // std dev = 8.021, 265.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=155 */
%   | else return 0.32318463846106255;  // std dev = 7.751, 241.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=127 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1254446385283921;  // std dev = 0.000, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
%   | | | else return -0.12544463852839158;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.29211439169023795;  // std dev = 0.496, 504.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360639;  // std dev = 0.000, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6251893070564888;  // std dev = 3.369, 252.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=240 */
%   | else return -0.13297816556964656;  // std dev = 5.775, 214.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783655;  // std dev = 0.000, 205.000 (wgt'ed) examples reached here.  /* #neg=205 */
%   | | | else return -0.10159632948783649;  // std dev = 0.000, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.20914513233268237;  // std dev = 7.045, 260.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=155 */
%   | else return 0.17810074273304285;  // std dev = 6.146, 219.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=127 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926049;  // std dev = 1.06e-08, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16519734661674013;  // std dev = 8.447, 389.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=237 */
%   | | else return 0.04199589047372887;  // std dev = 4.094, 96.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 8.56e-08, 207.000 (wgt'ed) examples reached here.  /* #neg=207 */
%   | | else return -0.08518475138839678;  // std dev = 6.50e-08, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09595162888415465;  // std dev = 0.428, 497.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109146;  // std dev = 8.82e-08, 209.000 (wgt'ed) examples reached here.  /* #neg=209 */
%   | | else return -0.07877675473109153;  // std dev = 7.15e-08, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.07549579876134051;  // std dev = 8.716, 412.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=237 */
%   | else return 0.020860620862492015;  // std dev = 4.059, 92.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=45 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333725;  // std dev = 0.000, 377.000 (wgt'ed) examples reached here.  /* #neg=377 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07021102516767387;  // std dev = 9.364, 483.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420322;  // std dev = 0.000, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06536524226320975;  // std dev = 9.240, 470.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202575;  // std dev = 8.59e-09, 349.000 (wgt'ed) examples reached here.  /* #neg=349 */
Inference time using transfer learning 6.651124000549316
Parameter learned model CLL:-0.270757 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.494, 205, 282], 'false,true': [0.0, 0, 0], 'false,false': [1.21e-08, 349, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [8.021, 110, 155], 'true,false': [7.751, 114, 127], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 306, 0], 'false,false,false,false': [0.0, 52, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.496, 222, 282], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 365, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [3.369, 12, 240], 'true,false': [5.775, 172, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 205, 0], 'false,false,false,false': [0.0, 167, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [7.045, 105, 155], 'true,false': [6.146, 92, 127], 'false,true': [0.0, 0, 0], 'false,false': [1.06e-08, 351, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [8.447, 152, 237], 'true,true,false': [4.094, 51, 45], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.56e-08, 207, 0], 'false,false,false': [6.5e-08, 153, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.428, 215, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.82e-08, 209, 0], 'false,false,false': [7.15e-08, 126, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.716, 175, 237], 'true,false': [4.059, 47, 45], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 377, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.364, 201, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 354, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.24, 188, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.59e-09, 349, 0]}]
{'': [0.24375023717265198, 1.4251573496620922e-16], 'false': [nan, 1.4251573496620922e-16]}
{'': [0.24671530566014824, -1.215663200148216e-16], 'true': [0.24279102883588058, 0.2492725676210768], 'false': [nan, -1.215663200148216e-16], 'false,false': [nan, -1.215663200148216e-16], 'false,false,false': [-1.1029666649870836e-16, -3.416070845000482e-17]}
{'': [0.24643789780591135, -2.6767020867675008e-17], 'false': [nan, -2.6767020867675008e-17], 'false,false': [nan, -2.6767020867675008e-17]}
{'': [0.23868119929429568, 7.401486830834377e-17], 'true': [0.045039760104790744, 0.15586182665867113], 'false': [nan, 7.401486830834377e-17], 'false,false': [nan, 7.401486830834377e-17], 'false,false,false': [-8.448526431293874e-17, -7.578767952531009e-17]}
{'': [0.18271287792975752, 1.1260381674260848e-16], 'true': [0.1908704461237009, 0.17250497044759744], 'false': [nan, 1.1260381674260848e-16]}
{'': [0.18407762788966078, 4.070817756958907e-17], 'true': [0.18407762788966078, nan], 'true,true': [0.1834063706199523, 0.17462344316802447], 'false': [nan, 4.070817756958907e-17], 'false,false': [3.539841527790354e-17, 2.757416662467709e-17]}
{'': [0.18281424286625722, 2.253587035060019e-17], 'true': [0.18281424286625722, nan], 'false': [nan, 2.253587035060019e-17], 'false,false': [3.718450321711051e-17, 4.053195169266444e-17]}
{'': [0.18385701462187906, -4.711821855173078e-18], 'true': [0.1843693370472186, 0.1791225799265114], 'false': [nan, -4.711821855173078e-18], 'false,false': [nan, -4.711821855173078e-18]}
{'': [0.18155199792207996, -8.906873982868488e-17], 'true': [0.18155199792207996, nan], 'false': [nan, -8.906873982868488e-17], 'false,false': [nan, -8.906873982868488e-17]}
{'': [0.18166384917242806, 7.380279132178691e-17], 'true': [0.18166384917242806, nan], 'false': [nan, 7.380279132178691e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 15.538647174835205
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), complex(D, E) )
%   | | then return 0.8581489350995118;  // std dev = 1.46e-07, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( complex(A, F), complex(D, G) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.8081489350995122;  // std dev = 0.975, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( location(A, J), location(H, J) )
%   | | | then return 0.26859669629354327;  // std dev = 5.694, 134.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=55 */
%   | | | else return 0.5119950889456661;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=17 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.4385410919622542;  // std dev = 7.880, 255.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=148 */
%   else return -0.14185106490048746;  // std dev = 2.55e-07, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, D) )
%   | | then return 0.7286428362399485;  // std dev = 0.098, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( interaction(F, D), interaction(F, F) )
%   | | | then return 0.25371945531470125;  // std dev = 1.144, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.612201186729626;  // std dev = 1.657, 25.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.7302141022570763;  // std dev = 0.119, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.30938755861745065;  // std dev = 8.556, 294.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=149 */
%   | | | else return 0.433059627544586;  // std dev = 4.962, 106.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=67 */
%   else if ( interaction(J, A) )
%   | then return -0.1254446385283921;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
%   | else return -0.12544463852839155;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.5578936151406526;  // std dev = 0.025, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.22931758645571645;  // std dev = 1.350, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( interaction(F, D), interaction(F, A) )
%   | | | then return 0.6553810033666649;  // std dev = 0.160, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.5816741843695983;  // std dev = 4.21e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, A) )
%   | | then if ( complex(A, G) )
%   | | | then return -0.2275819114329969;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.2546008038256874;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.43613215687213797;  // std dev = 1.626, 23.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | | else return 0.3108123031975155;  // std dev = 9.625, 379.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=216 */
%   else return -0.11231637819360644;  // std dev = 0.000, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(E, A) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.4183274128066469;  // std dev = 0.018, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.4802556763238681;  // std dev = 0.241, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.48852290075764726;  // std dev = 2.165, 31.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
%   | | | else return 0.2085018150491053;  // std dev = 6.130, 161.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=85 */
%   | else if ( complex(A, G), interaction(A, H) )
%   | | then if ( complex(H, I), recursion_proteinclass(H, B) )
%   | | | then return 0.4584373564792694;  // std dev = 0.218, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.18263830218437685;  // std dev = 3.422, 48.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.38554395507227174;  // std dev = 0.841, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.17380037058577716;  // std dev = 6.778, 189.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=96 */
%   else return -0.1015963294878363;  // std dev = 5.74e-09, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, A) )
%   | then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | | then if ( phenotype(D, E), complex(A, F) )
%   | | | then return 0.22466977278226352;  // std dev = 0.783, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.32597146541495475;  // std dev = 0.036, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return -0.22348594177582926;  // std dev = 0.044, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.24363151304737637;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.333885692809892;  // std dev = 1.533, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return 0.05996830686254003;  // std dev = 5.063, 112.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=50 */
%   | | else if ( interaction(L, A), phenotype(A, M) )
%   | | | then return 0.14065381276714703;  // std dev = 5.945, 155.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=84 */
%   | | | else return 0.21718164415119665;  // std dev = 6.593, 187.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=114 */
%   else return -0.09269127618926092;  // std dev = 7.09e-09, 405.000 (wgt'ed) examples reached here.  /* #neg=405 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(A, E) )
%   | then if ( complex(A, F), complex(D, F) )
%   | | then if ( interaction(A, D) )
%   | | | then return -0.08520070517792458;  // std dev = 1.022, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.18403525315563027;  // std dev = 1.645, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.40019801673120814;  // std dev = 1.032, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.191652809877329;  // std dev = 4.666, 94.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=57 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( complex(A, I), complex(H, I) )
%   | | | then return 0.3086559380570685;  // std dev = 0.328, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.22279546406980738;  // std dev = 0.951, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0.05805562710860058;  // std dev = 4.905, 107.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=52 */
%   | | | else return 0.12634090547157203;  // std dev = 7.046, 207.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=113 */
%   else return -0.08518475138839678;  // std dev = 6.32e-09, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, D) )
%   | | then if ( phenotype(D, F), enzyme(E, G) )
%   | | | then return -0.08381477513393287;  // std dev = 0.796, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.18655897879274266;  // std dev = 0.716, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else if ( interaction(H, D), interaction(H, A) )
%   | | | then return 0.30836382427171816;  // std dev = 0.172, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.2598956540478502;  // std dev = 0.163, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, I), phenotype(A, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.44257556733302106;  // std dev = 0.959, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return 0.05499839262714102;  // std dev = 4.572, 93.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=44 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.0063843015636403724;  // std dev = 3.880, 67.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=32 */
%   | | | else return 0.08636759429011731;  // std dev = 7.849, 248.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=133 */
%   else return -0.07877675473109141;  // std dev = 4.37e-09, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), complex(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.24903712617425836;  // std dev = 0.124, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.47372352178502664;  // std dev = 1.091, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return -0.3558382723503979;  // std dev = 0.220, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.4854715170448839;  // std dev = 0.332, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(K, A), complex(A, L) )
%   | | | then return 0.06969644522161675;  // std dev = 2.790, 57.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=34 */
%   | | | else return 0.178577700156453;  // std dev = 4.260, 94.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=65 */
%   | | else if ( phenotype(A, M), interaction(N, A) )
%   | | | then return 0.13630653973642393;  // std dev = 4.632, 94.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=59 */
%   | | | else return 0.05462079745330113;  // std dev = 5.644, 144.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=79 */
%   else return -0.07324622576333714;  // std dev = 3.23e-09, 327.000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( enzyme(A, F), recursion_proteinclass(D, B) )
%   | | then if ( complex(D, G), interaction(D, A) )
%   | | | then return 0.24981698504222158;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.18060896062425677;  // std dev = 0.092, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(D, D), complex(D, H) )
%   | | | then return 0.18362958715031105;  // std dev = 1.086, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.09276343663488218;  // std dev = 4.574, 115.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=49 */
%   | else if ( location(A, I), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.40044440823699184;  // std dev = 1.511, 69.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=67 */
%   | | | else return -0.445013960121098;  // std dev = 0.506, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return -0.04264499907339793;  // std dev = 3.088, 61.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=28 */
%   | | | else return 0.058273013942793085;  // std dev = 6.949, 214.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=121 */
%   else return -0.06842697784420322;  // std dev = 0.000, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, E), interaction(A, F) )
%   | | | then return 0.17444094592674236;  // std dev = 0.078, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.2351508912647146;  // std dev = 0.182, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( phenotype(A, G), complex(D, H) )
%   | | | then return -0.20830956021267655;  // std dev = 1.173, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.1636417219137868;  // std dev = 0.112, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.07483447322174702;  // std dev = 0.829, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.2568453537663772;  // std dev = 0.197, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return -0.03513912109028989;  // std dev = 5.446, 162.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=68 */
%   | | | else return 0.03606457775965839;  // std dev = 7.576, 275.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=148 */
%   else return -0.06419184008202575;  // std dev = 8.64e-09, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
Inference time using transfer learning 3.6797733306884766
Refined model CLL: -0.25477


******************************************
Best model found
******************************************
Results 

CLL : -0.248157 

AUC ROC : 0.944198 

AUC PR : 0.211664 

Precision : 0.051322 

Recall : 0.758621 

F1 : 0.09614 

Total Learning Time : 15.538647174835205 

Total Inference Time : 11.313681602478027 

Total revision time: 64.83129239082336
Best scored revision CLL: -0.25477


Results 

CLL : -0.248157 

AUC ROC : 0.944198 

AUC PR : 0.211664 

Precision : 0.051322 

Recall : 0.758621 

F1 : 0.09614 

Total Learning Time : 64.84799695014954 

Total Inference Time : 11.313681602478027 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos examples: 104
Target test neg examples: 16320

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 9.757340669631958
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.444432120940216;  // std dev = 0.492, 452.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048752;  // std dev = 1.28e-08, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.36391596865256415;  // std dev = 9.805, 392.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=223 */
%   | else return 0.32003841763215324;  // std dev = 4.467, 80.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839213;  // std dev = 0.000, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
%   | | | else return -0.1254446385283916;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.30943919814402276;  // std dev = 0.494, 458.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1123163781936065;  // std dev = 0.000, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5972867660976803;  // std dev = 3.864, 239.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=223 */
%   | else return -0.12504276048723875;  // std dev = 5.815, 203.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783662;  // std dev = 0.000, 276.000 (wgt'ed) examples reached here.  /* #neg=276 */
%   | | | else return -0.10159632948783621;  // std dev = 3.49e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.17559361196411266;  // std dev = 8.080, 378.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=223 */
%   | else return 0.32767043768409776;  // std dev = 3.959, 67.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926043;  // std dev = 1.05e-08, 326.000 (wgt'ed) examples reached here.  /* #neg=326 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.10546050665155295;  // std dev = 9.455, 474.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=259 */
%   | | else return 0.10099205189051758;  // std dev = 1.759, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839678;  // std dev = 1.05e-07, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
%   | | else return -0.08518475138839683;  // std dev = 3.65e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09972310785872174;  // std dev = 0.433, 467.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109143;  // std dev = 3.94e-08, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.07935279864075138;  // std dev = 9.139, 452.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=259 */
%   | else return 0.08652018332174483;  // std dev = 1.710, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333718;  // std dev = 2.08e-09, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06359097062763792;  // std dev = 9.271, 460.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420315;  // std dev = 0.000, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07379557800542687;  // std dev = 8.915, 439.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0641918400820258;  // std dev = 8.12e-09, 334.000 (wgt'ed) examples reached here.  /* #neg=334 */
Inference time using transfer learning 4.297441720962524
Parameter learned model CLL:-0.272783 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.492, 187, 265], 'false,true': [0.0, 0, 0], 'false,false': [1.28e-08, 359, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [9.805, 169, 223], 'true,false': [4.467, 38, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 314, 0], 'false,false,false,false': [0.0, 61, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.494, 193, 265], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 347, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [3.864, 16, 223], 'true,false': [5.815, 161, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 276, 0], 'false,false,false,false': [3.49e-08, 57, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [8.08, 155, 223], 'true,false': [3.959, 25, 42], 'false,true': [0.0, 0, 0], 'false,false': [1.05e-08, 326, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [9.455, 215, 259], 'true,true,false': [1.759, 7, 6], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.05e-07, 292, 0], 'false,false,false': [3.65e-08, 61, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.433, 202, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.94e-08, 302, 0], 'false,false,false': [0.0, 34, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.139, 193, 259], 'true,false': [1.71, 6, 6], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.08e-09, 342, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.271, 195, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 335, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [8.915, 174, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.12e-09, 334, 0]}]
{'': [0.24255521184118106, 1.657603178827532e-16], 'false': [nan, 1.657603178827532e-16]}
{'': [0.2462250430910663, -1.2552921665095104e-16], 'true': [0.24525588296543063, 0.2493750000000003], 'false': [nan, -1.2552921665095104e-16], 'false,false': [nan, -1.2552921665095104e-16], 'false,false,false': [-1.1031515403918753e-16, -4.186086814160426e-17]}
{'': [0.24375791143626277, -3.327469583890959e-17], 'false': [nan, -3.327469583890959e-17], 'false,false': [nan, -3.327469583890959e-17]}
{'': [0.2398421350126899, -5.334404923123875e-18], 'true': [0.06246389243885642, 0.16654850260507736], 'false': [nan, -5.334404923123875e-18], 'false,false': [nan, -5.334404923123875e-18], 'false,false,false': [-5.792467954566034e-17, 2.1425356615573195e-17]}
{'': [0.18488403973317646, 1.1170342088253108e-16], 'true': [0.17271302436514124, 0.23390510135887713], 'false': [nan, 1.1170342088253108e-16]}
{'': [0.18990463876429584, 3.8999335709212296e-17], 'true': [0.18990463876429584, nan], 'true,true': [0.18858331388522498, 0.2380627425771168], 'false': [nan, 3.8999335709212296e-17], 'false,false': [3.802133645976563e-17, 2.1840452943445702e-17]}
{'': [0.187857348939103, 2.114710523095536e-17], 'true': [0.187857348939103, nan], 'false': [nan, 2.114710523095536e-17], 'false,false': [5.1467292532292026e-18, 0.0]}
{'': [0.18631112514060022, 4.544772615424617e-18], 'true': [0.18478881907859201, 0.2436012773105168], 'false': [nan, 4.544772615424617e-18], 'false,false': [nan, 4.544772615424617e-18]}
{'': [0.18683163443393136, -7.622426736232418e-17], 'true': [0.18683163443393136, nan], 'false': [nan, -7.622426736232418e-17], 'false,false': [nan, -7.622426736232418e-17]}
{'': [0.1810572070287398, 6.581561642987455e-17], 'true': [0.1810572070287398, nan], 'false': [nan, 6.581561642987455e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 30.229146003723145
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( phenotype(D, F), phenotype(A, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.6081489350995122;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.37947594931751855;  // std dev = 7.256, 211.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=110 */
%   | | | else return 0.4935080511216089;  // std dev = 6.476, 181.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=115 */
%   else return -0.14185106490048752;  // std dev = 2.37e-07, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( location(D, E), location(A, E) )
%   | | then return 0.7274065038819159;  // std dev = 0.106, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return 0.3940731705485823;  // std dev = 1.128, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then if ( interaction(A, F), recursion_proteinclass(G, B) )
%   | | | then return 0.7532405513441969;  // std dev = 0.971, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return 0.27469068361190796;  // std dev = 8.163, 272.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=129 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7951455478964147;  // std dev = 0.028, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.39068433259731783;  // std dev = 5.178, 111.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=66 */
%   else if ( interaction(I, A) )
%   | then return -0.12544463852839205;  // std dev = 0.000, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E), complex(D, F) )
%   | | then if ( interaction(D, G) )
%   | | | then return 0.5779151774527809;  // std dev = 0.085, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.31242590755975486;  // std dev = 0.680, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(D, A), location(A, H) )
%   | | | then return 0.553406631742334;  // std dev = 2.98e-08, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.6643094685890885;  // std dev = 0.255, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( phenotype(A, K), interaction(I, A) )
%   | | | then return 0.625065292350034;  // std dev = 0.088, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10980311518671532;  // std dev = 4.335, 85.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=32 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.5920510862604793;  // std dev = 0.116, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.2782720920792075;  // std dev = 8.945, 328.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=177 */
%   else return -0.11231637819360643;  // std dev = 0.000, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( complex(A, E), location(A, F) )
%   | | then if ( recursion_proteinclass(D, B), interaction(G, D) )
%   | | | then return 0.4196823396158988;  // std dev = 0.092, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.009224030580133099;  // std dev = 3.152, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.16477544811761718;  // std dev = 3.780, 64.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=32 */
%   | | | else return 0.28709659493409606;  // std dev = 4.710, 96.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=58 */
%   | else if ( enzyme(A, J), interaction(K, A) )
%   | | then if ( phenotype(K, L), interaction(M, K) )
%   | | | then return 0.305216698529976;  // std dev = 2.318, 25.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=16 */
%   | | | else return 0.4874177540357848;  // std dev = 1.800, 23.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   | | else if ( interaction(A, N), enzyme(N, P) )
%   | | | then return 0.19542973109558803;  // std dev = 3.184, 48.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=26 */
%   | | | else return 0.307023414300279;  // std dev = 5.179, 123.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=80 */
%   else return -0.10159632948783619;  // std dev = 7.68e-09, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(F, E), interaction(E, F) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3459108835444711;  // std dev = 0.896, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | | else return 0.13826871169142135;  // std dev = 7.302, 240.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=122 */
%   | | else if ( phenotype(A, H), enzyme(A, I) )
%   | | | then return 0.5972649722483804;  // std dev = 0.379, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.24091008771271855;  // std dev = 3.102, 44.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=27 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(J, K), phenotype(J, L) )
%   | | | then return -0.059949743642318754;  // std dev = 1.025, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4302859868535479;  // std dev = 0.080, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.02528792550513286;  // std dev = 3.865, 63.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=25 */
%   | | | else return 0.13770123334078999;  // std dev = 4.332, 75.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=41 */
%   else return -0.09269127618926043;  // std dev = 1.10e-08, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, A), location(A, D) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.2483814056439826;  // std dev = 0.004, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.2773722152609981;  // std dev = 0.055, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( enzyme(A, G) )
%   | | | then return -0.2641373154921474;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.21724368357522483;  // std dev = 0.091, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( complex(A, I), interaction(A, J) )
%   | | | then return 0.26295692631582573;  // std dev = 0.059, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.33543236550069216;  // std dev = 0.194, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.34833816975788306;  // std dev = 0.915, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return 0.09015118045031562;  // std dev = 10.061, 417.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=209 */
%   else return -0.08518475138839679;  // std dev = 6.45e-09, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(A, G) )
%   | | | then return 0.3553983220356448;  // std dev = 0.757, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return -0.13284118465045672;  // std dev = 1.125, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(D, H), complex(A, I) )
%   | | | then return 0.21318135887869755;  // std dev = 2.972, 41.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=27 */
%   | | | else return 0.07631741185133291;  // std dev = 4.465, 93.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=48 */
%   | else if ( complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.46637542101989105;  // std dev = 1.823, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.43282346617532635;  // std dev = 0.407, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( interaction(L, A), enzyme(A, M) )
%   | | | then return 0.23605048255083275;  // std dev = 2.890, 45.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=32 */
%   | | | else return 0.09532435994279695;  // std dev = 5.462, 129.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=72 */
%   else return -0.07877675473109144;  // std dev = 1.04e-08, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then if ( interaction(D, D), recursion_proteinclass(D, B) )
%   | | then if ( phenotype(A, E), location(A, F) )
%   | | | then return 0.16080242122663863;  // std dev = 0.035, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.19306597048485882;  // std dev = 0.100, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(D, D), enzyme(D, G) )
%   | | | then return -0.2726007802004037;  // std dev = 0.078, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.020118888092542465;  // std dev = 2.686, 51.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=24 */
%   | else if ( enzyme(A, H), interaction(A, I) )
%   | | then if ( complex(I, J), phenotype(I, K) )
%   | | | then return 0.3550306511997328;  // std dev = 1.968, 26.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | | | else return 0.010672944492235579;  // std dev = 2.879, 41.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=20 */
%   | | else if ( complex(A, L), interaction(A, M) )
%   | | | then return -0.012310295361533004;  // std dev = 2.963, 43.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=20 */
%   | | | else return 0.07286701478664573;  // std dev = 7.772, 288.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=160 */
%   else return -0.07324622576333766;  // std dev = 0.000, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E), location(D, F) )
%   | | | then return 0.1492145583701618;  // std dev = 0.083, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.19067523462157662;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.3364299284382755;  // std dev = 0.199, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.22670386657467198;  // std dev = 0.107, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then if ( interaction(I, I), location(I, J) )
%   | | | then return -0.16402614947188648;  // std dev = 1.588, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | | else return 0.03050609392339769;  // std dev = 2.113, 27.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=15 */
%   | | else if ( phenotype(A, K), enzyme(A, L) )
%   | | | then return 0.004515982540424055;  // std dev = 4.314, 83.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=44 */
%   | | | else return 0.0958505414694307;  // std dev = 7.704, 273.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=160 */
%   else return -0.06842697784420328;  // std dev = 0.000, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.12995519003148412;  // std dev = 0.055, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.23105291128045718;  // std dev = 0.236, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.26496823444522927;  // std dev = 1.353, 21.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | | | else return -0.06987431361063112;  // std dev = 5.851, 159.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=65 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.1642357877295738;  // std dev = 2.290, 47.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=33 */
%   | | | else return 0.024396016516525204;  // std dev = 3.940, 68.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=37 */
%   | | else if ( interaction(A, K), enzyme(A, L) )
%   | | | then return 0.1683666982740821;  // std dev = 1.509, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return 0.017559604793118896;  // std dev = 5.414, 139.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=77 */
%   else return -0.06419184008202586;  // std dev = 7.68e-09, 321.000 (wgt'ed) examples reached here.  /* #neg=321 */
Inference time using transfer learning 10.794232606887817
Refined model CLL: -0.270504


******************************************
Best model found
******************************************
Results 

CLL : -0.265454 

AUC ROC : 0.928128 

AUC PR : 0.145515 

Precision : 0.041486 

Recall : 0.644231 

F1 : 0.077952 

Total Learning Time : 30.229146003723145 

Total Inference Time : 34.10829210281372 

Total revision time: 95.88931846618652
Best scored revision CLL: -0.270504


Results 

CLL : -0.265454 

AUC ROC : 0.928128 

AUC PR : 0.145515 

Precision : 0.041486 

Recall : 0.644231 

F1 : 0.077952 

Total Learning Time : 95.9060230255127 

Total Inference Time : 34.10829210281372 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos examples: 92
Target test neg examples: 12594

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 13.886460781097412
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4304629846862848;  // std dev = 0.495, 484.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048754;  // std dev = 1.24e-08, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.4217779149681712;  // std dev = 7.455, 237.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=148 */
%   | else return 0.36062411842108527;  // std dev = 7.505, 229.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=129 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839213;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #neg=318 */
%   | | | else return -0.12544463852839144;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3190645000444674;  // std dev = 0.492, 467.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360638;  // std dev = 0.000, 369.000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5528264937443553;  // std dev = 5.180, 282.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=252 */
%   | else return -0.20903966848460628;  // std dev = 4.629, 186.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=25 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783648;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   | | | else return -0.10159632948783652;  // std dev = 0.000, 180.000 (wgt'ed) examples reached here.  /* #neg=180 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.17864671277943514;  // std dev = 6.975, 258.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=148 */
%   | else return 0.1286490070223075;  // std dev = 6.698, 247.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=129 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926044;  // std dev = 1.02e-08, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1517889757226555;  // std dev = 8.568, 409.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=240 */
%   | | else return 0.03538633180141929;  // std dev = 3.875, 81.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=37 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 8.56e-08, 210.000 (wgt'ed) examples reached here.  /* #neg=210 */
%   | | else return -0.08518475138839678;  // std dev = 6.66e-08, 158.000 (wgt'ed) examples reached here.  /* #neg=158 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.10470367747742652;  // std dev = 0.428, 483.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109147;  // std dev = 8.94e-08, 186.000 (wgt'ed) examples reached here.  /* #neg=186 */
%   | | else return -0.07877675473109148;  // std dev = 8.43e-08, 166.000 (wgt'ed) examples reached here.  /* #neg=166 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.11255028602018612;  // std dev = 8.287, 390.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=240 */
%   | else return -0.03454477654661135;  // std dev = 4.024, 89.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=37 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333714;  // std dev = 3.36e-09, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.0673431803526036;  // std dev = 9.251, 475.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420318;  // std dev = 0.000, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.03039806341504674;  // std dev = 9.508, 496.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202566;  // std dev = 9.31e-09, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
Inference time using transfer learning 3.1090078353881836
Parameter learned model CLL:-0.266152 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.495, 207, 277], 'false,true': [0.0, 0, 0], 'false,false': [1.24e-08, 353, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [7.455, 89, 148], 'true,false': [7.505, 100, 129], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 318, 0], 'false,false,false,false': [0.0, 35, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.492, 190, 277], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 369, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [5.18, 30, 252], 'true,false': [4.629, 161, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 163, 0], 'false,false,false,false': [0.0, 180, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.975, 110, 148], 'true,false': [6.698, 118, 129], 'false,true': [0.0, 0, 0], 'false,false': [1.02e-08, 310, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [8.568, 169, 240], 'true,true,false': [3.875, 44, 37], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.56e-08, 210, 0], 'false,false,false': [6.66e-08, 158, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.428, 206, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.94e-08, 186, 0], 'false,false,false': [8.43e-08, 166, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.287, 150, 240], 'true,false': [4.024, 52, 37], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.36e-09, 355, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.251, 198, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 344, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.508, 219, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.31e-09, 375, 0]}]
{'': [0.24477067823236417, 1.534812566620613e-16], 'false': [nan, 1.534812566620613e-16]}
{'': [0.24108475013353695, -1.2077213638981874e-16], 'true': [0.23450657836173341, 0.2459907324421771], 'false': [nan, -1.2077213638981874e-16], 'false,false': [nan, -1.2077213638981874e-16], 'false,false,false': [-1.1451356983555074e-16, -1.586032892321652e-17]}
{'': [0.24183730648627455, -2.647686345989533e-17], 'false': [nan, -2.647686345989533e-17], 'false,false': [nan, -2.647686345989533e-17]}
{'': [0.2421239155981282, 1.5536648741110063e-17], 'true': [0.09514391425221176, 0.11521222549198203], 'false': [nan, 1.5536648741110063e-17], 'false,false': [nan, 1.5536648741110063e-17], 'false,false,false': [-7.083631568160508e-17, -8.388351741612294e-17]}
{'': [0.185797730073731, 1.0314330035227261e-16], 'true': [0.18855453067741626, 0.18164104645889043], 'false': [nan, 1.0314330035227261e-16]}
{'': [0.18234168835441977, 3.982321718764148e-17], 'true': [0.18234168835441977, nan], 'true,true': [0.17949242540834673, 0.18541895970464353], 'false': [nan, 3.982321718764148e-17], 'false,false': [3.489272363107635e-17, 2.810691201582675e-17]}
{'': [0.18321938835287538, 2.901719268906659e-17], 'true': [0.18321938835287538, nan], 'false': [nan, 2.901719268906659e-17], 'false,false': [4.297637514678025e-17, 4.280377926265664e-17]}
{'': [0.18044976252885275, 1.0633121925987414e-17], 'true': [0.1760898331902526, 0.18193834143376983], 'false': [nan, 1.0633121925987414e-17], 'false,false': [nan, 1.0633121925987414e-17]}
{'': [0.1801741181535298, -8.197576984150865e-17], 'true': [0.1801741181535298, nan], 'false': [nan, -8.197576984150865e-17], 'false,false': [nan, -8.197576984150865e-17]}
{'': [0.182279499926515, 8.644936618414552e-17], 'true': [0.182279499926515, nan], 'false': [nan, 8.644936618414552e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 28.335829973220825
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995118;  // std dev = 2.31e-07, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.7993254056877476;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else if ( location(A, G), interaction(H, A) )
%   | | | then return 0.3594966439943869;  // std dev = 9.631, 371.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=186 */
%   | | | else return 0.4781489350995123;  // std dev = 3.432, 50.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=31 */
%   else return -0.14185106490048757;  // std dev = 2.23e-07, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.7382341819091984;  // std dev = 0.116, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1914674131028719;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.34855698698245513;  // std dev = 9.959, 400.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=217 */
%   else if ( interaction(G, A) )
%   | then return -0.12544463852839213;  // std dev = 0.000, 316.000 (wgt'ed) examples reached here.  /* #neg=316 */
%   | else return -0.12544463852839147;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), phenotype(A, F) )
%   | | then if ( phenotype(D, F) )
%   | | | then return 0.558450707861403;  // std dev = 0.018, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.2455163004484243;  // std dev = 0.771, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, G), complex(A, H) )
%   | | | then return 0.6207471050151631;  // std dev = 0.136, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5589554067711497;  // std dev = 0.022, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( enzyme(A, I), phenotype(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.7162728718515089;  // std dev = 1.011, 52.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=51 */
%   | | | else return -0.25453372279049047;  // std dev = 0.043, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( complex(A, L), location(A, M) )
%   | | | then return 0.20761485967788448;  // std dev = 5.445, 124.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=59 */
%   | | | else return 0.2735216041879134;  // std dev = 7.565, 234.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=124 */
%   else return -0.11231637819360661;  // std dev = 0.000, 332.000 (wgt'ed) examples reached here.  /* #neg=332 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, D) )
%   | | | then return 0.568951642497591;  // std dev = 1.057, 63.000 (wgt'ed) examples reached here.  /* #pos=63 */
%   | | | else return 0.0784017393430789;  // std dev = 1.971, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.2703403035887223;  // std dev = 0.366, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0.1582904088477652;  // std dev = 5.646, 150.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=75 */
%   | else if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( interaction(H, F), interaction(I, H) )
%   | | | then return 0.2149006741191083;  // std dev = 5.758, 149.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=79 */
%   | | | else return 0.3463509263940124;  // std dev = 2.408, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.20279483890033664;  // std dev = 1.851, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.4571757642125021;  // std dev = 2.267, 31.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=24 */
%   else return -0.10159632948783617;  // std dev = 7.79e-09, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( complex(D, F), phenotype(A, G) )
%   | | then if ( interaction(H, D), enzyme(H, E) )
%   | | | then return 0.0934276372283555;  // std dev = 2.141, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.2254784319935384;  // std dev = 2.151, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | | else if ( location(A, I), interaction(A, A) )
%   | | | then return 0.05586643249021699;  // std dev = 0.717, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.33037317390699905;  // std dev = 3.151, 66.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=49 */
%   | else if ( interaction(A, J), location(J, K) )
%   | | then if ( interaction(J, L) )
%   | | | then return 0.1674003949699746;  // std dev = 4.993, 146.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=84 */
%   | | | else return 0.433230167744326;  // std dev = 1.537, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else if ( phenotype(A, M), complex(A, N) )
%   | | | then return 0.3042025733834711;  // std dev = 1.923, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | | | else return 0.12263234270934656;  // std dev = 6.193, 161.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=81 */
%   else return -0.09269127618926043;  // std dev = 1.10e-08, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E), enzyme(A, F) )
%   | | then if ( enzyme(D, F) )
%   | | | then return 0.25175916737665616;  // std dev = 0.051, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.2876782672801414;  // std dev = 0.814, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, A), enzyme(D, G) )
%   | | | then return 0.055839866694389784;  // std dev = 0.707, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3177737055522624;  // std dev = 0.374, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( interaction(H, A), complex(A, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.3758715518444816;  // std dev = 1.666, 26.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | | | else return 0.005150181391070967;  // std dev = 4.718, 117.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=45 */
%   | | else if ( enzyme(A, K), interaction(L, A) )
%   | | | then return 0.09751540913053573;  // std dev = 4.172, 95.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=47 */
%   | | | else return 0.1530945992866892;  // std dev = 6.814, 205.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=119 */
%   else return -0.08518475138839678;  // std dev = 6.25e-09, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( location(A, E) )
%   | | then if ( interaction(F, D), interaction(A, F) )
%   | | | then return 0.17403223994096506;  // std dev = 0.832, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return 0.3032170954221769;  // std dev = 0.215, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return -0.062446838820202445;  // std dev = 0.769, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(A, I), interaction(G, I) )
%   | | | then return -0.029116065590483534;  // std dev = 2.405, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   | | | else return 0.10712207785240913;  // std dev = 4.233, 81.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=46 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.09891455283909802;  // std dev = 5.315, 150.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=83 */
%   | | | else return 0.15665133497550882;  // std dev = 5.778, 151.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=89 */
%   else if ( interaction(A, K) )
%   | then return -0.07877675473109147;  // std dev = 5.89e-09, 204.000 (wgt'ed) examples reached here.  /* #neg=204 */
%   | else return -0.0787767547310915;  // std dev = 6.78e-09, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, D) )
%   | | | then return 0.3952576429542385;  // std dev = 1.669, 103.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=102 */
%   | | | else return -0.37600914381374584;  // std dev = 0.808, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.34154387619110327;  // std dev = 0.200, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.4363416162890775;  // std dev = 0.193, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.2512440991972865;  // std dev = 1.077, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return -0.0015838981577702476;  // std dev = 3.937, 82.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=39 */
%   | | else if ( enzyme(A, L), location(A, M) )
%   | | | then return 0.07624495845465473;  // std dev = 3.570, 69.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=37 */
%   | | | else return 0.15374734512823154;  // std dev = 5.239, 131.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=85 */
%   else return -0.07324622576333718;  // std dev = 2.46e-09, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), phenotype(A, E) )
%   | then if ( complex(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.11382083191643841;  // std dev = 0.552, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.35677341127460954;  // std dev = 0.626, 53.000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | | else if ( interaction(H, A), interaction(A, I) )
%   | | | then return -0.2761651409757186;  // std dev = 0.677, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.3593933888525135;  // std dev = 0.512, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( enzyme(J, L), location(A, K) )
%   | | | then return -0.04128642232866069;  // std dev = 3.492, 78.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=37 */
%   | | | else return 0.07541615193961781;  // std dev = 7.238, 261.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=154 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.043320892506869595;  // std dev = 0.748, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.2639616251425183;  // std dev = 1.433, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.06842697784420328;  // std dev = 0.000, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.23735797571080278;  // std dev = 1.110, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return 0.0315127664659704;  // std dev = 1.456, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.2553278953168445;  // std dev = 0.864, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0.05168660940260261;  // std dev = 6.718, 249.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=142 */
%   | else if ( interaction(A, G), phenotype(A, H) )
%   | | then if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.15160041160453266;  // std dev = 1.428, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.01754057025688215;  // std dev = 1.974, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | | else if ( complex(A, K), interaction(L, A) )
%   | | | then return 0.08944534610792616;  // std dev = 1.160, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return -0.07720207969651299;  // std dev = 4.278, 87.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=42 */
%   else return -0.0641918400820258;  // std dev = 8.12e-09, 334.000 (wgt'ed) examples reached here.  /* #neg=334 */
Inference time using transfer learning 3.8766682147979736
Refined model CLL: -0.235091


******************************************
Best model found
******************************************
Results 

CLL : -0.240443 

AUC ROC : 0.952031 

AUC PR : 0.39724 

Precision : 0.044855 

Recall : 0.923913 

F1 : 0.085556 

Total Learning Time : 28.335829973220825 

Total Inference Time : 22.999410390853882 

Total revision time: 100.4468686580658
Best scored revision CLL: -0.235091


Results 

CLL : -0.240443 

AUC ROC : 0.952031 

AUC PR : 0.39724 

Precision : 0.044855 

Recall : 0.923913 

F1 : 0.085556 

Total Learning Time : 100.46357321739197 

Total Inference Time : 22.999410390853882 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos examples: 86
Target test neg examples: 10998

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 11.022431373596191
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.43218544625569455;  // std dev = 0.494, 493.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048743;  // std dev = 1.38e-08, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.3661878300944897;  // std dev = 10.399, 441.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=251 */
%   | else return 0.4926790062751041;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=32 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839216;  // std dev = 0.000, 338.000 (wgt'ed) examples reached here.  /* #neg=338 */
%   | | | else return -0.12544463852839158;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.33078625785775856;  // std dev = 0.489, 470.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360644;  // std dev = 0.000, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5581198994302863;  // std dev = 5.099, 280.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=251 */
%   | else return -0.19390071335429587;  // std dev = 5.081, 210.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=32 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783653;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #neg=326 */
%   | | | else return -0.10159632948783634;  // std dev = 1.05e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.18698883444636918;  // std dev = 8.593, 418.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=251 */
%   | else return 0.3040640419922043;  // std dev = 3.453, 51.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=32 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926078;  // std dev = 8.33e-09, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.1282521258626589;  // std dev = 9.400, 491.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=280 */
%   | | else return -0.028480503358103662;  // std dev = 1.349, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839678;  // std dev = 1.05e-07, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
%   | | else return -0.08518475138839689;  // std dev = 9.13e-09, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09923152807016103;  // std dev = 0.428, 492.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109143;  // std dev = 4.47e-08, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.08421340507399289;  // std dev = 9.283, 477.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=280 */
%   | else return 0.09943581010314333;  // std dev = 1.202, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333707;  // std dev = 4.27e-09, 334.000 (wgt'ed) examples reached here.  /* #neg=334 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.0783302718511108;  // std dev = 9.157, 470.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420318;  // std dev = 0.000, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05235213665057396;  // std dev = 9.282, 475.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202562;  // std dev = 9.63e-09, 391.000 (wgt'ed) examples reached here.  /* #neg=391 */
Inference time using transfer learning 2.6513991355895996
Parameter learned model CLL:-0.276913 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.494, 210, 283], 'false,true': [0.0, 0, 0], 'false,false': [1.38e-08, 375, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [10.399, 190, 251], 'true,false': [3.121, 14, 32], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 338, 0], 'false,false,false,false': [0.0, 56, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.489, 187, 283], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 357, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [5.099, 29, 251], 'true,false': [5.081, 178, 32], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 326, 0], 'false,false,false,false': [1.05e-08, 40, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [8.593, 167, 251], 'true,false': [3.453, 19, 32], 'false,true': [0.0, 0, 0], 'false,false': [8.33e-09, 385, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [9.4, 211, 280], 'true,true,false': [1.349, 6, 3], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.05e-07, 299, 0], 'false,false,false': [9.13e-09, 33, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.428, 209, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.47e-08, 292, 0], 'false,false,false': [0.0, 44, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.283, 197, 280], 'true,false': [1.202, 3, 3], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.27e-09, 334, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.157, 187, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 346, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.282, 192, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.63e-09, 391, 0]}]
{'': [0.2445185950158228, 1.9184653865522705e-16], 'false': [nan, 1.9184653865522705e-16]}
{'': [0.24342135776597248, -1.2623855711473862e-16], 'true': [0.24521675639264665, 0.21172022684309957], 'false': [nan, -1.2623855711473862e-16], 'false,false': [nan, -1.2623855711473862e-16], 'false,false,false': [-1.1562085936924707e-16, -3.766828119263924e-17]}
{'': [0.2394260713920057, -2.9854736796642864e-17], 'false': [nan, -2.9854736796642864e-17], 'false,false': [nan, -2.9854736796642864e-17]}
{'': [0.24424930511543658, 6.188128333976282e-17], 'true': [0.09284438775510157, 0.12295966994660189], 'false': [nan, 6.188128333976282e-17], 'false,false': [nan, 6.188128333976282e-17], 'false,false,false': [-2.0433552600463003e-17, 2.7755575615628915e-18]}
{'': [0.18419047178462006, 7.03621864957242e-17], 'true': [0.17665248920710666, 0.2337562475970782], 'false': [nan, 7.03621864957242e-17]}
{'': [0.1808039109151651, 3.879092495678258e-17], 'true': [0.1808039109151651, nan], 'true,true': [0.17997081339968918, 0.20213106374857956], 'false': [nan, 3.879092495678258e-17], 'false,false': [3.713120483696176e-17, 2.523234146875356e-18]}
{'': [0.1829178108999643, 1.057355261547768e-17], 'true': [0.1829178108999643, nan], 'false': [nan, 1.057355261547768e-17], 'false,false': [6.843840562757814e-18, 0.0]}
{'': [0.18142802871384828, 1.9279321984508707e-17], 'true': [0.18067716019328348, 0.24089323301326063], 'false': [nan, 1.9279321984508707e-17], 'false,false': [nan, 1.9279321984508707e-17]}
{'': [0.17842450211478567, -9.048638524401565e-17], 'true': [0.17842450211478567, nan], 'false': [nan, -9.048638524401565e-17], 'false,false': [nan, -9.048638524401565e-17]}
{'': [0.1813697766356618, 9.256590947002584e-17], 'true': [0.1813697766356618, nan], 'false': [nan, 9.256590947002584e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 28.95055603981018
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( location(D, E) )
%   | | then return 0.8581489350995116;  // std dev = 2.46e-07, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, G), complex(A, G) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.5581489350995122;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.40692942290438616;  // std dev = 10.076, 410.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=225 */
%   else return -0.14185106490048743;  // std dev = 2.63e-07, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), complex(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 4.21e-08, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7251239146986216;  // std dev = 0.059, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.3256889649473886;  // std dev = 1.566, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.2847500669834987;  // std dev = 5.504, 123.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=60 */
%   | | | else return 0.4038752848572427;  // std dev = 8.465, 301.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=182 */
%   else if ( interaction(I, A) )
%   | then return -0.1254446385283922;  // std dev = 0.000, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), complex(A, E) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.6449751372844184;  // std dev = 0.043, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( complex(A, G), phenotype(A, H) )
%   | | | then return -0.3019612793097883;  // std dev = 7.45e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.4973237249136915;  // std dev = 1.500, 21.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | else if ( interaction(I, A), complex(A, J) )
%   | | then if ( phenotype(I, K), enzyme(I, L) )
%   | | | then return 0.38386857042351546;  // std dev = 2.292, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   | | | else return 0.20666113960704477;  // std dev = 5.713, 134.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=65 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.27286127449260283;  // std dev = 6.015, 147.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=79 */
%   | | | else return 0.36133189506017954;  // std dev = 5.417, 129.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=82 */
%   else return -0.11231637819360642;  // std dev = 0.000, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.24762216685696212;  // std dev = 0.803, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.57559408110256;  // std dev = 0.519, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.28877787788217185;  // std dev = 0.250, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.10211110149900557;  // std dev = 4.348, 86.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( phenotype(H, I), phenotype(A, I) )
%   | | | then return 0.09986892649525926;  // std dev = 2.221, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | else return 0.20182279680490608;  // std dev = 3.616, 58.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=30 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.4271705186518639;  // std dev = 1.347, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return 0.256876688020933;  // std dev = 8.142, 278.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=164 */
%   else return -0.10159632948783613;  // std dev = 8.43e-09, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), location(E, F) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.3798058489358648;  // std dev = 0.098, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.28691845075959227;  // std dev = 0.592, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( complex(D, G), complex(A, G) )
%   | | | then return 0.3926002258684862;  // std dev = 0.046, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.500063268425772;  // std dev = 0.053, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( complex(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.47736591531255723;  // std dev = 1.838, 29.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=25 */
%   | | | else return 0.015002275933082728;  // std dev = 5.708, 147.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=55 */
%   | | else if ( interaction(K, A), location(A, L) )
%   | | | then return 0.18253569559146754;  // std dev = 7.142, 214.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=121 */
%   | | | else return 0.10635197146607815;  // std dev = 4.350, 80.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=40 */
%   else return -0.09269127618926054;  // std dev = 1.03e-08, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( enzyme(E, F), interaction(D, G) )
%   | | | then return 0.21915985400585017;  // std dev = 0.863, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.3625658470829675;  // std dev = 0.370, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.447742866037059;  // std dev = 1.638, 40.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=36 */
%   | | | else return -0.04540717531704017;  // std dev = 5.080, 127.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=42 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( enzyme(A, K) )
%   | | | then return 0.43613837269675143;  // std dev = 0.918, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.20012899118231633;  // std dev = 2.669, 31.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=19 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.40476359539502743;  // std dev = 0.032, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.15407450579466814;  // std dev = 7.415, 231.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=134 */
%   else return -0.08518475138839678;  // std dev = 6.25e-09, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), complex(A, E) )
%   | then if ( location(F, D), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, E) )
%   | | | then return 0.4601743284986517;  // std dev = 1.632, 119.000 (wgt'ed) examples reached here.  /* #pos=119 */
%   | | | else return -0.37971944121192625;  // std dev = 0.896, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.26187120969088445;  // std dev = 0.219, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.4193712877740978;  // std dev = 0.197, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(I, I), interaction(H, A) )
%   | | | then return 0.052377469880485264;  // std dev = 1.680, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | | else return 0.2398468309423254;  // std dev = 3.249, 58.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=40 */
%   | | else if ( location(A, J) )
%   | | | then return 0.11341651401016917;  // std dev = 6.413, 172.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=102 */
%   | | | else return -0.08202555821564075;  // std dev = 2.020, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   else return -0.07877675473109143;  // std dev = 5.51e-09, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D) )
%   | | then if ( complex(A, F), complex(E, F) )
%   | | | then return 0.1629167754136125;  // std dev = 0.095, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.24097633994306675;  // std dev = 0.208, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.1112742232332115;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(G, A), interaction(A, G) )
%   | | then if ( location(A, H), location(G, H) )
%   | | | then return -0.05039395297549558;  // std dev = 3.026, 87.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=32 */
%   | | | else return 0.23326525033827136;  // std dev = 0.592, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( enzyme(A, I), interaction(J, A) )
%   | | | then return 0.13790177486963134;  // std dev = 4.640, 107.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=65 */
%   | | | else return 0.05964517959758155;  // std dev = 7.368, 259.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=139 */
%   else return -0.07324622576333768;  // std dev = 0.000, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), phenotype(A, E) )
%   | then if ( complex(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), complex(G, D) )
%   | | | then return 0.24069414230833075;  // std dev = 1.249, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | | | else return 0.43588753307175643;  // std dev = 0.343, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.14728413989640116;  // std dev = 0.329, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.33030510726045814;  // std dev = 0.602, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else if ( interaction(H, A) )
%   | | then if ( enzyme(A, I), enzyme(H, J) )
%   | | | then return -0.02505240011029019;  // std dev = 2.779, 52.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | | else return 0.15395009017448852;  // std dev = 6.438, 233.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=158 */
%   | | else if ( enzyme(A, K), location(A, L) )
%   | | | then return 0.1719319731983643;  // std dev = 1.319, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return -0.03247129836589761;  // std dev = 2.898, 37.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=18 */
%   else return -0.06842697784420328;  // std dev = 0.000, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( interaction(D, F) )
%   | | | then return 0.1476046715135253;  // std dev = 0.143, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.26414677538942083;  // std dev = 0.511, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.1295488614322461;  // std dev = 0.087, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.22397413441267988;  // std dev = 0.137, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( complex(A, J), interaction(K, H) )
%   | | | then return 0.05224878027458192;  // std dev = 3.113, 109.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=59 */
%   | | | else return -0.03377942970912623;  // std dev = 6.575, 190.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=95 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.14892893532720536;  // std dev = 1.990, 30.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=21 */
%   | | | else return 0.04351355697345836;  // std dev = 4.899, 119.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=67 */
%   else return -0.06419184008202589;  // std dev = 7.39e-09, 316.000 (wgt'ed) examples reached here.  /* #neg=316 */
Inference time using transfer learning 3.062917470932007
Refined model CLL: -0.255237


******************************************
Best model found
******************************************
Results 

CLL : -0.26714 

AUC ROC : 0.939472 

AUC PR : 0.228291 

Precision : 0.036914 

Recall : 0.906977 

F1 : 0.070941 

Total Learning Time : 28.95055603981018 

Total Inference Time : 27.507731676101685 

Total revision time: 94.56605672836304
Best scored revision CLL: -0.255237


Results 

CLL : -0.26714 

AUC ROC : 0.939472 

AUC PR : 0.228291 

Precision : 0.036914 

Recall : 0.906977 

F1 : 0.070941 

Total Learning Time : 94.58276128768921 

Total Inference Time : 27.507731676101685 

Run: 4

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 8.207326889038086
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4324870206392228;  // std dev = 0.494, 491.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048743;  // std dev = 1.38e-08, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.4155347418085729;  // std dev = 9.568, 388.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=240 */
%   | else return 0.32862361039789545;  // std dev = 4.435, 79.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1254446385283921;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
%   | | | else return -0.12544463852839152;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.32431806961125875;  // std dev = 0.490, 470.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360663;  // std dev = 0.000, 330.000 (wgt'ed) examples reached here.  /* #neg=330 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5542143623496449;  // std dev = 4.843, 266.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=240 */
%   | else return -0.1677139721888447;  // std dev = 5.985, 241.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783662;  // std dev = 0.000, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
%   | | | else return -0.10159632948783631;  // std dev = 7.45e-09, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.16071043850278677;  // std dev = 8.579, 414.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=240 */
%   | else return 0.2826380273287173;  // std dev = 4.223, 73.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926054;  // std dev = 1.02e-08, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.14572985946109127;  // std dev = 9.272, 464.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=275 */
%   | | else return 0.018611202916665;  // std dev = 2.087, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839678;  // std dev = 1.07e-07, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */
%   | | else return -0.08518475138839686;  // std dev = 2.69e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.106030256312712;  // std dev = 0.431, 485.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109143;  // std dev = 3.33e-08, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.048991501531098824;  // std dev = 9.660, 502.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=275 */
%   | else return 0.20264914430445866;  // std dev = 1.697, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333721;  // std dev = 1.61e-09, 393.000 (wgt'ed) examples reached here.  /* #neg=393 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06435870624613454;  // std dev = 9.549, 486.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0684269778442033;  // std dev = 0.000, 387.000 (wgt'ed) examples reached here.  /* #neg=387 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07378271689301054;  // std dev = 9.223, 463.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0641918400820259;  // std dev = 7.33e-09, 313.000 (wgt'ed) examples reached here.  /* #neg=313 */
Inference time using transfer learning 5.436648368835449
Parameter learned model CLL:-0.274756 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.494, 209, 282], 'false,true': [0.0, 0, 0], 'false,false': [1.38e-08, 372, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [9.568, 148, 240], 'true,false': [4.435, 37, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 309, 0], 'false,false,false,false': [0.0, 45, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.49, 188, 282], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 330, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [4.843, 26, 240], 'true,false': [5.985, 199, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 279, 0], 'false,false,false,false': [7.45e-09, 44, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [8.579, 174, 240], 'true,false': [4.223, 31, 42], 'false,true': [0.0, 0, 0], 'false,false': [1.02e-08, 359, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [9.272, 189, 275], 'true,true,false': [2.087, 12, 7], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.07e-07, 308, 0], 'false,false,false': [2.69e-08, 49, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.431, 203, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.33e-08, 311, 0], 'false,false,false': [0.0, 49, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.66, 227, 275], 'true,false': [1.697, 5, 7], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [1.61e-09, 393, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.549, 204, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 387, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.223, 181, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.33e-09, 313, 0]}]
{'': [0.24447384903829297, 1.862309589693811e-16], 'false': [nan, 1.862309589693811e-16]}
{'': [0.23921426573554894, -1.1792199357600533e-16], 'true': [0.23594430864066462, 0.24899855792340925], 'false': [nan, -1.1792199357600533e-16], 'false,false': [nan, -1.1792199357600533e-16], 'false,false,false': [-1.092258250763908e-16, -2.960594732333751e-17]}
{'': [0.23973413938985888, -3.768029659333865e-17], 'false': [nan, -3.768029659333865e-17], 'false,false': [nan, -3.768029659333865e-17]}
{'': [0.24690958258213352, -2.887267308622698e-17], 'true': [0.08819040081406423, 0.14865353130870593], 'false': [nan, -2.887267308622698e-17], 'false,false': [nan, -2.887267308622698e-17], 'false,false,false': [-5.730183352904034e-17, 1.261617073437678e-18]}
{'': [0.18964641060784415, 1.0390945300112885e-16], 'true': [0.1777768548327511, 0.24432351285419351], 'false': [nan, 1.0390945300112885e-16]}
{'': [0.1876096149118489, 3.9806315728857154e-17], 'true': [0.1876096149118489, nan], 'true,true': [0.18526671230680558, 0.2293022701553312], 'false': [nan, 3.9806315728857154e-17], 'false,false': [3.7488050182148143e-17, 1.4727448285843914e-17]}
{'': [0.1854110900435188, 1.973729821555834e-17], 'true': [0.1854110900435188, nan], 'false': [nan, 1.973729821555834e-17], 'false,false': [3.569848953778638e-18, -1.1328806373726086e-18]}
{'': [0.18768233782350652, 2.259995978880726e-18], 'true': [0.18588372808462744, 0.23986472927926247], 'false': [nan, 2.259995978880726e-18], 'false,false': [nan, 2.259995978880726e-18]}
{'': [0.18761352339478696, -1.1303045780421492e-16], 'true': [0.18761352339478696, nan], 'false': [nan, -1.1303045780421492e-16], 'false,false': [nan, -1.1303045780421492e-16]}
{'': [0.18371594413704437, 5.391498394345808e-17], 'true': [0.18371594413704437, nan], 'false': [nan, 5.391498394345808e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 18.560572624206543
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E), enzyme(A, F) )
%   | | then if ( enzyme(D, F), phenotype(A, E) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( location(A, G), interaction(A, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.38635406330463745;  // std dev = 6.971, 195.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=103 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.7867203636709409;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.46116401047639377;  // std dev = 6.902, 199.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=120 */
%   else return -0.14185106490048757;  // std dev = 2.23e-07, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), complex(D, E) )
%   | | then return 0.7387168953479815;  // std dev = 0.166, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( complex(D, F), interaction(A, G) )
%   | | | then return -0.04313745900993432;  // std dev = 0.931, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.6395159483632367;  // std dev = 1.346, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(A, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7005726463618069;  // std dev = 1.688, 33.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=30 */
%   | | | else return 0.22841021805279182;  // std dev = 8.520, 301.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=130 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.35710374833088454;  // std dev = 3.503, 50.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=28 */
%   | | | else return 0.5275311527346372;  // std dev = 3.511, 65.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=48 */
%   else if ( interaction(K, A) )
%   | then return -0.12544463852839216;  // std dev = 0.000, 333.000 (wgt'ed) examples reached here.  /* #neg=333 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.5506096344381232;  // std dev = 2.98e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.5750132559859092;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( phenotype(D, F), interaction(D, D) )
%   | | | then return -0.03472076371140487;  // std dev = 1.365, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.22787425516632662;  // std dev = 3.269, 54.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=28 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.5567105398250698;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6348295129408481;  // std dev = 0.134, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.3465066941638617;  // std dev = 7.041, 211.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=128 */
%   | | | else return 0.2513513090425478;  // std dev = 6.145, 155.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=81 */
%   else return -0.11231637819360651;  // std dev = 0.000, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.5432337708289587;  // std dev = 0.581, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | | else return 0.16379426747583378;  // std dev = 0.946, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.24051319558521217;  // std dev = 0.267, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0.23676674000217665;  // std dev = 4.521, 87.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=49 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H), phenotype(G, I) )
%   | | | then return 0.2644319193382473;  // std dev = 0.851, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.4727296589196719;  // std dev = 0.244, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else if ( location(A, J) )
%   | | | then return 0.16396471215021977;  // std dev = 8.703, 315.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=154 */
%   | | | else return 0.2654529041979276;  // std dev = 2.103, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   else return -0.10159632948783633;  // std dev = 4.93e-09, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.30624640351798615;  // std dev = 0.068, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.14610147548895983;  // std dev = 0.804, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(D, F), phenotype(A, F) )
%   | | | then return 0.5643477944131121;  // std dev = 0.159, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.39089712574666846;  // std dev = 0.154, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( complex(A, G), interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.42516292914256437;  // std dev = 1.125, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return 0.04838592753923631;  // std dev = 5.286, 130.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=50 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.12817119423758053;  // std dev = 6.096, 166.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=85 */
%   | | | else return 0.2069335770750208;  // std dev = 5.957, 143.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=82 */
%   else return -0.09269127618926068;  // std dev = 9.22e-09, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, D) )
%   | | then if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.0810848175079046;  // std dev = 0.553, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2655766716182112;  // std dev = 0.219, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.2540551654886637;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3788276510621831;  // std dev = 0.244, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then if ( location(A, J) )
%   | | | then return 0.06713874412816737;  // std dev = 2.797, 57.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=27 */
%   | | | else return -0.22140652961993743;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(K, A), phenotype(A, L) )
%   | | | then return 0.2182870516188316;  // std dev = 5.808, 146.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=92 */
%   | | | else return 0.14416679177933067;  // std dev = 7.103, 210.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=117 */
%   else return -0.08518475138839678;  // std dev = 6.25e-09, 338.000 (wgt'ed) examples reached here.  /* #neg=338 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), enzyme(G, E) )
%   | | | then return 0.2942999322437177;  // std dev = 0.928, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.535984517446163;  // std dev = 0.504, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return -0.3125704733536755;  // std dev = 0.223, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.4343201433514328;  // std dev = 0.097, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( phenotype(I, J), phenotype(A, K) )
%   | | | then return 0.25458845496054716;  // std dev = 0.337, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.14263430011587666;  // std dev = 1.588, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | else if ( location(A, L) )
%   | | | then return 0.04625696953728632;  // std dev = 8.925, 359.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=175 */
%   | | | else return 0.1830497391541017;  // std dev = 1.790, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   else return -0.07877675473109141;  // std dev = 3.48e-09, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, E) )
%   | | | then return 0.2754779081983008;  // std dev = 0.640, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | | else return -0.37418399796925356;  // std dev = 0.747, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.25569331449308863;  // std dev = 0.401, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.003640461839895137;  // std dev = 3.926, 77.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=36 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( complex(G, I), location(A, J) )
%   | | | then return 0.12312234795601563;  // std dev = 5.450, 140.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=84 */
%   | | | else return -0.00999594723663641;  // std dev = 4.666, 110.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=55 */
%   | | else if ( location(A, K) )
%   | | | then return 0.16908591101209486;  // std dev = 4.455, 102.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=66 */
%   | | | else return -0.01178837453512969;  // std dev = 1.226, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.07324622576333714;  // std dev = 3.36e-09, 333.000 (wgt'ed) examples reached here.  /* #neg=333 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(A, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(D, F), interaction(F, G) )
%   | | | then return 0.10830878050928522;  // std dev = 1.165, 36.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   | | | else return 0.25398739642636137;  // std dev = 0.196, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( location(D, E), interaction(D, H) )
%   | | | then return 0.020022215686447638;  // std dev = 5.280, 160.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=76 */
%   | | | else return 0.11606734094308921;  // std dev = 2.990, 45.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=27 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return 0.4623690382895158;  // std dev = 0.330, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.031096792391038356;  // std dev = 3.366, 52.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=29 */
%   | | | else return 0.1358042057391167;  // std dev = 5.700, 156.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=99 */
%   else return -0.06842697784420329;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), complex(E, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.1988557658606898;  // std dev = 0.617, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.052824634028992415;  // std dev = 2.367, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | else if ( complex(A, I), phenotype(E, J) )
%   | | | then return 0.2900257825823477;  // std dev = 1.546, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | | else return 0.07717004635564481;  // std dev = 3.336, 66.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=40 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then if ( enzyme(K, L) )
%   | | | then return -0.07025147007865891;  // std dev = 0.707, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.17305025518183775;  // std dev = 0.325, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return -0.04167830949343705;  // std dev = 4.763, 123.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=54 */
%   | | | else return 0.03280157702613872;  // std dev = 6.803, 196.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=108 */
%   else return -0.0641918400820259;  // std dev = 7.33e-09, 313.000 (wgt'ed) examples reached here.  /* #neg=313 */
Inference time using transfer learning 3.736269950866699
Refined model CLL: -0.261106


******************************************
Best model found
******************************************
Results 

CLL : -0.261814 

AUC ROC : 0.926363 

AUC PR : 0.21216 

Precision : 0.037493 

Recall : 0.770115 

F1 : 0.071505 

Total Learning Time : 18.560572624206543 

Total Inference Time : 13.143179416656494 

Total revision time: 58.106462240219116
Best scored revision CLL: -0.261106


Results 

CLL : -0.261814 

AUC ROC : 0.926363 

AUC PR : 0.21216 

Precision : 0.037493 

Recall : 0.770115 

F1 : 0.071505 

Total Learning Time : 58.12352633476257 

Total Inference Time : 13.143179416656494 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos examples: 104
Target test neg examples: 16320

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.59981632232666
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4329862452947358;  // std dev = 0.494, 461.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048766;  // std dev = 1.02e-08, 332.000 (wgt'ed) examples reached here.  /* #neg=332 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3318972522339335;  // std dev = 7.054, 200.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=107 */
%   | else return 0.3976577085076976;  // std dev = 7.942, 263.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=158 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839202;  // std dev = 0.000, 266.000 (wgt'ed) examples reached here.  /* #neg=266 */
%   | | | else return -0.1254446385283915;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.33555759924814405;  // std dev = 0.488, 438.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360656;  // std dev = 0.000, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5769294783571313;  // std dev = 4.289, 243.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=223 */
%   | else return -0.15046851054588;  // std dev = 5.832, 221.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783641;  // std dev = 0.000, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | | | else return -0.10159632948783656;  // std dev = 0.000, 211.000 (wgt'ed) examples reached here.  /* #neg=211 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.17447065175474827;  // std dev = 6.026, 191.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=107 */
%   | else return 0.19050277706342136;  // std dev = 6.981, 266.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=158 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926043;  // std dev = 1.08e-08, 333.000 (wgt'ed) examples reached here.  /* #neg=333 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.15594062526337307;  // std dev = 7.067, 264.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=158 */
%   | | else return 0.11450517303668742;  // std dev = 5.994, 191.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=107 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 5.77e-08, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | | else return -0.08518475138839678;  // std dev = 7.45e-08, 179.000 (wgt'ed) examples reached here.  /* #neg=179 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.10593011620940075;  // std dev = 0.425, 461.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.0787767547310915;  // std dev = 8.56e-08, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | | else return -0.07877675473109147;  // std dev = 8.16e-08, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.07669867705547556;  // std dev = 7.192, 273.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=158 */
%   | else return 0.050530952720918884;  // std dev = 6.056, 196.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=107 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333716;  // std dev = 2.95e-09, 321.000 (wgt'ed) examples reached here.  /* #neg=321 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09391349819103333;  // std dev = 8.850, 430.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420301;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.016077437962764174;  // std dev = 9.512, 482.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202578;  // std dev = 8.38e-09, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
Inference time using transfer learning 2.4156923294067383
Parameter learned model CLL:-0.270255 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.494, 196, 265], 'false,true': [0.0, 0, 0], 'false,false': [1.02e-08, 332, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [7.054, 93, 107], 'true,false': [7.942, 105, 158], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 266, 0], 'false,false,false,false': [0.0, 41, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.488, 173, 265], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 339, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [4.289, 20, 223], 'true,false': [5.832, 179, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 133, 0], 'false,false,false,false': [0.0, 211, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.026, 84, 107], 'true,false': [6.981, 108, 158], 'false,true': [0.0, 0, 0], 'false,false': [1.08e-08, 333, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [7.067, 106, 158], 'true,true,false': [5.994, 84, 107], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.77e-08, 128, 0], 'false,false,false': [7.45e-08, 179, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.425, 196, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.56e-08, 157, 0], 'false,false,false': [8.16e-08, 187, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [7.192, 115, 158], 'true,false': [6.056, 89, 107], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.95e-09, 321, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.85, 165, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 299, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.512, 217, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.38e-09, 341, 0]}]
{'': [0.24439937700274642, 1.0968468436055763e-16], 'false': [nan, 1.0968468436055763e-16]}
{'': [0.24476486805461656, -1.0993739396939661e-16], 'true': [0.24877500000000097, 0.23984733045150308], 'false': [nan, -1.0993739396939661e-16], 'false,false': [nan, -1.0993739396939661e-16], 'false,false,false': [-9.683148184700613e-17, -2.4370749321040022e-17]}
{'': [0.2386133278364319, -3.4059939398529876e-17], 'false': [nan, -3.4059939398529876e-17], 'false,false': [nan, -3.4059939398529876e-17]}
{'': [0.24493446017892997, 1.9364355080671336e-17], 'true': [0.07570191556663067, 0.15391626161883162], 'false': [nan, 1.9364355080671336e-17], 'false,false': [nan, 1.9364355080671336e-17], 'false,false,false': [-4.340721600038206e-17, -8.208283973531963e-17]}
{'': [0.18616555161165577, 1.1602330707794429e-16], 'true': [0.1901333653120412, 0.18320905885924457], 'false': [nan, 1.1602330707794429e-16]}
{'': [0.1891527410063825, 3.7610161094793575e-17], 'true': [0.1891527410063825, nan], 'true,true': [0.18918891656940812, 0.18810656175440127], 'false': [nan, 3.7610161094793575e-17], 'false,false': [2.6020852139652106e-17, 3.1011816330311633e-17]}
{'': [0.1808366089982685, 2.1946269091427512e-17], 'true': [0.1808366089982685, nan], 'false': [nan, 2.1946269091427512e-17], 'false,false': [4.6671795939656264e-17, 3.5622129132357964e-17]}
{'': [0.18864444819668885, 8.992460635593168e-18], 'true': [0.18947274144752443, 0.18709216832323858], 'false': [nan, 8.992460635593168e-18], 'false,false': [nan, 8.992460635593168e-18]}
{'': [0.1821487479211455, -4.752794219131105e-17], 'true': [0.1821487479211455, nan], 'false': [nan, -4.752794219131105e-17], 'false,false': [nan, -4.752794219131105e-17]}
{'': [0.18772432190834318, 7.032497751291314e-17], 'true': [0.18772432190834318, nan], 'false': [nan, 7.032497751291314e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 18.025035858154297
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E), enzyme(A, F) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(D, G) )
%   | | | then return 0.8581489350995118;  // std dev = 1.46e-07, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(A, H), location(H, I) )
%   | | | then return 0.3781489350995092;  // std dev = 7.065, 200.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=104 */
%   | | | else return 0.470393833058693;  // std dev = 6.821, 196.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=120 */
%   else return -0.14185106490048757;  // std dev = 2.21e-07, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0.6781753114234473;  // std dev = 0.907, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return 0.791719058269678;  // std dev = 0.221, 91.000 (wgt'ed) examples reached here.  /* #pos=91 */
%   | | else return -0.19647080929316382;  // std dev = 0.160, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( location(A, I), location(G, I) )
%   | | | then return 0.5983051451076732;  // std dev = 1.724, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | | | else return 0.3659749274463532;  // std dev = 1.912, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( interaction(A, J), interaction(K, A) )
%   | | | then return 0.3429504945644508;  // std dev = 3.961, 66.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=36 */
%   | | | else return 0.4490209223598291;  // std dev = 5.722, 145.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=95 */
%   else if ( interaction(L, A) )
%   | then return -0.1254446385283921;  // std dev = 0.000, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(A, F), complex(A, G) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.5904305780287515;  // std dev = 0.140, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.2070183186445183;  // std dev = 2.833, 51.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=23 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.5906547776262527;  // std dev = 1.345, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return 0.33225891813246405;  // std dev = 5.763, 157.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=98 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( phenotype(A, J), interaction(I, K) )
%   | | | then return 0.38144440949302366;  // std dev = 0.698, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.5987264205336605;  // std dev = 0.182, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.13248342405322222;  // std dev = 2.740, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | | else return 0.25704535776564086;  // std dev = 5.768, 148.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=79 */
%   else return -0.11231637819360626;  // std dev = 0.000, 390.000 (wgt'ed) examples reached here.  /* #neg=390 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E), enzyme(D, F) )
%   | | then if ( interaction(G, D), enzyme(A, F) )
%   | | | then return 0.47912761842837126;  // std dev = 0.164, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.020197693926954807;  // std dev = 0.690, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(H, D), interaction(H, A) )
%   | | | then return 0.4275093225536402;  // std dev = 0.833, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return 0.5537637618181006;  // std dev = 0.335, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(A, J) )
%   | | | then return 0.20561508106747114;  // std dev = 0.600, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.48759642990418567;  // std dev = 0.252, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(A, K), interaction(K, A) )
%   | | | then return 0.08684924040318318;  // std dev = 2.968, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
%   | | | else return 0.1975970654210571;  // std dev = 8.715, 357.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=190 */
%   else return -0.10159632948783646;  // std dev = 0.000, 333.000 (wgt'ed) examples reached here.  /* #neg=333 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(A, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.32937263869292593;  // std dev = 0.156, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.4502320777689581;  // std dev = 0.854, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else if ( interaction(H, D), complex(H, E) )
%   | | | then return -0.06231370781767284;  // std dev = 1.747, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | | else return 0.23715985847285767;  // std dev = 3.432, 84.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=54 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.3272041185520594;  // std dev = 0.867, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.08671062040043362;  // std dev = 6.822, 194.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=93 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.1356809342248996;  // std dev = 3.452, 61.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=32 */
%   | | | else return 0.2714822455848275;  // std dev = 3.407, 55.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=36 */
%   else return -0.09269127618926043;  // std dev = 1.09e-08, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then if ( interaction(F, D), interaction(F, A) )
%   | | | then return 0.2319974091643092;  // std dev = 0.689, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.4438472745890043;  // std dev = 0.173, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.27901704904995694;  // std dev = 0.145, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.015165735820839066;  // std dev = 0.981, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(H, A), location(A, I) )
%   | | then if ( interaction(J, H), complex(J, K) )
%   | | | then return 0.10988673696131482;  // std dev = 6.810, 238.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=125 */
%   | | | else return -0.0011685947758895466;  // std dev = 5.159, 124.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=53 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.26592687747238203;  // std dev = 2.497, 40.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=28 */
%   | | | else return 0.12743729690200484;  // std dev = 2.795, 34.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=19 */
%   else return -0.08518475138839678;  // std dev = 6.45e-09, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(F, G) )
%   | | | then return 0.3653146952744455;  // std dev = 0.776, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return -0.0526324680694704;  // std dev = 1.033, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(A, H), interaction(D, H) )
%   | | | then return -0.08356646884781752;  // std dev = 2.244, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return 0.08303430725729245;  // std dev = 6.237, 196.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=105 */
%   | else if ( phenotype(A, I), complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.4033711593399594;  // std dev = 0.386, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.27172024550476537;  // std dev = 0.094, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(L, A), complex(A, M) )
%   | | | then return 0.06862724030749365;  // std dev = 1.684, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | | else return 0.13742718012586813;  // std dev = 5.397, 131.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=79 */
%   else return -0.07877675473109143;  // std dev = 5.82e-09, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then if ( enzyme(A, E), phenotype(A, F) )
%   | | then if ( complex(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.36935212366952896;  // std dev = 0.403, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.2785321855564525;  // std dev = 0.315, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( complex(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.3515262449455707;  // std dev = 0.992, 81.000 (wgt'ed) examples reached here.  /* #pos=81 */
%   | | | else return -0.2892292332651352;  // std dev = 0.389, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( enzyme(A, J), phenotype(I, K) )
%   | | | then return 0.019116273096358077;  // std dev = 0.732, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.23310642520255892;  // std dev = 0.775, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.07106131080747362;  // std dev = 2.948, 45.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */
%   | | | else return 0.04702942934093005;  // std dev = 7.539, 235.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=122 */
%   else return -0.07324622576333717;  // std dev = 2.63e-09, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.22482878141220172;  // std dev = 1.118, 33.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   | | | else return -0.05714406762903601;  // std dev = 1.021, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( phenotype(A, E), interaction(A, H) )
%   | | | then return -0.05634840529908891;  // std dev = 2.040, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | | else return 0.06753145730017023;  // std dev = 5.873, 183.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=104 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( enzyme(I, J), location(A, K) )
%   | | | then return 0.16639388884727765;  // std dev = 1.091, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return 0.015220590525574715;  // std dev = 2.235, 37.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | | else if ( location(A, L), enzyme(A, M) )
%   | | | then return 0.09054444097304437;  // std dev = 2.685, 47.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=28 */
%   | | | else return 0.2005457221571188;  // std dev = 3.572, 77.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=56 */
%   else return -0.06842697784420308;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #neg=315 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, G), interaction(A, F) )
%   | | | then return -0.06951861698479597;  // std dev = 0.624, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.22684115794202342;  // std dev = 0.405, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.3237832987365976;  // std dev = 0.516, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.008166211833769562;  // std dev = 3.258, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(I, A) )
%   | | | then return 0.017018453337828886;  // std dev = 1.695, 35.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=19 */
%   | | | else return 0.1699142342278116;  // std dev = 3.954, 101.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=70 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return -0.036464201055605217;  // std dev = 2.858, 40.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=19 */
%   | | | else return 0.04370414612398219;  // std dev = 5.595, 173.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=99 */
%   else return -0.06419184008202593;  // std dev = 7.03e-09, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */
Inference time using transfer learning 6.787703990936279
Refined model CLL: -0.241493


******************************************
Best model found
******************************************
Results 

CLL : -0.236978 

AUC ROC : 0.950047 

AUC PR : 0.241715 

Precision : 0.034896 

Recall : 0.923077 

F1 : 0.06725 

Total Learning Time : 18.025035858154297 

Total Inference Time : 14.861325025558472 

Total revision time: 46.02060890197754
Best scored revision CLL: -0.241493


Results 

CLL : -0.236978 

AUC ROC : 0.950047 

AUC PR : 0.241715 

Precision : 0.034896 

Recall : 0.923077 

F1 : 0.06725 

Total Learning Time : 46.037672996520996 

Total Inference Time : 14.861325025558472 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos examples: 92
Target test neg examples: 12594

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.858382225036621
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.420015060860157;  // std dev = 0.496, 493.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048757;  // std dev = 1.16e-08, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.37041715282701787;  // std dev = 6.676, 182.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=104 */
%   | else return 0.4038836862935516;  // std dev = 8.268, 286.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=173 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839213;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.31191010773111216;  // std dev = 0.493, 475.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360654;  // std dev = 0.000, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5409818526260238;  // std dev = 5.542, 287.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=252 */
%   | else return -0.2132639798847295;  // std dev = 4.687, 202.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=25 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783642;  // std dev = 0.000, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | | | else return -0.10159632948783658;  // std dev = 0.000, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.18030186380569135;  // std dev = 5.917, 185.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=104 */
%   | else return 0.1749102892784058;  // std dev = 7.482, 301.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=173 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926082;  // std dev = 7.90e-09, 392.000 (wgt'ed) examples reached here.  /* #neg=392 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17862704907938576;  // std dev = 7.018, 275.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=169 */
%   | | else return 0.10290220441568888;  // std dev = 6.143, 199.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=108 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 5.58e-08, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | | else return -0.08518475138839678;  // std dev = 8.94e-08, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09391765862193403;  // std dev = 0.430, 492.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.07877675473109151;  // std dev = 7.60e-08, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   | | else return -0.07877675473109146;  // std dev = 6.83e-08, 219.000 (wgt'ed) examples reached here.  /* #neg=219 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.11393958352130443;  // std dev = 6.996, 274.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=169 */
%   | else return 0.07501486809663158;  // std dev = 5.927, 193.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=108 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333714;  // std dev = 3.23e-09, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07791429556633712;  // std dev = 9.115, 464.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420314;  // std dev = 0.000, 332.000 (wgt'ed) examples reached here.  /* #neg=332 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.0505206861853569;  // std dev = 9.199, 474.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202575;  // std dev = 8.54e-09, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
Inference time using transfer learning 2.3743433952331543
Parameter learned model CLL:-0.272933 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.496, 216, 277], 'false,true': [0.0, 0, 0], 'false,false': [1.16e-08, 343, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [6.676, 78, 104], 'true,false': [8.268, 113, 173], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 324, 0], 'false,false,false,false': [0.0, 31, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.493, 198, 277], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 342, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [5.542, 35, 252], 'true,false': [4.687, 177, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 138, 0], 'false,false,false,false': [0.0, 225, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.917, 81, 104], 'true,false': [7.482, 128, 173], 'false,true': [0.0, 0, 0], 'false,false': [7.9e-09, 392, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [7.018, 106, 169], 'true,true,false': [6.143, 91, 108], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.58e-08, 139, 0], 'false,false,false': [8.94e-08, 245, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.43, 215, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.6e-08, 144, 0], 'false,false,false': [6.83e-08, 219, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [6.996, 105, 169], 'true,false': [5.927, 85, 108], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.23e-09, 353, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.115, 187, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 332, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.199, 197, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.54e-09, 348, 0]}]
{'': [0.2461725824833705, 1.3206151429943553e-16], 'false': [nan, 1.3206151429943553e-16]}
{'': [0.2415580027759429, -1.2009172998762255e-16], 'true': [0.24489795918367321, 0.23899701696904285], 'false': [nan, -1.2009172998762255e-16], 'false,false': [nan, -1.2009172998762255e-16], 'false,false,false': [-1.1239294817192943e-16, -8.953411488912552e-18]}
{'': [0.24316522029136076, -3.3761168000297156e-17], 'false': [nan, -3.3761168000297156e-17], 'false,false': [nan, -3.3761168000297156e-17]}
{'': [0.24565795319868863, 5.627576763940188e-17], 'true': [0.10702986725056735, 0.10873312704831314], 'false': [nan, 5.627576763940188e-17], 'false,false': [nan, 5.627576763940188e-17], 'false,false,false': [-4.827056628805028e-17, -7.500173321912169e-17]}
{'': [0.18724145384884544, 6.117555441812086e-17], 'true': [0.1892390255962918, 0.1860026450270598], 'false': [nan, 6.117555441812086e-17]}
{'': [0.1849129677590379, 3.700743415417188e-17], 'true': [0.1849129677590379, nan], 'true,true': [0.17908036459963222, 0.1896462637293117], 'false': [nan, 3.700743415417188e-17], 'false,false': [2.236420481259308e-17, 3.2626962356331134e-17]}
{'': [0.18502619959374908, 1.957418004848761e-17], 'true': [0.18502619959374908, nan], 'false': [nan, 1.957418004848761e-17], 'false,false': [4.0091387000352874e-17, 2.1291948417468754e-17]}
{'': [0.18039174406443914, 1.0064344699151561e-17], 'true': [0.1786036826909335, 0.18204127052063604], 'false': [nan, 1.0064344699151561e-17], 'false,false': [nan, 1.0064344699151561e-17]}
{'': [0.17904895411530092, -8.159470421943922e-17], 'true': [0.17904895411530092, nan], 'false': [nan, -8.159470421943922e-17], 'false,false': [nan, -8.159470421943922e-17]}
{'': [0.1785457746416458, 7.273874988923439e-17], 'true': [0.1785457746416458, nan], 'false': [nan, 7.273874988923439e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 42.690903425216675
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995118;  // std dev = 2.31e-07, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( interaction(E, A), interaction(F, E) )
%   | | then if ( interaction(F, A), complex(E, G) )
%   | | | then return 0.2748156017661801;  // std dev = 5.664, 132.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=55 */
%   | | | else return 0.3978978890744052;  // std dev = 7.705, 239.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=129 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.5438632208137972;  // std dev = 2.746, 35.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=24 */
%   | | | else return 0.3998156017661789;  // std dev = 3.452, 48.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=26 */
%   else return -0.14185106490048752;  // std dev = 2.37e-07, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.7194734122109543;  // std dev = 7.30e-08, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.12069156494828788;  // std dev = 0.861, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.7785117993751285;  // std dev = 0.164, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.643958996593087;  // std dev = 2.569, 48.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=40 */
%   | | | else return 0.13972294034717256;  // std dev = 6.477, 191.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=65 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.36642200330721486;  // std dev = 6.868, 195.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=110 */
%   | | | else return 0.5938798148095904;  // std dev = 1.990, 24.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=19 */
%   else if ( interaction(J, A) )
%   | then return -0.12544463852839213;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #neg=318 */
%   | else return -0.12544463852839147;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( location(A, G), phenotype(F, D) )
%   | | | then return 0.728287955972879;  // std dev = 0.428, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | | else return 0.09706841237982633;  // std dev = 0.786, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(H, D), recursion_proteinclass(H, B) )
%   | | | then return -0.26821892590546725;  // std dev = 0.219, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.24041742335786623;  // std dev = 0.124, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.36727494139265376;  // std dev = 1.461, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return 0.5948389313949147;  // std dev = 0.239, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.21467628394058116;  // std dev = 0.088, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.2618952019334802;  // std dev = 9.203, 350.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=183 */
%   else return -0.1123163781936065;  // std dev = 0.000, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.4175367578955518;  // std dev = 0.085, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.5755195562247404;  // std dev = 0.164, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.1953981601983764;  // std dev = 1.081, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.443677036343165;  // std dev = 0.822, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( interaction(I, A), interaction(A, I) )
%   | | then if ( phenotype(I, J), enzyme(I, K) )
%   | | | then return 0.005703136314417067;  // std dev = 1.789, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.13248491998772544;  // std dev = 3.663, 74.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=32 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.19081519893044624;  // std dev = 3.534, 56.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=27 */
%   | | | else return 0.2723229971752789;  // std dev = 7.872, 286.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=169 */
%   else return -0.10159632948783608;  // std dev = 9.22e-09, 379.000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(F, E) )
%   | | then if ( recursion_proteinclass(E, B), location(A, G) )
%   | | | then return 0.33071522556240646;  // std dev = 0.150, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0.47864365538173287;  // std dev = 0.166, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( complex(D, H) )
%   | | | then return 0.41084982834136313;  // std dev = 0.031, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1222196609551438;  // std dev = 1.055, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.19187841329010624;  // std dev = 0.034, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.1913147280803673;  // std dev = 3.601, 63.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=34 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.322293274727212;  // std dev = 2.958, 46.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=31 */
%   | | | else return 0.22229721906138156;  // std dev = 7.648, 281.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=169 */
%   else return -0.09269127618926043;  // std dev = 1.09e-08, 332.000 (wgt'ed) examples reached here.  /* #neg=332 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), phenotype(A, E) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.26108471721127335;  // std dev = 0.104, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.001313022418500916;  // std dev = 0.633, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.3286547580651144;  // std dev = 0.244, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.2620951326339534;  // std dev = 0.689, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( interaction(A, H), complex(A, I) )
%   | | then if ( complex(H, I), location(A, J) )
%   | | | then return -0.05111919683967051;  // std dev = 2.714, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | | else return 0.1935109149676539;  // std dev = 3.189, 50.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=30 */
%   | | else if ( interaction(K, A), enzyme(A, L) )
%   | | | then return 0.10103485281226868;  // std dev = 4.859, 127.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=67 */
%   | | | else return 0.1802234907634421;  // std dev = 6.765, 202.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=123 */
%   else return -0.08518475138839678;  // std dev = 6.25e-09, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.4232820123514974;  // std dev = 3.496, 250.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=239 */
%   | | | else return -0.2532928252501977;  // std dev = 4.036, 146.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=24 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1638969149173003;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.4048820742358582;  // std dev = 0.460, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( enzyme(A, G) )
%   | | then return 0.20866271273151163;  // std dev = 1.037, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return -0.15638900379094833;  // std dev = 1.892, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.01168467474216045;  // std dev = 1.501, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else if ( complex(A, J) )
%   | then return -0.07877675473109155;  // std dev = 6.25e-09, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | else return -0.07877675473109147;  // std dev = 5.74e-09, 197.000 (wgt'ed) examples reached here.  /* #neg=197 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(F, G) )
%   | | | then return 0.3113333358492935;  // std dev = 1.030, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | | else return 0.015719199480962908;  // std dev = 1.576, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.2529564220661534;  // std dev = 0.759, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return 0.03284046886757141;  // std dev = 7.232, 332.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=175 */
%   | else if ( phenotype(A, H), complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5758312177536028;  // std dev = 0.200, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.3058109249712263;  // std dev = 0.108, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, K), location(A, L) )
%   | | | then return 0.3921602123923205;  // std dev = 1.167, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.10927839819758882;  // std dev = 0.968, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.07324622576333747;  // std dev = 0.000, 378.000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(D, E) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.12258411730790138;  // std dev = 0.116, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.45875695992917703;  // std dev = 0.709, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.18402349318932656;  // std dev = 0.174, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.2796120484966665;  // std dev = 0.110, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B), interaction(G, A) )
%   | | | then return 0.3003188827747594;  // std dev = 0.928, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | | | else return -0.05259968461555128;  // std dev = 4.354, 158.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=51 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.0017256091241632124;  // std dev = 3.846, 105.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=52 */
%   | | | else return 0.10753468033705613;  // std dev = 5.051, 148.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=95 */
%   else return -0.06842697784420326;  // std dev = 0.000, 366.000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then if ( phenotype(A, E), phenotype(D, E) )
%   | | then if ( interaction(D, D), recursion_proteinclass(D, B) )
%   | | | then return 0.09961655049057151;  // std dev = 0.031, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.10897440613102485;  // std dev = 2.266, 51.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
%   | | else if ( complex(A, F), phenotype(A, G) )
%   | | | then return -0.08251000110080838;  // std dev = 1.033, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.0708515985081938;  // std dev = 1.400, 45.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=29 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(J, I), phenotype(J, K) )
%   | | | then return 0.08044585653392261;  // std dev = 6.088, 252.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=154 */
%   | | | else return 0.2964881378810187;  // std dev = 1.097, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.05453411182538902;  // std dev = 2.915, 57.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=31 */
%   | | | else return -0.06397571811875358;  // std dev = 2.596, 38.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   else return -0.06419184008202578;  // std dev = 8.38e-09, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
Inference time using transfer learning 4.467285871505737
Refined model CLL: -0.221848


******************************************
Best model found
******************************************
Results 

CLL : -0.226158 

AUC ROC : 0.981779 

AUC PR : 0.605726 

Precision : 0.196335 

Recall : 0.815217 

F1 : 0.316456 

Total Learning Time : 42.690903425216675 

Total Inference Time : 36.48376512527466 

Total revision time: 91.10314536094666
Best scored revision CLL: -0.221848


Results 

CLL : -0.226158 

AUC ROC : 0.981779 

AUC PR : 0.605726 

Precision : 0.196335 

Recall : 0.815217 

F1 : 0.316456 

Total Learning Time : 91.12020945549011 

Total Inference Time : 36.48376512527466 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos examples: 86
Target test neg examples: 10998

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.241286277770996
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4333521871320283;  // std dev = 0.494, 492.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048757;  // std dev = 1.18e-08, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.37100069679857484;  // std dev = 7.148, 209.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=120 */
%   | else return 0.4073249087585054;  // std dev = 7.968, 267.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=163 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1254446385283921;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
%   | | | else return -0.12544463852839155;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.32173791514289096;  // std dev = 0.491, 475.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360629;  // std dev = 0.000, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5737546406771962;  // std dev = 4.589, 274.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=251 */
%   | else return -0.20277215629276335;  // std dev = 5.249, 229.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=32 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return -0.10159632948783649;  // std dev = 0.000, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
%   | | | else return -0.10159632948783655;  // std dev = 0.000, 203.000 (wgt'ed) examples reached here.  /* #neg=203 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.2053940460250985;  // std dev = 5.978, 199.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=120 */
%   | else return 0.16999167393901196;  // std dev = 7.249, 283.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=163 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926043;  // std dev = 1.09e-08, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.150921971026073;  // std dev = 7.295, 293.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=174 */
%   | | else return 0.07895928667155318;  // std dev = 6.241, 208.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=109 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 6.83e-08, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | | else return -0.08518475138839678;  // std dev = 8.43e-08, 214.000 (wgt'ed) examples reached here.  /* #neg=214 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.10372747329250144;  // std dev = 0.425, 491.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, F) )
%   | | then return -0.07877675473109151;  // std dev = 8.36e-08, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | | else return -0.07877675473109147;  // std dev = 7.88e-08, 199.000 (wgt'ed) examples reached here.  /* #neg=199 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.0975993730263332;  // std dev = 7.208, 288.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=174 */
%   | else return 0.07853234946202108;  // std dev = 5.874, 190.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=109 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333727;  // std dev = 0.000, 389.000 (wgt'ed) examples reached here.  /* #neg=389 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06762383592128562;  // std dev = 9.304, 479.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0684269778442033;  // std dev = 0.000, 383.000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05123622622864544;  // std dev = 9.314, 479.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202572;  // std dev = 8.84e-09, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
Inference time using transfer learning 2.165522575378418
Parameter learned model CLL:-0.272598 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.494, 209, 283], 'false,true': [0.0, 0, 0], 'false,false': [1.18e-08, 347, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [7.148, 89, 120], 'true,false': [7.968, 104, 163], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 299, 0], 'false,false,false,false': [0.0, 49, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.491, 192, 283], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 385, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'complex(A, G)'}, {'true,true': [4.589, 23, 251], 'true,false': [5.249, 197, 32], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 170, 0], 'false,false,false,false': [0.0, 203, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [5.978, 79, 120], 'true,false': [7.249, 120, 163], 'false,true': [0.0, 0, 0], 'false,false': [1.09e-08, 337, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'complex(A, G)'}, {'true,true,true': [7.295, 119, 174], 'true,true,false': [6.241, 99, 109], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [6.83e-08, 151, 0], 'false,false,false': [8.43e-08, 214, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'complex(A, F)'}, {'true,true': [0.425, 208, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.36e-08, 156, 0], 'false,false,false': [7.88e-08, 199, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'complex(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [7.208, 114, 174], 'true,false': [5.874, 81, 109], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 389, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.304, 196, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 383, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.314, 196, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.84e-09, 357, 0]}]
{'': [0.24434447088373615, 1.4077755931846366e-16], 'false': [nan, 1.4077755931846366e-16]}
{'': [0.2410626015111864, -1.1740289455806254e-16], 'true': [0.24449989698038418, 0.23779264683191292], 'false': [nan, -1.1740289455806254e-16], 'false,false': [nan, -1.1740289455806254e-16], 'false,false,false': [-1.0693786993044986e-16, -3.172065784643304e-17]}
{'': [0.24095306673811975, -2.3069569342860397e-17], 'false': [nan, -2.3069569342860397e-17], 'false,false': [nan, -2.3069569342860397e-17]}
{'': [0.2461727603942041, 7.500702471998377e-17], 'true': [0.07684144177465786, 0.120308972404838], 'false': [nan, 7.500702471998377e-17], 'false,false': [nan, 7.500702471998377e-17], 'false,false,false': [-7.706253935633439e-17, -8.750526302464288e-17]}
{'': [0.1834758682539585, 1.1859949224482385e-16], 'true': [0.179598230342205, 0.18568509367731192], 'false': [nan, 1.1859949224482385e-16]}
{'': [0.185223097682306, 4.1367214068225013e-17], 'true': [0.185223097682306, nan], 'true,true': [0.18164745107543498, 0.18723132729247974], 'false': [nan, 4.1367214068225013e-17], 'false,false': [3.088037551937521e-17, 3.320293157757477e-17]}
{'': [0.18082016413209523, 2.752102145549684e-17], 'true': [0.18082016413209523, nan], 'false': [nan, 2.752102145549684e-17], 'false,false': [4.483592984063132e-17, 3.1242456974376264e-17]}
{'': [0.18097136937687344, -6.849705036247752e-18], 'true': [0.18039684564317182, 0.1816231828909359], 'false': [nan, -6.849705036247752e-18], 'false,false': [nan, -6.849705036247752e-18]}
{'': [0.18071565457952218, -1.0551466865889216e-16], 'true': [0.18071565457952218, nan], 'false': [nan, -1.0551466865889216e-16], 'false,false': [nan, -1.0551466865889216e-16]}
{'': [0.1810961428289248, 7.712473672466073e-17], 'true': [0.1810961428289248, nan], 'false': [nan, 7.712473672466073e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;complex(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;complex(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;complex(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 66.59157729148865
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return 0.7845055242467955;  // std dev = 4.195, 258.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=239 */
%   | | | else return 0.03256753975067472;  // std dev = 4.977, 172.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=30 */
%   | | else return -0.14185106490048766;  // std dev = 5.37e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.14185106490048752;  // std dev = 2.33e-07, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( complex(A, F), complex(E, F) )
%   | | | then return 0.7340940493488342;  // std dev = 2.38e-07, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else return 0.4956169780242984;  // std dev = 2.673, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.1571435269830009;  // std dev = 0.244, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0.36038042278272253;  // std dev = 7.711, 309.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=179 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.595043932169461;  // std dev = 2.092, 23.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=17 */
%   | | | else return -0.1438201902690794;  // std dev = 0.019, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.854138081759733;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.517664536201329;  // std dev = 1.863, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   else return -0.12544463852839216;  // std dev = 0.000, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), location(A, E) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.5927813624784913;  // std dev = 0.109, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.1435028122853942;  // std dev = 1.306, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.6261195451406864;  // std dev = 0.179, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( interaction(A, F), interaction(F, F) )
%   | | then if ( complex(F, G), complex(A, G) )
%   | | | then return 0.03809970009224415;  // std dev = 1.823, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.2484690296070135;  // std dev = 3.423, 69.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=35 */
%   | | else if ( interaction(H, A), location(H, I) )
%   | | | then return 0.2870206861544753;  // std dev = 7.403, 310.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=177 */
%   | | | else return 0.4449667645193639;  // std dev = 2.579, 33.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=23 */
%   else return -0.11231637819360628;  // std dev = 0.000, 388.000 (wgt'ed) examples reached here.  /* #neg=388 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( interaction(E, D) )
%   | | | then return 0.4845297177964643;  // std dev = 0.298, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.12586433565979416;  // std dev = 1.070, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.4870664564131127;  // std dev = 0.106, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.6270229526252286;  // std dev = 0.180, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.28670990536416113;  // std dev = 7.627, 359.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=230 */
%   | | | else return -0.20355662805056923;  // std dev = 0.338, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.22102227809616323;  // std dev = 1.376, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return -0.14414266754547916;  // std dev = 1.856, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   else return -0.10159632948783624;  // std dev = 6.84e-09, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( interaction(D, F) )
%   | | | then return 0.3570354819629778;  // std dev = 0.235, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.0653957445352288;  // std dev = 0.533, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.3667005052846556;  // std dev = 0.073, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5015647468379932;  // std dev = 0.181, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.2673495315391109;  // std dev = 2.355, 47.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=35 */
%   | | | else return 0.025043744595341394;  // std dev = 4.051, 122.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=43 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.11856456725667533;  // std dev = 3.029, 58.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=30 */
%   | | | else return 0.23685280174405665;  // std dev = 5.860, 208.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=134 */
%   else return -0.09269127618926051;  // std dev = 1.98e-07, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, D) )
%   | | | then return 0.35393143027557017;  // std dev = 3.521, 160.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=143 */
%   | | | else return -0.30768445080922696;  // std dev = 0.575, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.16027998367981094;  // std dev = 0.155, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.2183157502564953;  // std dev = 0.018, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( enzyme(A, I), location(A, J) )
%   | | | then return 0.0930145667509679;  // std dev = 1.254, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.24408729418460137;  // std dev = 1.519, 24.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=17 */
%   | | else if ( location(A, K), interaction(L, A) )
%   | | | then return 0.10829007997218462;  // std dev = 5.057, 174.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=96 */
%   | | | else return 0.0070941550468071315;  // std dev = 3.071, 41.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=19 */
%   else return -0.08518475138839678;  // std dev = 6.32e-09, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B), complex(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.18515428423440244;  // std dev = 0.021, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.29226810549743476;  // std dev = 0.167, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(A, D), interaction(D, D) )
%   | | | then return -0.07144327780406895;  // std dev = 1.673, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.06138597914943045;  // std dev = 5.784, 258.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=136 */
%   | else if ( interaction(A, F), interaction(F, G) )
%   | | then if ( phenotype(G, H) )
%   | | | then return 0.11575113942051614;  // std dev = 2.974, 65.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=35 */
%   | | | else return 0.29059980114798317;  // std dev = 1.292, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.12214318476594331;  // std dev = 3.089, 81.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=48 */
%   | | | else return 0.04922010112915383;  // std dev = 2.510, 39.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=19 */
%   else return -0.07877675473109143;  // std dev = 4.56e-09, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, A), location(A, F) )
%   | | | then return 0.16645549733724066;  // std dev = 0.062, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.2603744413053505;  // std dev = 0.176, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( phenotype(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.2824370855506513;  // std dev = 2.955, 136.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=122 */
%   | | | else return -0.2324966632971053;  // std dev = 0.772, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.22008990587505842;  // std dev = 0.114, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.3164233847447793;  // std dev = 0.090, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.12072321451746813;  // std dev = 2.803, 55.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=32 */
%   | | | else return -4.043953432379869E-4;  // std dev = 5.569, 183.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=88 */
%   else return -0.07324622576333768;  // std dev = 0.000, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B), interaction(A, D) )
%   | | then if ( phenotype(A, F), phenotype(D, G) )
%   | | | then return 0.1485677115559148;  // std dev = 1.178, 36.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   | | | else return 0.2647643345609667;  // std dev = 0.358, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( interaction(E, A), interaction(A, H) )
%   | | | then return -0.07848931053312135;  // std dev = 1.989, 65.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | | | else return 0.05835764468801049;  // std dev = 5.759, 268.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=154 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.17937997953152368;  // std dev = 2.913, 71.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=49 */
%   | | | else return -0.22374880976691586;  // std dev = 0.087, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.07325517208538602;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.2012748768874622;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.06842697784420318;  // std dev = 0.000, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), interaction(E, F) )
%   | | then if ( recursion_proteinclass(F, B), phenotype(E, G) )
%   | | | then return 0.10215098766766148;  // std dev = 1.586, 39.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=34 */
%   | | | else return -0.051927711893451585;  // std dev = 3.795, 147.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=62 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.15030974182391937;  // std dev = 1.079, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | | else return 0.029611988030983083;  // std dev = 1.580, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   | else if ( complex(A, I), interaction(A, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.19340963173284678;  // std dev = 0.186, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.001960224968107048;  // std dev = 2.563, 46.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=22 */
%   | | else if ( interaction(A, K), interaction(K, A) )
%   | | | then return 0.0072927500263742055;  // std dev = 1.172, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.13978163120226314;  // std dev = 4.719, 164.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=110 */
%   else return -0.0641918400820257;  // std dev = 1.71e-07, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
Inference time using transfer learning 5.193293809890747
Refined model CLL: -0.198781


******************************************
Best model found
******************************************
Results 

CLL : -0.18262 

AUC ROC : 0.991388 

AUC PR : 0.464373 

Precision : 0.167653 

Recall : 0.988372 

F1 : 0.286678 

Total Learning Time : 66.59157729148865 

Total Inference Time : 64.75313019752502 

Total revision time: 144.6999773979187
Best scored revision CLL: -0.198781


Results 

CLL : -0.18262 

AUC ROC : 0.991388 

AUC PR : 0.464373 

Precision : 0.167653 

Recall : 0.988372 

F1 : 0.286678 

Total Learning Time : 144.71704149246216 

Total Inference Time : 64.75313019752502 

