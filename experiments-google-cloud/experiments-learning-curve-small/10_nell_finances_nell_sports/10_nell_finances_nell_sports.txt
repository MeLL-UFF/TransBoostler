Starting experiment 10_nell_finances_nell_sports 

Loading pre-trained trees.
Starting experiments for fasttext using euclidean 

Run: 1

 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 264
Target train neg examples: 106660

Target test facts examples: 9691
Target test pos examples: 133
Target test neg examples: 53331

Amount of data: 5
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.1126832962036133
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysinleague(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.4136573287083126;  // std dev = 0.484, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.3366053739648666;  // std dev = 0.484, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteledsportsteam(D, A) )
%   | then if ( teamplaysagainstteam(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(F, G) )
%   | | | then return 0.3046422521153566;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.23797558544868994;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(G, A) )
%   | | then return 0.2317812951205073;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamplaysagainstteam(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18142180583020853;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15078489357971595;  // std dev = 0.483, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, A), athleteledsportsteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( teamplaysagainstteam(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11314400826726395;  // std dev = 1.367, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08496425748270268;  // std dev = 0.483, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysinleague(C, D), teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.17817544815075823;  // std dev = 0.875, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(G, H) )
%   | | then return -0.05025528130880497;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.0641918400820262;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.1352405258443847;  // std dev = 0.874, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( athleteplaysforteam(E, A), teamplaysinleague(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0377895254625904;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
Inference time using transfer learning 28.578027963638306
Parameter learned model CLL:-0.528292 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, A)', 'false,false,false': 'teamplaysagainstteam(B, F)'}, {'true': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.369, 3, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysinleague(D, A)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.484, 3, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.484, 3, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteledsportsteam(D, A)', 'false,true': 'teamplaysagainstteam(B, E)', 'false,true,false': 'athleteledsportsteam(F, G)', 'false,false': 'teamplaysagainstteam(B, H)', 'false,false,false': 'teamplaysinleague(I, A)'}, {'true': [0.0, 2, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.816, 1, 2], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.095, 2, 3]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(G, A)', 'false,false,false': 'teamplaysagainstteam(B, H)'}, {'true': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.816, 1, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.095, 2, 3]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)'}, {'true,true': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.483, 3, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(C, A), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysagainstteam(B, G)', 'false,false,false': 'teamplaysinleague(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 2, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.367, 3, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)'}, {'true': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.483, 3, 5]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'teamplaysinleague(C, D), teamplaysagainstteam(B, D)', 'true,false': 'teamplaysagainstteam(B, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysinleague(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.875, 1, 3], 'false,true': [0.0, 0, 0], 'false,false,true': [1.0, 2, 2], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteplaysforteam(D, A)', 'false,false': 'athleteplaysforteam(E, A), teamplaysinleague(E, F)', 'false,false,false': 'teamplaysagainstteam(B, G)'}, {'true': [0.0, 2, 0], 'false,true': [0.874, 1, 3], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.0, 2, 2]}]
{'': [0.0, 0.23437499999999983], 'false': [nan, 0.23437499999999983], 'false,false': [nan, 0.23437499999999983], 'false,false,false': [nan, 0.23437499999999983]}
{'': [0.0, 0.2343749999999998], 'false': [nan, 0.2343749999999998], 'false,false': [0.2343749999999998, nan], 'true': [nan, 0.0]}
{'': [0.0, 0.234375], 'false': [nan, 0.234375], 'false,false': [0.234375, nan], 'true': [0.0, nan]}
{'': [0.0, 0.23437500000000006], 'false': [0.22222222222222224, 0.24000000000000005], 'false,false': [nan, 0.24000000000000005], 'false,false,false': [nan, 0.24000000000000005], 'false,true': [nan, 0.22222222222222224], 'false,true,false': [0.22222222222222224, nan]}
{'': [0.0, 0.23392772665245357], 'false': [nan, 0.23392772665245357], 'false,false': [0.2222222222222222, 0.23999999999999994], 'false,false,false': [nan, 0.23999999999999994]}
{'': [0.0, 0.23366249876874987], 'false': [nan, 0.23366249876874987], 'true': [0.0, nan]}
{'': [nan, 0.19282296130724702], 'false': [0.0, 0.23366198578008457], 'false,false': [nan, 0.23366198578008457], 'false,false,false': [nan, 0.23366198578008457]}
{'': [0.0, 0.23366541891930936], 'false': [nan, 0.23366541891930936]}
{'': [0.14101391671299227, 0.25], 'false': [nan, 0.25], 'false,false': [0.25, nan], 'true': [nan, 0.14101391671299227], 'true,false': [0.0, 0.19124995623395497]}
{'': [0.0, 0.22805075237714395], 'false': [0.19113180542664068, 0.25], 'false,false': [nan, 0.25], 'false,false,false': [nan, 0.25]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
8;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
8;true;teamplaysagainstteam(B, E).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true


Refining candidate
***************************
Model training time 1.3619983196258545
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.09745114910920255;  // std dev = 0.192, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return 0.04215844012473413;  // std dev = 0.221, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.0641918400820262;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.14327972246364123;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.07241128070110026;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning 3.956989288330078
Refined model CLL: -0.101168


******************************************
Best model found
******************************************
Results 

CLL : -0.102906 

AUC ROC : 0.991018 

AUC PR : 0.133988 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 1.3619983196258545 

Total Inference Time : 0.5989165306091309 

Total revision time: 3.7692294120788574
Best scored revision CLL: -0.101168


Results 

CLL : -0.102906 

AUC ROC : 0.991018 

AUC PR : 0.133988 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 3.8172013759613037 

Total Inference Time : 0.5989165306091309 

Amount of data: 10
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.2547643184661865
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5248156017661789;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysinleague(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.448295606241962;  // std dev = 0.471, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.36236334632262296;  // std dev = 0.471, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteledsportsteam(D, A) )
%   | then if ( teamplaysagainstteam(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(F, G) )
%   | | | then return 0.44742052036325203;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16964274258547427;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(G, A) )
%   | | then return 0.33760946040177814;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( teamplaysagainstteam(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12874663260452868;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15975103306488794;  // std dev = 0.458, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, A), athleteledsportsteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( teamplaysagainstteam(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12050113036396697;  // std dev = 1.774, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09123604136677198;  // std dev = 0.458, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysinleague(C, D), teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.08080469421659697;  // std dev = 1.161, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( teamplaysinleague(G, H) )
%   | | then return 0.059435155631770736;  // std dev = 1.342, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.062465910946021684;  // std dev = 1.162, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( athleteplaysforteam(E, A), teamplaysinleague(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04497762714624767;  // std dev = 1.342, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
Inference time using transfer learning 28.6265709400177
Parameter learned model CLL:-0.475901 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, A)', 'false,false,false': 'teamplaysagainstteam(B, F)'}, {'true': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.826, 5, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysinleague(D, A)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.471, 5, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [0.0, 5, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.471, 5, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteledsportsteam(D, A)', 'false,true': 'teamplaysagainstteam(B, E)', 'false,true,false': 'athleteledsportsteam(F, G)', 'false,false': 'teamplaysagainstteam(B, H)', 'false,false,false': 'teamplaysinleague(I, A)'}, {'true': [0.0, 5, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.913, 1, 5], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.491, 4, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(G, A)', 'false,false,false': 'teamplaysagainstteam(B, H)'}, {'true': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.913, 1, 5], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.491, 4, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)'}, {'true,true': [0.0, 5, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.458, 5, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(C, A), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysagainstteam(B, G)', 'false,false,false': 'teamplaysinleague(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 5, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.774, 5, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)'}, {'true': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.458, 5, 10]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'teamplaysinleague(C, D), teamplaysagainstteam(B, D)', 'true,false': 'teamplaysagainstteam(B, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysinleague(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 3, 0], 'true,false,false': [1.161, 2, 5], 'false,true': [0.0, 2, 0], 'false,false,true': [1.342, 3, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteplaysforteam(D, A)', 'false,false': 'athleteplaysforteam(E, A), teamplaysinleague(E, F)', 'false,false,false': 'teamplaysagainstteam(B, G)'}, {'true': [0.0, 5, 0], 'false,true': [1.162, 2, 5], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.342, 3, 5]}]
{'': [-2.7755575615628915e-18, 0.22222222222222215], 'false': [nan, 0.22222222222222215], 'false,false': [nan, 0.22222222222222215], 'false,false,false': [nan, 0.22222222222222215]}
{'': [0.0, 0.22222222222222224], 'false': [nan, 0.22222222222222224], 'false,false': [0.22222222222222224, nan], 'true': [nan, 0.0]}
{'': [0.0, 0.22222222222222215], 'false': [nan, 0.22222222222222215], 'false,false': [0.22222222222222215, nan], 'true': [0.0, nan]}
{'': [0.0, 0.2222222222222223], 'false': [0.13888888888888887, 0.24691358024691365], 'false,false': [nan, 0.24691358024691365], 'false,false,false': [nan, 0.24691358024691365], 'false,true': [nan, 0.13888888888888887], 'false,true,false': [0.13888888888888887, nan]}
{'': [0.0, 0.21417338710421507], 'false': [nan, 0.21417338710421507], 'false,false': [0.13888888888888887, 0.24691358024691368], 'false,false,false': [nan, 0.24691358024691368]}
{'': [0.0, 0.20961131431537264], 'false': [nan, 0.20961131431537264], 'true': [0.0, nan]}
{'': [nan, 0.16473849544442584], 'false': [-1.3877787807814458e-18, 0.2097234083872446], 'false,false': [nan, 0.2097234083872446], 'false,false,false': [nan, 0.2097234083872446]}
{'': [-6.938893903907229e-19, 0.20988204071370584], 'false': [nan, 0.20988204071370584]}
{'': [0.1395527103475982, 0.1826341774674503], 'false': [0.0, 0.22502297679890743], 'false,false': [0.22502297679890743, nan], 'true': [nan, 0.1395527103475982], 'true,false': [-5.782411586589357e-19, 0.19267998719846455]}
{'': [0.0, 0.21014060928984565], 'false': [0.19284541935758345, 0.22513117511445305], 'false,false': [nan, 0.22513117511445305], 'false,false,false': [nan, 0.22513117511445305]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
8;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
8;true;teamplaysagainstteam(B, E).;true;true
8;false;teamplaysagainstteam(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true


Refining candidate
***************************
Model training time 1.8848755359649658
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteledsportsteam(E, A), athleteplayssport(E, F) )
%   | | then return 0.15274385809367097;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.005296634135088509;  // std dev = 0.181, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamplaysagainstteam(B, G) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( athleteplayssport(H, B) )
%   | | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.13581229339721346;  // std dev = 0.017, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.06602125729038495;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning 4.086158275604248
Refined model CLL: -0.095899


******************************************
Best model found
******************************************
Results 

CLL : -0.09961 

AUC ROC : 0.989765 

AUC PR : 0.118203 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 1.8848755359649658 

Total Inference Time : 0.6807518005371094 

Total revision time: 4.579298257827759
Best scored revision CLL: -0.095899


Results 

CLL : -0.09961 

AUC ROC : 0.989765 

AUC PR : 0.118203 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 4.627270221710205 

Total Inference Time : 0.6807518005371094 

Amount of data: 15
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.3748760223388672
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5724346493852266;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysinleague(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.48767788391726324;  // std dev = 0.452, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.39125696209925326;  // std dev = 0.452, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783627;  // std dev = 1.32e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteledsportsteam(D, A) )
%   | then if ( teamplaysagainstteam(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(F, G) )
%   | | | then return 0.46128544050277503;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20167005588739045;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(G, A) )
%   | | then return 0.3468660140823019;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( teamplaysagainstteam(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15205874590134363;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17048696961633963;  // std dev = 0.440, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, A), athleteledsportsteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( teamplaysagainstteam(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1290894963161735;  // std dev = 2.016, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.098482587998499;  // std dev = 0.440, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysinleague(C, D), teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.12865783680814852;  // std dev = 1.241, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysinleague(G, H) )
%   | | then return 0.027580462983386133;  // std dev = 1.575, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.0641918400820262;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.10118715743077826;  // std dev = 1.242, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else if ( athleteplaysforteam(E, A), teamplaysinleague(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02105556066315286;  // std dev = 1.575, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
Inference time using transfer learning 28.567331790924072
Parameter learned model CLL:-0.422159 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, A)', 'false,false,false': 'teamplaysagainstteam(B, F)'}, {'true': [0.0, 9, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.07, 6, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysinleague(D, A)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 9, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.452, 6, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [0.0, 9, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.452, 6, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteledsportsteam(D, A)', 'false,true': 'teamplaysagainstteam(B, E)', 'false,true,false': 'athleteledsportsteam(F, G)', 'false,false': 'teamplaysagainstteam(B, H)', 'false,false,false': 'teamplaysinleague(I, A)'}, {'true': [1.32e-09, 9, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.935, 1, 7], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.754, 5, 8]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(G, A)', 'false,false,false': 'teamplaysagainstteam(B, H)'}, {'true': [0.0, 9, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.935, 1, 7], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.754, 5, 8]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)'}, {'true,true': [3.73e-09, 9, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.44, 6, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(C, A), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysagainstteam(B, G)', 'false,false,false': 'teamplaysinleague(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 9, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.016, 6, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)'}, {'true': [2.63e-09, 9, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.44, 6, 15]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'teamplaysinleague(C, D), teamplaysagainstteam(B, D)', 'true,false': 'teamplaysagainstteam(B, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysinleague(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [1.86e-09, 6, 0], 'true,false,false': [1.241, 2, 8], 'false,true': [0.0, 3, 0], 'false,false,true': [1.575, 4, 7], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteplaysforteam(D, A)', 'false,false': 'athleteplaysforteam(E, A), teamplaysinleague(E, F)', 'false,false,false': 'teamplaysagainstteam(B, G)'}, {'true': [2.63e-09, 9, 0], 'false,true': [1.242, 2, 8], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.575, 4, 7]}]
{'': [-9.25185853854297e-18, 0.20408163265306084], 'false': [nan, 0.20408163265306084], 'false,false': [nan, 0.20408163265306084], 'false,false,false': [nan, 0.20408163265306084]}
{'': [0.0, 0.2040816326530611], 'false': [nan, 0.2040816326530611], 'false,false': [0.2040816326530611, nan], 'true': [nan, 0.0]}
{'': [-1.5419764230904951e-18, 0.20408163265306142], 'false': [nan, 0.20408163265306142], 'false,false': [0.20408163265306142, nan], 'true': [-1.5419764230904951e-18, nan]}
{'': [3.0839528461809902e-18, 0.20408163265306126], 'false': [0.10937500000000006, 0.23668639053254428], 'false,false': [nan, 0.23668639053254428], 'false,false,false': [nan, 0.23668639053254428], 'false,true': [nan, 0.10937500000000006], 'false,true,false': [0.10937500000000006, nan]}
{'': [0.0, 0.19713644280258927], 'false': [nan, 0.19713644280258927], 'false,false': [0.10937499999999996, 0.23668639053254442], 'false,false,false': [nan, 0.23668639053254442]}
{'': [1.5419764230904951e-18, 0.19335164454537215], 'false': [nan, 0.19335164454537215], 'true': [1.5419764230904951e-18, nan]}
{'': [nan, 0.1445639187300985], 'false': [0.0, 0.1935573704028073], 'false,false': [nan, 0.1935573704028073], 'false,false,false': [nan, 0.1935573704028073]}
{'': [7.709882115452476e-19, 0.19378279279507257], 'false': [nan, 0.19378279279507257]}
{'': [0.10535282247153106, 0.17871958050792872], 'false': [-5.782411586589357e-19, 0.22548612099119056], 'false,false': [0.22548612099119056, nan], 'true': [nan, 0.10535282247153106], 'true,false': [5.782411586589357e-19, 0.15399860689199288]}
{'': [7.709882115452476e-19, 0.19314524940376157], 'false': [0.15415987574313536, 0.2255288444716113], 'false,false': [nan, 0.2255288444716113], 'false,false,false': [nan, 0.2255288444716113]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
8;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
8;true;teamplaysagainstteam(B, E).;true;true
8;false;teamplaysagainstteam(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true


Refining candidate
***************************
Model training time 1.9927270412445068
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.4175135841583098;  // std dev = 4.71e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2551722425694894;  // std dev = 2.36e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527741;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( teamplaysagainstteam(A, E), teamalsoknownas(F, E) )
%   | | then return 0.15274385809367072;  // std dev = 7.45e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.005296634135088435;  // std dev = 0.181, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamplaysagainstteam(B, G) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplayssport(H, B) )
%   | | then return 0.15274385809367072;  // std dev = 7.45e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.0641918400820262;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.13521053893414603;  // std dev = 0.017, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.06571635442232517;  // std dev = 0.005, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning 4.070091485977173
Refined model CLL: -0.095479


******************************************
Best model found
******************************************
Results 

CLL : -0.100528 

AUC ROC : 0.989969 

AUC PR : 0.124141 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 1.9927270412445068 

Total Inference Time : 0.7035789489746094 

Total revision time: 4.863088846206665
Best scored revision CLL: -0.095479


Results 

CLL : -0.100528 

AUC ROC : 0.989969 

AUC PR : 0.124141 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 4.911060810089111 

Total Inference Time : 0.7035789489746094 

Amount of data: 20
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.4413669109344482
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.572434649385226;  // std dev = 2.390, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysinleague(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.48767788391726324;  // std dev = 0.452, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.39125696209925315;  // std dev = 0.452, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteledsportsteam(D, A) )
%   | then if ( teamplaysagainstteam(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(F, G) )
%   | | | then return 0.46128544050277526;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.23628544050277558;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(G, A) )
%   | | then return 0.346866014082302;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( teamplaysagainstteam(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1780567625629242;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.08518475138839687;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1702984098429161;  // std dev = 0.444, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, A), athleteledsportsteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.07877675473109172;  // std dev = 1.32e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( teamplaysagainstteam(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12877887803386692;  // std dev = 2.350, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09812932588445071;  // std dev = 0.444, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysinleague(C, D), teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.12450457749358608;  // std dev = 1.243, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( teamplaysinleague(G, H) )
%   | | then return 0.048056512087047434;  // std dev = 1.987, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.06419184008202619;  // std dev = 5.89e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.09802107221913456;  // std dev = 1.244, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else if ( athleteplaysforteam(E, A), teamplaysinleague(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.036804105639518574;  // std dev = 1.987, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
Inference time using transfer learning 28.450236082077026
Parameter learned model CLL:-0.428951 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, A)', 'false,false,false': 'teamplaysagainstteam(B, F)'}, {'true': [0.0, 12, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.39, 8, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysinleague(D, A)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [5.27e-09, 12, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.452, 8, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [9.13e-09, 12, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.452, 8, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteledsportsteam(D, A)', 'false,true': 'teamplaysagainstteam(B, E)', 'false,true,false': 'athleteledsportsteam(F, G)', 'false,false': 'teamplaysagainstteam(B, H)', 'false,false,false': 'teamplaysinleague(I, A)'}, {'true': [0.0, 12, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.935, 1, 7], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.133, 7, 13]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(G, A)', 'false,false,false': 'teamplaysagainstteam(B, H)'}, {'true': [0.0, 12, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.935, 1, 7], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.133, 7, 13]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)'}, {'true,true': [5.27e-09, 12, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.444, 8, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(C, A), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysagainstteam(B, G)', 'false,false,false': 'teamplaysinleague(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [1.32e-09, 12, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.35, 8, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)'}, {'true': [3.73e-09, 12, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.444, 8, 20]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'teamplaysinleague(C, D), teamplaysagainstteam(B, D)', 'true,false': 'teamplaysagainstteam(B, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysinleague(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.63e-09, 7, 0], 'true,false,false': [1.243, 2, 8], 'false,true': [1.86e-09, 5, 0], 'false,false,true': [1.987, 6, 12], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteplaysforteam(D, A)', 'false,false': 'athleteplaysforteam(E, A), teamplaysinleague(E, F)', 'false,false,false': 'teamplaysagainstteam(B, G)'}, {'true': [5.89e-09, 12, 0], 'false,true': [1.244, 2, 8], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.987, 6, 12]}]
{'': [-1.1564823173178714e-17, 0.20408163265306145], 'false': [nan, 0.20408163265306145], 'false,false': [nan, 0.20408163265306145], 'false,false,false': [nan, 0.20408163265306145]}
{'': [2.3129646346357427e-18, 0.20408163265306103], 'false': [nan, 0.20408163265306103], 'false,false': [0.20408163265306103, nan], 'true': [nan, 2.3129646346357427e-18]}
{'': [6.938893903907228e-18, 0.20408163265306167], 'false': [nan, 0.20408163265306167], 'false,false': [0.20408163265306167, nan], 'true': [6.938893903907228e-18, nan]}
{'': [0.0, 0.20408163265306126], 'false': [0.10937500000000008, 0.2275000000000001], 'false,false': [nan, 0.2275000000000001], 'false,false,false': [nan, 0.2275000000000001], 'false,true': [nan, 0.10937500000000008], 'false,true,false': [0.10937500000000008, nan]}
{'': [2.3129646346357427e-18, 0.19956562518337398], 'false': [nan, 0.19956562518337398], 'false,false': [0.10937500000000004, 0.22749999999999995], 'false,false,false': [nan, 0.22749999999999995]}
{'': [2.3129646346357427e-18, 0.1971209741514326], 'false': [nan, 0.1971209741514326], 'true': [2.3129646346357427e-18, nan]}
{'': [nan, 0.14713378676555583], 'false': [1.1564823173178713e-18, 0.19726732174305547], 'false,false': [nan, 0.19726732174305547], 'false,false,false': [nan, 0.19726732174305547]}
{'': [1.1564823173178713e-18, 0.19742269285988728], 'false': [nan, 0.19742269285988728]}
{'': [0.09994210049808304, 0.1739828561238481], 'false': [6.938893903907229e-19, 0.21936177435054321], 'false,false': [0.21936177435054321, nan], 'true': [nan, 0.09994210049808304], 'true,false': [9.912705577010326e-19, 0.1545746240634819]}
{'': [2.8912057932946786e-18, 0.19716610593277675], 'false': [0.15473593694399496, 0.2194000231100806], 'false,false': [nan, 0.2194000231100806], 'false,false,false': [nan, 0.2194000231100806]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
8;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
8;true;teamplaysagainstteam(B, E).;true;true
8;false;teamplaysagainstteam(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true


Refining candidate
***************************
Model training time 2.1122639179229736
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.41751358415830986;  // std dev = 5.16e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926097;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.3207118471601496;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.08518475138839687;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.25517224256948945;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07877675473109172;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527744;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( teamplaysagainstteam(A, E), teamalsoknownas(F, E) )
%   | | then return 0.15274385809367072;  // std dev = 7.45e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.005296634135088435;  // std dev = 0.181, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamplaysagainstteam(B, G) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( athleteplayssport(H, B) )
%   | | then return 0.15274385809367078;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.06419184008202619;  // std dev = 5.89e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.13490966170261232;  // std dev = 0.018, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.06533522583725042;  // std dev = 0.006, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning 4.147727966308594
Refined model CLL: -0.095269


******************************************
Best model found
******************************************
Results 

CLL : -0.100535 

AUC ROC : 0.989969 

AUC PR : 0.124141 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 2.1122639179229736 

Total Inference Time : 0.659027099609375 

Total revision time: 4.99515175819397
Best scored revision CLL: -0.095269


Results 

CLL : -0.100535 

AUC ROC : 0.989969 

AUC PR : 0.124141 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 5.043123722076416 

Total Inference Time : 0.659027099609375 

Amount of data: 25
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.5967514514923096
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5934430527465704;  // std dev = 2.572, 34.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysinleague(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.5049832912932651;  // std dev = 0.441, 34.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.11231637819360635;  // std dev = 1.39e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.4038306972090013;  // std dev = 0.441, 34.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783631;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( athleteledsportsteam(D, A) )
%   | then if ( teamplaysagainstteam(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(F, G) )
%   | | | then return 0.3738906718319205;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.28222400516525376;  // std dev = 2.227, 24.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=17 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926094;  // std dev = 2.28e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(G, A) )
%   | | then return 0.2809722651605241;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( teamplaysagainstteam(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2122129938660086;  // std dev = 2.227, 24.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=17 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.08518475138839685;  // std dev = 1.05e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17471162240234986;  // std dev = 0.440, 34.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, A), athleteledsportsteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( teamplaysagainstteam(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13228622822510924;  // std dev = 2.565, 34.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10112691030677304;  // std dev = 0.440, 34.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysinleague(C, D), teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.11598485485053966;  // std dev = 1.538, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( teamplaysinleague(G, H) )
%   | | then return 0.05145533628547201;  // std dev = 2.044, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.06419184008202619;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.09088482566903235;  // std dev = 1.538, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | else if ( athleteplaysforteam(E, A), teamplaysinleague(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03982144684506775;  // std dev = 2.045, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
Inference time using transfer learning 28.869463443756104
Parameter learned model CLL:-0.413882 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, A)', 'false,false,false': 'teamplaysagainstteam(B, F)'}, {'true': [0.0, 16, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.572, 9, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysinleague(D, A)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [7.45e-09, 16, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.441, 9, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [1.39e-08, 16, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.441, 9, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteledsportsteam(D, A)', 'false,true': 'teamplaysagainstteam(B, E)', 'false,true,false': 'athleteledsportsteam(F, G)', 'false,false': 'teamplaysagainstteam(B, H)', 'false,false,false': 'teamplaysinleague(I, A)'}, {'true': [0.0, 16, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.265, 2, 8], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.227, 7, 17]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(G, A)', 'false,false,false': 'teamplaysagainstteam(B, H)'}, {'true': [2.28e-09, 16, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.265, 2, 8], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.227, 7, 17]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)'}, {'true,true': [1.05e-08, 16, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.44, 9, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(C, A), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysagainstteam(B, G)', 'false,false,false': 'teamplaysinleague(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 16, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.565, 9, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)'}, {'true': [0.0, 16, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.44, 9, 25]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'teamplaysinleague(C, D), teamplaysagainstteam(B, D)', 'true,false': 'teamplaysagainstteam(B, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysinleague(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 9, 0], 'true,false,false': [1.538, 3, 11], 'false,true': [2.63e-09, 7, 0], 'false,false,true': [2.044, 6, 14], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteplaysforteam(D, A)', 'false,false': 'athleteplaysforteam(E, A), teamplaysinleague(E, F)', 'false,false,false': 'teamplaysagainstteam(B, G)'}, {'true': [7.45e-09, 16, 0], 'false,true': [1.538, 3, 11], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.045, 6, 14]}]
{'': [-6.938893903907228e-18, 0.1946366782006932], 'false': [nan, 0.1946366782006932], 'false,false': [nan, 0.1946366782006932], 'false,false,false': [nan, 0.1946366782006932]}
{'': [3.469446951953614e-18, 0.19463667820069183], 'false': [nan, 0.19463667820069183], 'false,false': [0.19463667820069183, nan], 'true': [nan, 3.469446951953614e-18]}
{'': [1.214306433183765e-17, 0.19463667820069178], 'false': [nan, 0.19463667820069178], 'false,false': [0.19463667820069178, nan], 'true': [1.214306433183765e-17, nan]}
{'': [-6.938893903907228e-18, 0.1946366782006921], 'false': [0.16000000000000003, 0.20659722222222232], 'false,false': [nan, 0.20659722222222232], 'false,false,false': [nan, 0.20659722222222232], 'false,true': [nan, 0.16000000000000003], 'false,true,false': [0.16000000000000003, nan]}
{'': [5.204170427930421e-18, 0.1938737147981678], 'false': [nan, 0.1938737147981678], 'false,false': [0.1599999999999999, 0.20659722222222224], 'false,false,false': [nan, 0.20659722222222224]}
{'': [6.938893903907228e-18, 0.1934608880061698], 'false': [nan, 0.1934608880061698], 'true': [6.938893903907228e-18, nan]}
{'': [nan, 0.1412651351394935], 'false': [-1.734723475976807e-18, 0.1934876193055747], 'false,false': [nan, 0.1934876193055747], 'false,false,false': [nan, 0.1934876193055747]}
{'': [0.0, 0.19351581695434897], 'false': [nan, 0.19351581695434897]}
{'': [0.11098500151192514, 0.15756641880749192], 'false': [9.912705577010326e-19, 0.20898865114242512], 'false,false': [0.20898865114242512, nan], 'true': [nan, 0.11098500151192514], 'true,false': [0.0, 0.1690251322082029]}
{'': [3.469446951953614e-18, 0.193158791540271], 'false': [0.1689872776498591, 0.20900518769894538], 'false,false': [nan, 0.20900518769894538], 'false,false,false': [nan, 0.20900518769894538]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
8;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
8;true;teamplaysagainstteam(B, E).;true;true
8;false;teamplaysagainstteam(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true


Refining candidate
***************************
Model training time 2.7425196170806885
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.11231637819360635;  // std dev = 1.39e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783631;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926094;  // std dev = 9.13e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.32071184716014955;  // std dev = 2.11e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.08518475138839685;  // std dev = 1.05e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.25517224256948956;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07877675473109173;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.20975771563253554;  // std dev = 1.49e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527747;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.15274385809367078;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.1527438580936708;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.06419184008202619;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.0641918400820262;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
Inference time using transfer learning 4.217199802398682
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results 

CLL : -0.098354 

AUC ROC : 0.98755 

AUC PR : 0.124187 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 2.7425196170806885 

Total Inference Time : 0.6534204483032227 

Total revision time: 5.780229091644287
Best scored revision CLL: -0.094637


Results 

CLL : -0.098354 

AUC ROC : 0.98755 

AUC PR : 0.124187 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 5.828201055526733 

Total Inference Time : 0.6534204483032227 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 264
Target train neg examples: 106660

Target test facts examples: 9691
Target test pos examples: 133
Target test neg examples: 53331

Amount of data: 5
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.2006559371948242
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysinleague(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.48767788391726297;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.3912569620992536;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteledsportsteam(D, A) )
%   | then if ( teamplaysagainstteam(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(F, G) )
%   | | | then return 0.08628544050277512;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3862854405027751;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926094;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(G, A) )
%   | | then return 0.06521267287053556;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( teamplaysagainstteam(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2905873781727453;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17022714488608162;  // std dev = 0.438, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, A), athleteledsportsteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysagainstteam(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12899341523021682;  // std dev = 1.158, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09849006140017065;  // std dev = 0.438, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysinleague(C, D), teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.0499771147644813;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamplaysinleague(G, H) )
%   | | then return 0.1260834553603532;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return -0.03757927869997102;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( athleteplaysforteam(E, A), teamplaysinleague(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09900585260071022;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
Inference time using transfer learning 27.699737548828125
Parameter learned model CLL:-0.416089 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, A)', 'false,false,false': 'teamplaysagainstteam(B, F)'}, {'true': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.195, 2, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysinleague(D, A)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.452, 2, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [2.63e-09, 3, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.452, 2, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteledsportsteam(D, A)', 'false,true': 'teamplaysagainstteam(B, E)', 'false,true,false': 'athleteledsportsteam(F, G)', 'false,false': 'teamplaysagainstteam(B, H)', 'false,false,false': 'teamplaysinleague(I, A)'}, {'true': [0.0, 3, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.707, 1, 1], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.894, 1, 4]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(G, A)', 'false,false,false': 'teamplaysagainstteam(B, H)'}, {'true': [1.32e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.707, 1, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.894, 1, 4]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)'}, {'true,true': [0.0, 3, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.438, 2, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(C, A), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysagainstteam(B, G)', 'false,false,false': 'teamplaysinleague(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 3, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.158, 2, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)'}, {'true': [1.86e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.438, 2, 5]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'teamplaysinleague(C, D), teamplaysagainstteam(B, D)', 'true,false': 'teamplaysagainstteam(B, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysinleague(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.707, 1, 1], 'false,true': [0.0, 1, 0], 'false,false,true': [0.894, 1, 4], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteplaysforteam(D, A)', 'false,false': 'athleteplaysforteam(E, A), teamplaysinleague(E, F)', 'false,false,false': 'teamplaysagainstteam(B, G)'}, {'true': [1.32e-09, 3, 0], 'false,true': [0.707, 1, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.894, 1, 4]}]
{'': [0.0, 0.20408163265306106], 'false': [nan, 0.20408163265306106], 'false,false': [nan, 0.20408163265306106], 'false,false,false': [nan, 0.20408163265306106]}
{'': [0.0, 0.20408163265306115], 'false': [nan, 0.20408163265306115], 'false,false': [0.20408163265306115, nan], 'true': [nan, 0.0]}
{'': [2.3129646346357427e-18, 0.20408163265306115], 'false': [nan, 0.20408163265306115], 'false,false': [0.20408163265306115, nan], 'true': [2.3129646346357427e-18, nan]}
{'': [-1.1564823173178713e-18, 0.2040816326530612], 'false': [0.25, 0.16], 'false,true': [nan, 0.25], 'false,true,false': [0.25, nan], 'false,false': [nan, 0.16], 'false,false,false': [nan, 0.16]}
{'': [2.3129646346357427e-18, 0.1960803587326649], 'false': [nan, 0.1960803587326649], 'false,false': [0.25, 0.16000000000000003], 'false,false,false': [nan, 0.16000000000000003]}
{'': [0.0, 0.1915806631895885], 'false': [nan, 0.1915806631895885], 'true': [0.0, nan]}
{'': [nan, 0.1432511894181682], 'false': [0.0, 0.19169402325394364], 'false,false': [nan, 0.19169402325394364], 'false,false,false': [nan, 0.19169402325394364]}
{'': [1.1564823173178713e-18, 0.19186368986779964], 'false': [nan, 0.19186368986779964]}
{'': [0.12508509936191511, 0.1385880984201978], 'false': [0.0, 0.15999999999999998], 'false,false': [0.15999999999999998, nan], 'true': [nan, 0.12508509936191511], 'true,false': [0.0, 0.24999999999999997]}
{'': [5.782411586589357e-19, 0.18952153022294374], 'false': [0.25, 0.15999999999999998], 'false,false': [nan, 0.15999999999999998], 'false,false,false': [nan, 0.15999999999999998]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
8;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
8;true;teamplaysagainstteam(B, E).;true;true
8;false;teamplaysagainstteam(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true


Refining candidate
***************************
Model training time 1.8637878894805908
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.16653882456488175;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then return 0.6398312609916001;  // std dev = 0.207, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.18206367311425797;  // std dev = 0.747, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.45360168485870234;  // std dev = 0.113, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.08281890891330257;  // std dev = 0.744, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then return 0.42084290435978805;  // std dev = 0.308, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.08127468369595431;  // std dev = 0.634, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.29717553519547024;  // std dev = 0.163, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.02434170056119526;  // std dev = 0.673, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then return 0.3023795038153558;  // std dev = 0.325, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.028336941500610557;  // std dev = 0.567, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then return 0.2516997827508984;  // std dev = 0.295, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.022601881351962977;  // std dev = 0.566, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.07997461379491899;  // std dev = 0.262, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( teamplaysagainstteam(B, E) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.17449262118239042;  // std dev = 0.544, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.18338946913710266;  // std dev = 0.165, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.0538657220970988;  // std dev = 0.543, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
Inference time using transfer learning 3.9552431106567383
Refined model CLL: -0.202069


******************************************
Best model found
******************************************
Results 

CLL : -0.332743 

AUC ROC : 0.990776 

AUC PR : 0.120034 

Precision : 0.009298 

Recall : 1.0 

F1 : 0.018425 

Total Learning Time : 1.8637878894805908 

Total Inference Time : 0.6277542114257812 

Total revision time: 4.3635780811309814
Best scored revision CLL: -0.202069


Results 

CLL : -0.332743 

AUC ROC : 0.990776 

AUC PR : 0.120034 

Precision : 0.009298 

Recall : 1.0 

F1 : 0.018425 

Total Learning Time : 4.411550045013428 

Total Inference Time : 0.6277542114257812 

Amount of data: 10
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.271484375
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5248156017661789;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysinleague(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.448295606241962;  // std dev = 0.471, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.36236334632262296;  // std dev = 0.471, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteledsportsteam(D, A) )
%   | then if ( teamplaysagainstteam(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(F, G) )
%   | | | then return 0.11408718702991869;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3063948793376109;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(G, A) )
%   | | then return 0.08672385145980807;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( teamplaysagainstteam(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.23175816230562327;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1594611109587068;  // std dev = 0.468, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, A), athleteledsportsteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( teamplaysagainstteam(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11986349556286026;  // std dev = 1.814, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0904574800330319;  // std dev = 0.468, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysinleague(C, D), teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.24821148863702314;  // std dev = 1.182, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysinleague(G, H) )
%   | | then return 0.27981769962798353;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return -0.18727137911854289;  // std dev = 1.183, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( athleteplaysforteam(E, A), teamplaysinleague(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21557157656692427;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
Inference time using transfer learning 28.408916473388672
Parameter learned model CLL:-0.420761 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, A)', 'false,false,false': 'teamplaysagainstteam(B, F)'}, {'true': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.826, 5, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysinleague(D, A)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.471, 5, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [0.0, 5, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.471, 5, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteledsportsteam(D, A)', 'false,true': 'teamplaysagainstteam(B, E)', 'false,true,false': 'athleteledsportsteam(F, G)', 'false,false': 'teamplaysagainstteam(B, H)', 'false,false,false': 'teamplaysinleague(I, A)'}, {'true': [0.0, 5, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.707, 1, 1], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.664, 4, 9]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(G, A)', 'false,false,false': 'teamplaysagainstteam(B, H)'}, {'true': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.707, 1, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.664, 4, 9]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)'}, {'true,true': [0.0, 5, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.468, 5, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(C, A), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysagainstteam(B, G)', 'false,false,false': 'teamplaysinleague(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 5, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.814, 5, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)'}, {'true': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.468, 5, 10]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'teamplaysinleague(C, D), teamplaysagainstteam(B, D)', 'true,false': 'teamplaysagainstteam(B, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysinleague(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [1.182, 4, 2], 'false,true': [0.0, 3, 0], 'false,false,true': [0.943, 1, 8], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteplaysforteam(D, A)', 'false,false': 'athleteplaysforteam(E, A), teamplaysinleague(E, F)', 'false,false,false': 'teamplaysagainstteam(B, G)'}, {'true': [0.0, 5, 0], 'false,true': [1.183, 4, 2], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.943, 1, 8]}]
{'': [-2.7755575615628915e-18, 0.22222222222222215], 'false': [nan, 0.22222222222222215], 'false,false': [nan, 0.22222222222222215], 'false,false,false': [nan, 0.22222222222222215]}
{'': [0.0, 0.22222222222222224], 'false': [nan, 0.22222222222222224], 'false,false': [0.22222222222222224, nan], 'true': [nan, 0.0]}
{'': [0.0, 0.22222222222222215], 'false': [nan, 0.22222222222222215], 'false,false': [0.22222222222222215, nan], 'true': [0.0, nan]}
{'': [0.0, 0.2222222222222223], 'false': [0.25, 0.21301775147929009], 'false,true': [nan, 0.25], 'false,true,false': [0.25, nan], 'false,false': [nan, 0.21301775147929009], 'false,false,false': [nan, 0.21301775147929009]}
{'': [0.0, 0.22037942343487602], 'false': [nan, 0.22037942343487602], 'false,false': [0.25000000000000006, 0.21301775147929009], 'false,false,false': [nan, 0.21301775147929009]}
{'': [0.0, 0.2193055572478749], 'false': [nan, 0.2193055572478749], 'true': [0.0, nan]}
{'': [nan, 0.1718756227300085], 'false': [-1.3877787807814458e-18, 0.21930300971413366], 'false,false': [nan, 0.21930300971413366], 'false,false,false': [nan, 0.21930300971413366]}
{'': [-6.938893903907229e-19, 0.21931853337665966], 'false': [nan, 0.21931853337665966]}
{'': [0.1807452730188153, 0.09681301570926909], 'true': [nan, 0.1807452730188153], 'true,false': [0.0, 0.23291307977816691], 'false': [-5.782411586589357e-19, 0.0987654320987654], 'false,false': [0.0987654320987654, nan]}
{'': [0.0, 0.19146368019811483], 'false': [0.23314158417989675, 0.0987654320987655], 'false,false': [nan, 0.0987654320987655], 'false,false,false': [nan, 0.0987654320987655]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
8;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
8;true;teamplaysagainstteam(B, E).;true;true
8;false;teamplaysagainstteam(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true


Refining candidate
***************************
Model training time 2.6250555515289307
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.02176788419240575;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.01904987294481035;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplaysforteam(D, A), teamalsoknownas(A, E) )
%   | then return -0.1500298902743772;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.18330344305895616;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplaysforteam(D, A), teamalsoknownas(A, E) )
%   | then return -0.13188469456640944;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplaysforteam(F, A) )
%   | | then return 0.15549697731348466;  // std dev = 0.405, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamplaysagainstteam(A, G) )
%   | | | then return 0.488830310646818;  // std dev = 0.412, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2381044122368172;  // std dev = 0.452, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2645199415628842;  // std dev = 0.067, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.0033179938971115985;  // std dev = 0.823, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamalsoknownas(A, D), athleteplaysforteam(E, A) )
%   | then return -0.11716043875936677;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplaysforteam(F, A) )
%   | | then return 0.09184301253438276;  // std dev = 0.355, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamplaysagainstteam(A, G) )
%   | | | then return 0.36915104671199406;  // std dev = 0.459, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14989306345298695;  // std dev = 0.396, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysinleague(A, D), teamalsoknownas(A, E) )
%   | then return -0.1055749805755743;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | | then return 0.09426231797166518;  // std dev = 0.352, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.2056852486915679;  // std dev = 0.242, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.020869813984397887;  // std dev = 0.393, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( teamplaysagainstteam(B, E) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysagainstteam(A, F) )
%   | | then return 0.28854681885271943;  // std dev = 0.406, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.09552779787927823;  // std dev = 0.408, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.15255396908815846;  // std dev = 0.107, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.0423471290096571;  // std dev = 0.676, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
Inference time using transfer learning 4.600754976272583
Refined model CLL: -0.165303


******************************************
Best model found
******************************************
Results 

CLL : -0.20001 

AUC ROC : 0.991411 

AUC PR : 0.132484 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 2.6250555515289307 

Total Inference Time : 0.6592981815338135 

Total revision time: 5.2884438037872314
Best scored revision CLL: -0.165303


Results 

CLL : -0.20001 

AUC ROC : 0.991411 

AUC PR : 0.132484 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 5.336415767669678 

Total Inference Time : 0.6592981815338135 

Amount of data: 15
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.448582410812378
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5103228481429906;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysinleague(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.43626645181029383;  // std dev = 0.476, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.35345603789484054;  // std dev = 0.476, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783627;  // std dev = 1.86e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteledsportsteam(D, A) )
%   | then if ( teamplaysagainstteam(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(F, G) )
%   | | | then return 0.28911534324675564;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27244867658008914;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(G, A) )
%   | | then return 0.21918210036908983;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamplaysagainstteam(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20663243711857748;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1564394305722858;  // std dev = 0.476, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, A), athleteledsportsteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( teamplaysagainstteam(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11738691383641461;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08833492111576403;  // std dev = 0.476, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysinleague(C, D), teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1866265341009145;  // std dev = 1.546, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( teamplaysinleague(G, H) )
%   | | then return 0.261650555297589;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return -0.14076397229977963;  // std dev = 1.545, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( athleteplaysforteam(E, A), teamplaysinleague(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19982559757579776;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
Inference time using transfer learning 28.09718656539917
Parameter learned model CLL:-0.459558 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, A)', 'false,false,false': 'teamplaysagainstteam(B, F)'}, {'true': [0.0, 7, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.284, 8, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysinleague(D, A)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 7, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.476, 8, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [0.0, 7, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.476, 8, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteledsportsteam(D, A)', 'false,true': 'teamplaysagainstteam(B, E)', 'false,true,false': 'athleteledsportsteam(F, G)', 'false,false': 'teamplaysagainstteam(B, H)', 'false,false,false': 'teamplaysinleague(I, A)'}, {'true': [1.86e-09, 7, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.816, 1, 2], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.133, 7, 13]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(G, A)', 'false,false,false': 'teamplaysagainstteam(B, H)'}, {'true': [0.0, 7, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.816, 1, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.133, 7, 13]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)'}, {'true,true': [2.63e-09, 7, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.476, 8, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(C, A), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysagainstteam(B, G)', 'false,false,false': 'teamplaysinleague(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 7, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.284, 8, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)'}, {'true': [2.63e-09, 7, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.476, 8, 15]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'teamplaysinleague(C, D), teamplaysagainstteam(B, D)', 'true,false': 'teamplaysagainstteam(B, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysinleague(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 3, 0], 'true,false,false': [1.546, 6, 4], 'false,true': [0.0, 4, 0], 'false,false,true': [1.301, 2, 11], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteplaysforteam(D, A)', 'false,false': 'athleteplaysforteam(E, A), teamplaysinleague(E, F)', 'false,false,false': 'teamplaysagainstteam(B, G)'}, {'true': [0.0, 7, 0], 'false,true': [1.545, 6, 4], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.301, 2, 11]}]
{'': [-7.93016446160826e-18, 0.22684310018903553], 'false': [nan, 0.22684310018903553], 'false,false': [nan, 0.22684310018903553], 'false,false,false': [nan, 0.22684310018903553]}
{'': [-1.982541115402065e-18, 0.22684310018903614], 'false': [nan, 0.22684310018903614], 'false,false': [0.22684310018903614, nan], 'true': [nan, -1.982541115402065e-18]}
{'': [-1.982541115402065e-18, 0.22684310018903595], 'false': [nan, 0.22684310018903595], 'false,false': [0.22684310018903595, nan], 'true': [-1.982541115402065e-18, nan]}
{'': [0.0, 0.22684310018903592], 'false': [0.22222222222222224, 0.2274999999999999], 'false,false': [nan, 0.2274999999999999], 'false,false,false': [nan, 0.2274999999999999], 'false,true': [nan, 0.22222222222222224], 'false,true,false': [0.22222222222222224, nan]}
{'': [0.0, 0.22682945742191957], 'false': [nan, 0.22682945742191957], 'false,false': [0.2222222222222222, 0.22750000000000004], 'false,false,false': [nan, 0.22750000000000004]}
{'': [9.912705577010326e-19, 0.2268215369352605], 'false': [nan, 0.2268215369352605], 'true': [9.912705577010326e-19, nan]}
{'': [nan, 0.18078025599364728], 'false': [-9.912705577010326e-19, 0.22682162410272275], 'false,false': [nan, 0.22682162410272275], 'false,false,false': [nan, 0.22682162410272275]}
{'': [9.912705577010326e-19, 0.2268218130145916], 'false': [nan, 0.2268218130145916]}
{'': [0.1862324851900472, 0.11915118345760985], 'true': [nan, 0.1862324851900472], 'true,false': [-5.782411586589357e-19, 0.2388781226472267], 'false': [0.0, 0.13017751479289938], 'false,false': [0.13017751479289938, nan]}
{'': [-4.956352788505163e-19, 0.2059336687726222], 'false': [0.2388507421460706, 0.13017751479289938], 'false,false': [nan, 0.13017751479289938], 'false,false,false': [nan, 0.13017751479289938]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
8;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
8;true;teamplaysagainstteam(B, E).;true;true
8;false;teamplaysagainstteam(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true


Refining candidate
***************************
Model training time 2.5662169456481934
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( athleteplaysforteam(E, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( teamplaysagainstteam(A, E), teamalsoknownas(A, F) )
%   | | then return 0.19410540472492188;  // std dev = 0.783, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.13922792860841146;  // std dev = 0.048, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( teamalsoknownas(E, A) )
%   | | then return 0.18172656616613825;  // std dev = 0.763, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.1296406261265985;  // std dev = 0.046, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( teamplaysagainstteam(A, E), teamalsoknownas(A, F) )
%   | | then return 0.1696365140638261;  // std dev = 0.741, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.12200529355607394;  // std dev = 0.066, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( teamalsoknownas(E, A) )
%   | | then return 0.15675277574462276;  // std dev = 0.719, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.11525409856509365;  // std dev = 0.071, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2551722425694894;  // std dev = 2.11e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( teamplaysagainstteam(A, E), teamalsoknownas(A, F) )
%   | | then return 0.1446980212119131;  // std dev = 0.695, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.10973596415518226;  // std dev = 0.089, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( athleteplaysforteam(E, A) )
%   | | then return -0.10871548978739327;  // std dev = 0.095, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.14059679655272528;  // std dev = 0.664, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.1770964977452774;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( teamplaysagainstteam(A, E), athleteplaysforteam(F, E) )
%   | | then return 0.09426024537738434;  // std dev = 0.645, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.12244470915526529;  // std dev = 0.087, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.15274385809367075;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.09725700690568666;  // std dev = 0.086, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( teamplaysagainstteam(G, A), teamplaysagainstteam(A, G) )
%   | | then return 0.31140349770122544;  // std dev = 0.389, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamplaysagainstteam(H, A) )
%   | | | then return 0.15274385809367075;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07138791206872712;  // std dev = 0.343, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.13499936825676964;  // std dev = 0.033, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( teamplaysagainstteam(A, E), teamalsoknownas(A, F) )
%   | | then return 0.09735268553850047;  // std dev = 0.559, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.0923286910944597;  // std dev = 0.100, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning 4.629843473434448
Refined model CLL: -0.12754


******************************************
Best model found
******************************************
Results 

CLL : -0.124142 

AUC ROC : 0.990889 

AUC PR : 0.122195 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 2.5662169456481934 

Total Inference Time : 0.735602617263794 

Total revision time: 5.502943277359009
Best scored revision CLL: -0.12754


Results 

CLL : -0.124142 

AUC ROC : 0.990889 

AUC PR : 0.122195 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 5.550915241241455 

Total Inference Time : 0.735602617263794 

Amount of data: 20
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.4989137649536133
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5478041075133049;  // std dev = 2.491, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysinleague(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.4673349216153254;  // std dev = 0.463, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.37638199006737755;  // std dev = 0.463, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteledsportsteam(D, A) )
%   | then if ( teamplaysagainstteam(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(F, G) )
%   | | | then return 0.3507231109631994;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.28072311096319974;  // std dev = 2.332, 25.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(G, A) )
%   | | then return 0.26443495507790704;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( teamplaysagainstteam(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21189559709216277;  // std dev = 2.332, 25.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16443069747288977;  // std dev = 0.462, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, A), athleteledsportsteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.07877675473109172;  // std dev = 1.32e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( teamplaysagainstteam(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12370608562191465;  // std dev = 2.489, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09361431722514334;  // std dev = 0.462, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysinleague(C, D), teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.20727543238900104;  // std dev = 1.686, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( teamplaysinleague(G, H) )
%   | | then return 0.267942230772881;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.06419184008202619;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return -0.1575811249531803;  // std dev = 1.685, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else if ( athleteplaysforteam(E, A), teamplaysinleague(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2067070945710828;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
Inference time using transfer learning 28.871737718582153
Parameter learned model CLL:-0.412539 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, A)', 'false,false,false': 'teamplaysagainstteam(B, F)'}, {'true': [0.0, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.491, 9, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysinleague(D, A)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [5.27e-09, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.463, 9, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [7.45e-09, 11, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.463, 9, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteledsportsteam(D, A)', 'false,true': 'teamplaysagainstteam(B, E)', 'false,true,false': 'athleteledsportsteam(F, G)', 'false,false': 'teamplaysagainstteam(B, H)', 'false,false,false': 'teamplaysinleague(I, A)'}, {'true': [0.0, 11, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.866, 1, 3], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.332, 8, 17]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(G, A)', 'false,false,false': 'teamplaysagainstteam(B, H)'}, {'true': [0.0, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.866, 1, 3], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.332, 8, 17]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)'}, {'true,true': [5.27e-09, 11, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.462, 9, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(C, A), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysagainstteam(B, G)', 'false,false,false': 'teamplaysinleague(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [1.32e-09, 11, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.489, 9, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)'}, {'true': [2.63e-09, 11, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.462, 9, 20]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'teamplaysinleague(C, D), teamplaysagainstteam(B, D)', 'true,false': 'teamplaysagainstteam(B, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysinleague(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [1.86e-09, 5, 0], 'true,false,false': [1.686, 7, 5], 'false,true': [1.86e-09, 6, 0], 'false,false,true': [1.328, 2, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteplaysforteam(D, A)', 'false,false': 'athleteplaysforteam(E, A), teamplaysinleague(E, F)', 'false,false,false': 'teamplaysagainstteam(B, G)'}, {'true': [5.27e-09, 11, 0], 'false,true': [1.685, 7, 5], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.328, 2, 15]}]
{'': [-1.0092936587501423e-17, 0.21403091557669457], 'false': [nan, 0.21403091557669457], 'false,false': [nan, 0.21403091557669457], 'false,false,false': [nan, 0.21403091557669457]}
{'': [2.523234146875356e-18, 0.21403091557669504], 'false': [nan, 0.21403091557669504], 'false,false': [0.21403091557669504, nan], 'true': [nan, 2.523234146875356e-18]}
{'': [5.046468293750712e-18, 0.21403091557669462], 'false': [nan, 0.21403091557669462], 'false,false': [0.21403091557669462, nan], 'true': [5.046468293750712e-18, nan]}
{'': [0.0, 0.21403091557669413], 'false': [0.18749999999999997, 0.21759999999999965], 'false,false': [nan, 0.21759999999999965], 'false,false,false': [nan, 0.21759999999999965], 'false,true': [nan, 0.18749999999999997], 'false,true,false': [0.18749999999999997, nan]}
{'': [0.0, 0.21377650227557127], 'false': [nan, 0.21377650227557127], 'false,false': [0.1875, 0.21760000000000004], 'false,false,false': [nan, 0.21760000000000004]}
{'': [2.523234146875356e-18, 0.21363413648304883], 'false': [nan, 0.21363413648304883], 'true': [2.523234146875356e-18, nan]}
{'': [nan, 0.16306283975389682], 'false': [0.0, 0.21363945405422216], 'false,false': [nan, 0.21363945405422216], 'false,false,false': [nan, 0.21363945405422216]}
{'': [6.30808536718839e-19, 0.21364590787023757], 'false': [nan, 0.21364590787023757]}
{'': [0.17121406160287658, 0.09854243522438065], 'true': [nan, 0.17121406160287658], 'true,false': [6.938893903907229e-19, 0.23688299119344405], 'false': [5.782411586589357e-19, 0.10380622837370246], 'false,false': [0.10380622837370246, nan]}
{'': [2.523234146875356e-18, 0.19095350878851275], 'false': [0.2366190382141832, 0.10380622837370239], 'false,false': [nan, 0.10380622837370239], 'false,false,false': [nan, 0.10380622837370239]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
8;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
8;true;teamplaysagainstteam(B, E).;true;true
8;false;teamplaysagainstteam(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true


Refining candidate
***************************
Model training time 3.0816328525543213
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( athleteplaysforteam(E, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109542;  // std dev = 7.30e-08, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( teamalsoknownas(E, A) )
%   | | then return 0.1803221146449018;  // std dev = 0.800, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.13135176284839997;  // std dev = 0.038, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( teamplaysagainstteam(A, E), teamalsoknownas(A, F) )
%   | | then return 0.11785842136272517;  // std dev = 0.795, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.13741579657486538;  // std dev = 0.073, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.4175135841583098;  // std dev = 5.58e-08, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( teamalsoknownas(E, A) )
%   | | then return 0.16149956697133228;  // std dev = 0.767, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.1144313221470975;  // std dev = 0.037, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.3207118471601496;  // std dev = 2.58e-08, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( athleteplaysforteam(E, A) )
%   | | then return -0.10757917457735723;  // std dev = 0.053, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.14735291180029098;  // std dev = 0.751, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.25517224256948945;  // std dev = 1.49e-08, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( teamplaysagainstteam(A, E), teamalsoknownas(A, F) )
%   | | then return 0.10648569459292745;  // std dev = 0.722, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.12278016606159363;  // std dev = 0.124, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07877675473109172;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( teamalsoknownas(E, A) )
%   | | then return 0.12873759535961765;  // std dev = 0.714, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.09639564725764214;  // std dev = 0.057, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527744;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( teamplaysagainstteam(A, E), teamalsoknownas(A, F) )
%   | | then return 0.09363124773718365;  // std dev = 0.680, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.11167468014124372;  // std dev = 0.139, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.15274385809367075;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.09107431759768582;  // std dev = 0.074, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( teamalsoknownas(A, G), teamplaysagainstteam(H, A) )
%   | | then return 0.3225265220291375;  // std dev = 0.416, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamalsoknownas(I, A), teamplaysinleague(I, J) )
%   | | | then return 0.03388318807152777;  // std dev = 0.291, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1295854665947559;  // std dev = 0.243, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.06419184008202619;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.13500140175788342;  // std dev = 0.034, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( teamplaysagainstteam(A, E), athleteplaysforteam(F, E) )
%   | | then return 0.0543640650273178;  // std dev = 0.597, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.11923603246588135;  // std dev = 0.112, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning 4.780455827713013
Refined model CLL: -0.122245


******************************************
Best model found
******************************************
Results 

CLL : -0.122733 

AUC ROC : 0.990908 

AUC PR : 0.121939 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 3.0816328525543213 

Total Inference Time : 0.7386422157287598 

Total revision time: 6.115957021713257
Best scored revision CLL: -0.122245


Results 

CLL : -0.122733 

AUC ROC : 0.990908 

AUC PR : 0.121939 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 6.163928985595703 

Total Inference Time : 0.7386422157287598 

Amount of data: 25
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.6835181713104248
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5525933795439559;  // std dev = 2.764, 36.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=25 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysinleague(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.47129505638258123;  // std dev = 0.461, 36.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.37928590695965536;  // std dev = 0.461, 36.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteledsportsteam(D, A) )
%   | then if ( teamplaysagainstteam(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(F, G) )
%   | | | then return 0.4550676089117197;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.25309716556196615;  // std dev = 2.560, 29.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926096;  // std dev = 1.32e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(G, A) )
%   | | then return 0.3425864837138918;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( teamplaysagainstteam(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19104280740942678;  // std dev = 2.560, 29.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16568967773495244;  // std dev = 0.456, 36.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=25 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, A), athleteledsportsteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( teamplaysagainstteam(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12488383070899738;  // std dev = 2.736, 36.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=25 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09470570888596254;  // std dev = 0.456, 36.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=25 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysinleague(C, D), teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.11072714553890389;  // std dev = 1.842, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( teamplaysinleague(G, H) )
%   | | then return 0.20303099966985377;  // std dev = 1.799, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.06419184008202619;  // std dev = 6.97e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return -0.08514537149856774;  // std dev = 1.839, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | else if ( athleteplaysforteam(E, A), teamplaysinleague(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15576009784230685;  // std dev = 1.799, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
Inference time using transfer learning 28.692604541778564
Parameter learned model CLL:-0.432784 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, A)', 'false,false,false': 'teamplaysagainstteam(B, F)'}, {'true': [0.0, 14, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.764, 11, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysinleague(D, A)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [7.45e-09, 14, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.461, 11, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [1.18e-08, 14, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.461, 11, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteledsportsteam(D, A)', 'false,true': 'teamplaysagainstteam(B, E)', 'false,true,false': 'athleteledsportsteam(F, G)', 'false,false': 'teamplaysagainstteam(B, H)', 'false,false,false': 'teamplaysinleague(I, A)'}, {'true': [0.0, 14, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.926, 1, 6], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.56, 10, 19]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(G, A)', 'false,false,false': 'teamplaysagainstteam(B, H)'}, {'true': [1.32e-09, 14, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.926, 1, 6], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.56, 10, 19]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)'}, {'true,true': [8.33e-09, 14, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.456, 11, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(C, A), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysagainstteam(B, G)', 'false,false,false': 'teamplaysinleague(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 14, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.736, 11, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)'}, {'true': [3.73e-09, 14, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.456, 11, 25]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'teamplaysinleague(C, D), teamplaysagainstteam(B, D)', 'true,false': 'teamplaysagainstteam(B, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysinleague(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [1.86e-09, 5, 0], 'true,false,false': [1.842, 7, 8], 'false,true': [0.0, 9, 0], 'false,false,true': [1.799, 4, 17], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteplaysforteam(D, A)', 'false,false': 'athleteplaysforteam(E, A), teamplaysinleague(E, F)', 'false,false,false': 'teamplaysagainstteam(B, G)'}, {'true': [6.97e-09, 14, 0], 'false,true': [1.839, 7, 8], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.799, 4, 17]}]
{'': [-1.1895246692412391e-17, 0.21219135802469255], 'false': [nan, 0.21219135802469255], 'false,false': [nan, 0.21219135802469255], 'false,false,false': [nan, 0.21219135802469255]}
{'': [3.96508223080413e-18, 0.21219135802469105], 'false': [nan, 0.21219135802469105], 'false,false': [0.21219135802469105, nan], 'true': [nan, 3.96508223080413e-18]}
{'': [9.912705577010326e-18, 0.21219135802469116], 'false': [nan, 0.21219135802469116], 'false,false': [0.21219135802469116, nan], 'true': [9.912705577010326e-18, nan]}
{'': [-3.96508223080413e-18, 0.21219135802469108], 'false': [0.12244897959183665, 0.22592152199762172], 'false,false': [nan, 0.22592152199762172], 'false,false,false': [nan, 0.22592152199762172], 'false,true': [nan, 0.12244897959183665], 'false,true,false': [0.12244897959183665, nan]}
{'': [3.96508223080413e-18, 0.20939907827601734], 'false': [nan, 0.20939907827601734], 'false,false': [0.12244897959183672, 0.2259215219976219], 'false,false,false': [nan, 0.2259215219976219]}
{'': [4.956352788505163e-18, 0.20787013311336855], 'false': [nan, 0.20787013311336855], 'true': [4.956352788505163e-18, nan]}
{'': [nan, 0.15808467341648227], 'false': [-9.912705577010326e-19, 0.20794830887447704], 'false,false': [nan, 0.20794830887447704], 'false,false,false': [nan, 0.20794830887447704]}
{'': [9.912705577010326e-19, 0.20803376092160172], 'false': [nan, 0.20803376092160172]}
{'': [0.16996471889753567, 0.12341128898327254], 'true': [nan, 0.16996471889753567], 'true,false': [6.938893903907229e-19, 0.22617229914996426], 'false': [0.0, 0.15419501133786842], 'false,false': [0.15419501133786842, nan]}
{'': [3.469446951953614e-18, 0.1980270371303391], 'false': [0.22553786356409553, 0.15419501133786856], 'false,false': [nan, 0.15419501133786856], 'false,false,false': [nan, 0.15419501133786856]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
8;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
8;true;teamplaysagainstteam(B, E).;true;true
8;false;teamplaysagainstteam(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true


Refining candidate
***************************
Model training time 3.3789265155792236
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.858148935099512;  // std dev = 1.03e-07, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( teamalsoknownas(E, A) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109544;  // std dev = 4.21e-08, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return -0.13003906855506475;  // std dev = 0.039, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.1803221146449018;  // std dev = 0.800, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return -0.1160410354418356;  // std dev = 0.035, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.15554702653191646;  // std dev = 0.798, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( teamplaysagainstteam(A, E), teamalsoknownas(A, F) )
%   | | then return 0.11966931029818838;  // std dev = 0.764, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.12818537271966554;  // std dev = 0.116, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.32071184716014955;  // std dev = 2.98e-08, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( teamalsoknownas(E, A) )
%   | | then return 0.14711613584428293;  // std dev = 0.753, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.1039667097234542;  // std dev = 0.058, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2551722425694895;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( teamplaysagainstteam(A, E), teamalsoknownas(A, F) )
%   | | then return 0.10634826400536408;  // std dev = 0.723, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.11314549596433275;  // std dev = 0.134, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.20975771563253576;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return -0.09220690364920345;  // std dev = 0.063, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.12776959838591057;  // std dev = 0.716, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527747;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( teamplaysagainstteam(A, E), teamalsoknownas(A, F) )
%   | | then return 0.09329113905457109;  // std dev = 0.682, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | | | then return -0.06751925720979157;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.13652231034590123;  // std dev = 0.114, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.15274385809367097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.0899505743661778;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( teamplaysagainstteam(G, A), teamalsoknownas(A, H) )
%   | | then return 0.32296043566609206;  // std dev = 0.417, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( athleteplayssport(I, B) )
%   | | | then return 0.15274385809367091;  // std dev = 1.49e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.11199569309089356;  // std dev = 0.115, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.06419184008202619;  // std dev = 6.97e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.13246095464013605;  // std dev = 0.025, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( teamalsoknownas(E, A) )
%   | | then return 0.1032724779668821;  // std dev = 0.597, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.0787543644530409;  // std dev = 0.073, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
Inference time using transfer learning 5.046750783920288
Refined model CLL: -0.114657


******************************************
Best model found
******************************************
Results 

CLL : -0.111515 

AUC ROC : 0.991159 

AUC PR : 0.125467 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 3.3789265155792236 

Total Inference Time : 0.752866268157959 

Total revision time: 6.679913759231567
Best scored revision CLL: -0.114657


Results 

CLL : -0.111515 

AUC ROC : 0.991159 

AUC PR : 0.125467 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 6.727885723114014 

Total Inference Time : 0.752866268157959 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 266
Target train neg examples: 106662

Target test facts examples: 9691
Target test pos examples: 131
Target test neg examples: 53329

Amount of data: 5
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.1602654457092285
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysinleague(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.48767788391726297;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.3912569620992536;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteledsportsteam(D, A) )
%   | then if ( teamplaysagainstteam(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(F, G) )
%   | | | then return 0.5862854405027751;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2529521071694418;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926094;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(G, A) )
%   | | then return 0.4408643355866362;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( teamplaysagainstteam(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19056803533591368;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17062344454418504;  // std dev = 0.442, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, A), athleteledsportsteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysagainstteam(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12909520899464036;  // std dev = 1.169, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09841317308913286;  // std dev = 0.442, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysinleague(C, D), teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.25414028824104506;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysinleague(G, H) )
%   | | then return 0.04584871324331744;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.20902849075981567;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplaysforteam(E, A), teamplaysinleague(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03511711349360106;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
Inference time using transfer learning 31.79245376586914
Parameter learned model CLL:-0.420998 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, A)', 'false,false,false': 'teamplaysagainstteam(B, F)'}, {'true': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.195, 2, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysinleague(D, A)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.452, 2, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [2.63e-09, 3, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.452, 2, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteledsportsteam(D, A)', 'false,true': 'teamplaysagainstteam(B, E)', 'false,true,false': 'athleteledsportsteam(F, G)', 'false,false': 'teamplaysagainstteam(B, H)', 'false,false,false': 'teamplaysinleague(I, A)'}, {'true': [0.0, 3, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.155, 2, 4]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(G, A)', 'false,false,false': 'teamplaysagainstteam(B, H)'}, {'true': [1.32e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.155, 2, 4]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)'}, {'true,true': [0.0, 3, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.442, 2, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(C, A), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysagainstteam(B, G)', 'false,false,false': 'teamplaysinleague(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 3, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.169, 2, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)'}, {'true': [1.86e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.442, 2, 5]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'teamplaysinleague(C, D), teamplaysagainstteam(B, D)', 'true,false': 'teamplaysagainstteam(B, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysinleague(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [0.0, 3, 0], 'false,false,true': [1.155, 2, 4], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteplaysforteam(D, A)', 'false,false': 'athleteplaysforteam(E, A), teamplaysinleague(E, F)', 'false,false,false': 'teamplaysagainstteam(B, G)'}, {'true': [1.32e-09, 3, 0], 'false,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.155, 2, 4]}]
{'': [0.0, 0.20408163265306106], 'false': [nan, 0.20408163265306106], 'false,false': [nan, 0.20408163265306106], 'false,false,false': [nan, 0.20408163265306106]}
{'': [0.0, 0.20408163265306115], 'false': [nan, 0.20408163265306115], 'false,false': [0.20408163265306115, nan], 'true': [nan, 0.0]}
{'': [2.3129646346357427e-18, 0.20408163265306115], 'false': [nan, 0.20408163265306115], 'false,false': [0.20408163265306115, nan], 'true': [2.3129646346357427e-18, nan]}
{'': [-1.1564823173178713e-18, 0.2040816326530612], 'false': [0.0, 0.22222222222222224], 'false,false': [nan, 0.22222222222222224], 'false,false,false': [nan, 0.22222222222222224], 'false,true': [nan, 0.0], 'false,true,false': [0.0, nan]}
{'': [2.3129646346357427e-18, 0.1981474032826231], 'false': [nan, 0.1981474032826231], 'false,false': [0.0, 0.22222222222222218], 'false,false,false': [nan, 0.22222222222222218]}
{'': [0.0, 0.19506710995976428], 'false': [nan, 0.19506710995976428], 'true': [0.0, nan]}
{'': [nan, 0.14579981750760834], 'false': [0.0, 0.19532222759133996], 'false,false': [nan, 0.19532222759133996], 'false,false,false': [nan, 0.19532222759133996]}
{'': [1.1564823173178713e-18, 0.19557035115561416], 'false': [nan, 0.19557035115561416]}
{'': [0.0, 0.15105013338671044], 'false': [-5.782411586589357e-19, 0.2222222222222222], 'false,false': [0.2222222222222222, nan], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [5.782411586589357e-19, 0.19417968033039026], 'false': [0.0, 0.2222222222222222], 'false,false': [nan, 0.2222222222222222], 'false,false,false': [nan, 0.2222222222222222]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
3;false;athleteledsportsteam(D, A).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
4;false;athleteledsportsteam(E, F), athleteledsportsteam(G, A).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
8;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
8;false;teamplaysagainstteam(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
9;false;athleteplaysforteam(D, A).;true;true


Refining candidate
***************************
Model training time 1.176354169845581
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.19148226843284555;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.16653882456488173;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.1420942428155648;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteledsportsteam(D, A) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.26833124453288715;  // std dev = 0.895, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteledsportsteam(D, E), athleteledsportsteam(F, A) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.21229601562317568;  // std dev = 0.887, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | then return 0.294133416405163;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.027412018195619264;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | then return 0.23706115915781092;  // std dev = 0.039, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.02156076662925747;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | then return 0.1969513558155;  // std dev = 0.034, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.016915792703246463;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then return 0.1419289716647133;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.0947624603850769;  // std dev = 0.841, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.12550630168830723;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.07760956496964214;  // std dev = 0.843, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
Inference time using transfer learning 7.80059289932251
Refined model CLL: -0.271687


******************************************
Best model found
******************************************
Results 

CLL : -0.269527 

AUC ROC : 0.975623 

AUC PR : 0.225576 

Precision : 0.236434 

Recall : 0.931298 

F1 : 0.377125 

Total Learning Time : 1.176354169845581 

Total Inference Time : 0.6439180374145508 

Total revision time: 3.6216869354248047
Best scored revision CLL: -0.271687


Results 

CLL : -0.269527 

AUC ROC : 0.975623 

AUC PR : 0.225576 

Precision : 0.236434 

Recall : 0.931298 

F1 : 0.377125 

Total Learning Time : 3.669658899307251 

Total Inference Time : 0.6439180374145508 

Amount of data: 10
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.2791132926940918
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6273797043302815;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysinleague(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.5328490890947368;  // std dev = 0.421, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.4239325089396988;  // std dev = 0.421, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783627;  // std dev = 1.86e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteledsportsteam(D, A) )
%   | then if ( teamplaysagainstteam(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(F, G) )
%   | | | then return 0.5537511637364885;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.28102389100921576;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(G, A) )
%   | | then return 0.41631665295911946;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( teamplaysagainstteam(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2109821968746475;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18347161850743718;  // std dev = 0.414, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, A), athleteledsportsteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( teamplaysagainstteam(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.140039703318951;  // std dev = 1.493, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10818899552443681;  // std dev = 0.414, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysinleague(C, D), teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.23398774315467863;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( teamplaysinleague(G, H) )
%   | | then return 0.05734289721465078;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.1946745675511269;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( athleteplaysforteam(E, A), teamplaysinleague(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04478878534453726;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
Inference time using transfer learning 33.02906608581543
Parameter learned model CLL:-0.363874 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, A)', 'false,false,false': 'teamplaysagainstteam(B, F)'}, {'true': [0.0, 7, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.519, 3, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysinleague(D, A)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 7, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.421, 3, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [0.0, 7, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.421, 3, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteledsportsteam(D, A)', 'false,true': 'teamplaysagainstteam(B, E)', 'false,true,false': 'athleteledsportsteam(F, G)', 'false,false': 'teamplaysagainstteam(B, H)', 'false,false,false': 'teamplaysinleague(I, A)'}, {'true': [1.86e-09, 7, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.477, 3, 8]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(G, A)', 'false,false,false': 'teamplaysagainstteam(B, H)'}, {'true': [0.0, 7, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.477, 3, 8]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)'}, {'true,true': [2.63e-09, 7, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.414, 3, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(C, A), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysagainstteam(B, G)', 'false,false,false': 'teamplaysinleague(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 7, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.493, 3, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)'}, {'true': [2.63e-09, 7, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.414, 3, 10]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'teamplaysinleague(C, D), teamplaysagainstteam(B, D)', 'true,false': 'teamplaysagainstteam(B, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysinleague(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 2], 'false,true': [1.86e-09, 5, 0], 'false,false,true': [1.477, 3, 8], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteplaysforteam(D, A)', 'false,false': 'athleteplaysforteam(E, A), teamplaysinleague(E, F)', 'false,false,false': 'teamplaysagainstteam(B, G)'}, {'true': [0.0, 7, 0], 'false,true': [0.0, 0, 2], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.477, 3, 8]}]
{'': [-7.93016446160826e-18, 0.1775147928994082], 'false': [nan, 0.1775147928994082], 'false,false': [nan, 0.1775147928994082], 'false,false,false': [nan, 0.1775147928994082]}
{'': [-1.982541115402065e-18, 0.1775147928994084], 'false': [nan, 0.1775147928994084], 'false,false': [0.1775147928994084, nan], 'true': [nan, -1.982541115402065e-18]}
{'': [-1.982541115402065e-18, 0.177514792899408], 'false': [nan, 0.177514792899408], 'false,false': [0.177514792899408, nan], 'true': [-1.982541115402065e-18, nan]}
{'': [0.0, 0.17751479289940836], 'false': [0.0, 0.1983471074380166], 'false,false': [nan, 0.1983471074380166], 'false,false,false': [nan, 0.1983471074380166], 'false,true': [nan, 0.0], 'false,true,false': [0.0, nan]}
{'': [0.0, 0.17332074330448222], 'false': [nan, 0.17332074330448222], 'false,false': [0.0, 0.1983471074380166], 'false,false,false': [nan, 0.1983471074380166]}
{'': [9.912705577010326e-19, 0.17121632031149542], 'false': [nan, 0.17121632031149542], 'true': [9.912705577010326e-19, nan]}
{'': [nan, 0.12234418226145853], 'false': [-9.912705577010326e-19, 0.17146359405403425], 'false,false': [nan, 0.17146359405403425], 'false,false,false': [nan, 0.17146359405403425]}
{'': [9.912705577010326e-19, 0.1716942704081239], 'false': [nan, 0.1716942704081239]}
{'': [0.022863665869207808, 0.13976204800808004], 'false': [6.938893903907229e-19, 0.1983471074380165], 'false,false': [0.1983471074380165, nan], 'true': [nan, 0.022863665869207808], 'true,false': [0.0, 0.0]}
{'': [-4.956352788505163e-19, 0.17075670303671808], 'false': [0.0, 0.19834710743801656], 'false,false': [nan, 0.19834710743801656], 'false,false,false': [nan, 0.19834710743801656]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
3;false;athleteledsportsteam(D, A).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
4;false;athleteledsportsteam(E, F), athleteledsportsteam(G, A).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
8;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
8;true;teamplaysagainstteam(B, E).;true;true
8;false;teamplaysagainstteam(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
9;false;athleteplaysforteam(D, A).;true;true


Refining candidate
***************************
Model training time 2.061978816986084
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteledsportsteam(D, A) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteledsportsteam(D, E), athleteledsportsteam(F, A) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( teamplaysagainstteam(B, E) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.15274385809367097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning 8.055331707000732
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results 

CLL : -0.118411 

AUC ROC : 0.982291 

AUC PR : 0.122934 

Precision : 0.124758 

Recall : 0.984733 

F1 : 0.221459 

Total Learning Time : 2.061978816986084 

Total Inference Time : 0.6698009967803955 

Total revision time: 4.727124452590942
Best scored revision CLL: -0.094637


Results 

CLL : -0.118411 

AUC ROC : 0.982291 

AUC PR : 0.122934 

Precision : 0.124758 

Recall : 0.984733 

F1 : 0.221459 

Total Learning Time : 4.775096416473389 

Total Inference Time : 0.6698009967803955 

Amount of data: 15
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.389765739440918
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6081489350995123;  // std dev = 1.936, 20.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysinleague(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.5170719622367218;  // std dev = 0.433, 20.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.4125724528826601;  // std dev = 0.433, 20.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783628;  // std dev = 1.32e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteledsportsteam(D, A) )
%   | then if ( teamplaysagainstteam(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(F, G) )
%   | | | then return 0.3151786576185065;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.31517865761850666;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(G, A) )
%   | | then return 0.23676009386434194;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( teamplaysagainstteam(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.23676009386434213;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17806945427207493;  // std dev = 0.433, 20.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, A), athleteledsportsteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.07877675473109172;  // std dev = 9.31e-10, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( teamplaysagainstteam(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13513671764223462;  // std dev = 1.936, 20.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10367175113685514;  // std dev = 0.433, 20.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysinleague(C, D), teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.06965166696964084;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( teamplaysinleague(G, H) )
%   | | then return 0.13034833303035914;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.06419184008202619;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return -0.05406556996404421;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( athleteplaysforteam(E, A), teamplaysinleague(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10217577545055227;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
Inference time using transfer learning 27.199507236480713
Parameter learned model CLL:-0.392485 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, A)', 'false,false,false': 'teamplaysagainstteam(B, F)'}, {'true': [0.0, 10, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.936, 5, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysinleague(D, A)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [5.27e-09, 10, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.433, 5, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [0.0, 10, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.433, 5, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteledsportsteam(D, A)', 'false,true': 'teamplaysagainstteam(B, E)', 'false,true,false': 'athleteledsportsteam(F, G)', 'false,false': 'teamplaysagainstteam(B, H)', 'false,false,false': 'teamplaysinleague(I, A)'}, {'true': [1.32e-09, 10, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.866, 1, 3], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.732, 4, 12]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(G, A)', 'false,false,false': 'teamplaysagainstteam(B, H)'}, {'true': [0.0, 10, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.866, 1, 3], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.732, 4, 12]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)'}, {'true,true': [3.73e-09, 10, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.433, 5, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(C, A), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysagainstteam(B, G)', 'false,false,false': 'teamplaysinleague(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [9.31e-10, 10, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.936, 5, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)'}, {'true': [2.63e-09, 10, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.433, 5, 15]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'teamplaysinleague(C, D), teamplaysagainstteam(B, D)', 'true,false': 'teamplaysagainstteam(B, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysinleague(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [1.095, 2, 3], 'false,true': [0.0, 8, 0], 'false,false,true': [1.549, 3, 12], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteplaysforteam(D, A)', 'false,false': 'athleteplaysforteam(E, A), teamplaysinleague(E, F)', 'false,false,false': 'teamplaysagainstteam(B, G)'}, {'true': [3.73e-09, 10, 0], 'false,true': [1.095, 2, 3], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.549, 3, 12]}]
{'': [-1.1102230246251566e-17, 0.18749999999999964], 'false': [nan, 0.18749999999999964], 'false,false': [nan, 0.18749999999999964], 'false,false,false': [nan, 0.18749999999999964]}
{'': [2.7755575615628915e-18, 0.18750000000000008], 'false': [nan, 0.18750000000000008], 'false,false': [0.18750000000000008, nan], 'true': [nan, 2.7755575615628915e-18]}
{'': [0.0, 0.18749999999999994], 'false': [nan, 0.18749999999999994], 'false,false': [0.18749999999999994, nan], 'true': [0.0, nan]}
{'': [1.3877787807814458e-18, 0.1874999999999999], 'false': [0.18750000000000003, 0.18749999999999986], 'false,true': [nan, 0.18750000000000003], 'false,true,false': [0.18750000000000003, nan], 'false,false': [nan, 0.18749999999999986], 'false,false,false': [nan, 0.18749999999999986]}
{'': [0.0, 0.18749999999999986], 'false': [nan, 0.18749999999999986], 'false,false': [0.18750000000000003, 0.18749999999999983], 'false,false,false': [nan, 0.18749999999999983]}
{'': [1.3877787807814458e-18, 0.18750000000000008], 'false': [nan, 0.18750000000000008], 'true': [1.3877787807814458e-18, nan]}
{'': [nan, 0.13516866081395867], 'false': [0.0, 0.18750000000000003], 'false,false': [nan, 0.18750000000000003], 'false,false,false': [nan, 0.18750000000000003]}
{'': [6.938893903907229e-19, 0.18749999999999994], 'false': [nan, 0.18749999999999994]}
{'': [0.1714288775231539, 0.11331076541700087], 'true': [nan, 0.1714288775231539], 'true,false': [0.0, 0.23999999999999994], 'false': [0.0, 0.16], 'false,false': [0.16, nan]}
{'': [1.3877787807814458e-18, 0.18457712962818057], 'false': [0.24, 0.16], 'false,false': [nan, 0.16], 'false,false,false': [nan, 0.16]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
8;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
8;true;teamplaysagainstteam(B, E).;true;true
8;false;teamplaysagainstteam(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true


Refining candidate
***************************
Model training time 2.261467933654785
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.4175135841583098;  // std dev = 4.71e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2551722425694894;  // std dev = 2.36e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07877675473109172;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527741;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.06427552371852137;  // std dev = 0.242, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( teamplaysagainstteam(B, E) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.15274385809367078;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.06419184008202619;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.13612764495143462;  // std dev = 0.016, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.06757094803415462;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning 3.991594076156616
Refined model CLL: -0.096139


******************************************
Best model found
******************************************
Results 

CLL : -0.098602 

AUC ROC : 0.978416 

AUC PR : 0.12657 

Precision : 0.124758 

Recall : 0.984733 

F1 : 0.221459 

Total Learning Time : 2.261467933654785 

Total Inference Time : 0.6538584232330322 

Total revision time: 5.176357984542847
Best scored revision CLL: -0.096139


Results 

CLL : -0.098602 

AUC ROC : 0.978416 

AUC PR : 0.12657 

Precision : 0.124758 

Recall : 0.984733 

F1 : 0.221459 

Total Learning Time : 5.224329948425293 

Total Inference Time : 0.6538584232330322 

Amount of data: 20
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.460101842880249
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6273797043302811;  // std dev = 2.148, 26.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysinleague(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.5328490890947367;  // std dev = 0.421, 26.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.42393250893969897;  // std dev = 0.421, 26.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteledsportsteam(D, A) )
%   | then if ( teamplaysagainstteam(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(F, G) )
%   | | | then return 0.2680368780222028;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.34322484794701474;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926096;  // std dev = 1.32e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(G, A) )
%   | | then return 0.2012391313355319;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( teamplaysagainstteam(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.25767014195868926;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18277287563078873;  // std dev = 0.420, 26.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, A), athleteledsportsteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( teamplaysagainstteam(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13928963149086668;  // std dev = 2.144, 26.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10747158639778429;  // std dev = 0.420, 26.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysinleague(C, D), teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.00729664888803267;  // std dev = 1.415, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( teamplaysinleague(G, H) )
%   | | then return 0.1321299560510647;  // std dev = 1.575, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.06419184008202619;  // std dev = 6.97e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return -0.005692615598311456;  // std dev = 1.415, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( athleteplaysforteam(E, A), teamplaysinleague(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10467778504550172;  // std dev = 1.575, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
Inference time using transfer learning 28.997512102127075
Parameter learned model CLL:-0.372263 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, A)', 'false,false,false': 'teamplaysagainstteam(B, F)'}, {'true': [0.0, 14, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.148, 6, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysinleague(D, A)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [7.45e-09, 14, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.421, 6, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [1.18e-08, 14, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.421, 6, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteledsportsteam(D, A)', 'false,true': 'teamplaysagainstteam(B, E)', 'false,true,false': 'athleteledsportsteam(F, G)', 'false,false': 'teamplaysagainstteam(B, H)', 'false,false,false': 'teamplaysinleague(I, A)'}, {'true': [0.0, 14, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.195, 2, 5], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.777, 4, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(G, A)', 'false,false,false': 'teamplaysagainstteam(B, H)'}, {'true': [1.32e-09, 14, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.195, 2, 5], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.777, 4, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)'}, {'true,true': [8.33e-09, 14, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.42, 6, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(C, A), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysagainstteam(B, G)', 'false,false,false': 'teamplaysinleague(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 14, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.144, 6, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)'}, {'true': [3.73e-09, 14, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.42, 6, 20]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'teamplaysinleague(C, D), teamplaysagainstteam(B, D)', 'true,false': 'teamplaysagainstteam(B, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysinleague(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'true,false,false': [1.415, 3, 6], 'false,true': [2.63e-09, 10, 0], 'false,false,true': [1.575, 3, 14], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteplaysforteam(D, A)', 'false,false': 'athleteplaysforteam(E, A), teamplaysinleague(E, F)', 'false,false,false': 'teamplaysagainstteam(B, G)'}, {'true': [6.97e-09, 14, 0], 'false,true': [1.415, 3, 6], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.575, 3, 14]}]
{'': [-1.1895246692412391e-17, 0.17751479289940847], 'false': [nan, 0.17751479289940847], 'false,false': [nan, 0.17751479289940847], 'false,false,false': [nan, 0.17751479289940847]}
{'': [3.96508223080413e-18, 0.17751479289940864], 'false': [nan, 0.17751479289940864], 'false,false': [0.17751479289940864, nan], 'true': [nan, 3.96508223080413e-18]}
{'': [9.912705577010326e-18, 0.17751479289940802], 'false': [nan, 0.17751479289940802], 'false,false': [0.17751479289940802, nan], 'true': [9.912705577010326e-18, nan]}
{'': [-3.96508223080413e-18, 0.17751479289940847], 'false': [0.20408163265306126, 0.16620498614958465], 'false,true': [nan, 0.20408163265306126], 'false,true,false': [0.20408163265306126, nan], 'false,false': [nan, 0.16620498614958465], 'false,false,false': [nan, 0.16620498614958465]}
{'': [3.96508223080413e-18, 0.1770290729917535], 'false': [nan, 0.1770290729917535], 'false,false': [0.20408163265306126, 0.1662049861495845], 'false,false,false': [nan, 0.1662049861495845]}
{'': [4.956352788505163e-18, 0.1767683316150636], 'false': [nan, 0.1767683316150636], 'true': [4.956352788505163e-18, nan]}
{'': [nan, 0.125730712449376], 'false': [-9.912705577010326e-19, 0.17678833322676588], 'false,false': [nan, 0.17678833322676588], 'false,false,false': [nan, 0.17678833322676588]}
{'': [9.912705577010326e-19, 0.17680905242609152], 'false': [nan, 0.17680905242609152]}
{'': [0.15476877495959054, 0.10128679039051261], 'true': [nan, 0.15476877495959054], 'true,false': [0.0, 0.2224050765120716], 'false': [6.938893903907229e-19, 0.14596981690630428], 'false,false': [0.14596981690630428, nan]}
{'': [3.469446951953614e-18, 0.17516334978805193], 'false': [0.22240602867614198, 0.1459358033252255], 'false,false': [nan, 0.1459358033252255], 'false,false,false': [nan, 0.1459358033252255]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
8;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
8;true;teamplaysagainstteam(B, E).;true;true
8;false;teamplaysagainstteam(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true


Refining candidate
***************************
Model training time 2.7969677448272705
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.41751358415830986;  // std dev = 5.16e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.3207118471601496;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.25517224256948945;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527744;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.15274385809367075;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.1527438580936708;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.06419184008202619;  // std dev = 6.97e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning 4.046261310577393
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results 

CLL : -0.097554 

AUC ROC : 0.983881 

AUC PR : 0.123375 

Precision : 0.124758 

Recall : 0.984733 

F1 : 0.221459 

Total Learning Time : 2.7969677448272705 

Total Inference Time : 0.6862485408782959 

Total revision time: 5.755854845046997
Best scored revision CLL: -0.094637


Results 

CLL : -0.097554 

AUC ROC : 0.983881 

AUC PR : 0.123375 

Precision : 0.124758 

Recall : 0.984733 

F1 : 0.221459 

Total Learning Time : 5.803826808929443 

Total Inference Time : 0.6862485408782959 

Amount of data: 25
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.6510143280029297
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamplaysinleague(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5934430527465704;  // std dev = 2.572, 34.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysinleague(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.486971064726932;  // std dev = 0.447, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.3907510337952272;  // std dev = 0.446, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteledsportsteam(D, A) )
%   | then if ( teamplaysagainstteam(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(F, G) )
%   | | | then return 0.2481425172792713;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3184759642481827;  // std dev = 2.214, 26.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=19 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926094;  // std dev = 1.86e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(G, A) )
%   | | then return 0.1868288106494169;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( teamplaysagainstteam(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.24011435470556994;  // std dev = 2.211, 26.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=19 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.08518475138839685;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17015682369493043;  // std dev = 0.444, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, A), athleteledsportsteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( teamplaysagainstteam(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1285333825151923;  // std dev = 2.625, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09785413291013241;  // std dev = 0.444, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysinleague(C, D), teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.018689455617213666;  // std dev = 1.756, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( teamplaysinleague(G, H) )
%   | | then return 0.13050603897793855;  // std dev = 1.906, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.06419184008202619;  // std dev = 7.90e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return -0.014345919872208098;  // std dev = 1.756, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | else if ( athleteplaysforteam(E, A), teamplaysinleague(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10128243651386755;  // std dev = 1.907, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
Inference time using transfer learning 28.605202198028564
Parameter learned model CLL:-0.425298 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, A)', 'false,false,false': 'teamplaysagainstteam(B, F)'}, {'true': [0.0, 15, 0], 'false,true': [0.0, 1, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.572, 9, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysinleague(D, A)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [7.45e-09, 15, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.447, 10, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [1.39e-08, 15, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.446, 10, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteledsportsteam(D, A)', 'false,true': 'teamplaysagainstteam(B, E)', 'false,true,false': 'athleteledsportsteam(F, G)', 'false,false': 'teamplaysagainstteam(B, H)', 'false,false,false': 'teamplaysinleague(I, A)'}, {'true': [0.0, 15, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.414, 3, 6], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.214, 7, 19]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(G, A)', 'false,false,false': 'teamplaysagainstteam(B, H)'}, {'true': [1.86e-09, 15, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.414, 3, 6], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.211, 7, 19]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)'}, {'true,true': [9.13e-09, 15, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.444, 10, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(C, A), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysagainstteam(B, G)', 'false,false,false': 'teamplaysinleague(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 15, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.625, 10, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)'}, {'true': [3.73e-09, 15, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.444, 10, 25]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'teamplaysinleague(C, D), teamplaysagainstteam(B, D)', 'true,false': 'teamplaysagainstteam(B, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysinleague(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [1.86e-09, 5, 0], 'true,false,false': [1.756, 5, 8], 'false,true': [2.63e-09, 10, 0], 'false,false,true': [1.906, 5, 17], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteplaysforteam(D, A)', 'false,false': 'athleteplaysforteam(E, A), teamplaysinleague(E, F)', 'false,false,false': 'teamplaysagainstteam(B, G)'}, {'true': [7.9e-09, 15, 0], 'false,true': [1.756, 5, 8], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.907, 5, 17]}]
{'': [-1.4802973661668754e-17, 0.20408163265306242], 'false': [0.0, 0.1946366782006932], 'false,false': [nan, 0.1946366782006932], 'false,false,false': [nan, 0.1946366782006932]}
{'': [3.7007434154171884e-18, 0.2001066006519157], 'false': [nan, 0.2001066006519157], 'false,false': [0.2001066006519157, nan], 'true': [nan, 3.7007434154171884e-18]}
{'': [1.295260195396016e-17, 0.19896983998215906], 'false': [nan, 0.19896983998215906], 'false,false': [0.19896983998215906, nan], 'true': [1.295260195396016e-17, nan]}
{'': [-5.551115123125783e-18, 0.1981976986294637], 'false': [0.22222222222222232, 0.18860948470402378], 'false,true': [nan, 0.22222222222222232], 'false,true,false': [0.22222222222222232, nan], 'false,false': [nan, 0.18860948470402378], 'false,false,false': [nan, 0.18860948470402378]}
{'': [3.7007434154171884e-18, 0.19735213608573496], 'false': [nan, 0.19735213608573496], 'false,false': [0.2222222222222222, 0.18801314174831976], 'false,false,false': [nan, 0.18801314174831976]}
{'': [5.551115123125783e-18, 0.1969516829360516], 'false': [nan, 0.1969516829360516], 'true': [5.551115123125783e-18, nan]}
{'': [nan, 0.14688132659539627], 'false': [-1.8503717077085942e-18, 0.19693721866333008], 'false,false': [nan, 0.19693721866333008], 'false,false,false': [nan, 0.19693721866333008]}
{'': [9.251858538542971e-19, 0.19698304676672462], 'false': [nan, 0.19698304676672462]}
{'': [0.171820011839786, 0.12197216221669442], 'true': [nan, 0.171820011839786], 'true,false': [6.938893903907229e-19, 0.23721745924558743], 'false': [6.938893903907229e-19, 0.16504707126401164], 'false,false': [0.16504707126401164, nan]}
{'': [4.163336342344337e-18, 0.19508449556309915], 'false': [0.2372211332113177, 0.1652196042190791], 'false,false': [nan, 0.1652196042190791], 'false,false,false': [nan, 0.1652196042190791]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
0;false;teamplaysagainstteam(D, B).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
8;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
8;true;teamplaysagainstteam(B, E).;true;true
8;false;teamplaysagainstteam(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true


Refining candidate
***************************
Model training time 2.899704933166504
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926094;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.32071184716014955;  // std dev = 2.11e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.08518475138839685;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.25517224256948956;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07877675473109173;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.20975771563253554;  // std dev = 1.49e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527747;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.15274385809367075;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.1527438580936708;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.06419184008202619;  // std dev = 7.90e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.06419184008202619;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
Inference time using transfer learning 4.144288539886475
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results 

CLL : -0.097554 

AUC ROC : 0.983881 

AUC PR : 0.123375 

Precision : 0.124758 

Recall : 0.984733 

F1 : 0.221459 

Total Learning Time : 2.899704933166504 

Total Inference Time : 0.701791524887085 

Total revision time: 6.030158042907715
Best scored revision CLL: -0.094637


Results 

CLL : -0.097554 

AUC ROC : 0.983881 

AUC PR : 0.123375 

Precision : 0.124758 

Recall : 0.984733 

F1 : 0.221459 

Total Learning Time : 6.078130006790161 

Total Inference Time : 0.701791524887085 

Run: 2

 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 264
Target train neg examples: 106660

Target test facts examples: 9691
Target test pos examples: 133
Target test neg examples: 53331

Amount of data: 5
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.13596510887146
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysinleague(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.4136573287083126;  // std dev = 0.484, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.3366053739648666;  // std dev = 0.484, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteledsportsteam(D, A) )
%   | then if ( teamplaysagainstteam(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(F, G) )
%   | | | then return -0.028691081217976772;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4379755854486899;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(G, A) )
%   | | then return -0.02209109046697862;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamplaysagainstteam(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.332108946226024;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14942060211952105;  // std dev = 0.447, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, A), athleteledsportsteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( teamplaysagainstteam(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1135089634956004;  // std dev = 1.264, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0862993900605494;  // std dev = 0.447, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysinleague(C, D), teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11392507875909916;  // std dev = 1.081, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( teamplaysinleague(G, H) )
%   | | then return 0.3652323905486961;  // std dev = 7.45e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.0641918400820262;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return -0.08656635231346034;  // std dev = 1.081, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( athleteplaysforteam(E, A), teamplaysinleague(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2853742472851427;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
Inference time using transfer learning 27.356711626052856
Parameter learned model CLL:-0.425612 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, A)', 'false,false,false': 'teamplaysagainstteam(B, F)'}, {'true': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.369, 3, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysinleague(D, A)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.484, 3, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.484, 3, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteledsportsteam(D, A)', 'false,true': 'teamplaysagainstteam(B, E)', 'false,true,false': 'athleteledsportsteam(F, G)', 'false,false': 'teamplaysagainstteam(B, H)', 'false,false,false': 'teamplaysinleague(I, A)'}, {'true': [0.0, 2, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.816, 2, 1], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.894, 1, 4]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(G, A)', 'false,false,false': 'teamplaysagainstteam(B, H)'}, {'true': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.816, 2, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.894, 1, 4]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)'}, {'true,true': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.447, 3, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(C, A), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysagainstteam(B, G)', 'false,false,false': 'teamplaysinleague(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 2, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.264, 3, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)'}, {'true': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.447, 3, 5]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'teamplaysinleague(C, D), teamplaysagainstteam(B, D)', 'true,false': 'teamplaysagainstteam(B, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysinleague(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.081, 3, 2], 'false,true': [0.0, 2, 0], 'false,false,true': [7.45e-09, 0, 3], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteplaysforteam(D, A)', 'false,false': 'athleteplaysforteam(E, A), teamplaysinleague(E, F)', 'false,false,false': 'teamplaysagainstteam(B, G)'}, {'true': [0.0, 2, 0], 'false,true': [1.081, 3, 2], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 3]}]
{'': [0.0, 0.23437499999999983], 'false': [nan, 0.23437499999999983], 'false,false': [nan, 0.23437499999999983], 'false,false,false': [nan, 0.23437499999999983]}
{'': [0.0, 0.2343749999999998], 'false': [nan, 0.2343749999999998], 'false,false': [0.2343749999999998, nan], 'true': [nan, 0.0]}
{'': [0.0, 0.234375], 'false': [nan, 0.234375], 'false,false': [0.234375, nan], 'true': [0.0, nan]}
{'': [0.0, 0.23437500000000006], 'false': [0.22222222222222224, 0.16000000000000003], 'false,true': [nan, 0.22222222222222224], 'false,true,false': [0.22222222222222224, nan], 'false,false': [nan, 0.16000000000000003], 'false,false,false': [nan, 0.16000000000000003]}
{'': [0.0, 0.21273747380051877], 'false': [nan, 0.21273747380051877], 'false,false': [0.22222222222222224, 0.15999999999999998], 'false,false,false': [nan, 0.15999999999999998]}
{'': [0.0, 0.19996008802768603], 'false': [nan, 0.19996008802768603], 'true': [0.0, nan]}
{'': [nan, 0.1656944215320924], 'false': [0.0, 0.19972326742832455], 'false,false': [nan, 0.19972326742832455], 'false,false,false': [nan, 0.19972326742832455]}
{'': [0.0, 0.19972222785950225], 'false': [nan, 0.19972222785950225]}
{'': [0.23362294072377035, 0.04513450747078274], 'true': [nan, 0.23362294072377035], 'true,false': [nan, 0.23362294072377035], 'false': [0.0, 1.850371707708594e-17], 'false,false': [1.850371707708594e-17, nan]}
{'': [0.0, 0.17844766267636103], 'false': [0.23363883167101443, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
8;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
8;false;teamplaysagainstteam(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
9;false;athleteplaysforteam(D, A).;true;true


Refining candidate
***************************
Model training time 1.7676944732666016
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then return 0.020041356530946762;  // std dev = 0.242, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.0641918400820262;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.018237934689349134;  // std dev = 0.241, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
Inference time using transfer learning 3.8011667728424072
Refined model CLL: -0.104612


******************************************
Best model found
******************************************
Results 

CLL : -0.10768 

AUC ROC : 0.98818 

AUC PR : 0.115435 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 1.7676944732666016 

Total Inference Time : 0.6799285411834717 

Total revision time: 4.316466331481934
Best scored revision CLL: -0.104612


Results 

CLL : -0.10768 

AUC ROC : 0.98818 

AUC PR : 0.115435 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 4.367998361587524 

Total Inference Time : 0.6799285411834717 

Amount of data: 10
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.3091466426849365
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(A, E) )
%   | | then if ( athleteplaysforteam(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.44148226843284566;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( teamplaysagainstteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.4469762968236473;  // std dev = 0.462, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(D, B) )
%   | then return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.3615698799544698;  // std dev = 0.460, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteledsportsteam(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return 0.2174623248125974;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.5332769584540666;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21282630520888007;  // std dev = 1.746, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16085894322057204;  // std dev = 0.451, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteledsportsteam(D, E) )
%   then return 0.03508639849233307;  // std dev = 1.728, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   else if ( teamplaysagainstteam(F, B) )
%   | then return -0.07877675473109177;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamplaysagainstteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.31568848631194024;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.07973799396913203;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10176986881127661;  // std dev = 0.447, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(D, B) )
%   | then return -0.07408021173781024;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( teamplaysinleague(E, F) )
%   | | then return 0.07776585095850562;  // std dev = 1.734, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.06915710274578496;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplaysforteam(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(A, E), teamplaysinleague(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05967394068842007;  // std dev = 1.736, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
Inference time using transfer learning 33.2422661781311
Parameter learned model CLL:-0.459552 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(A, E)', 'false,false,true': 'athleteplaysforteam(A, E)', 'false,false,false': 'teamplaysagainstteam(F, B)'}, {'true': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.708, 5, 7], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.11e-08, 0, 3]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysinleague(A, D)', 'false': 'teamplaysagainstteam(E, B)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [0.0, 4, 0], 'true,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.462, 5, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysagainstteam(D, B)', 'false': 'teamplaysagainstteam(E, B)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [0.0, 5, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.46, 5, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'athleteledsportsteam(A, D)', 'false,false': 'teamplaysagainstteam(E, B)', 'false,false,false': 'teamplaysinleague(A, F)'}, {'true': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.708, 5, 7], 'false,false,false,false': [1.05e-08, 0, 3]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(A, G)', 'false,false,false': 'teamplaysagainstteam(H, B)'}, {'true': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.746, 5, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysagainstteam(D, B)', 'false': 'teamplaysagainstteam(E, B)'}, {'true,true': [0.0, 5, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.451, 5, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(F, B)', 'false,false': 'teamplaysagainstteam(G, B)', 'false,false,false': 'teamplaysinleague(A, H)'}, {'true': [1.728, 9, 7], 'false,true': [0.0, 1, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 3]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)'}, {'true': [0.007, 5, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.447, 5, 10]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(A, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.007, 5, 0], 'false,false,true': [1.734, 5, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'athleteplaysforteam(A, D)', 'false,false': 'athleteplaysforteam(A, E), teamplaysinleague(F, E)', 'false,false,false': 'teamplaysagainstteam(G, B)'}, {'true': [0.006, 5, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.736, 5, 10]}]
{'': [-2.7755575615628915e-18, 0.22222222222222215], 'false': [nan, 0.22222222222222215], 'false,false': [0.2430555555555555, 1.4802973661668753e-16], 'false,false,true': [nan, 0.2430555555555555], 'false,false,false': [nan, 1.4802973661668753e-16]}
{'': [0.0, 0.2130081139180454], 'false': [nan, 0.2130081139180454], 'false,false': [0.2130081139180454, nan], 'true': [0.0, 0.0]}
{'': [0.0, 0.2113034217304996], 'false': [nan, 0.2113034217304996], 'false,false': [0.2113034217304996, nan], 'true': [0.0, nan]}
{'': [0.0, 0.2104026656959798], 'false': [nan, 0.2104026656959798], 'false,false': [nan, 0.2104026656959798], 'false,false,false': [0.24305555555555558, 3.700743415417188e-17]}
{'': [0.0, 0.20332682318328718], 'false': [nan, 0.20332682318328718], 'false,false': [nan, 0.20332682318328718], 'false,false,false': [nan, 0.20332682318328718]}
{'': [0.0, 0.20352292979238065], 'false': [nan, 0.20352292979238065], 'true': [0.0, nan]}
{'': [0.18661327255399374, 0.02917552994833826], 'false': [0.0, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [nan, 0.0]}
{'': [1.053576360944275e-05, 0.20006731605340786], 'false': [nan, 0.20006731605340786]}
{'': [nan, 0.15468063260003856], 'false': [9.198762348675699e-06, 0.20047347052350847], 'false,false': [0.20047347052350847, nan]}
{'': [8.09680776603372e-06, 0.20082644400087857], 'false': [nan, 0.20082644400087857], 'false,false': [nan, 0.20082644400087857], 'false,false,false': [nan, 0.20082644400087857]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
0;false;teamplaysinleague(A, E).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
1;true;teamplaysinleague(A, D).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
3;false;teamplaysinleague(A, F).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
6;;teamplayssport(A, B) :- teamplaysinleague(A, C), athleteledsportsteam(D, E).;true;true
6;false;teamplaysagainstteam(F, B).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(D, B).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true


Refining candidate
***************************
Model training time 18.492282390594482
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysinleague(A, D) )
%   | then if ( athleteplayssport(E, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysinleague(A, D) )
%   | then if ( athleteplayssport(E, B) )
%   | | then if ( athleteledsportsteam(E, A) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteledsportsteam(D, A) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( athleteplaysforteam(E, A) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteledsportsteam(D, E) )
%   then if ( athleteplayssport(F, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.07877675473109179;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( teamplaysagainstteam(G, B) )
%   | then return -0.07877675473109177;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.20975771563253554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteledsportsteam(D, A) )
%   | | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( athleteplaysforteam(E, A) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17709649774527736;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.15274385809367094;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning 16.163629293441772
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results 

CLL : -0.123038 

AUC ROC : 0.987203 

AUC PR : 0.123801 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 18.492282390594482 

Total Inference Time : 0.6930482387542725 

Total revision time: 21.241501808166504
Best scored revision CLL: -0.094637


Results 

CLL : -0.123038 

AUC ROC : 0.987203 

AUC PR : 0.123801 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 21.293033838272095 

Total Inference Time : 0.6930482387542725 

Amount of data: 15
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.4642245769500732
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamplaysinleague(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5724346493852266;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysinleague(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.45980867835155165;  // std dev = 0.459, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.37084657430953866;  // std dev = 0.458, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783627;  // std dev = 1.32e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteledsportsteam(D, A) )
%   | then if ( teamplaysagainstteam(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(F, G) )
%   | | | then return 0.3757228298638214;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22520712350892816;  // std dev = 1.706, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(G, A) )
%   | | then return 0.2830743966638956;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( teamplaysagainstteam(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1709160612257375;  // std dev = 1.703, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1630900271072722;  // std dev = 0.452, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, A), athleteledsportsteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( teamplaysagainstteam(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1230313427767471;  // std dev = 2.117, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09328726391258592;  // std dev = 0.451, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysinleague(C, D), teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.08900069156620506;  // std dev = 1.472, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( teamplaysinleague(G, H) )
%   | | then return 0.053293167262145384;  // std dev = 1.520, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.06877953008026073;  // std dev = 1.472, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else if ( athleteplaysforteam(E, A), teamplaysinleague(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04056026281125997;  // std dev = 1.520, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
Inference time using transfer learning 27.238279342651367
Parameter learned model CLL:-0.457851 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, A)', 'false,false,false': 'teamplaysagainstteam(B, F)'}, {'true': [0.0, 8, 0], 'false,true': [0.0, 1, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.07, 6, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysinleague(D, A)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 8, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.459, 7, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [0.0, 8, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.458, 7, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteledsportsteam(D, A)', 'false,true': 'teamplaysagainstteam(B, E)', 'false,true,false': 'athleteledsportsteam(F, G)', 'false,false': 'teamplaysagainstteam(B, H)', 'false,false,false': 'teamplaysinleague(I, A)'}, {'true': [1.32e-09, 8, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.247, 2, 7], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.706, 5, 8]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(G, A)', 'false,false,false': 'teamplaysagainstteam(B, H)'}, {'true': [0.0, 8, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.247, 2, 7], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.703, 5, 8]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)'}, {'true,true': [3.73e-09, 8, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.452, 7, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(C, A), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysagainstteam(B, G)', 'false,false,false': 'teamplaysinleague(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 8, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.117, 7, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)'}, {'true': [2.63e-09, 8, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.451, 7, 15]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'teamplaysinleague(C, D), teamplaysagainstteam(B, D)', 'true,false': 'teamplaysagainstteam(B, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysinleague(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 3, 0], 'true,false,false': [1.472, 3, 8], 'false,true': [1.86e-09, 5, 0], 'false,false,true': [1.52, 4, 7], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteplaysforteam(D, A)', 'false,false': 'athleteplaysforteam(E, A), teamplaysinleague(E, F)', 'false,false,false': 'teamplaysagainstteam(B, G)'}, {'true': [0.0, 8, 0], 'false,true': [1.472, 3, 8], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.52, 4, 7]}]
{'': [-6.938893903907228e-18, 0.21694214876033016], 'false': [0.0, 0.20408163265306084], 'false,false': [nan, 0.20408163265306084], 'false,false,false': [nan, 0.20408163265306084]}
{'': [0.0, 0.2111157398013363], 'false': [nan, 0.2111157398013363], 'false,false': [0.2111157398013363, nan], 'true': [nan, 0.0]}
{'': [-1.734723475976807e-18, 0.2095241405713353], 'false': [nan, 0.2095241405713353], 'false,false': [0.2095241405713353, nan], 'true': [-1.734723475976807e-18, nan]}
{'': [1.734723475976807e-18, 0.20840591660331353], 'false': [0.1728395061728395, 0.22376087064412062], 'false,false': [nan, 0.22376087064412062], 'false,false,false': [nan, 0.22376087064412062], 'false,true': [nan, 0.1728395061728395], 'false,true,false': [0.1728395061728395, nan]}
{'': [0.0, 0.20550951225994307], 'false': [nan, 0.20550951225994307], 'false,false': [0.17283950617283944, 0.22298105287840542], 'false,false,false': [nan, 0.22298105287840542]}
{'': [1.734723475976807e-18, 0.20391652376960961], 'false': [nan, 0.20391652376960961], 'true': [1.734723475976807e-18, nan]}
{'': [nan, 0.15741350733894735], 'false': [0.0, 0.20379438054299934], 'false,false': [nan, 0.20379438054299934], 'false,false,false': [nan, 0.20379438054299934]}
{'': [8.673617379884035e-19, 0.20378892726380418], 'false': [nan, 0.20378892726380418]}
{'': [0.15900888346735179, 0.1475363859489234], 'true': [nan, 0.15900888346735179], 'true,false': [-5.782411586589357e-19, 0.19706419878852718], 'false': [6.938893903907229e-19, 0.2099684440230984], 'false,false': [0.2099684440230984, nan]}
{'': [0.0, 0.20375384986412612], 'false': [0.19707722857868892, 0.21003230762696365], 'false,false': [nan, 0.21003230762696365], 'false,false,false': [nan, 0.21003230762696365]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
0;false;teamplaysagainstteam(D, B).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
8;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
8;true;teamplaysagainstteam(B, E).;true;true
8;false;teamplaysagainstteam(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true


Refining candidate
***************************
Model training time 2.3346364498138428
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.4175135841583098;  // std dev = 4.71e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2551722425694894;  // std dev = 2.36e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527741;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.15274385809367075;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.15274385809367072;  // std dev = 7.45e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
Inference time using transfer learning 4.123735427856445
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results 

CLL : -0.098354 

AUC ROC : 0.98755 

AUC PR : 0.124187 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 2.3346364498138428 

Total Inference Time : 0.6512546539306641 

Total revision time: 5.164341926574707
Best scored revision CLL: -0.094637


Results 

CLL : -0.098354 

AUC ROC : 0.98755 

AUC PR : 0.124187 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 5.215873956680298 

Total Inference Time : 0.6512546539306641 

Amount of data: 20
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.5199615955352783
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamplaysinleague(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5988896758402525;  // std dev = 2.277, 27.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysinleague(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.4867877135427862;  // std dev = 0.446, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.39062062536642905;  // std dev = 0.445, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteledsportsteam(D, A) )
%   | then if ( teamplaysagainstteam(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(F, G) )
%   | | | then return 0.3802261884325377;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.25596576908597374;  // std dev = 1.951, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(G, A) )
%   | | then return 0.28587271037806633;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( teamplaysagainstteam(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19330854205104842;  // std dev = 1.948, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.08518475138839687;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17030036536753232;  // std dev = 0.440, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, A), athleteledsportsteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.07877675473109172;  // std dev = 1.32e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( teamplaysagainstteam(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12880955024912266;  // std dev = 2.328, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09818465156370978;  // std dev = 0.440, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysinleague(C, D), teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.1263253588358437;  // std dev = 1.540, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( teamplaysinleague(G, H) )
%   | | then return 0.02453649024975684;  // std dev = 1.726, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.06419184008202619;  // std dev = 5.89e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.0986151453484571;  // std dev = 1.540, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | else if ( athleteplaysforteam(E, A), teamplaysinleague(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01882271538981915;  // std dev = 1.726, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
Inference time using transfer learning 28.15989398956299
Parameter learned model CLL:-0.42288 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, A)', 'false,false,false': 'teamplaysagainstteam(B, F)'}, {'true': [0.0, 12, 0], 'false,true': [0.0, 1, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.277, 7, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysinleague(D, A)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [5.27e-09, 12, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.446, 8, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [9.13e-09, 12, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.445, 8, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteledsportsteam(D, A)', 'false,true': 'teamplaysagainstteam(B, E)', 'false,true,false': 'athleteledsportsteam(F, G)', 'false,false': 'teamplaysagainstteam(B, H)', 'false,false,false': 'teamplaysinleague(I, A)'}, {'true': [0.0, 12, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.265, 2, 8], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.951, 6, 12]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(G, A)', 'false,false,false': 'teamplaysagainstteam(B, H)'}, {'true': [0.0, 12, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.265, 2, 8], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.948, 6, 12]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)'}, {'true,true': [5.27e-09, 12, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.44, 8, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(C, A), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysagainstteam(B, G)', 'false,false,false': 'teamplaysinleague(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [1.32e-09, 12, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.328, 8, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)'}, {'true': [3.73e-09, 12, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.44, 8, 20]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'teamplaysinleague(C, D), teamplaysagainstteam(B, D)', 'true,false': 'teamplaysagainstteam(B, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysinleague(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 3, 0], 'true,false,false': [1.54, 3, 11], 'false,true': [0.0, 9, 0], 'false,false,true': [1.726, 5, 9], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteplaysforteam(D, A)', 'false,false': 'athleteplaysforteam(E, A), teamplaysinleague(E, F)', 'false,false,false': 'teamplaysagainstteam(B, G)'}, {'true': [5.89e-09, 12, 0], 'false,true': [1.54, 3, 11], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.726, 5, 9]}]
{'': [-1.1564823173178714e-17, 0.20408163265306145], 'false': [0.0, 0.19204389574759964], 'false,false': [nan, 0.19204389574759964], 'false,false,false': [nan, 0.19204389574759964]}
{'': [2.3129646346357427e-18, 0.19906772047861468], 'false': [nan, 0.19906772047861468], 'false,false': [0.19906772047861468, nan], 'true': [nan, 2.3129646346357427e-18]}
{'': [6.938893903907228e-18, 0.1976377499776005], 'false': [nan, 0.1976377499776005], 'false,false': [0.1976377499776005, nan], 'true': [6.938893903907228e-18, nan]}
{'': [0.0, 0.19666787980336564], 'false': [0.15999999999999992, 0.2115244056327888], 'false,false': [nan, 0.2115244056327888], 'false,false,false': [nan, 0.2115244056327888], 'false,true': [nan, 0.15999999999999992], 'false,true,false': [0.15999999999999992, nan]}
{'': [2.3129646346357427e-18, 0.1946719365307186], 'false': [nan, 0.1946719365307186], 'false,false': [0.16000000000000006, 0.21087407875720296], 'false,false,false': [nan, 0.21087407875720296]}
{'': [2.3129646346357427e-18, 0.1936260870939832], 'false': [nan, 0.1936260870939832], 'true': [2.3129646346357427e-18, nan]}
{'': [nan, 0.14455774784512898], 'false': [1.1564823173178713e-18, 0.19358344614558282], 'false,false': [nan, 0.19358344614558282], 'false,false,false': [nan, 0.19358344614558282]}
{'': [1.1564823173178713e-18, 0.19362919861384528], 'false': [nan, 0.19362919861384528]}
{'': [0.14503627198174868, 0.13159816731932036], 'true': [nan, 0.14503627198174868], 'true,false': [-5.782411586589357e-19, 0.16942221324263512], 'false': [0.0, 0.2128152562283022], 'false,false': [0.2128152562283022, nan]}
{'': [2.8912057932946786e-18, 0.19269765025284974], 'false': [0.1693568995195808, 0.21285498504676686], 'false,false': [nan, 0.21285498504676686], 'false,false,false': [nan, 0.21285498504676686]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
0;false;teamplaysagainstteam(D, B).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
8;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
8;true;teamplaysagainstteam(B, E).;true;true
8;false;teamplaysagainstteam(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true


Refining candidate
***************************
Model training time 2.5130388736724854
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.41751358415830986;  // std dev = 5.16e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926097;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.3207118471601496;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.08518475138839687;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.25517224256948945;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07877675473109172;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527744;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.15274385809367078;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.15274385809367075;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.06419184008202619;  // std dev = 5.89e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning 4.101489782333374
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results 

CLL : -0.098354 

AUC ROC : 0.98755 

AUC PR : 0.124187 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 2.5130388736724854 

Total Inference Time : 0.6488955020904541 

Total revision time: 5.430251121520996
Best scored revision CLL: -0.094637


Results 

CLL : -0.098354 

AUC ROC : 0.98755 

AUC PR : 0.124187 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 5.481783151626587 

Total Inference Time : 0.6488955020904541 

Amount of data: 25
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.5997397899627686
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamplaysinleague(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6157246926752692;  // std dev = 2.462, 33.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysinleague(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.5042109302644099;  // std dev = 0.436, 34.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.11231637819360635;  // std dev = 1.39e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.4032923561690661;  // std dev = 0.435, 34.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783631;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( athleteledsportsteam(D, A) )
%   | then if ( teamplaysagainstteam(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(F, G) )
%   | | | then return 0.38693648302427647;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2717548070102368;  // std dev = 2.159, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926094;  // std dev = 2.28e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(G, A) )
%   | | then return 0.29066852261336157;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else if ( teamplaysagainstteam(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20476134997809065;  // std dev = 2.156, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.08518475138839685;  // std dev = 1.05e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1750950138560595;  // std dev = 0.431, 34.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, A), athleteledsportsteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( teamplaysagainstteam(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13280273980400079;  // std dev = 2.512, 34.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10168399551030605;  // std dev = 0.431, 34.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysinleague(C, D), teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.1369561988859311;  // std dev = 1.567, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( teamplaysinleague(G, H) )
%   | | then return 0.02667803718663292;  // std dev = 1.939, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.06419184008202619;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.10774564310653068;  // std dev = 1.567, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | else if ( athleteplaysforteam(E, A), teamplaysinleague(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02060609271807834;  // std dev = 1.939, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
Inference time using transfer learning 27.930089950561523
Parameter learned model CLL:-0.400847 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, A)', 'false,false,false': 'teamplaysagainstteam(B, F)'}, {'true': [0.0, 16, 0], 'false,true': [0.0, 1, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.462, 8, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysinleague(D, A)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [7.45e-09, 16, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.436, 9, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [1.39e-08, 16, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.435, 9, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteledsportsteam(D, A)', 'false,true': 'teamplaysagainstteam(B, E)', 'false,true,false': 'athleteledsportsteam(F, G)', 'false,false': 'teamplaysagainstteam(B, H)', 'false,false,false': 'teamplaysinleague(I, A)'}, {'true': [0.0, 16, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.279, 2, 9], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.159, 7, 16]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(G, A)', 'false,false,false': 'teamplaysagainstteam(B, H)'}, {'true': [2.28e-09, 16, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.279, 2, 9], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.156, 7, 16]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)'}, {'true,true': [1.05e-08, 16, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.431, 9, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(C, A), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysagainstteam(B, G)', 'false,false,false': 'teamplaysinleague(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 16, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.512, 9, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)'}, {'true': [0.0, 16, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.431, 9, 25]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'teamplaysinleague(C, D), teamplaysagainstteam(B, D)', 'true,false': 'teamplaysagainstteam(B, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysinleague(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.63e-09, 7, 0], 'true,false,false': [1.567, 3, 13], 'false,true': [0.0, 9, 0], 'false,false,true': [1.939, 6, 12], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteplaysforteam(D, A)', 'false,false': 'athleteplaysforteam(E, A), teamplaysinleague(E, F)', 'false,false,false': 'teamplaysagainstteam(B, G)'}, {'true': [7.45e-09, 16, 0], 'false,true': [1.567, 3, 13], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.939, 6, 12]}]
{'': [-6.938893903907228e-18, 0.1946366782006932], 'false': [0.0, 0.1836547291092757], 'false,false': [nan, 0.1836547291092757], 'false,false,false': [nan, 0.1836547291092757]}
{'': [3.469446951953614e-18, 0.19026724474206905], 'false': [nan, 0.19026724474206905], 'false,false': [0.19026724474206905, nan], 'true': [nan, 3.469446951953614e-18]}
{'': [1.214306433183765e-17, 0.18898848605375776], 'false': [nan, 0.18898848605375776], 'false,false': [0.18898848605375776, nan], 'true': [1.214306433183765e-17, nan]}
{'': [-6.938893903907228e-18, 0.18814220240433724], 'false': [0.1487603305785123, 0.20268480468699632], 'false,false': [nan, 0.20268480468699632], 'false,false,false': [nan, 0.20268480468699632], 'false,true': [nan, 0.1487603305785123], 'false,true,false': [0.1487603305785123, nan]}
{'': [5.204170427930421e-18, 0.18649143442681596], 'false': [nan, 0.18649143442681596], 'false,false': [0.14876033057851246, 0.20214908421554814], 'false,false,false': [nan, 0.20214908421554814]}
{'': [6.938893903907228e-18, 0.18565568181474532], 'false': [nan, 0.18565568181474532], 'true': [6.938893903907228e-18, nan]}
{'': [nan, 0.13598768356524876], 'false': [-1.734723475976807e-18, 0.18565680519348216], 'false,false': [nan, 0.18565680519348216], 'false,false,false': [nan, 0.18565680519348216]}
{'': [0.0, 0.18572895286258911], 'false': [nan, 0.18572895286258911]}
{'': [0.11571339770307683, 0.14123366036666482], 'false': [0.0, 0.20883550258865868], 'false,false': [0.20883550258865868, nan], 'true': [nan, 0.11571339770307683], 'true,false': [9.912705577010326e-19, 0.15349993332920203]}
{'': [3.469446951953614e-18, 0.18467328509843006], 'false': [0.15342115028049616, 0.20887964226066608], 'false,false': [nan, 0.20887964226066608], 'false,false,false': [nan, 0.20887964226066608]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
0;false;teamplaysagainstteam(D, B).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
8;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
8;true;teamplaysagainstteam(B, E).;true;true
8;false;teamplaysagainstteam(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true


Refining candidate
***************************
Model training time 2.505293607711792
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.11231637819360635;  // std dev = 1.39e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783631;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926094;  // std dev = 9.13e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.32071184716014955;  // std dev = 2.11e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.08518475138839685;  // std dev = 1.05e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.25517224256948956;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07877675473109173;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.20975771563253554;  // std dev = 1.49e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527747;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.1527438580936708;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.15274385809367078;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.06419184008202619;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.0641918400820262;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
Inference time using transfer learning 4.1502885818481445
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results 

CLL : -0.098354 

AUC ROC : 0.98755 

AUC PR : 0.124187 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 2.505293607711792 

Total Inference Time : 0.7272341251373291 

Total revision time: 5.610462427139282
Best scored revision CLL: -0.094637


Results 

CLL : -0.098354 

AUC ROC : 0.98755 

AUC PR : 0.124187 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 5.661994457244873 

Total Inference Time : 0.7272341251373291 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 264
Target train neg examples: 106660

Target test facts examples: 9691
Target test pos examples: 133
Target test neg examples: 53331

Amount of data: 5
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.0987777709960938
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysinleague(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.5851860008555361;  // std dev = 0.373, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.46125983910675533;  // std dev = 0.373, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteledsportsteam(D, A) )
%   | then if ( teamplaysagainstteam(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(F, G) )
%   | | | then return 0.5155129923615089;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1821796590281756;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(G, A) )
%   | | then return 0.3885429256897412;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamplaysagainstteam(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13667576989135657;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2019691530373854;  // std dev = 0.348, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, A), athleteledsportsteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( teamplaysagainstteam(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15716818726146384;  // std dev = 0.855, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12432610499734155;  // std dev = 0.350, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysinleague(C, D), teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.20991340385619173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysinleague(G, H) )
%   | | then return -0.010383195507509732;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.1772106792407251;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( athleteplaysforteam(E, A), teamplaysinleague(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.008108714221377452;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
Inference time using transfer learning 28.389439344406128
Parameter learned model CLL:-0.265676 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, A)', 'false,false,false': 'teamplaysagainstteam(B, F)'}, {'true': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.913, 1, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysinleague(D, A)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.373, 1, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [0.0, 4, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.373, 1, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteledsportsteam(D, A)', 'false,true': 'teamplaysagainstteam(B, E)', 'false,true,false': 'athleteledsportsteam(F, G)', 'false,false': 'teamplaysagainstteam(B, H)', 'false,false,false': 'teamplaysinleague(I, A)'}, {'true': [0.0, 4, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.05e-08, 0, 3], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.816, 1, 2]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(G, A)', 'false,false,false': 'teamplaysagainstteam(B, H)'}, {'true': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 3], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.816, 1, 2]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)'}, {'true,true': [0.0, 4, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.348, 1, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(C, A), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysagainstteam(B, G)', 'false,false,false': 'teamplaysinleague(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 4, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.855, 1, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)'}, {'true': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.35, 1, 5]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'teamplaysinleague(C, D), teamplaysagainstteam(B, D)', 'true,false': 'teamplaysagainstteam(B, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysinleague(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 3], 'false,true': [0.0, 3, 0], 'false,false,true': [0.816, 1, 2], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteplaysforteam(D, A)', 'false,false': 'athleteplaysforteam(E, A), teamplaysinleague(E, F)', 'false,false,false': 'teamplaysagainstteam(B, G)'}, {'true': [0.0, 4, 0], 'false,true': [0.0, 0, 3], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.816, 1, 2]}]
{'': [0.0, 0.1388888888888887], 'false': [nan, 0.1388888888888887], 'false,false': [nan, 0.1388888888888887], 'false,false,false': [nan, 0.1388888888888887]}
{'': [0.0, 0.13888888888888884], 'false': [nan, 0.13888888888888884], 'false,false': [0.13888888888888884, nan], 'true': [nan, 0.0]}
{'': [0.0, 0.13888888888888887], 'false': [nan, 0.13888888888888887], 'false,false': [0.13888888888888887, nan], 'true': [0.0, nan]}
{'': [0.0, 0.13888888888888898], 'false': [3.700743415417188e-17, 0.22222222222222224], 'false,false': [nan, 0.22222222222222224], 'false,false,false': [nan, 0.22222222222222224], 'false,true': [nan, 3.700743415417188e-17], 'false,true,false': [3.700743415417188e-17, nan]}
{'': [0.0, 0.12697037715360307], 'false': [nan, 0.12697037715360307], 'false,false': [-3.700743415417188e-17, 0.2222222222222222], 'false,false,false': [nan, 0.2222222222222222]}
{'': [0.0, 0.12094142445652091], 'false': [nan, 0.12094142445652091], 'true': [0.0, nan]}
{'': [nan, 0.08642006155461031], 'false': [0.0, 0.12176542966360233], 'false,false': [nan, 0.12176542966360233], 'false,false,false': [nan, 0.12176542966360233]}
{'': [0.0, 0.12254934658872395], 'false': [nan, 0.12254934658872395]}
{'': [0.014526256515960238, 0.11195338127809847], 'false': [-5.782411586589357e-19, 0.2222222222222222], 'false,false': [0.2222222222222222, nan], 'true': [nan, 0.014526256515960238], 'true,false': [0.0, 0.0]}
{'': [0.0, 0.1196969305094015], 'false': [-4.625929269271485e-18, 0.2222222222222222], 'false,false': [nan, 0.2222222222222222], 'false,false,false': [nan, 0.2222222222222222]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
3;false;athleteledsportsteam(D, A).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
4;false;athleteledsportsteam(E, F), athleteledsportsteam(G, A).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
8;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
8;true;teamplaysagainstteam(B, E).;true;true
8;false;teamplaysagainstteam(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
9;false;athleteplaysforteam(D, A).;true;true


Refining candidate
***************************
Model training time 0.9102826118469238
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.5851860008555361;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.46125983910675533;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteledsportsteam(D, A) )
%   | then return 0.5155129923615089;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.1821796590281756;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteledsportsteam(D, E), athleteledsportsteam(F, A) )
%   | then return 0.3885429256897412;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.13667576989135657;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.2019691530373854;  // std dev = 0.852, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.15716818726146384;  // std dev = 0.855, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.12432610499734155;  // std dev = 0.857, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.20991340385619173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( teamplaysagainstteam(B, E) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.010383195507509732;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.1772106792407251;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.008108714221377452;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
Inference time using transfer learning 7.3940324783325195
Refined model CLL: -0.265676


******************************************
Best model found
******************************************
Results 

CLL : -0.634727 

AUC ROC : 0.78722 

AUC PR : 0.005869 

Precision : 0.00545 

Recall : 1.0 

F1 : 0.01084 

Total Learning Time : 0.9102826118469238 

Total Inference Time : 0.671623945236206 

Total revision time: 3.3743720054626465
Best scored revision CLL: -0.265676


Results 

CLL : -0.634727 

AUC ROC : 0.78722 

AUC PR : 0.005869 

Precision : 0.00545 

Recall : 1.0 

F1 : 0.01084 

Total Learning Time : 3.4259040355682373 

Total Inference Time : 0.671623945236206 

Amount of data: 10
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.329773187637329
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6914822684328455;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysinleague(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.5851860008555358;  // std dev = 0.373, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.46125983910675544;  // std dev = 0.373, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783627;  // std dev = 1.32e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteledsportsteam(D, A) )
%   | then if ( teamplaysagainstteam(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(F, G) )
%   | | | then return 0.5155129923615088;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1821796590281756;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(G, A) )
%   | | then return 0.3885429256897411;  // std dev = 1.49e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( teamplaysagainstteam(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13667576989135657;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20196915303738538;  // std dev = 0.348, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, A), athleteledsportsteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( teamplaysagainstteam(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15716818726146395;  // std dev = 1.209, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12432610499734158;  // std dev = 0.350, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysinleague(C, D), teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.11317258734859974;  // std dev = 0.851, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( teamplaysinleague(G, H) )
%   | | then return 0.0729501378258236;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.09349835271696677;  // std dev = 0.855, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( athleteplaysforteam(E, A), teamplaysinleague(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.057209627480287906;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
Inference time using transfer learning 32.925790786743164
Parameter learned model CLL:-0.277235 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, A)', 'false,false,false': 'teamplaysagainstteam(B, F)'}, {'true': [0.0, 8, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.291, 2, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysinleague(D, A)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 8, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.373, 2, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [0.0, 8, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.373, 2, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteledsportsteam(D, A)', 'false,true': 'teamplaysagainstteam(B, E)', 'false,true,false': 'athleteledsportsteam(F, G)', 'false,false': 'teamplaysagainstteam(B, H)', 'false,false,false': 'teamplaysinleague(I, A)'}, {'true': [1.32e-09, 8, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [2.11e-08, 0, 6], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.155, 2, 4]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(G, A)', 'false,false,false': 'teamplaysagainstteam(B, H)'}, {'true': [0.0, 8, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.49e-08, 0, 6], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.155, 2, 4]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)'}, {'true,true': [3.73e-09, 8, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.348, 2, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(C, A), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysagainstteam(B, G)', 'false,false,false': 'teamplaysinleague(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 8, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.209, 2, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)'}, {'true': [2.63e-09, 8, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.35, 2, 10]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'teamplaysinleague(C, D), teamplaysagainstteam(B, D)', 'true,false': 'teamplaysagainstteam(B, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysinleague(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 3, 0], 'true,false,false': [0.851, 1, 7], 'false,true': [1.86e-09, 5, 0], 'false,false,true': [0.866, 1, 3], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteplaysforteam(D, A)', 'false,false': 'athleteplaysforteam(E, A), teamplaysinleague(E, F)', 'false,false,false': 'teamplaysagainstteam(B, G)'}, {'true': [0.0, 8, 0], 'false,true': [0.855, 1, 7], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.866, 1, 3]}]
{'': [-6.938893903907228e-18, 0.1388888888888887], 'false': [nan, 0.1388888888888887], 'false,false': [nan, 0.1388888888888887], 'false,false,false': [nan, 0.1388888888888887]}
{'': [0.0, 0.13888888888888914], 'false': [nan, 0.13888888888888914], 'false,false': [0.13888888888888914, nan], 'true': [nan, 0.0]}
{'': [-1.734723475976807e-18, 0.1388888888888891], 'false': [nan, 0.1388888888888891], 'false,false': [0.1388888888888891, nan], 'true': [-1.734723475976807e-18, nan]}
{'': [1.734723475976807e-18, 0.138888888888889], 'false': [7.401486830834377e-17, 0.22222222222222224], 'false,false': [nan, 0.22222222222222224], 'false,false,false': [nan, 0.22222222222222224], 'false,true': [nan, 7.401486830834377e-17], 'false,true,false': [7.401486830834377e-17, nan]}
{'': [0.0, 0.12697037715360307], 'false': [nan, 0.12697037715360307], 'false,false': [3.700743415417188e-17, 0.22222222222222224], 'false,false,false': [nan, 0.22222222222222224]}
{'': [1.734723475976807e-18, 0.12094142445652097], 'false': [nan, 0.12094142445652097], 'true': [1.734723475976807e-18, nan]}
{'': [nan, 0.08642006155461027], 'false': [0.0, 0.12176542966360232], 'false,false': [nan, 0.12176542966360232], 'false,false,false': [nan, 0.12176542966360232]}
{'': [8.673617379884035e-19, 0.12254934658872392], 'false': [nan, 0.12254934658872392]}
{'': [0.07241488464971764, 0.08826851576177186], 'false': [6.938893903907229e-19, 0.18749999999999997], 'false,false': [0.18749999999999997, nan], 'true': [nan, 0.07241488464971764], 'true,false': [-5.782411586589357e-19, 0.09057635673566676]}
{'': [0.0, 0.1237696660022511], 'false': [0.09146554181027565, 0.1875], 'false,false': [nan, 0.1875], 'false,false,false': [nan, 0.1875]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
3;false;athleteledsportsteam(D, A).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
4;false;athleteledsportsteam(E, F), athleteledsportsteam(G, A).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
8;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
8;true;teamplaysagainstteam(B, E).;true;true
8;false;teamplaysagainstteam(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true


Refining candidate
***************************
Model training time 4.547152996063232
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamalsoknownas(D, A) )
%   | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | then return 0.7321103098799092;  // std dev = 0.107, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.12862813155801708;  // std dev = 0.724, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysinleague(A, D), teamalsoknownas(A, E) )
%   | then return 0.06045187216947612;  // std dev = 0.602, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysinleague(A, F) )
%   | | then return 0.5522438067852592;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.6503722903062283;  // std dev = 0.121, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteledsportsteam(D, A) )
%   | then return 0.43610514067680045;  // std dev = 0.114, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.25180250991510705;  // std dev = 0.787, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteledsportsteam(D, E), athleteledsportsteam(F, A) )
%   | then return 0.33420132424626164;  // std dev = 0.107, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1970877550598169;  // std dev = 0.765, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return 0.247347478911645;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3683121719793885;  // std dev = 0.135, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.06563433728155825;  // std dev = 0.512, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysinleague(A, D), teamalsoknownas(A, E) )
%   | then return -0.06160353041362628;  // std dev = 0.491, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysagainstteam(F, A), athleteplaysforteam(G, F) )
%   | | then return 0.20707015417232452;  // std dev = 0.016, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.32095060963557387;  // std dev = 0.101, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamalsoknownas(D, A) )
%   | then return -0.07124784384237581;  // std dev = 0.438, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysagainstteam(E, A), teamalsoknownas(F, E) )
%   | | then return 0.17512976860280416;  // std dev = 0.014, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.2783300771488966;  // std dev = 0.121, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysagainstteam(A, E), teamalsoknownas(E, F) )
%   | | then return 0.052502910357823514;  // std dev = 0.334, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.2080907092631058;  // std dev = 0.123, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( teamplaysagainstteam(B, G) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.09342489793044195;  // std dev = 0.400, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return 0.1352885791799367;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.20472358094101104;  // std dev = 0.126, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.0983303675375593;  // std dev = 0.373, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
Inference time using transfer learning 8.342256546020508
Refined model CLL: -0.134727


******************************************
Best model found
******************************************
Results 

CLL : -0.474032 

AUC ROC : 0.946702 

AUC PR : 0.179477 

Precision : 0.006846 

Recall : 0.954887 

F1 : 0.013595 

Total Learning Time : 4.547152996063232 

Total Inference Time : 0.7066664695739746 

Total revision time: 7.227785587310791
Best scored revision CLL: -0.134727


Results 

CLL : -0.474032 

AUC ROC : 0.946702 

AUC PR : 0.179477 

Precision : 0.006846 

Recall : 0.954887 

F1 : 0.013595 

Total Learning Time : 7.279317617416382 

Total Inference Time : 0.7066664695739746 

Amount of data: 15
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.351597547531128
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6476226193100386;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysinleague(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.5494185715067316;  // std dev = 0.408, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.43580662724469027;  // std dev = 0.408, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteledsportsteam(D, A) )
%   | then if ( teamplaysagainstteam(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(F, G) )
%   | | | then return 0.5416910205781768;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20835768724484338;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(G, A) )
%   | | then return 0.40744473510372886;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( teamplaysagainstteam(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15636674764612543;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18981323995041546;  // std dev = 0.386, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, A), athleteledsportsteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.07877675473109172;  // std dev = 1.32e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( teamplaysagainstteam(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1459905108619993;  // std dev = 1.688, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11377429483288719;  // std dev = 0.388, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysinleague(C, D), teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.08689868645724615;  // std dev = 1.171, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( teamplaysinleague(G, H) )
%   | | then return 0.09363199804813867;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.06419184008202619;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.07043175893666;  // std dev = 1.175, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( athleteplaysforteam(E, A), teamplaysinleague(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07283310071599858;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
Inference time using transfer learning 27.94037365913391
Parameter learned model CLL:-0.329814 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, A)', 'false,false,false': 'teamplaysagainstteam(B, F)'}, {'true': [0.0, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.777, 4, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysinleague(D, A)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [5.27e-09, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.408, 4, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [7.45e-09, 11, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.408, 4, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteledsportsteam(D, A)', 'false,true': 'teamplaysagainstteam(B, E)', 'false,true,false': 'athleteledsportsteam(F, G)', 'false,false': 'teamplaysagainstteam(B, H)', 'false,false,false': 'teamplaysinleague(I, A)'}, {'true': [0.0, 11, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [2.11e-08, 0, 7], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.633, 4, 8]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(G, A)', 'false,false,false': 'teamplaysagainstteam(B, H)'}, {'true': [0.0, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 7], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.633, 4, 8]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)'}, {'true,true': [5.27e-09, 11, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.386, 4, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(C, A), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysagainstteam(B, G)', 'false,false,false': 'teamplaysinleague(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [1.32e-09, 11, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.688, 4, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)'}, {'true': [2.63e-09, 11, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.388, 4, 15]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'teamplaysinleague(C, D), teamplaysagainstteam(B, D)', 'true,false': 'teamplaysagainstteam(B, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysinleague(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [1.86e-09, 5, 0], 'true,false,false': [1.171, 2, 9], 'false,true': [1.86e-09, 6, 0], 'false,false,true': [1.225, 2, 6], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteplaysforteam(D, A)', 'false,false': 'athleteplaysforteam(E, A), teamplaysinleague(E, F)', 'false,false,false': 'teamplaysagainstteam(B, G)'}, {'true': [5.27e-09, 11, 0], 'false,true': [1.175, 2, 9], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.225, 2, 6]}]
{'': [-1.0092936587501423e-17, 0.16620498614958412], 'false': [nan, 0.16620498614958412], 'false,false': [nan, 0.16620498614958412], 'false,false,false': [nan, 0.16620498614958412]}
{'': [2.523234146875356e-18, 0.16620498614958432], 'false': [nan, 0.16620498614958432], 'false,false': [0.16620498614958432, nan], 'true': [nan, 2.523234146875356e-18]}
{'': [5.046468293750712e-18, 0.16620498614958465], 'false': [nan, 0.16620498614958465], 'false,false': [0.16620498614958465, nan], 'true': [5.046468293750712e-18, nan]}
{'': [0.0, 0.16620498614958448], 'false': [6.344131569286608e-17, 0.2222222222222223], 'false,false': [nan, 0.2222222222222223], 'false,false,false': [nan, 0.2222222222222223], 'false,true': [nan, 6.344131569286608e-17], 'false,true,false': [6.344131569286608e-17, nan]}
{'': [0.0, 0.15501950069991843], 'false': [nan, 0.15501950069991843], 'false,false': [-3.172065784643304e-17, 0.2222222222222222], 'false,false,false': [nan, 0.2222222222222222]}
{'': [2.523234146875356e-18, 0.1493316859850528], 'false': [nan, 0.1493316859850528], 'true': [2.523234146875356e-18, nan]}
{'': [nan, 0.10672422779042652], 'false': [0.0, 0.14998781993299135], 'false,false': [nan, 0.14998781993299135], 'false,false,false': [nan, 0.14998781993299135]}
{'': [6.30808536718839e-19, 0.15061485964960797], 'false': [nan, 0.15061485964960797]}
{'': [0.09093210143741406, 0.11357463959198556], 'false': [5.782411586589357e-19, 0.1875], 'false,false': [0.1875, nan], 'true': [nan, 0.09093210143741406], 'true,false': [6.938893903907229e-19, 0.12472548044596735]}
{'': [2.523234146875356e-18, 0.15162102248544], 'false': [0.1255247926809465, 0.1875], 'false,false': [nan, 0.1875], 'false,false,false': [nan, 0.1875]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
3;false;athleteledsportsteam(D, A).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
4;false;athleteledsportsteam(E, F), athleteledsportsteam(G, A).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
8;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
8;true;teamplaysagainstteam(B, E).;true;true
8;false;teamplaysagainstteam(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true


Refining candidate
***************************
Model training time 2.3139443397521973
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteledsportsteam(D, A) )
%   | then return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteledsportsteam(D, E), athleteledsportsteam(F, A) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2551722425694894;  // std dev = 2.36e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07877675473109172;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527741;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( athleteplayssport(E, B), athleteplaysforteam(E, F) )
%   | | then return 0.15274385809367075;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.005296634135088435;  // std dev = 0.181, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamplaysagainstteam(B, G) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( teamplaysinleague(A, H) )
%   | | then return 0.06427552371852137;  // std dev = 0.242, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.15274385809367075;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.06419184008202619;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.13733115387756947;  // std dev = 0.022, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07070249653263516;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning 8.010285139083862
Refined model CLL: -0.096976


******************************************
Best model found
******************************************
Results 

CLL : -0.113118 

AUC ROC : 0.992588 

AUC PR : 0.146245 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 2.3139443397521973 

Total Inference Time : 0.7605280876159668 

Total revision time: 5.243935585021973
Best scored revision CLL: -0.096976


Results 

CLL : -0.113118 

AUC ROC : 0.992588 

AUC PR : 0.146245 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 5.2954676151275635 

Total Inference Time : 0.7605280876159668 

Amount of data: 20
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.4147686958312988
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6273797043302811;  // std dev = 2.148, 26.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysinleague(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.5328490890947367;  // std dev = 0.421, 26.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.42393250893969897;  // std dev = 0.421, 26.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteledsportsteam(D, A) )
%   | then if ( teamplaysagainstteam(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(F, G) )
%   | | | then return 0.5537511637364885;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22041783040315513;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926096;  // std dev = 1.32e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(G, A) )
%   | | then return 0.41631665295911974;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( teamplaysagainstteam(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16552188547505572;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18444575858306608;  // std dev = 0.402, 26.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, A), athleteledsportsteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( teamplaysagainstteam(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.141168833447962;  // std dev = 2.056, 26.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10931344350973435;  // std dev = 0.404, 26.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysinleague(C, D), teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.07046010828051798;  // std dev = 1.413, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( teamplaysinleague(G, H) )
%   | | then return 0.10319397013523086;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.06419184008202619;  // std dev = 6.97e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.05656651332281304;  // std dev = 1.416, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | else if ( athleteplaysforteam(E, A), teamplaysinleague(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07999160577280957;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
Inference time using transfer learning 26.919965028762817
Parameter learned model CLL:-0.354684 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, A)', 'false,false,false': 'teamplaysagainstteam(B, F)'}, {'true': [0.0, 14, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.148, 6, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysinleague(D, A)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [7.45e-09, 14, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.421, 6, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [1.18e-08, 14, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.421, 6, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteledsportsteam(D, A)', 'false,true': 'teamplaysagainstteam(B, E)', 'false,true,false': 'athleteledsportsteam(F, G)', 'false,false': 'teamplaysagainstteam(B, H)', 'false,false,false': 'teamplaysinleague(I, A)'}, {'true': [0.0, 14, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 8], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.0, 6, 12]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(G, A)', 'false,false,false': 'teamplaysagainstteam(B, H)'}, {'true': [1.32e-09, 14, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 8], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.0, 6, 12]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)'}, {'true,true': [8.33e-09, 14, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.402, 6, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(C, A), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysagainstteam(B, G)', 'false,false,false': 'teamplaysinleague(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 14, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.056, 6, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)'}, {'true': [3.73e-09, 14, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.404, 6, 20]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'teamplaysinleague(C, D), teamplaysagainstteam(B, D)', 'true,false': 'teamplaysagainstteam(B, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysinleague(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.63e-09, 7, 0], 'true,false,false': [1.413, 3, 11], 'false,true': [2.63e-09, 7, 0], 'false,false,true': [1.5, 3, 9], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteplaysforteam(D, A)', 'false,false': 'athleteplaysforteam(E, A), teamplaysinleague(E, F)', 'false,false,false': 'teamplaysagainstteam(B, G)'}, {'true': [6.97e-09, 14, 0], 'false,true': [1.416, 3, 11], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.5, 3, 9]}]
{'': [-1.1895246692412391e-17, 0.17751479289940847], 'false': [nan, 0.17751479289940847], 'false,false': [nan, 0.17751479289940847], 'false,false,false': [nan, 0.17751479289940847]}
{'': [3.96508223080413e-18, 0.17751479289940864], 'false': [nan, 0.17751479289940864], 'false,false': [0.17751479289940864, nan], 'true': [nan, 3.96508223080413e-18]}
{'': [9.912705577010326e-18, 0.17751479289940802], 'false': [nan, 0.17751479289940802], 'false,false': [0.17751479289940802, nan], 'true': [9.912705577010326e-18, nan]}
{'': [-3.96508223080413e-18, 0.17751479289940847], 'false': [0.0, 0.22222222222222238], 'false,false': [nan, 0.22222222222222238], 'false,false,false': [nan, 0.22222222222222238], 'false,true': [nan, 0.0], 'false,true,false': [0.0, nan]}
{'': [3.96508223080413e-18, 0.16724454765861468], 'false': [nan, 0.16724454765861468], 'false,false': [-5.551115123125783e-17, 0.22222222222222227], 'false,false,false': [nan, 0.22222222222222227]}
{'': [4.956352788505163e-18, 0.16200081425102125], 'false': [nan, 0.16200081425102125], 'true': [4.956352788505163e-18, nan]}
{'': [nan, 0.11666771604063408], 'false': [-9.912705577010326e-19, 0.1625571722928673], 'false,false': [nan, 0.1625571722928673], 'false,false,false': [nan, 0.1625571722928673]}
{'': [9.912705577010326e-19, 0.16309061104604103], 'false': [nan, 0.16309061104604103]}
{'': [0.09931744164134727, 0.12527455673675952], 'false': [9.912705577010326e-19, 0.1875], 'false,false': [0.1875, nan], 'true': [nan, 0.09931744164134727], 'true,false': [9.912705577010326e-19, 0.14254628823128238]}
{'': [3.469446951953614e-18, 0.1637887002481469], 'false': [0.14321146674475393, 0.18750000000000003], 'false,false': [nan, 0.18750000000000003], 'false,false,false': [nan, 0.18750000000000003]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
3;false;athleteledsportsteam(D, A).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
4;false;athleteledsportsteam(E, F), athleteledsportsteam(G, A).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
8;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
8;true;teamplaysagainstteam(B, E).;true;true
8;false;teamplaysagainstteam(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true


Refining candidate
***************************
Model training time 2.5580801963806152
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteledsportsteam(D, A) )
%   | then return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.4175135841583098;  // std dev = 4.21e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteledsportsteam(D, E), athleteledsportsteam(F, A) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.25517224256948945;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527744;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.15274385809367078;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.15274385809367075;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.06419184008202619;  // std dev = 6.97e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning 7.829073190689087
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results 

CLL : -0.109767 

AUC ROC : 0.991093 

AUC PR : 0.122807 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 2.5580801963806152 

Total Inference Time : 0.7208325862884521 

Total revision time: 5.46937894821167
Best scored revision CLL: -0.094637


Results 

CLL : -0.109767 

AUC ROC : 0.991093 

AUC PR : 0.122807 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 5.520910978317261 

Total Inference Time : 0.7208325862884521 

Amount of data: 25
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.5565638542175293
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(A, E) )
%   | | then if ( athleteplaysforteam(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6081489350995123;  // std dev = 2.121, 24.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | else if ( teamplaysagainstteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.5627755154567096;  // std dev = 0.390, 31.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(D, B) )
%   | then return -0.11231637819360635;  // std dev = 1.67e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.4454924649255773;  // std dev = 0.389, 31.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.10159632948783635;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( athleteledsportsteam(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return 0.2957673029476952;  // std dev = 2.121, 24.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | | else return 0.48340187216202374;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.09269127618926093;  // std dev = 2.63e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.25448209376480607;  // std dev = 2.148, 31.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(D, B) )
%   | then return -0.08518475138839683;  // std dev = 1.29e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19316345709729543;  // std dev = 0.386, 31.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteledsportsteam(D, E) )
%   then return 0.03664140734825033;  // std dev = 2.203, 40.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=18 */
%   else if ( teamplaysagainstteam(F, B) )
%   | then return -0.07877675473109177;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysagainstteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.26944025467073457;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.0801776020829354;  // std dev = 0.013, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13103702906298545;  // std dev = 0.384, 31.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(D, B) )
%   | then return -0.0744607401808393;  // std dev = 0.012, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( teamplaysinleague(E, F) )
%   | | then return 0.10338074764959541;  // std dev = 2.140, 31.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.06948954137338631;  // std dev = 0.011, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( athleteplaysforteam(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(A, E), teamplaysinleague(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08253451556341806;  // std dev = 2.142, 31.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
Inference time using transfer learning 32.822652101516724
Parameter learned model CLL:-0.323232 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(A, E)', 'false,false,true': 'athleteplaysforteam(A, E)', 'false,false,false': 'teamplaysagainstteam(F, B)'}, {'true': [0.0, 19, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [2.121, 6, 18], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 7]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysinleague(A, D)', 'false': 'teamplaysagainstteam(E, B)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [7.45e-09, 16, 0], 'true,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.39, 6, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysagainstteam(D, B)', 'false': 'teamplaysagainstteam(E, B)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [1.67e-08, 19, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.389, 6, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'athleteledsportsteam(A, D)', 'false,false': 'teamplaysagainstteam(E, B)', 'false,false,false': 'teamplaysinleague(A, F)'}, {'true': [0.0, 19, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.121, 6, 18], 'false,false,false,false': [2.11e-08, 0, 7]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(A, G)', 'false,false,false': 'teamplaysagainstteam(H, B)'}, {'true': [2.63e-09, 19, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.148, 6, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysagainstteam(D, B)', 'false': 'teamplaysagainstteam(E, B)'}, {'true,true': [1.29e-08, 19, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.386, 6, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(F, B)', 'false,false': 'teamplaysagainstteam(G, B)', 'false,false,false': 'teamplaysinleague(A, H)'}, {'true': [2.203, 22, 18], 'false,true': [0.0, 3, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 7]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)'}, {'true': [0.013, 19, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.384, 6, 25]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(A, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.012, 19, 0], 'false,false,true': [2.14, 6, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'athleteplaysforteam(A, D)', 'false,false': 'athleteplaysforteam(A, E), teamplaysinleague(F, E)', 'false,false,false': 'teamplaysagainstteam(G, B)'}, {'true': [0.011, 19, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.142, 6, 25]}]
{'': [0.0, 0.15608740894901246], 'false': [nan, 0.15608740894901246], 'false,false': [0.18749999999999956, -2.5376526277146434e-16], 'false,false,true': [nan, 0.18749999999999956], 'false,false,false': [nan, -2.5376526277146434e-16]}
{'': [0.0, 0.15232294098634888], 'false': [nan, 0.15232294098634888], 'false,false': [0.15232294098634888, nan], 'true': [3.469446951953614e-18, 0.0]}
{'': [1.460819769243627e-17, 0.15156357489908465], 'false': [nan, 0.15156357489908465], 'false,false': [0.15156357489908465, nan], 'true': [1.460819769243627e-17, nan]}
{'': [-5.843279076974508e-18, 0.15131605713089855], 'false': [nan, 0.15131605713089855], 'false,false': [nan, 0.15131605713089855], 'false,false,false': [0.18750000000000008, 6.344131569286608e-17]}
{'': [7.304098846218135e-18, 0.14878244508469232], 'false': [nan, 0.14878244508469232], 'false,false': [nan, 0.14878244508469232], 'false,false,false': [nan, 0.14878244508469232]}
{'': [8.764918615461762e-18, 0.14908208835934272], 'false': [nan, 0.14908208835934272], 'true': [8.764918615461762e-18, nan]}
{'': [0.12138090142518212, 0.02546356798371784], 'false': [0.0, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [nan, 0.0]}
{'': [9.008245815721986e-06, 0.1474586503582627], 'false': [nan, 0.1474586503582627]}
{'': [nan, 0.09907830853377617], 'false': [7.85931016245461e-06, 0.14778042042340114], 'false,false': [0.14778042042340114, nan]}
{'': [6.91330590458184e-06, 0.14806012640727817], 'false': [nan, 0.14806012640727817], 'false,false': [nan, 0.14806012640727817], 'false,false,false': [nan, 0.14806012640727817]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
0;false;teamplaysinleague(A, E).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
1;true;teamplaysinleague(A, D).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
3;false;teamplaysinleague(A, F).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
6;;teamplayssport(A, B) :- teamplaysinleague(A, C), athleteledsportsteam(D, E).;true;true
6;false;teamplaysagainstteam(F, B).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(D, B).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true


Refining candidate
***************************
Model training time 7.105178117752075
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( teamplaysinleague(A, D) )
%   | then if ( athleteplayssport(E, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.7194734122109543;  // std dev = 4.21e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.10159632948783633;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( teamplaysinleague(A, D) )
%   | then if ( athleteplayssport(E, B) )
%   | | then if ( athleteledsportsteam(E, A) )
%   | | | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4175135841583098;  // std dev = 4.21e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( teamalsoknownas(F, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return -0.09269127618926098;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( athleteplaysforteam(E, A) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( athleteplaysforteam(F, A) )
%   | | | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.3207118471601497;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then if ( teamalsoknownas(D, E) )
%   | | then if ( teamalsoknownas(E, D) )
%   | | | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamalsoknownas(A, F) )
%   | | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(G, B) )
%   | then return 0.25517224256948956;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteledsportsteam(D, E) )
%   then if ( athleteplayssport(F, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( teamplaysagainstteam(G, B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.2097577156325356;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527747;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.06842697784420274;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then if ( teamalsoknownas(D, E) )
%   | | then return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamalsoknownas(A, F) )
%   | | then return -0.06419184008202618;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06419184008202619;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(G, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.06419184008202618;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning 18.226542234420776
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results 

CLL : -0.123791 

AUC ROC : 0.991093 

AUC PR : 0.122807 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 7.105178117752075 

Total Inference Time : 0.7648639678955078 

Total revision time: 10.232506275177002
Best scored revision CLL: -0.094637


Results 

CLL : -0.123791 

AUC ROC : 0.991093 

AUC PR : 0.122807 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 10.284038305282593 

Total Inference Time : 0.7648639678955078 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 266
Target train neg examples: 106662

Target test facts examples: 9691
Target test pos examples: 131
Target test neg examples: 53329

Amount of data: 5
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.0836586952209473
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(A, E) )
%   | | then if ( athleteplaysforteam(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.48767788391726297;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(D, B) )
%   | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.3912569620992536;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteledsportsteam(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return 0.3005711547884894;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.09269127618926094;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22629823971521876;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16984358676510128;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteledsportsteam(D, E) )
%   then return 0.06606021839839973;  // std dev = 1.232, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.08370618362386956;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11220491210641793;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(D, B) )
%   | then return -0.07750565074311516;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysinleague(E, F) )
%   | | then return 0.08565486706656623;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.07214241837532386;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplaysforteam(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(A, E), teamplaysinleague(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0658882561947328;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
Inference time using transfer learning 32.99842190742493
Parameter learned model CLL:-0.443935 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(A, E)', 'false,false,true': 'athleteplaysforteam(A, E)'}, {'true': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.195, 2, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysinleague(A, D)', 'false': 'teamplaysagainstteam(E, B)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [0.0, 3, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.452, 2, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysagainstteam(D, B)', 'false': 'teamplaysagainstteam(E, B)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [2.63e-09, 3, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.452, 2, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'athleteledsportsteam(A, D)', 'false,false': 'teamplaysagainstteam(E, B)', 'false,false,false': 'teamplaysinleague(A, F)'}, {'true': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.195, 2, 5], 'false,false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(A, G)', 'false,false,false': 'teamplaysagainstteam(H, B)'}, {'true': [1.32e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.195, 2, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysagainstteam(D, B)', 'false': 'teamplaysagainstteam(E, B)'}, {'true,true': [0.0, 3, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.452, 2, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C), athleteledsportsteam(D, E)'}, {'true': [1.232, 5, 5], 'false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)'}, {'true': [1.86e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.452, 2, 5]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(A, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [1.86e-09, 3, 0], 'false,false,true': [1.195, 2, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'athleteplaysforteam(A, D)', 'false,false': 'athleteplaysforteam(A, E), teamplaysinleague(F, E)', 'false,false,false': 'teamplaysagainstteam(G, B)'}, {'true': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.195, 2, 5]}]
{'': [0.0, 0.20408163265306106], 'false': [nan, 0.20408163265306106], 'false,false': [0.20408163265306106, nan], 'false,false,true': [nan, 0.20408163265306106]}
{'': [0.0, 0.20408163265306115], 'false': [nan, 0.20408163265306115], 'false,false': [0.20408163265306115, nan], 'true': [0.0, nan]}
{'': [2.3129646346357427e-18, 0.20408163265306115], 'false': [nan, 0.20408163265306115], 'false,false': [0.20408163265306115, nan], 'true': [2.3129646346357427e-18, nan]}
{'': [-1.1564823173178713e-18, 0.2040816326530612], 'false': [nan, 0.2040816326530612], 'false,false': [nan, 0.2040816326530612], 'false,false,false': [0.2040816326530612, nan]}
{'': [2.3129646346357427e-18, 0.20408163265306128], 'false': [nan, 0.20408163265306128], 'false,false': [nan, 0.20408163265306128], 'false,false,false': [nan, 0.20408163265306128]}
{'': [0.0, 0.2040816326530612], 'false': [nan, 0.2040816326530612], 'true': [0.0, nan]}
{'': [0.151847606622277, nan]}
{'': [1.1564823173178713e-18, 0.20408163265306123], 'false': [nan, 0.20408163265306123]}
{'': [nan, 0.14844762731724676], 'false': [1.1564823173178713e-18, 0.20408163265306123], 'false,false': [0.20408163265306123, nan]}
{'': [0.0, 0.20408163265306126], 'false': [nan, 0.20408163265306126], 'false,false': [nan, 0.20408163265306126], 'false,false,false': [nan, 0.20408163265306126]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(D, B).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true


Refining candidate
***************************
Model training time 1.5251188278198242
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.19148226843284555;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.16653882456488173;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteledsportsteam(D, A) )
%   | then return 0.6398312609916001;  // std dev = 0.207, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.18206367311425797;  // std dev = 0.747, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | then return 0.45360168485870234;  // std dev = 0.113, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.08281890891330257;  // std dev = 0.744, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteledsportsteam(D, A) )
%   | then return 0.42084290435978805;  // std dev = 0.308, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.08127468369595431;  // std dev = 0.634, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | then return 0.29717553519547024;  // std dev = 0.163, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.02434170056119526;  // std dev = 0.673, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.3061459523953963;  // std dev = 0.326, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.1493147497443495;  // std dev = 0.193, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.06859981517931513;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteledsportsteam(D, A) )
%   | then return 0.25110038852821853;  // std dev = 0.295, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.0111699860436488;  // std dev = 0.478, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.06434431272022072;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteledsportsteam(D, A) )
%   | then return 0.21301486387737723;  // std dev = 0.265, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.009139928985579138;  // std dev = 0.478, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.06057741301240956;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | then return 0.1663365533885996;  // std dev = 0.160, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.028108124548598474;  // std dev = 0.498, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
Inference time using transfer learning 3.963505506515503
Refined model CLL: -0.181913


******************************************
Best model found
******************************************
Results 

CLL : -0.202302 

AUC ROC : 0.986879 

AUC PR : 0.226444 

Precision : 0.019186 

Recall : 0.938931 

F1 : 0.037603 

Total Learning Time : 1.5251188278198242 

Total Inference Time : 0.617750883102417 

Total revision time: 3.918708324432373
Best scored revision CLL: -0.181913


Results 

CLL : -0.202302 

AUC ROC : 0.986879 

AUC PR : 0.226444 

Precision : 0.019186 

Recall : 0.938931 

F1 : 0.037603 

Total Learning Time : 3.970240354537964 

Total Inference Time : 0.617750883102417 

Amount of data: 10
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.356431007385254
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(A, E) )
%   | | then if ( athleteplaysforteam(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5010060779566552;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | else if ( teamplaysagainstteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.41355005341655726;  // std dev = 0.483, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(D, B) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.3365287186738812;  // std dev = 0.483, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteledsportsteam(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return 0.27674100375894334;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.16636106607596737;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20022478193139415;  // std dev = 1.930, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15080560052307684;  // std dev = 0.483, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteledsportsteam(D, E) )
%   then return 0.0875185787888648;  // std dev = 1.821, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   else if ( teamplaysagainstteam(F, B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamplaysagainstteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04348507324129394;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.08233665551921582;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09277389158258798;  // std dev = 0.482, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(D, B) )
%   | then return -0.07632767014671529;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( teamplaysinleague(E, F) )
%   | | then return 0.0698175276361371;  // std dev = 1.929, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.07111911050976519;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplaysforteam(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(A, E), teamplaysinleague(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05269024749112297;  // std dev = 1.929, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
Inference time using transfer learning 32.98429870605469
Parameter learned model CLL:-0.542888 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(A, E)', 'false,false,true': 'athleteplaysforteam(A, E)', 'false,false,false': 'teamplaysagainstteam(F, B)'}, {'true': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.793, 5, 9], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.707, 1, 1]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysinleague(A, D)', 'false': 'teamplaysagainstteam(E, B)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [0.0, 3, 0], 'true,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.483, 6, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysagainstteam(D, B)', 'false': 'teamplaysagainstteam(E, B)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [0.0, 4, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.483, 6, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'athleteledsportsteam(A, D)', 'false,false': 'teamplaysagainstteam(E, B)', 'false,false,false': 'teamplaysinleague(A, F)'}, {'true': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.793, 5, 9], 'false,false,false,false': [0.707, 1, 1]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(A, G)', 'false,false,false': 'teamplaysagainstteam(H, B)'}, {'true': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.93, 6, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysagainstteam(D, B)', 'false': 'teamplaysagainstteam(E, B)'}, {'true,true': [0.0, 4, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.483, 6, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(F, B)', 'false,false': 'teamplaysagainstteam(G, B)', 'false,false,false': 'teamplaysinleague(A, H)'}, {'true': [1.821, 8, 9], 'false,true': [0.0, 1, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.707, 1, 1]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)'}, {'true': [0.01, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.482, 6, 10]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(A, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.01, 4, 0], 'false,false,true': [1.929, 6, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'athleteplaysforteam(A, D)', 'false,false': 'athleteplaysforteam(A, E), teamplaysinleague(F, E)', 'false,false,false': 'teamplaysagainstteam(G, B)'}, {'true': [0.009, 4, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.929, 6, 10]}]
{'': [0.0, 0.23437499999999994], 'false': [nan, 0.23437499999999994], 'false,false': [0.22959183673469377, 0.25], 'false,false,false': [nan, 0.25], 'false,false,true': [nan, 0.22959183673469377]}
{'': [0.0, 0.23371212988785206], 'false': [nan, 0.23371212988785206], 'false,false': [0.23371212988785206, nan], 'true': [0.0, 0.0]}
{'': [0.0, 0.2335697816109388], 'false': [nan, 0.2335697816109388], 'false,false': [0.2335697816109388, nan], 'true': [0.0, nan]}
{'': [0.0, 0.23347545268192416], 'false': [nan, 0.23347545268192416], 'false,false': [nan, 0.23347545268192416], 'false,false,false': [0.22959183673469385, 0.25]}
{'': [0.0, 0.23287957774120932], 'false': [nan, 0.23287957774120932], 'false,false': [nan, 0.23287957774120932], 'false,false,false': [nan, 0.23287957774120932]}
{'': [0.0, 0.23284722181869677], 'false': [nan, 0.23284722181869677], 'true': [0.0, nan]}
{'': [0.19500151695578238, 0.16998843435092204], 'false': [0.0, 0.24999999999999997], 'false,false': [nan, 0.24999999999999997], 'false,false,false': [nan, 0.24999999999999997]}
{'': [2.754530438218647e-05, 0.23265880006029194], 'false': [nan, 0.23265880006029194]}
{'': [nan, 0.1895518150538256], 'false': [2.3958210978279257e-05, 0.23266209549753963], 'false,false': [0.23266209549753963, nan]}
{'': [2.1016765606412906e-05, 0.23266771370360412], 'false': [nan, 0.23266771370360412], 'false,false': [nan, 0.23266771370360412], 'false,false,false': [nan, 0.23266771370360412]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
1;true;teamplaysinleague(A, D).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
6;;teamplayssport(A, B) :- teamplaysinleague(A, C), athleteledsportsteam(D, E).;true;true
6;false;teamplaysagainstteam(F, B).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(D, B).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true


Refining candidate
***************************
Model training time 63.20909142494202
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteledsportsteam(E, A), athleteplaysinleague(E, F) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( athleteledsportsteam(F, A), athleteplaysinleague(F, G) )
%   | | then return 0.308741135785635;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteledsportsteam(E, A), athleteplaysinleague(E, F) )
%   | | then return 0.2564123687585864;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteledsportsteam(D, A) )
%   | | then return 0.6099294662824631;  // std dev = 0.236, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( athleteledsportsteam(E, A) )
%   | | | then return -0.05673720038420349;  // std dev = 0.581, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteledsportsteam(D, A) )
%   | | then return 0.4709699524845809;  // std dev = 0.234, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( athleteledsportsteam(D, E), teamplaysagainstteam(A, F) )
%   | | | then return -0.08124831486517203;  // std dev = 0.492, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3391553707691635;  // std dev = 0.101, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteledsportsteam(D, A) )
%   | | then return 0.3646246312250314;  // std dev = 0.207, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( athleteledsportsteam(D, E), teamplaysagainstteam(A, F) )
%   | | | then return -0.06448828039839427;  // std dev = 0.494, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2682067427661047;  // std dev = 0.091, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteledsportsteam(D, E) )
%   then if ( athleteplayssport(F, B) )
%   | then if ( athleteledsportsteam(G, A), athleteledsportsteam(F, H) )
%   | | then return 0.07203528859848594;  // std dev = 0.620, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.24400566787834674;  // std dev = 0.143, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( teamplaysagainstteam(I, B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.06290542222126885;  // std dev = 0.200, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteledsportsteam(D, E), teamplaysinleague(A, F) )
%   | | then if ( athleteplaysinleague(D, F) )
%   | | | then return 0.2586646219434073;  // std dev = 0.200, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.12245366794394914;  // std dev = 0.355, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.19364560434089415;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.07580080183125473;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteledsportsteam(E, A), athleteplaysinleague(E, F) )
%   | | then return 0.022455505133298415;  // std dev = 0.533, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( teamalsoknownas(A, G) )
%   | | | then return 0.17299406646007554;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.16382158325314708;  // std dev = 0.110, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.07065973565029032;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(D, B), athleteledsportsteam(D, A) )
%   | then return 0.22082982835859155;  // std dev = 0.156, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( athleteplaysforteam(E, A) )
%   | | then return -0.0882674943708219;  // std dev = 0.355, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( teamplaysinleague(A, F), athleteplayssport(G, B) )
%   | | | then return 0.14876481655063292;  // std dev = 0.086, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.0021877423721962572;  // std dev = 0.173, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
Inference time using transfer learning 48.30289959907532
Refined model CLL: -0.137738


******************************************
Best model found
******************************************
Results 

CLL : -0.090473 

AUC ROC : 0.990045 

AUC PR : 0.13703 

Precision : 0.128692 

Recall : 0.931298 

F1 : 0.226135 

Total Learning Time : 63.20909142494202 

Total Inference Time : 1.1099398136138916 

Total revision time: 66.42697715759277
Best scored revision CLL: -0.137738


Results 

CLL : -0.090473 

AUC ROC : 0.990045 

AUC PR : 0.13703 

Precision : 0.128692 

Recall : 0.931298 

F1 : 0.226135 

Total Learning Time : 66.47850918769836 

Total Inference Time : 1.1099398136138916 

Amount of data: 15
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.4844245910644531
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(A, E) )
%   | | then if ( athleteplaysforteam(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4692600462106234;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | else if ( teamplaysagainstteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.39277891739220977;  // std dev = 0.490, 25.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(D, B) )
%   | then return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.3209143929351424;  // std dev = 0.490, 25.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteledsportsteam(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return 0.2606576672088683;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return 0.2299538339637517;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19290848832426452;  // std dev = 2.448, 25.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14565759680844534;  // std dev = 0.490, 25.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteledsportsteam(D, E) )
%   then return 0.0878033629923453;  // std dev = 2.092, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   else if ( teamplaysagainstteam(F, B) )
%   | then return -0.07877675473109177;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( teamplaysagainstteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09346659969942953;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.08053191259570497;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08704064059406814;  // std dev = 0.490, 25.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(D, B) )
%   | then return -0.07476924653677626;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( teamplaysinleague(E, F) )
%   | | then return 0.06533785313383249;  // std dev = 2.448, 25.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.06976054511050857;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplaysforteam(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(A, E), teamplaysinleague(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.049127773041883316;  // std dev = 2.448, 25.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
Inference time using transfer learning 32.58132290840149
Parameter learned model CLL:-0.574103 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(A, E)', 'false,false,true': 'athleteplaysforteam(A, E)', 'false,false,false': 'teamplaysagainstteam(F, B)'}, {'true': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [2.068, 7, 11], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.309, 3, 4]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysinleague(A, D)', 'false': 'teamplaysagainstteam(E, B)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [0.0, 3, 0], 'true,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.49, 10, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysagainstteam(D, B)', 'false': 'teamplaysagainstteam(E, B)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [0.0, 5, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.49, 10, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'athleteledsportsteam(A, D)', 'false,false': 'teamplaysagainstteam(E, B)', 'false,false,false': 'teamplaysinleague(A, F)'}, {'true': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.068, 7, 11], 'false,false,false,false': [1.309, 3, 4]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(A, G)', 'false,false,false': 'teamplaysagainstteam(H, B)'}, {'true': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.448, 10, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysagainstteam(D, B)', 'false': 'teamplaysagainstteam(E, B)'}, {'true,true': [0.0, 5, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.49, 10, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(F, B)', 'false,false': 'teamplaysagainstteam(G, B)', 'false,false,false': 'teamplaysinleague(A, H)'}, {'true': [2.092, 10, 11], 'false,true': [0.0, 2, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.309, 3, 4]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)'}, {'true': [0.013, 5, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.49, 10, 15]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(A, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.012, 5, 0], 'false,false,true': [2.448, 10, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'athleteplaysforteam(A, D)', 'false,false': 'athleteplaysforteam(A, E), teamplaysinleague(F, E)', 'false,false,false': 'teamplaysagainstteam(G, B)'}, {'true': [0.012, 5, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.448, 10, 15]}]
{'': [-2.7755575615628915e-18, 0.23999999999999955], 'false': [nan, 0.23999999999999955], 'false,false': [0.23765432098765396, 0.24489795918367332], 'false,false,false': [nan, 0.24489795918367332], 'false,false,true': [nan, 0.23765432098765396]}
{'': [0.0, 0.23990471298344018], 'false': [nan, 0.23990471298344018], 'false,false': [0.23990471298344018, nan], 'true': [0.0, 0.0]}
{'': [0.0, 0.23988550595625668], 'false': [nan, 0.23988550595625668], 'false,false': [0.23988550595625668, nan], 'true': [0.0, nan]}
{'': [0.0, 0.23987259311833012], 'false': [nan, 0.23987259311833012], 'false,false': [nan, 0.23987259311833012], 'false,false,false': [0.2376543209876544, 0.2448979591836735]}
{'': [0.0, 0.23978683604903556], 'false': [nan, 0.23978683604903556], 'false,false': [nan, 0.23978683604903556], 'false,false,false': [nan, 0.23978683604903556]}
{'': [0.0, 0.23978243577027286], 'false': [nan, 0.23978243577027286], 'true': [0.0, nan]}
{'': [0.20832852630716273, 0.19560395373590278], 'false': [0.0, 0.24489795918367352], 'false,false': [nan, 0.24489795918367352], 'false,false,false': [nan, 0.24489795918367352]}
{'': [3.53874884128913e-05, 0.23979395752314037], 'false': [nan, 0.23979395752314037]}
{'': [nan, 0.20256028287554884], 'false': [3.087414940560334e-05, 0.23979449805775918], 'false,false': [0.23979449805775918, nan]}
{'': [2.715760057621086e-05, 0.2397952826097707], 'false': [nan, 0.2397952826097707], 'false,false': [nan, 0.2397952826097707], 'false,false,false': [nan, 0.2397952826097707]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
1;true;teamplaysinleague(A, D).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
6;;teamplayssport(A, B) :- teamplaysinleague(A, C), athleteledsportsteam(D, E).;true;true
6;false;teamplaysagainstteam(F, B).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(D, B).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true


Refining candidate
***************************
Model training time 75.88271498680115
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteledsportsteam(E, A), athleteplaysinleague(E, F) )
%   | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( athleteledsportsteam(F, A), athleteplayssport(F, G) )
%   | | then return 0.37813002930382994;  // std dev = 1.070, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.7255834764914622;  // std dev = 0.070, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplaysforteam(D, A) )
%   | then if ( athleteplayssport(E, B) )
%   | | then if ( athleteplaysforteam(E, A) )
%   | | | then return 0.6950151591009927;  // std dev = 0.071, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.16273968463793698;  // std dev = 0.880, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.5538571448391706;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteledsportsteam(E, A), athleteplayssport(E, F) )
%   | | then return 0.19622852166041663;  // std dev = 0.927, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( teamplaysagainstteam(A, G), teamplaysinleague(A, H) )
%   | | | then return 0.4650728271587215;  // std dev = 0.182, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4163951211916181;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( athleteplaysforteam(I, A) )
%   | | then return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteledsportsteam(D, A) )
%   | | then return 0.48502211530790335;  // std dev = 0.081, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamplaysagainstteam(A, E), athleteledsportsteam(D, F) )
%   | | | then return 0.12157765416350312;  // std dev = 0.838, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.3271528413655612;  // std dev = 0.077, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysinleague(A, E), athleteplaysinleague(D, E) )
%   | | then if ( athleteledsportsteam(F, A), athleteplaysinleague(F, E) )
%   | | | then return 0.4211242009162303;  // std dev = 0.056, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2822071978537909;  // std dev = 0.038, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | | | then return -0.17293668910183968;  // std dev = 0.511, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.26782080557186644;  // std dev = 0.072, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( athleteplaysforteam(I, A) )
%   | | then return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteledsportsteam(D, E) )
%   then if ( athleteplayssport(F, B) )
%   | then if ( athleteledsportsteam(G, A), athleteplaysinleague(G, H) )
%   | | then return 0.05747844908906049;  // std dev = 0.730, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( athleteledsportsteam(F, I) )
%   | | | then return 0.22422460436733677;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2477856097940766;  // std dev = 0.061, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.07877675473109175;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysagainstteam(J, B) )
%   | then return -0.07877675473109177;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( athleteplayssport(K, B) )
%   | | then return 0.2149554825047338;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysinleague(A, E), athleteplaysinleague(D, E) )
%   | | then if ( athleteplaysinleague(F, E), athleteledsportsteam(F, A) )
%   | | | then return 0.3111373162065651;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1916757047962649;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( teamplaysinleague(A, G), athleteledsportsteam(D, H) )
%   | | | then return -0.179183234918312;  // std dev = 0.430, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.19115698578312038;  // std dev = 0.067, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( athleteplaysforteam(I, A) )
%   | | then return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteledsportsteam(E, A), athleteplaysinleague(E, F) )
%   | | then return 0.023386352931509813;  // std dev = 0.619, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( teamplaysinleague(A, G) )
%   | | | then return 0.17255110660631642;  // std dev = 0.062, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.15434635530039778;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E), teamalsoknownas(E, F) )
%   | | then if ( teamalsoknownas(F, E) )
%   | | | then return 0.17235610592554412;  // std dev = 0.101, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.08514212947917557;  // std dev = 0.470, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.16064086053463883;  // std dev = 0.136, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( athleteplaysforteam(G, A) )
%   | | then return -0.06419184008202619;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning 57.73696565628052
Refined model CLL: -0.131228


******************************************
Best model found
******************************************
Results 

CLL : -0.089269 

AUC ROC : 0.98465 

AUC PR : 0.122756 

Precision : 0.137255 

Recall : 0.961832 

F1 : 0.240229 

Total Learning Time : 75.88271498680115 

Total Inference Time : 1.9056282043457031 

Total revision time: 79.98605751991272
Best scored revision CLL: -0.131228


Results 

CLL : -0.089269 

AUC ROC : 0.98465 

AUC PR : 0.122756 

Precision : 0.137255 

Recall : 0.961832 

F1 : 0.240229 

Total Learning Time : 80.03758955001831 

Total Inference Time : 1.9056282043457031 

Amount of data: 20
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.6939771175384521
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(A, E) )
%   | | then if ( athleteplaysforteam(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.44905802600860323;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( teamplaysagainstteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4945125714631487;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.3978353504577732;  // std dev = 0.488, 33.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(D, B) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.32472677159398755;  // std dev = 0.488, 33.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.10159632948783627;  // std dev = 1.86e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteledsportsteam(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return 0.24303109874680207;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.27810387754679194;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19470918718687621;  // std dev = 2.805, 33.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=20 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.146904746360081;  // std dev = 0.488, 33.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=20 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteledsportsteam(D, E) )
%   then return 0.07405369828683618;  // std dev = 2.330, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   else if ( teamplaysagainstteam(F, B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysagainstteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.127166547687416;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.07957485269099307;  // std dev = 0.015, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08737511886867948;  // std dev = 0.488, 33.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=20 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(D, B) )
%   | then return -0.0739402890890626;  // std dev = 0.014, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( teamplaysinleague(E, F) )
%   | | then return 0.06563259844000513;  // std dev = 2.804, 33.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.06903592418683599;  // std dev = 0.013, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplaysforteam(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(A, E), teamplaysinleague(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.049396510079506434;  // std dev = 2.804, 33.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=20 */
Inference time using transfer learning 31.92110252380371
Parameter learned model CLL:-0.566488 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(A, E)', 'false,false,true': 'athleteplaysforteam(A, E)', 'false,false,false': 'teamplaysagainstteam(F, B)'}, {'true': [0.0, 7, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [2.306, 9, 13], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.595, 4, 7]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysinleague(A, D)', 'false': 'teamplaysagainstteam(E, B)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [0.0, 4, 0], 'true,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.488, 13, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysagainstteam(D, B)', 'false': 'teamplaysagainstteam(E, B)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [0.0, 7, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.488, 13, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'athleteledsportsteam(A, D)', 'false,false': 'teamplaysagainstteam(E, B)', 'false,false,false': 'teamplaysinleague(A, F)'}, {'true': [1.86e-09, 7, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.306, 9, 13], 'false,false,false,false': [1.595, 4, 7]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(A, G)', 'false,false,false': 'teamplaysagainstteam(H, B)'}, {'true': [0.0, 7, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.805, 13, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysagainstteam(D, B)', 'false': 'teamplaysagainstteam(E, B)'}, {'true,true': [2.63e-09, 7, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.488, 13, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(F, B)', 'false,false': 'teamplaysagainstteam(G, B)', 'false,false,false': 'teamplaysinleague(A, H)'}, {'true': [2.33, 13, 13], 'false,true': [0.0, 3, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.595, 4, 7]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)'}, {'true': [0.015, 7, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.488, 13, 20]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(A, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.014, 7, 0], 'false,false,true': [2.804, 13, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'athleteplaysforteam(A, D)', 'false,false': 'athleteplaysforteam(A, E), teamplaysinleague(F, E)', 'false,false,false': 'teamplaysagainstteam(G, B)'}, {'true': [0.013, 7, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.804, 13, 20]}]
{'': [-7.93016446160826e-18, 0.23875114784205692], 'false': [nan, 0.23875114784205692], 'false,false': [0.2417355371900822, 0.23140495867768587], 'false,false,true': [nan, 0.2417355371900822], 'false,false,false': [nan, 0.23140495867768587]}
{'': [-1.982541115402065e-18, 0.238611685370219], 'false': [nan, 0.238611685370219], 'false,false': [0.238611685370219, nan], 'true': [0.0, 0.0]}
{'': [-1.982541115402065e-18, 0.2385837751562659], 'false': [nan, 0.2385837751562659], 'false,false': [0.2385837751562659, nan], 'true': [-1.982541115402065e-18, nan]}
{'': [0.0, 0.23856536653322888], 'false': [nan, 0.23856536653322888], 'false,false': [nan, 0.23856536653322888], 'false,false,false': [0.24173553719008256, 0.2314049586776859]}
{'': [0.0, 0.23844122692749234], 'false': [nan, 0.23844122692749234], 'false,false': [nan, 0.23844122692749234], 'false,false,false': [nan, 0.23844122692749234]}
{'': [9.912705577010326e-19, 0.2384358177426207], 'false': [nan, 0.2384358177426207], 'true': [9.912705577010326e-19, nan]}
{'': [0.2087922086126664, 0.1889590861333061], 'false': [0.0, 0.23140495867768598], 'false,false': [nan, 0.23140495867768598], 'false,false,false': [nan, 0.23140495867768598]}
{'': [3.0038639092089853e-05, 0.23832473777212668], 'false': [nan, 0.23832473777212668]}
{'': [nan, 0.19943592634065915], 'false': [2.6245987980054058e-05, 0.23832584603246262], 'false,false': [0.23832584603246262, nan]}
{'': [2.3116725288528255e-05, 0.2383271422693163], 'false': [nan, 0.2383271422693163], 'false,false': [nan, 0.2383271422693163], 'false,false,false': [nan, 0.2383271422693163]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
1;true;teamplaysinleague(A, D).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
6;;teamplayssport(A, B) :- teamplaysinleague(A, C), athleteledsportsteam(D, E).;true;true
6;false;teamplaysagainstteam(F, B).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(D, B).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true


Refining candidate
***************************
Model training time 173.86419987678528
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteledsportsteam(E, A), athleteplaysinleague(E, F) )
%   | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( athleteledsportsteam(F, A), athleteplayssport(F, G) )
%   | | then return 0.4379363516812385;  // std dev = 1.138, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.7233581326712255;  // std dev = 0.060, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysinleague(A, E), athleteplaysinleague(D, E) )
%   | | then if ( athleteledsportsteam(F, A) )
%   | | | then return 0.6703187950712838;  // std dev = 0.076, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5544069598570429;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( athleteplaysforteam(G, A), athleteplaysforteam(D, H) )
%   | | | then return -0.016607475755766894;  // std dev = 0.699, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5544069598570429;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( athleteplaysforteam(I, A) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteledsportsteam(E, A), athleteplayssport(E, F) )
%   | | then return 0.2476920558958303;  // std dev = 0.949, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( athleteplaysforteam(G, A) )
%   | | | then return 0.4819065663124311;  // std dev = 0.101, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4168023487717392;  // std dev = 2.11e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteledsportsteam(D, A) )
%   | | then return 0.45934778785076336;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( athleteledsportsteam(E, A), athleteledsportsteam(D, F) )
%   | | | then return -0.1172057752708815;  // std dev = 0.577, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3271881604631676;  // std dev = 0.116, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( teamplaysinleague(A, F), athleteplaysinleague(E, F) )
%   | | then if ( athleteledsportsteam(G, A), athleteplaysinleague(G, F) )
%   | | | then return 0.3714959803315401;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.26172690575484614;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( athleteledsportsteam(H, A) )
%   | | | then return -0.13730034492777313;  // std dev = 0.464, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2642032411823771;  // std dev = 0.101, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( athleteplaysforteam(I, A) )
%   | | then if ( athleteplaysinleague(I, J) )
%   | | | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteledsportsteam(D, E) )
%   then if ( athleteplayssport(F, B) )
%   | then if ( athleteledsportsteam(F, A) )
%   | | then return 0.2758054227847526;  // std dev = 0.038, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( athleteledsportsteam(G, A), athleteledsportsteam(F, H) )
%   | | | then return -0.0986496139533282;  // std dev = 0.486, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.21461277332234494;  // std dev = 0.056, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.07877675473109172;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamplaysagainstteam(I, B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplayssport(J, B) )
%   | | then if ( teamalsoknownas(A, K) )
%   | | | then return 0.2385284098579761;  // std dev = 0.078, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2068353475659782;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( teamplaysinleague(A, F), athleteplaysinleague(E, F) )
%   | | then if ( athleteledsportsteam(G, A), athleteplaysinleague(G, F) )
%   | | | then return 0.2551682658466289;  // std dev = 0.074, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1785650148863292;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( teamplaysinleague(A, H), athleteledsportsteam(E, I) )
%   | | | then return -0.126732909900687;  // std dev = 0.368, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.18699602403184976;  // std dev = 0.087, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( athleteplaysforteam(J, A) )
%   | | then if ( athleteplaysinleague(J, K) )
%   | | | then return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( athleteledsportsteam(F, A), athleteplayssport(F, G) )
%   | | then return 0.03969365016209427;  // std dev = 0.506, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( athleteplaysforteam(H, A) )
%   | | | then return 0.2278063764268756;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.15225655967561;  // std dev = 0.043, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( teamalsoknownas(A, I) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteledsportsteam(E, A), athleteplaysinleague(E, F) )
%   | | then return 0.0433350393747095;  // std dev = 0.526, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( athleteplaysforteam(G, A) )
%   | | | then return 0.17016149066127348;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1336445920296364;  // std dev = 0.038, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( athleteplaysforteam(H, A) )
%   | | then return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning 90.14282870292664
Refined model CLL: -0.117698


******************************************
Best model found
******************************************
Results 

CLL : -0.091879 

AUC ROC : 0.984137 

AUC PR : 0.133212 

Precision : 0.125253 

Recall : 0.946565 

F1 : 0.221231 

Total Learning Time : 173.86419987678528 

Total Inference Time : 2.397327184677124 

Total revision time: 178.8274929523468
Best scored revision CLL: -0.117698


Results 

CLL : -0.091879 

AUC ROC : 0.984137 

AUC PR : 0.133212 

Precision : 0.125253 

Recall : 0.946565 

F1 : 0.221231 

Total Learning Time : 178.8790249824524 

Total Inference Time : 2.397327184677124 

Amount of data: 25
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.6956777572631836
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(A, E) )
%   | | then if ( athleteplaysforteam(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4507415276921049;  // std dev = 2.553, 27.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=16 */
%   | | else if ( teamplaysagainstteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5504566274072047;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.41355241266435466;  // std dev = 0.483, 40.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(D, B) )
%   | then return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.3365328163203134;  // std dev = 0.483, 40.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.10159632948783628;  // std dev = 1.32e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteledsportsteam(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return 0.23805972715033355;  // std dev = 2.553, 27.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=16 */
%   | | | else return 0.3146396767989541;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.200258123397521;  // std dev = 3.052, 40.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=25 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15083152262544647;  // std dev = 0.483, 40.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=25 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteledsportsteam(D, E) )
%   then return 0.0634848493513162;  // std dev = 2.582, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   else if ( teamplaysagainstteam(F, B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( teamplaysagainstteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15083539912325988;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.07940380982619308;  // std dev = 0.016, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09042945177195183;  // std dev = 0.482, 40.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=25 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(D, B) )
%   | then return -0.07379173385363921;  // std dev = 0.015, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( teamplaysinleague(E, F) )
%   | | then return 0.0680987994227055;  // std dev = 3.049, 40.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.06890574052971316;  // std dev = 0.014, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplaysforteam(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(A, E), teamplaysinleague(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05142730008958836;  // std dev = 3.049, 40.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=25 */
Inference time using transfer learning 32.939011335372925
Parameter learned model CLL:-0.541951 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(A, E)', 'false,false,true': 'athleteplaysforteam(A, E)', 'false,false,false': 'teamplaysagainstteam(F, B)'}, {'true': [0.0, 10, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [2.553, 11, 16], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.664, 4, 9]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysinleague(A, D)', 'false': 'teamplaysagainstteam(E, B)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [0.0, 6, 0], 'true,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.483, 15, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysagainstteam(D, B)', 'false': 'teamplaysagainstteam(E, B)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [0.0, 10, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.483, 15, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'athleteledsportsteam(A, D)', 'false,false': 'teamplaysagainstteam(E, B)', 'false,false,false': 'teamplaysinleague(A, F)'}, {'true': [1.32e-09, 10, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.553, 11, 16], 'false,false,false,false': [1.664, 4, 9]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(A, G)', 'false,false,false': 'teamplaysagainstteam(H, B)'}, {'true': [0.0, 10, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.052, 15, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysagainstteam(D, B)', 'false': 'teamplaysagainstteam(E, B)'}, {'true,true': [3.73e-09, 10, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.483, 15, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(F, B)', 'false,false': 'teamplaysagainstteam(G, B)', 'false,false,false': 'teamplaysinleague(A, H)'}, {'true': [2.582, 17, 16], 'false,true': [0.0, 4, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.664, 4, 9]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)'}, {'true': [0.016, 10, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.482, 15, 25]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(A, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.015, 10, 0], 'false,false,true': [3.049, 15, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'athleteplaysforteam(A, D)', 'false,false': 'athleteplaysforteam(A, E), teamplaysinleague(F, E)', 'false,false,false': 'teamplaysagainstteam(G, B)'}, {'true': [0.014, 10, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.049, 15, 25]}]
{'': [-1.1102230246251566e-17, 0.23437500000000125], 'false': [nan, 0.23437500000000125], 'false,false': [0.24142661179698177, 0.2130177514792898], 'false,false,true': [nan, 0.24142661179698177], 'false,false,false': [nan, 0.2130177514792898]}
{'': [2.7755575615628915e-18, 0.23370236883301443], 'false': [nan, 0.23370236883301443], 'false,false': [0.23370236883301443, nan], 'true': [-2.3129646346357427e-18, 0.0]}
{'': [0.0, 0.23356645205808885], 'false': [nan, 0.23356645205808885], 'false,false': [0.23356645205808885, nan], 'true': [0.0, nan]}
{'': [1.3877787807814458e-18, 0.23348025439970305], 'false': [nan, 0.23348025439970305], 'false,false': [nan, 0.23348025439970305], 'false,false,false': [0.24142661179698238, 0.21301775147928997]}
{'': [0.0, 0.23289350375210657], 'false': [nan, 0.23289350375210657], 'false,false': [nan, 0.23289350375210657], 'false,false,false': [nan, 0.23289350375210657]}
{'': [1.3877787807814458e-18, 0.23287502292845746], 'false': [nan, 0.23287502292845746], 'true': [1.3877787807814458e-18, nan]}
{'': [0.20202827841888638, 0.1723821924539795], 'false': [0.0, 0.21301775147928997], 'false,false': [nan, 0.21301775147928997], 'false,false,false': [nan, 0.21301775147928997]}
{'': [2.5277227660756853e-05, 0.23245421125868465], 'false': [nan, 0.23245421125868465]}
{'': [nan, 0.18919724474552754], 'false': [2.2089440285500554e-05, 0.232464448885149], 'false,false': [0.232464448885149, nan]}
{'': [1.9458694747154225e-05, 0.23247486444865242], 'false': [nan, 0.23247486444865242], 'false,false': [nan, 0.23247486444865242], 'false,false,false': [nan, 0.23247486444865242]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
1;true;teamplaysinleague(A, D).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
6;;teamplayssport(A, B) :- teamplaysinleague(A, C), athleteledsportsteam(D, E).;true;true
6;false;teamplaysagainstteam(F, B).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(D, B).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true


Refining candidate
***************************
Model training time 318.18918204307556
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteledsportsteam(E, A), athleteplayssport(E, F) )
%   | | then if ( athleteledsportsteam(D, A), athleteplaysforteam(D, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.19148226843284555;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( athleteledsportsteam(F, A), athleteplaysforteam(F, A) )
%   | | then if ( athleteledsportsteam(E, A) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2763394517212514;  // std dev = 0.886, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7254593111067751;  // std dev = 0.111, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteplaysforteam(E, A), athleteplaysinleague(E, F) )
%   | | then if ( athleteplaysforteam(D, A) )
%   | | | then return 0.5933887275141825;  // std dev = 0.132, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.08096628200930044;  // std dev = 0.710, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( athleteplaysforteam(G, A), teamplaysagainstteam(A, H) )
%   | | | then return 0.5899172231694519;  // std dev = 0.086, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5538878258270055;  // std dev = 2.98e-08, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( athleteplaysforteam(I, A) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( athleteledsportsteam(F, A), athleteplayssport(F, G) )
%   | | then if ( athleteplaysforteam(F, H), teamalsoknownas(H, I) )
%   | | | then return -0.012228026856389093;  // std dev = 0.515, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.44941110342008916;  // std dev = 0.141, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( athleteplaysforteam(J, A), teamplaysagainstteam(A, K) )
%   | | | then return 0.5228972124300008;  // std dev = 0.166, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4164178390334008;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteplaysforteam(E, A), athleteledsportsteam(E, A) )
%   | | then if ( athleteplaysinleague(D, F), teamplaysinleague(A, F) )
%   | | | then return 0.36888415387246015;  // std dev = 0.188, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.016920774641595804;  // std dev = 0.498, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( athleteledsportsteam(D, G), teamplaysagainstteam(A, G) )
%   | | | then return 0.34800513265287053;  // std dev = 0.125, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3178131574984711;  // std dev = 0.029, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( athleteplaysforteam(H, A) )
%   | | then return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.08518475138839687;  // std dev = 9.31e-10, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( athleteplaysforteam(F, A), athleteplaysinleague(F, G) )
%   | | then if ( athleteplaysforteam(E, A) )
%   | | | then return 0.2920487076721031;  // std dev = 0.123, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.003729364434672422;  // std dev = 0.524, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamalsoknownas(H, A), teamalsoknownas(A, H) )
%   | | | then return 0.3013948900958567;  // std dev = 0.113, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.25095892450370055;  // std dev = 0.031, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( athleteplaysforteam(I, A) )
%   | | then if ( athleteledsportsteam(I, A) )
%   | | | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteledsportsteam(D, E) )
%   then if ( athleteplayssport(F, B) )
%   | then if ( teamplaysagainstteam(G, A), teamalsoknownas(G, H) )
%   | | then if ( athleteledsportsteam(I, A), teamplaysagainstteam(A, H) )
%   | | | then return 0.04036376599571083;  // std dev = 0.474, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.23195062810388328;  // std dev = 0.141, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.2522432028962599;  // std dev = 0.193, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( teamplaysagainstteam(J, B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( athleteplayssport(K, B) )
%   | | then if ( teamplaysagainstteam(L, A), athleteplaysforteam(M, L) )
%   | | | then return 0.2103717613342858;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.20418105689148688;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(D, A) )
%   | then return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( teamalsoknownas(A, F), athleteledsportsteam(E, G) )
%   | | then return 0.09555768268527595;  // std dev = 0.375, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( athleteplaysforteam(H, A), athleteplayssport(H, I) )
%   | | | then return 0.11119330400275337;  // std dev = 0.383, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.18894501946167513;  // std dev = 0.208, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(D, A) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( athleteledsportsteam(F, A), athleteplayssport(F, G) )
%   | | then if ( athleteledsportsteam(E, A), athleteplaysinleague(E, H) )
%   | | | then return 0.20202641983765152;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11340227837196344;  // std dev = 0.316, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( athleteplaysforteam(I, A), teamplaysagainstteam(A, J) )
%   | | | then return 0.2322928363390401;  // std dev = 0.133, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14954648540017193;  // std dev = 0.023, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( athleteplaysforteam(K, A) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(D, A) )
%   | then return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( teamplaysinleague(A, F), athleteplaysinleague(E, F) )
%   | | then if ( athleteledsportsteam(G, A), athleteplaysinleague(G, F) )
%   | | | then return 0.19202136318918003;  // std dev = 0.114, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1325350929652451;  // std dev = 0.029, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( teamplaysinleague(A, H), athleteplaysinleague(I, H) )
%   | | | then return -0.10440663252728215;  // std dev = 0.288, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.13682141427456893;  // std dev = 0.072, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( teamalsoknownas(A, J) )
%   | | then return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning 141.62003016471863
Refined model CLL: -0.10785


******************************************
Best model found
******************************************
Results 

CLL : -0.090456 

AUC ROC : 0.986418 

AUC PR : 0.217321 

Precision : 0.140909 

Recall : 0.946565 

F1 : 0.245302 

Total Learning Time : 318.18918204307556 

Total Inference Time : 4.869982481002808 

Total revision time: 325.5511589050293
Best scored revision CLL: -0.10785


Results 

CLL : -0.090456 

AUC ROC : 0.986418 

AUC PR : 0.217321 

Precision : 0.140909 

Recall : 0.946565 

F1 : 0.245302 

Total Learning Time : 325.6026909351349 

Total Inference Time : 4.869982481002808 

Run: 3

 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 264
Target train neg examples: 106660

Target test facts examples: 9691
Target test pos examples: 133
Target test neg examples: 53331

Amount of data: 5
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.101728916168213
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysinleague(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.5851860008555361;  // std dev = 0.373, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.46125983910675533;  // std dev = 0.373, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteledsportsteam(D, A) )
%   | then if ( teamplaysagainstteam(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(F, G) )
%   | | | then return 0.5155129923615089;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.26551299236150894;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(G, A) )
%   | | then return 0.38854292568974114;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( teamplaysagainstteam(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19931442009481617;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2008060144322712;  // std dev = 0.361, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, A), athleteledsportsteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( teamplaysagainstteam(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.155890200147796;  // std dev = 0.885, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12308023397208447;  // std dev = 0.362, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysinleague(C, D), teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.265277426833079;  // std dev = 0.067, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysinleague(G, H) )
%   | | then return -0.06805590650025435;  // std dev = 0.785, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.21719330600886222;  // std dev = 0.058, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( athleteplaysforteam(E, A), teamplaysinleague(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.05468849703191514;  // std dev = 0.784, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
Inference time using transfer learning 27.988931894302368
Parameter learned model CLL:-0.264742 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, A)', 'false,false,false': 'teamplaysagainstteam(B, F)'}, {'true': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.913, 1, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysinleague(D, A)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.373, 1, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [0.0, 4, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.373, 1, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteledsportsteam(D, A)', 'false,true': 'teamplaysagainstteam(B, E)', 'false,true,false': 'athleteledsportsteam(F, G)', 'false,false': 'teamplaysagainstteam(B, H)', 'false,false,false': 'teamplaysinleague(I, A)'}, {'true': [0.0, 4, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.866, 1, 3]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(G, A)', 'false,false,false': 'teamplaysagainstteam(B, H)'}, {'true': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.866, 1, 3]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)'}, {'true,true': [0.0, 4, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.361, 1, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(C, A), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysagainstteam(B, G)', 'false,false,false': 'teamplaysinleague(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 4, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.885, 1, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)'}, {'true': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.362, 1, 5]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'teamplaysinleague(C, D), teamplaysagainstteam(B, D)', 'true,false': 'teamplaysagainstteam(B, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysinleague(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.067, 0, 3], 'false,true': [0.0, 3, 0], 'false,false,true': [0.785, 1, 2], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteplaysforteam(D, A)', 'false,false': 'athleteplaysforteam(E, A), teamplaysinleague(E, F)', 'false,false,false': 'teamplaysagainstteam(B, G)'}, {'true': [0.0, 4, 0], 'false,true': [0.058, 0, 3], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.784, 1, 2]}]
{'': [0.0, 0.1388888888888887], 'false': [nan, 0.1388888888888887], 'false,false': [nan, 0.1388888888888887], 'false,false,false': [nan, 0.1388888888888887]}
{'': [0.0, 0.13888888888888884], 'false': [nan, 0.13888888888888884], 'false,false': [0.13888888888888884, nan], 'true': [nan, 0.0]}
{'': [0.0, 0.13888888888888887], 'false': [nan, 0.13888888888888887], 'false,false': [0.13888888888888887, nan], 'true': [0.0, nan]}
{'': [0.0, 0.13888888888888898], 'false': [0.0, 0.18750000000000003], 'false,false': [nan, 0.18750000000000003], 'false,false,false': [nan, 0.18750000000000003], 'false,true': [nan, 0.0], 'false,true,false': [0.0, nan]}
{'': [0.0, 0.13295720607326414], 'false': [nan, 0.13295720607326414], 'false,false': [0.0, 0.18749999999999997], 'false,false,false': [nan, 0.18749999999999997]}
{'': [0.0, 0.13003115591116754], 'false': [nan, 0.13003115591116754], 'true': [0.0, nan]}
{'': [nan, 0.09150645652602216], 'false': [0.0, 0.1304833289918516], 'false,false': [nan, 0.1304833289918516], 'false,false,false': [nan, 0.1304833289918516]}
{'': [0.0, 0.1309002214506239], 'false': [nan, 0.1309002214506239]}
{'': [0.022003906262976783, 0.10273527409639079], 'false': [-5.782411586589357e-19, 0.20547047934581045], 'false,false': [0.20547047934581045, nan], 'true': [nan, 0.022003906262976783], 'true,false': [0.0, 0.0014988842587142965]}
{'': [0.0, 0.12152213459344834], 'false': [0.0011230128884608115, 0.2049613988860838], 'false,false': [nan, 0.2049613988860838], 'false,false,false': [nan, 0.2049613988860838]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
3;false;athleteledsportsteam(D, A).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
4;false;athleteledsportsteam(E, F), athleteledsportsteam(G, A).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
8;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
8;true;teamplaysagainstteam(B, E).;true;true
8;false;teamplaysagainstteam(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
9;false;athleteplaysforteam(D, A).;true;true


Refining candidate
***************************
Model training time 0.9049549102783203
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.5851860008555361;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.46125983910675533;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteledsportsteam(D, A) )
%   | then return 0.5155129923615089;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.26551299236150894;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteledsportsteam(D, E), athleteledsportsteam(F, A) )
%   | then return 0.38854292568974114;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.19931442009481617;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.2008060144322712;  // std dev = 0.883, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.155890200147796;  // std dev = 0.885, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.12308023397208447;  // std dev = 0.886, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.265277426833079;  // std dev = 0.067, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( teamplaysagainstteam(B, E) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06805590650025435;  // std dev = 0.785, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.21719330600886222;  // std dev = 0.058, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.05468849703191514;  // std dev = 0.784, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
Inference time using transfer learning 7.256774187088013
Refined model CLL: -0.264742


******************************************
Best model found
******************************************
Results 

CLL : -0.662993 

AUC ROC : 0.806984 

AUC PR : 0.006639 

Precision : 0.005453 

Recall : 1.0 

F1 : 0.010847 

Total Learning Time : 0.9049549102783203 

Total Inference Time : 0.6460108757019043 

Total revision time: 3.3951241970062256
Best scored revision CLL: -0.264742


Results 

CLL : -0.662993 

AUC ROC : 0.806984 

AUC PR : 0.006639 

Precision : 0.005453 

Recall : 1.0 

F1 : 0.010847 

Total Learning Time : 3.448096990585327 

Total Inference Time : 0.6460108757019043 

Amount of data: 10
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.3328626155853271
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(A, E) )
%   | | then if ( athleteplaysforteam(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( teamplaysagainstteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.5847480525751276;  // std dev = 0.369, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(D, B) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.46107006234469256;  // std dev = 0.368, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.10159632948783627;  // std dev = 1.32e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteledsportsteam(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return 0.3906748965657099;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.22375816331683465;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2626405290654751;  // std dev = 1.261, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20024629224228252;  // std dev = 0.364, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteledsportsteam(D, E) )
%   then return 0.09341286456869671;  // std dev = 1.058, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   else if ( teamplaysagainstteam(F, B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysagainstteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05429825642142253;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.08110992635615946;  // std dev = 0.017, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1377402473091735;  // std dev = 0.364, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(D, B) )
%   | then return -0.0752691715499108;  // std dev = 0.016, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( teamplaysinleague(E, F) )
%   | | then return 0.1095936893706887;  // std dev = 1.263, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.07019698691326862;  // std dev = 0.015, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplaysforteam(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(A, E), teamplaysinleague(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08837886600216575;  // std dev = 1.264, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
Inference time using transfer learning 32.54012155532837
Parameter learned model CLL:-0.297688 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(A, E)', 'false,false,true': 'athleteplaysforteam(A, E)', 'false,false,false': 'teamplaysagainstteam(F, B)'}, {'true': [0.0, 8, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.943, 1, 8], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.816, 1, 2]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysinleague(A, D)', 'false': 'teamplaysagainstteam(E, B)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [0.0, 5, 0], 'true,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.369, 2, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysagainstteam(D, B)', 'false': 'teamplaysagainstteam(E, B)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [0.0, 8, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.368, 2, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'athleteledsportsteam(A, D)', 'false,false': 'teamplaysagainstteam(E, B)', 'false,false,false': 'teamplaysinleague(A, F)'}, {'true': [1.32e-09, 8, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.943, 1, 8], 'false,false,false,false': [0.816, 1, 2]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(A, G)', 'false,false,false': 'teamplaysagainstteam(H, B)'}, {'true': [0.0, 8, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.261, 2, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysagainstteam(D, B)', 'false': 'teamplaysagainstteam(E, B)'}, {'true,true': [3.73e-09, 8, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.364, 2, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(F, B)', 'false,false': 'teamplaysagainstteam(G, B)', 'false,false,false': 'teamplaysinleague(A, H)'}, {'true': [1.058, 6, 8], 'false,true': [0.0, 3, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.816, 1, 2]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)'}, {'true': [0.017, 8, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.364, 2, 10]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(A, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.016, 8, 0], 'false,false,true': [1.263, 2, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'athleteplaysforteam(A, D)', 'false,false': 'athleteplaysforteam(A, E), teamplaysinleague(F, E)', 'false,false,false': 'teamplaysagainstteam(G, B)'}, {'true': [0.015, 8, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.264, 2, 10]}]
{'': [-6.938893903907228e-18, 0.1388888888888887], 'false': [nan, 0.1388888888888887], 'false,false': [0.09876543209876527, 0.22222222222222224], 'false,false,false': [nan, 0.22222222222222224], 'false,false,true': [nan, 0.09876543209876527]}
{'': [0.0, 0.13583605299973134], 'false': [nan, 0.13583605299973134], 'false,false': [0.13583605299973134, nan], 'true': [0.0, 0.0]}
{'': [-1.734723475976807e-18, 0.1351199642374601], 'false': [nan, 0.1351199642374601], 'false,false': [0.1351199642374601, nan], 'true': [-1.734723475976807e-18, nan]}
{'': [1.734723475976807e-18, 0.134853603849344], 'false': [nan, 0.134853603849344], 'false,false': [nan, 0.134853603849344], 'false,false,false': [0.09876543209876548, 0.22222222222222224]}
{'': [0.0, 0.13261090702243905], 'false': [nan, 0.13261090702243905], 'false,false': [nan, 0.13261090702243905], 'false,false,false': [nan, 0.13261090702243905]}
{'': [1.734723475976807e-18, 0.1327974877868686], 'false': [nan, 0.1327974877868686], 'true': [1.734723475976807e-18, nan]}
{'': [0.07996387737795575, 0.11553835075942155], 'false': [0.0, 0.2222222222222222], 'false,false': [nan, 0.2222222222222222], 'false,false,false': [nan, 0.2222222222222222]}
{'': [3.71026722081327e-05, 0.13271762851773877], 'false': [nan, 0.13271762851773877]}
{'': [nan, 0.08798389417463896], 'false': [3.234090930349584e-05, 0.13294855207909637], 'false,false': [0.13294855207909637, nan]}
{'': [2.8424644541907677e-05, 0.13315426017564058], 'false': [nan, 0.13315426017564058], 'false,false': [nan, 0.13315426017564058], 'false,false,false': [nan, 0.13315426017564058]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
1;true;teamplaysinleague(A, D).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
6;;teamplayssport(A, B) :- teamplaysinleague(A, C), athleteledsportsteam(D, E).;true;true
6;false;teamplaysagainstteam(F, B).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(D, B).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true


Refining candidate
***************************
Model training time 22.87537956237793
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.19148226843284555;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(E, B), athleteledsportsteam(E, F) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.16653882456488173;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.1420942428155648;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(D, A) )
%   | then return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(A, E) )
%   | then return 0.4788972487276135;  // std dev = 0.336, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.20694757996358368;  // std dev = 0.729, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | then if ( teamplaysagainstteam(A, F) )
%   | | then return 0.30748873922975406;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3682023857387955;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.06410489369026295;  // std dev = 0.772, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysagainstteam(A, E) )
%   | then return 0.31855214831439366;  // std dev = 0.397, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.10381704803336793;  // std dev = 0.636, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteledsportsteam(D, E) )
%   then if ( athleteplayssport(F, B) )
%   | then if ( teamplaysagainstteam(A, G) )
%   | | then return 0.1918665821213068;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2665972724625184;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.11297015018410056;  // std dev = 0.187, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( teamplaysagainstteam(H, B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.19684042178183345;  // std dev = 0.636, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.07095873874363137;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(A, E) )
%   | then return 0.2298956746846478;  // std dev = 0.362, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.049361611032711465;  // std dev = 0.596, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.06642093724598418;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(E, B), athleteledsportsteam(E, F) )
%   | then if ( teamplaysagainstteam(A, G) )
%   | | then return 0.13473928500072985;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.21245117654208817;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.03493724363051539;  // std dev = 0.660, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.062418951604095406;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(A, E) )
%   | then return 0.18509608025875848;  // std dev = 0.358, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.020531886394699366;  // std dev = 0.551, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
Inference time using transfer learning 30.582871198654175
Refined model CLL: -0.157251


******************************************
Best model found
******************************************
Results 

CLL : -0.256367 

AUC ROC : 0.992469 

AUC PR : 0.222047 

Precision : 0.065929 

Recall : 0.984962 

F1 : 0.123585 

Total Learning Time : 22.87537956237793 

Total Inference Time : 0.8283531665802002 

Total revision time: 25.733006954193115
Best scored revision CLL: -0.157251


Results 

CLL : -0.256367 

AUC ROC : 0.992469 

AUC PR : 0.222047 

Precision : 0.065929 

Recall : 0.984962 

F1 : 0.123585 

Total Learning Time : 25.785979747772217 

Total Inference Time : 0.8283531665802002 

Amount of data: 15
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.393073320388794
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(A, E) )
%   | | then if ( athleteplaysforteam(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7043027812533584;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else if ( teamplaysagainstteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.58516588962185;  // std dev = 0.372, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(D, B) )
%   | then return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.4612516291765134;  // std dev = 0.372, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteledsportsteam(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return 0.35847127851289734;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.3238402953580068;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.262154631694215;  // std dev = 1.579, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19949155126949314;  // std dev = 0.372, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteledsportsteam(D, E) )
%   then return 0.07055518026326313;  // std dev = 1.407, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   else if ( teamplaysagainstteam(F, B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( teamplaysagainstteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13402129831581594;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.08044980226579877;  // std dev = 0.018, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1355909408753805;  // std dev = 0.373, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(D, B) )
%   | then return -0.07469752331335947;  // std dev = 0.016, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( teamplaysinleague(E, F) )
%   | | then return 0.10778359622840977;  // std dev = 1.581, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.06969735558244776;  // std dev = 0.015, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplaysforteam(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(A, E), teamplaysinleague(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08685034413933981;  // std dev = 1.581, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
Inference time using transfer learning 34.08720636367798
Parameter learned model CLL:-0.306248 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(A, E)', 'false,false,true': 'athleteplaysforteam(A, E)', 'false,false,false': 'teamplaysagainstteam(F, B)'}, {'true': [0.0, 12, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.301, 2, 11], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.894, 1, 4]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysinleague(A, D)', 'false': 'teamplaysagainstteam(E, B)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [0.0, 8, 0], 'true,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.372, 3, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysagainstteam(D, B)', 'false': 'teamplaysagainstteam(E, B)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [9.13e-09, 12, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.372, 3, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'athleteledsportsteam(A, D)', 'false,false': 'teamplaysagainstteam(E, B)', 'false,false,false': 'teamplaysinleague(A, F)'}, {'true': [0.0, 12, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.301, 2, 11], 'false,false,false,false': [0.894, 1, 4]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(A, G)', 'false,false,false': 'teamplaysagainstteam(H, B)'}, {'true': [0.0, 12, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.579, 3, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysagainstteam(D, B)', 'false': 'teamplaysagainstteam(E, B)'}, {'true,true': [5.27e-09, 12, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.372, 3, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(F, B)', 'false,false': 'teamplaysagainstteam(G, B)', 'false,false,false': 'teamplaysinleague(A, H)'}, {'true': [1.407, 10, 11], 'false,true': [0.0, 4, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.894, 1, 4]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)'}, {'true': [0.018, 12, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.373, 3, 15]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(A, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.016, 12, 0], 'false,false,true': [1.581, 3, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'athleteplaysforteam(A, D)', 'false,false': 'athleteplaysforteam(A, E), teamplaysinleague(F, E)', 'false,false,false': 'teamplaysagainstteam(G, B)'}, {'true': [0.015, 12, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.581, 3, 15]}]
{'': [-1.1564823173178714e-17, 0.1388888888888886], 'false': [nan, 0.1388888888888886], 'false,false': [0.13017751479289916, 0.15999999999999986], 'false,false,false': [nan, 0.15999999999999986], 'false,false,true': [nan, 0.13017751479289916]}
{'': [2.3129646346357427e-18, 0.13874497517244894], 'false': [nan, 0.13874497517244894], 'false,false': [0.13874497517244894, nan], 'true': [0.0, 0.0]}
{'': [6.938893903907228e-18, 0.1387129392003824], 'false': [nan, 0.1387129392003824], 'false,false': [0.1387129392003824, nan], 'true': [6.938893903907228e-18, nan]}
{'': [0.0, 0.13870213977211826], 'false': [nan, 0.13870213977211826], 'false,false': [nan, 0.13870213977211826], 'false,false,false': [0.13017751479289946, 0.15999999999999998]}
{'': [2.3129646346357427e-18, 0.1386005214406031], 'false': [nan, 0.1386005214406031], 'false,false': [nan, 0.1386005214406031], 'false,false,false': [nan, 0.1386005214406031]}
{'': [2.3129646346357427e-18, 0.1386112621724138], 'false': [nan, 0.1386112621724138], 'true': [2.3129646346357427e-18, nan]}
{'': [0.09430917400710102, 0.10006987935322335], 'false': [0.0, 0.16], 'false,false': [nan, 0.16], 'false,false,false': [nan, 0.16]}
{'': [2.5945757213410626e-05, 0.13882383254265562], 'false': [nan, 0.13882383254265562]}
{'': [nan, 0.09129728580394941], 'false': [2.2635080235784467e-05, 0.13882730935740487], 'false,false': [0.13882730935740487, nan]}
{'': [1.9909220627588205e-05, 0.13883024308970388], 'false': [nan, 0.13883024308970388], 'false,false': [nan, 0.13883024308970388], 'false,false,false': [nan, 0.13883024308970388]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
1;true;teamplaysinleague(A, D).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
6;;teamplayssport(A, B) :- teamplaysinleague(A, C), athleteledsportsteam(D, E).;true;true
6;false;teamplaysagainstteam(F, B).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(D, B).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true


Refining candidate
***************************
Model training time 5.406235218048096
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then if ( athleteledsportsteam(D, E) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.41751358415830986;  // std dev = 1.05e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( teamplaysagainstteam(A, F) )
%   | | then if ( athleteledsportsteam(E, F) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2551722425694894;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteledsportsteam(D, E) )
%   then return 0.07236034879271303;  // std dev = 0.144, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   else if ( teamplaysagainstteam(F, B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.1520508215598101;  // std dev = 0.258, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.08419066927385165;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( teamplaysinleague(A, F) )
%   | | then return 0.19801504959664573;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.18566357503395048;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.08630781709494706;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.07792248377941334;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( teamplaysinleague(A, F) )
%   | | then if ( athleteplaysinleague(E, F) )
%   | | | then return 0.16843467680518276;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.16843467680518276;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.1592122737975299;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.079740953146132;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.07250463926110971;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( teamplaysinleague(A, F) )
%   | | then return 0.146140704579365;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.13903679855000273;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.07408257553743869;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning 11.016585111618042
Refined model CLL: -0.102298


******************************************
Best model found
******************************************
Results 

CLL : -0.104215 

AUC ROC : 0.98538 

AUC PR : 0.110539 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 5.406235218048096 

Total Inference Time : 0.7071366310119629 

Total revision time: 8.331385850906372
Best scored revision CLL: -0.102298


Results 

CLL : -0.104215 

AUC ROC : 0.98538 

AUC PR : 0.110539 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 8.384358644485474 

Total Inference Time : 0.7071366310119629 

Amount of data: 20
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.4929239749908447
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(A, E) )
%   | | then if ( athleteplaysforteam(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6816783468642181;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else if ( teamplaysagainstteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.5851750451803209;  // std dev = 0.373, 24.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(D, B) )
%   | then return -0.11231637819360635;  // std dev = 1.39e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.46125547353208796;  // std dev = 0.373, 24.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.10159632948783631;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( athleteledsportsteam(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return 0.34149445858829386;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | | else return 0.3667111111636426;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.09269127618926094;  // std dev = 2.28e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.26214287864430247;  // std dev = 1.825, 24.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(D, B) )
%   | then return -0.08518475138839685;  // std dev = 1.05e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19947431039896416;  // std dev = 0.372, 24.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteledsportsteam(D, E) )
%   then return 0.054428866080442895;  // std dev = 1.683, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   else if ( teamplaysagainstteam(F, B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( teamplaysagainstteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1693006594654975;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.08042533696826648;  // std dev = 0.017, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1359090753560226;  // std dev = 0.372, 24.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(D, B) )
%   | then return -0.0746757189741473;  // std dev = 0.015, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( teamplaysinleague(E, F) )
%   | | then return 0.10805378513402797;  // std dev = 1.824, 24.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.06967779518026897;  // std dev = 0.015, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( athleteplaysforteam(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(A, E), teamplaysinleague(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08707962918082834;  // std dev = 1.824, 24.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
Inference time using transfer learning 38.52980065345764
Parameter learned model CLL:-0.305919 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(A, E)', 'false,false,true': 'athleteplaysforteam(A, E)', 'false,false,false': 'teamplaysagainstteam(F, B)'}, {'true': [0.0, 16, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.572, 3, 14], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.926, 1, 6]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysinleague(A, D)', 'false': 'teamplaysagainstteam(E, B)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [5.27e-09, 12, 0], 'true,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.373, 4, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysagainstteam(D, B)', 'false': 'teamplaysagainstteam(E, B)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [1.39e-08, 16, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.373, 4, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'athleteledsportsteam(A, D)', 'false,false': 'teamplaysagainstteam(E, B)', 'false,false,false': 'teamplaysinleague(A, F)'}, {'true': [0.0, 16, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.572, 3, 14], 'false,false,false,false': [0.926, 1, 6]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(A, G)', 'false,false,false': 'teamplaysagainstteam(H, B)'}, {'true': [2.28e-09, 16, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.825, 4, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysagainstteam(D, B)', 'false': 'teamplaysagainstteam(E, B)'}, {'true,true': [1.05e-08, 16, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.372, 4, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(F, B)', 'false,false': 'teamplaysagainstteam(G, B)', 'false,false,false': 'teamplaysinleague(A, H)'}, {'true': [1.683, 15, 14], 'false,true': [0.0, 4, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.926, 1, 6]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)'}, {'true': [0.017, 16, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.372, 4, 20]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(A, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.015, 16, 0], 'false,false,true': [1.824, 4, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'athleteplaysforteam(A, D)', 'false,false': 'athleteplaysforteam(A, E), teamplaysinleague(F, E)', 'false,false,false': 'teamplaysagainstteam(G, B)'}, {'true': [0.015, 16, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.824, 4, 20]}]
{'': [-6.938893903907228e-18, 0.13888888888888906], 'false': [nan, 0.13888888888888906], 'false,false': [0.14532871972318315, 0.12244897959183662], 'false,false,true': [nan, 0.14532871972318315], 'false,false,false': [nan, 0.12244897959183662]}
{'': [3.469446951953614e-18, 0.1388096639707704], 'false': [nan, 0.1388096639707704], 'false,false': [0.1388096639707704, nan], 'true': [2.3129646346357427e-18, 0.0]}
{'': [1.214306433183765e-17, 0.13879241025468803], 'false': [nan, 0.13879241025468803], 'false,false': [0.13879241025468803, nan], 'true': [1.214306433183765e-17, nan]}
{'': [-6.938893903907228e-18, 0.13878683313710577], 'false': [nan, 0.13878683313710577], 'false,false': [nan, 0.13878683313710577], 'false,false,false': [0.1453287197231835, 0.12244897959183662]}
{'': [5.204170427930421e-18, 0.13873186679786875], 'false': [nan, 0.13873186679786875], 'false,false': [nan, 0.13873186679786875], 'false,false,false': [nan, 0.13873186679786875]}
{'': [6.938893903907228e-18, 0.13873815375896728], 'false': [nan, 0.13873815375896728], 'true': [6.938893903907228e-18, nan]}
{'': [0.09771768888578833, 0.092163295245756], 'false': [0.0, 0.12244897959183675], 'false,false': [nan, 0.12244897959183675], 'false,false,false': [nan, 0.12244897959183675]}
{'': [1.7179879230917218e-05, 0.13865673494105255], 'false': [nan, 0.13865673494105255]}
{'': [nan, 0.09121290833859538], 'false': [1.4985479014495082e-05, 0.13865549490966808], 'false,false': [0.13865549490966808, nan]}
{'': [1.3179136857667008e-05, 0.1386558333361532], 'false': [nan, 0.1386558333361532], 'false,false': [nan, 0.1386558333361532], 'false,false,false': [nan, 0.1386558333361532]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
1;true;teamplaysinleague(A, D).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
6;;teamplayssport(A, B) :- teamplaysinleague(A, C), athleteledsportsteam(D, E).;true;true
6;false;teamplaysagainstteam(F, B).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(D, B).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true


Refining candidate
***************************
Model training time 5.721929311752319
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.10159632948783631;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysinleague(A, E) )
%   | | then if ( athleteplaysinleague(D, E) )
%   | | | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.41751358415830986;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( teamplaysagainstteam(A, F) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then if ( teamalsoknownas(D, E) )
%   | | then return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( teamalsoknownas(A, F) )
%   | | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(G, B) )
%   | then if ( athleteledsportsteam(G, H) )
%   | | then if ( teamplaysagainstteam(A, H) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2551722425694894;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteledsportsteam(D, E) )
%   then if ( athleteplayssport(F, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( teamplaysagainstteam(G, B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( teamalsoknownas(A, H) )
%   | | then return 0.11357955884465977;  // std dev = 0.236, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteledsportsteam(D, E) )
%   | | then return 0.17709649774527741;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.1843235544283658;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.07679060241238897;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.06842697784420272;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamalsoknownas(A, E), teamplaysagainstteam(A, F) )
%   | | then return 0.16034639916417068;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamplaysagainstteam(A, G) )
%   | | | then return 0.15274385809367075;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.15265904618933826;  // std dev = 0.000890, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.07152311042806052;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( teamplaysagainstteam(A, F), teamalsoknownas(A, G) )
%   | | then return 0.13991954914089336;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamplaysagainstteam(A, H) )
%   | | | then return 0.13400703000801117;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.13394082451914854;  // std dev = 0.000798, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.0669187310600176;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning 19.398083686828613
Refined model CLL: -0.095284


******************************************
Best model found
******************************************
Results 

CLL : -0.099827 

AUC ROC : 0.981714 

AUC PR : 0.086639 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 5.721929311752319 

Total Inference Time : 0.8771505355834961 

Total revision time: 8.8888680934906
Best scored revision CLL: -0.095284


Results 

CLL : -0.099827 

AUC ROC : 0.981714 

AUC PR : 0.086639 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 8.941840887069702 

Total Inference Time : 0.8771505355834961 

Amount of data: 25
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.6098873615264893
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(A, E) )
%   | | then if ( athleteplaysforteam(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.630876207826785;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | | else if ( teamplaysagainstteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.5631546781866583;  // std dev = 0.394, 31.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(D, B) )
%   | then return -0.11231637819360635;  // std dev = 1.67e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.4456453663242393;  // std dev = 0.394, 31.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.10159632948783635;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( athleteledsportsteam(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return 0.312722577364368;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | | | else return 0.3999276277569924;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.09269127618926093;  // std dev = 2.63e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.25391258079150403;  // std dev = 2.186, 31.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(D, B) )
%   | then return -0.08518475138839683;  // std dev = 1.29e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19241050417264194;  // std dev = 0.393, 31.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteledsportsteam(D, E) )
%   then return 0.043793082869886514;  // std dev = 2.060, 37.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=17 */
%   else if ( teamplaysagainstteam(F, B) )
%   | then return -0.07877675473109177;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( teamplaysagainstteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19846781734546176;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.08016820151589714;  // std dev = 0.016, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12910999022512654;  // std dev = 0.392, 31.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(D, B) )
%   | then return -0.07445287634501147;  // std dev = 0.015, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( teamplaysinleague(E, F) )
%   | | then return 0.10170365537830821;  // std dev = 2.183, 31.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.06948289411980141;  // std dev = 0.014, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( athleteplaysforteam(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(A, E), teamplaysinleague(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08109170639872562;  // std dev = 2.183, 31.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
Inference time using transfer learning 32.55108594894409
Parameter learned model CLL:-0.333505 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(A, E)', 'false,false,true': 'athleteplaysforteam(A, E)', 'false,false,false': 'teamplaysagainstteam(F, B)'}, {'true': [0.0, 19, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.966, 5, 17], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.943, 1, 8]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysinleague(A, D)', 'false': 'teamplaysagainstteam(E, B)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [7.45e-09, 15, 0], 'true,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.394, 6, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysagainstteam(D, B)', 'false': 'teamplaysagainstteam(E, B)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [1.67e-08, 19, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.394, 6, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'athleteledsportsteam(A, D)', 'false,false': 'teamplaysagainstteam(E, B)', 'false,false,false': 'teamplaysinleague(A, F)'}, {'true': [0.0, 19, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.966, 5, 17], 'false,false,false,false': [0.943, 1, 8]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(A, G)', 'false,false,false': 'teamplaysagainstteam(H, B)'}, {'true': [2.63e-09, 19, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.186, 6, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysagainstteam(D, B)', 'false': 'teamplaysagainstteam(E, B)'}, {'true,true': [1.29e-08, 19, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.393, 6, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(F, B)', 'false,false': 'teamplaysagainstteam(G, B)', 'false,false,false': 'teamplaysinleague(A, H)'}, {'true': [2.06, 20, 17], 'false,true': [0.0, 4, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.943, 1, 8]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)'}, {'true': [0.016, 19, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.392, 6, 25]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(A, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.015, 19, 0], 'false,false,true': [2.183, 6, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'athleteplaysforteam(A, D)', 'false,false': 'athleteplaysforteam(A, E), teamplaysinleague(F, E)', 'false,false,false': 'teamplaysagainstteam(G, B)'}, {'true': [0.014, 19, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.183, 6, 25]}]
{'': [0.0, 0.15608740894901246], 'false': [nan, 0.15608740894901246], 'false,false': [0.17561983471074338, 0.09876543209876527], 'false,false,true': [nan, 0.17561983471074338], 'false,false,false': [nan, 0.09876543209876527]}
{'': [0.0, 0.15514792743899242], 'false': [nan, 0.15514792743899242], 'false,false': [0.15514792743899242, nan], 'true': [3.7007434154171884e-18, 0.0]}
{'': [1.460819769243627e-17, 0.1549466870028255], 'false': [nan, 0.1549466870028255], 'false,false': [0.1549466870028255, nan], 'true': [1.460819769243627e-17, nan]}
{'': [-5.843279076974508e-18, 0.15487410775176974], 'false': [nan, 0.15487410775176974], 'false,false': [nan, 0.15487410775176974], 'false,false,false': [0.17561983471074363, 0.09876543209876537]}
{'': [7.304098846218135e-18, 0.15420946095333937], 'false': [nan, 0.15420946095333937], 'false,false': [nan, 0.15420946095333937], 'false,false,false': [nan, 0.15420946095333937]}
{'': [8.764918615461762e-18, 0.15427396086322925], 'false': [nan, 0.15427396086322925], 'true': [8.764918615461762e-18, nan]}
{'': [0.11466580789273866, 0.08474958257046367], 'false': [0.0, 0.09876543209876545], 'false,false': [nan, 0.09876543209876545], 'false,false,false': [nan, 0.09876543209876545]}
{'': [1.2776999551738324e-05, 0.15364214224377049], 'false': [nan, 0.15364214224377049]}
{'': [nan, 0.1026158754763063], 'false': [1.1148494421081129e-05, 0.1537108166323541], 'false,false': [0.1537108166323541, nan]}
{'': [9.807425141408024e-06, 0.15377294009524822], 'false': [nan, 0.15377294009524822], 'false,false': [nan, 0.15377294009524822], 'false,false,false': [nan, 0.15377294009524822]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
1;true;teamplaysinleague(A, D).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
6;;teamplayssport(A, B) :- teamplaysinleague(A, C), athleteledsportsteam(D, E).;true;true
6;false;teamplaysagainstteam(F, B).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(D, B).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true


Refining candidate
***************************
Model training time 6.097274541854858
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.10159632948783634;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( athleteplaysforteam(E, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( teamplaysagainstteam(A, F) )
%   | | | then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.3207118471601497;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then if ( teamalsoknownas(D, E) )
%   | | then return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( teamalsoknownas(A, F) )
%   | | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(G, B) )
%   | then return 0.25517224256948956;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteledsportsteam(D, E) )
%   then if ( athleteplayssport(F, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.07877675473109175;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( teamplaysagainstteam(G, B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( teamalsoknownas(A, H) )
%   | | then return 0.11357955884465977;  // std dev = 0.236, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.20975771563253556;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamalsoknownas(A, E), teamplaysagainstteam(A, F) )
%   | | then return 0.1867325733227286;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.17709649774527747;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.07560914352937166;  // std dev = 0.013, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.06842697784420274;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteledsportsteam(D, E) )
%   | | then return 0.1527438580936708;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return 0.15820277406936759;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.07049321512762172;  // std dev = 0.012, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then if ( teamalsoknownas(E, D) )
%   | | then if ( teamalsoknownas(D, E) )
%   | | | then return -0.06419184008202618;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06419184008202618;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06419184008202619;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(F, B) )
%   | then if ( athleteledsportsteam(F, G) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return 0.1382594144501205;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.06601334722693848;  // std dev = 0.011, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning 17.671849489212036
Refined model CLL: -0.095156


******************************************
Best model found
******************************************
Results 

CLL : -0.099921 

AUC ROC : 0.980893 

AUC PR : 0.079337 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 6.097274541854858 

Total Inference Time : 0.7936620712280273 

Total revision time: 9.29541540145874
Best scored revision CLL: -0.095156


Results 

CLL : -0.099921 

AUC ROC : 0.980893 

AUC PR : 0.079337 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 9.348388195037842 

Total Inference Time : 0.7936620712280273 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 264
Target train neg examples: 106660

Target test facts examples: 9691
Target test pos examples: 133
Target test neg examples: 53331

Amount of data: 5
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.0965807437896729
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysinleague(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.48767788391726297;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.3912569620992536;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteledsportsteam(D, A) )
%   | then if ( teamplaysagainstteam(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(F, G) )
%   | | | then return 0.3862854405027751;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08628544050277512;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926094;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(G, A) )
%   | | then return 0.2905873781727453;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( teamplaysagainstteam(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06521267287053556;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17022714488608168;  // std dev = 0.438, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, A), athleteledsportsteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysagainstteam(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12899341523021687;  // std dev = 1.158, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09849006140017061;  // std dev = 0.438, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysinleague(C, D), teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.18007336033954746;  // std dev = 0.942, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamplaysinleague(G, H) )
%   | | then return -0.5499771147644813;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.14083968162774957;  // std dev = 0.940, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( athleteplaysforteam(E, A), teamplaysinleague(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.4135281976178674;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
Inference time using transfer learning 27.54599142074585
Parameter learned model CLL:-0.358702 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, A)', 'false,false,false': 'teamplaysagainstteam(B, F)'}, {'true': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.195, 2, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysinleague(D, A)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.452, 2, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [2.63e-09, 3, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.452, 2, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteledsportsteam(D, A)', 'false,true': 'teamplaysagainstteam(B, E)', 'false,true,false': 'athleteledsportsteam(F, G)', 'false,false': 'teamplaysagainstteam(B, H)', 'false,false,false': 'teamplaysinleague(I, A)'}, {'true': [0.0, 3, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.894, 1, 4], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.707, 1, 1]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(G, A)', 'false,false,false': 'teamplaysagainstteam(B, H)'}, {'true': [1.32e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.894, 1, 4], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.707, 1, 1]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)'}, {'true,true': [0.0, 3, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.438, 2, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(C, A), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysagainstteam(B, G)', 'false,false,false': 'teamplaysinleague(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 3, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.158, 2, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)'}, {'true': [1.86e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.438, 2, 5]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'teamplaysinleague(C, D), teamplaysagainstteam(B, D)', 'true,false': 'teamplaysagainstteam(B, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysinleague(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.942, 1, 5], 'false,true': [0.0, 1, 0], 'false,false,true': [0.0, 1, 0], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteplaysforteam(D, A)', 'false,false': 'athleteplaysforteam(E, A), teamplaysinleague(E, F)', 'false,false,false': 'teamplaysagainstteam(B, G)'}, {'true': [1.32e-09, 3, 0], 'false,true': [0.94, 1, 5], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0]}]
{'': [0.0, 0.20408163265306106], 'false': [nan, 0.20408163265306106], 'false,false': [nan, 0.20408163265306106], 'false,false,false': [nan, 0.20408163265306106]}
{'': [0.0, 0.20408163265306115], 'false': [nan, 0.20408163265306115], 'false,false': [0.20408163265306115, nan], 'true': [nan, 0.0]}
{'': [2.3129646346357427e-18, 0.20408163265306115], 'false': [nan, 0.20408163265306115], 'false,false': [0.20408163265306115, nan], 'true': [2.3129646346357427e-18, nan]}
{'': [-1.1564823173178713e-18, 0.2040816326530612], 'false': [0.16, 0.25], 'false,false': [nan, 0.25], 'false,false,false': [nan, 0.25], 'false,true': [nan, 0.16], 'false,true,false': [0.16, nan]}
{'': [2.3129646346357427e-18, 0.19608035873266486], 'false': [nan, 0.19608035873266486], 'false,false': [0.16000000000000003, 0.25], 'false,false,false': [nan, 0.25]}
{'': [0.0, 0.19158066318958847], 'false': [nan, 0.19158066318958847], 'true': [0.0, nan]}
{'': [nan, 0.14325118941816822], 'false': [0.0, 0.1916940232539436], 'false,false': [nan, 0.1916940232539436], 'false,false,false': [nan, 0.1916940232539436]}
{'': [1.1564823173178713e-18, 0.19186368986779964], 'false': [nan, 0.19186368986779964]}
{'': [0.12250949028825373, 0.057972633591984776], 'true': [nan, 0.12250949028825373], 'true,false': [0.0, 0.14790788253164547], 'false': [0.0, 0.0], 'false,false': [0.0, nan]}
{'': [5.782411586589357e-19, 0.1639675853868042], 'false': [0.14739212406470734, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
8;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
8;true;teamplaysagainstteam(B, E).;true;true
8;false;teamplaysagainstteam(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
9;false;athleteplaysforteam(D, A).;true;true


Refining candidate
***************************
Model training time 2.0224242210388184
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B), athleteledsportsteam(E, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.19148226843284555;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteledsportsteam(D, A), athleteplayssport(E, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.16653882456488175;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteledsportsteam(D, A), athleteplayssport(E, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.1420942428155648;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B), athleteledsportsteam(E, A) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.11914890490746428;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteledsportsteam(D, A), athleteplayssport(E, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.09841340278401862;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B), athleteledsportsteam(E, A) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.08026654944252243;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteledsportsteam(D, A), athleteplayssport(E, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.06479591611329223;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteledsportsteam(D, A), athleteplaysforteam(D, A) )
%   | then return 0.06245883231163482;  // std dev = 0.397, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.20472938992223058;  // std dev = 0.708, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.17247281947974277;  // std dev = 0.687, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( teamplaysagainstteam(B, E) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.3246396722097611;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.1450001331203823;  // std dev = 0.685, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.2578506095592048;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
Inference time using transfer learning 4.041038990020752
Refined model CLL: -0.23318


******************************************
Best model found
******************************************
Results 

CLL : -0.202161 

AUC ROC : 0.807102 

AUC PR : 0.040074 

Precision : 0.114379 

Recall : 0.263158 

F1 : 0.159453 

Total Learning Time : 2.0224242210388184 

Total Inference Time : 0.6660158634185791 

Total revision time: 4.4723060131073
Best scored revision CLL: -0.23318


Results 

CLL : -0.202161 

AUC ROC : 0.807102 

AUC PR : 0.040074 

Precision : 0.114379 

Recall : 0.263158 

F1 : 0.159453 

Total Learning Time : 4.525278806686401 

Total Inference Time : 0.6660158634185791 

Amount of data: 10
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.2290570735931396
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6273797043302815;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysinleague(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.5328490890947368;  // std dev = 0.421, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.4239325089396988;  // std dev = 0.421, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783627;  // std dev = 1.86e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteledsportsteam(D, A) )
%   | then if ( teamplaysagainstteam(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(F, G) )
%   | | | then return 0.35375116373648846;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.30375116373648847;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(G, A) )
%   | | then return 0.26557642711472057;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( teamplaysagainstteam(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22803602755245933;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18274457710972342;  // std dev = 0.421, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, A), athleteledsportsteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( teamplaysagainstteam(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13925234570475675;  // std dev = 1.517, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1074322769312352;  // std dev = 0.421, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysinleague(C, D), teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.18507874709272804;  // std dev = 0.943, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( teamplaysinleague(G, H) )
%   | | then return -0.07817068864887097;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.14694815531449812;  // std dev = 0.943, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( athleteplaysforteam(E, A), teamplaysinleague(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06087747901743477;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
Inference time using transfer learning 27.370508909225464
Parameter learned model CLL:-0.361344 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, A)', 'false,false,false': 'teamplaysagainstteam(B, F)'}, {'true': [0.0, 7, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.519, 3, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysinleague(D, A)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 7, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.421, 3, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [0.0, 7, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.421, 3, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteledsportsteam(D, A)', 'false,true': 'teamplaysagainstteam(B, E)', 'false,true,false': 'athleteledsportsteam(F, G)', 'false,false': 'teamplaysagainstteam(B, H)', 'false,false,false': 'teamplaysinleague(I, A)'}, {'true': [1.86e-09, 7, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.894, 1, 4], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.225, 2, 6]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(G, A)', 'false,false,false': 'teamplaysagainstteam(B, H)'}, {'true': [0.0, 7, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.894, 1, 4], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.225, 2, 6]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)'}, {'true,true': [2.63e-09, 7, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.421, 3, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(C, A), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysagainstteam(B, G)', 'false,false,false': 'teamplaysinleague(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 7, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.517, 3, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)'}, {'true': [2.63e-09, 7, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.421, 3, 10]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'teamplaysinleague(C, D), teamplaysagainstteam(B, D)', 'true,false': 'teamplaysagainstteam(B, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysinleague(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.943, 1, 7], 'false,true': [1.86e-09, 5, 0], 'false,false,true': [1.095, 2, 3], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteplaysforteam(D, A)', 'false,false': 'athleteplaysforteam(E, A), teamplaysinleague(E, F)', 'false,false,false': 'teamplaysagainstteam(B, G)'}, {'true': [0.0, 7, 0], 'false,true': [0.943, 1, 7], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.095, 2, 3]}]
{'': [-7.93016446160826e-18, 0.1775147928994082], 'false': [nan, 0.1775147928994082], 'false,false': [nan, 0.1775147928994082], 'false,false,false': [nan, 0.1775147928994082]}
{'': [-1.982541115402065e-18, 0.1775147928994084], 'false': [nan, 0.1775147928994084], 'false,false': [0.1775147928994084, nan], 'true': [nan, -1.982541115402065e-18]}
{'': [-1.982541115402065e-18, 0.177514792899408], 'false': [nan, 0.177514792899408], 'false,false': [0.177514792899408, nan], 'true': [-1.982541115402065e-18, nan]}
{'': [0.0, 0.17751479289940836], 'false': [0.16, 0.18750000000000006], 'false,false': [nan, 0.18750000000000006], 'false,false,false': [nan, 0.18750000000000006], 'false,true': [nan, 0.16], 'false,true,false': [0.16, nan]}
{'': [0.0, 0.17725663469805783], 'false': [nan, 0.17725663469805783], 'false,false': [0.16, 0.1875], 'false,false,false': [nan, 0.1875]}
{'': [9.912705577010326e-19, 0.17711954323170154], 'false': [nan, 0.17711954323170154], 'true': [9.912705577010326e-19, nan]}
{'': [nan, 0.1259498616610199], 'false': [-9.912705577010326e-19, 0.1771311769171277], 'false,false': [nan, 0.1771311769171277], 'false,false,false': [nan, 0.1771311769171277]}
{'': [9.912705577010326e-19, 0.17714289344109257], 'false': [nan, 0.17714289344109257]}
{'': [0.0992587684881235, 0.12002373497506122], 'false': [6.938893903907229e-19, 0.24], 'false,false': [0.24, nan], 'true': [nan, 0.0992587684881235], 'true,false': [0.0, 0.1112204300949946]}
{'': [-4.956352788505163e-19, 0.17088663667435358], 'false': [0.11107867140910524, 0.24], 'false,false': [nan, 0.24], 'false,false,false': [nan, 0.24]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
8;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
8;true;teamplaysagainstteam(B, E).;true;true
8;false;teamplaysagainstteam(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true


Refining candidate
***************************
Model training time 2.730532646179199
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( athleteledsportsteam(E, A), athleteplaysforteam(E, A) )
%   | | then return 0.09745114910920255;  // std dev = 0.192, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.15274385809367097;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.0642755237185215;  // std dev = 0.242, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.1391522035499621;  // std dev = 0.014, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.0733951908739333;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning 4.004044532775879
Refined model CLL: -0.098279


******************************************
Best model found
******************************************
Results 

CLL : -0.102661 

AUC ROC : 0.990825 

AUC PR : 0.11846 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 2.730532646179199 

Total Inference Time : 0.6661257743835449 

Total revision time: 5.330044746398926
Best scored revision CLL: -0.098279


Results 

CLL : -0.102661 

AUC ROC : 0.990825 

AUC PR : 0.11846 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 5.383017539978027 

Total Inference Time : 0.6661257743835449 

Amount of data: 15
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.3100545406341553
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6476226193100386;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysinleague(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.5494185715067316;  // std dev = 0.408, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.43580662724469027;  // std dev = 0.408, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteledsportsteam(D, A) )
%   | then if ( teamplaysagainstteam(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(F, G) )
%   | | | then return 0.41669102057817675;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.268963747850904;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(G, A) )
%   | | then return 0.31293700989535717;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( teamplaysagainstteam(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2018417992254691;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18816364558289553;  // std dev = 0.403, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, A), athleteledsportsteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.07877675473109172;  // std dev = 1.32e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( teamplaysagainstteam(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14418829539211064;  // std dev = 1.759, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11202986868581855;  // std dev = 0.404, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysinleague(C, D), teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.19131916626668238;  // std dev = 0.972, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( teamplaysinleague(G, H) )
%   | | then return -0.0537504229614779;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.06419184008202619;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.1543172734450793;  // std dev = 0.970, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( athleteplaysforteam(E, A), teamplaysinleague(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.04191941233720496;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
Inference time using transfer learning 28.012516975402832
Parameter learned model CLL:-0.335202 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, A)', 'false,false,false': 'teamplaysagainstteam(B, F)'}, {'true': [0.0, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.777, 4, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysinleague(D, A)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [5.27e-09, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.408, 4, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [7.45e-09, 11, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.408, 4, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteledsportsteam(D, A)', 'false,true': 'teamplaysagainstteam(B, E)', 'false,true,false': 'athleteledsportsteam(F, G)', 'false,false': 'teamplaysagainstteam(B, H)', 'false,false,false': 'teamplaysinleague(I, A)'}, {'true': [0.0, 11, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.935, 1, 7], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.477, 3, 8]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(G, A)', 'false,false,false': 'teamplaysagainstteam(B, H)'}, {'true': [0.0, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.935, 1, 7], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.477, 3, 8]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)'}, {'true,true': [5.27e-09, 11, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.403, 4, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(C, A), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysagainstteam(B, G)', 'false,false,false': 'teamplaysinleague(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [1.32e-09, 11, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.759, 4, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)'}, {'true': [2.63e-09, 11, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.404, 4, 15]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'teamplaysinleague(C, D), teamplaysagainstteam(B, D)', 'true,false': 'teamplaysagainstteam(B, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysinleague(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [1.86e-09, 5, 0], 'true,false,false': [0.972, 1, 10], 'false,true': [1.86e-09, 6, 0], 'false,false,true': [1.369, 3, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteplaysforteam(D, A)', 'false,false': 'athleteplaysforteam(E, A), teamplaysinleague(E, F)', 'false,false,false': 'teamplaysagainstteam(B, G)'}, {'true': [5.27e-09, 11, 0], 'false,true': [0.97, 1, 10], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.369, 3, 5]}]
{'': [-1.0092936587501423e-17, 0.16620498614958412], 'false': [nan, 0.16620498614958412], 'false,false': [nan, 0.16620498614958412], 'false,false,false': [nan, 0.16620498614958412]}
{'': [2.523234146875356e-18, 0.16620498614958432], 'false': [nan, 0.16620498614958432], 'false,false': [0.16620498614958432, nan], 'true': [nan, 2.523234146875356e-18]}
{'': [5.046468293750712e-18, 0.16620498614958465], 'false': [nan, 0.16620498614958465], 'false,false': [0.16620498614958465, nan], 'true': [5.046468293750712e-18, nan]}
{'': [0.0, 0.16620498614958448], 'false': [0.10937500000000008, 0.1983471074380166], 'false,false': [nan, 0.1983471074380166], 'false,false,false': [nan, 0.1983471074380166], 'false,true': [nan, 0.10937500000000008], 'false,true,false': [0.10937500000000008, nan]}
{'': [0.0, 0.16389377919091047], 'false': [nan, 0.16389377919091047], 'false,false': [0.10937499999999997, 0.19834710743801656], 'false,false,false': [nan, 0.19834710743801656]}
{'': [2.523234146875356e-18, 0.16268964026291374], 'false': [nan, 0.16268964026291374], 'true': [2.523234146875356e-18, nan]}
{'': [nan, 0.11465984132016738], 'false': [0.0, 0.16281360307135825], 'false,false': [nan, 0.16281360307135825], 'false,false,false': [nan, 0.16281360307135825]}
{'': [6.30808536718839e-19, 0.16293460968312976], 'false': [nan, 0.16293460968312976]}
{'': [0.07353495872807173, 0.13398132275834096], 'false': [5.782411586589357e-19, 0.23437499999999997], 'false,false': [0.23437499999999997, nan], 'true': [nan, 0.07353495872807173], 'true,false': [6.938893903907229e-19, 0.08587617141170664]}
{'': [2.523234146875356e-18, 0.15760994785645993], 'false': [0.08556657193139863, 0.234375], 'false,false': [nan, 0.234375], 'false,false,false': [nan, 0.234375]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
8;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
8;true;teamplaysagainstteam(B, E).;true;true
8;false;teamplaysagainstteam(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true


Refining candidate
***************************
Model training time 3.013533592224121
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.4175135841583098;  // std dev = 4.71e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2551722425694894;  // std dev = 2.36e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07877675473109172;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527741;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( athleteledsportsteam(E, A), athleteplayssport(F, B) )
%   | | then return 0.15274385809367072;  // std dev = 7.45e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.09745114910920238;  // std dev = 0.192, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( teamplaysagainstteam(B, G) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( athleteplayssport(H, B) )
%   | | then return 0.15274385809367075;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.06419184008202619;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.13531653075922165;  // std dev = 0.010, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.066870468235796;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning 4.383028030395508
Refined model CLL: -0.095573


******************************************
Best model found
******************************************
Results 

CLL : -0.101091 

AUC ROC : 0.991266 

AUC PR : 0.12517 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 3.013533592224121 

Total Inference Time : 0.6923775672912598 

Total revision time: 5.727444410324097
Best scored revision CLL: -0.095573


Results 

CLL : -0.101091 

AUC ROC : 0.991266 

AUC PR : 0.12517 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 5.780417203903198 

Total Inference Time : 0.6923775672912598 

Amount of data: 20
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.4573063850402832
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5988896758402525;  // std dev = 2.277, 27.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysinleague(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.5094629858417187;  // std dev = 0.438, 27.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.4070740258573001;  // std dev = 0.438, 27.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteledsportsteam(D, A) )
%   | then if ( teamplaysagainstteam(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(F, G) )
%   | | | then return 0.3888488921524995;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.25816707397068134;  // std dev = 1.854, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926096;  // std dev = 1.32e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(G, A) )
%   | | then return 0.29213651905517396;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else if ( teamplaysagainstteam(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1941011760494451;  // std dev = 1.854, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17610034180417042;  // std dev = 0.435, 27.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, A), athleteledsportsteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.07877675473109172;  // std dev = 9.31e-10, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( teamplaysagainstteam(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13353466310867332;  // std dev = 2.261, 27.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10227135928343661;  // std dev = 0.435, 27.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysinleague(C, D), teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.15268586721034455;  // std dev = 1.550, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( teamplaysinleague(G, H) )
%   | | then return -0.04605320096783251;  // std dev = 1.569, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.06419184008202619;  // std dev = 6.97e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.119977808016878;  // std dev = 1.551, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | else if ( athleteplaysforteam(E, A), teamplaysinleague(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.03546377679034095;  // std dev = 1.570, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
Inference time using transfer learning 28.734384059906006
Parameter learned model CLL:-0.397303 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, A)', 'false,false,false': 'teamplaysagainstteam(B, F)'}, {'true': [0.0, 13, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.277, 7, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysinleague(D, A)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [7.45e-09, 13, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.438, 7, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [1.05e-08, 13, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.438, 7, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteledsportsteam(D, A)', 'false,true': 'teamplaysagainstteam(B, E)', 'false,true,false': 'athleteledsportsteam(F, G)', 'false,false': 'teamplaysagainstteam(B, H)', 'false,false,false': 'teamplaysinleague(I, A)'}, {'true': [0.0, 13, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.279, 2, 9], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.854, 5, 11]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(G, A)', 'false,false,false': 'teamplaysagainstteam(B, H)'}, {'true': [1.32e-09, 13, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.279, 2, 9], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.854, 5, 11]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)'}, {'true,true': [7.45e-09, 13, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.435, 7, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(C, A), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysagainstteam(B, G)', 'false,false,false': 'teamplaysinleague(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [9.31e-10, 13, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.261, 7, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)'}, {'true': [0.0, 13, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.435, 7, 20]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'teamplaysinleague(C, D), teamplaysagainstteam(B, D)', 'true,false': 'teamplaysagainstteam(B, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysinleague(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [1.86e-09, 6, 0], 'true,false,false': [1.55, 3, 14], 'false,true': [2.63e-09, 7, 0], 'false,false,true': [1.569, 4, 6], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteplaysforteam(D, A)', 'false,false': 'athleteplaysforteam(E, A), teamplaysinleague(E, F)', 'false,false,false': 'teamplaysagainstteam(B, G)'}, {'true': [6.97e-09, 13, 0], 'false,true': [1.551, 3, 14], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.57, 4, 6]}]
{'': [-1.2810265668751807e-17, 0.19204389574759964], 'false': [nan, 0.19204389574759964], 'false,false': [nan, 0.19204389574759964], 'false,false,false': [nan, 0.19204389574759964]}
{'': [4.270088556250602e-18, 0.1920438957475991], 'false': [nan, 0.1920438957475991], 'false,false': [0.1920438957475991, nan], 'true': [nan, 4.270088556250602e-18]}
{'': [8.540177112501205e-18, 0.19204389574759936], 'false': [nan, 0.19204389574759936], 'false,false': [0.19204389574759936, nan], 'true': [8.540177112501205e-18, nan]}
{'': [-2.135044278125301e-18, 0.19204389574759959], 'false': [0.14876033057851232, 0.21484375], 'false,false': [nan, 0.21484375], 'false,false,false': [nan, 0.21484375], 'false,true': [nan, 0.14876033057851232], 'false,true,false': [0.14876033057851232, nan]}
{'': [2.135044278125301e-18, 0.19024120931960276], 'false': [nan, 0.19024120931960276], 'false,false': [0.14876033057851243, 0.21484375], 'false,false,false': [nan, 0.21484375]}
{'': [4.270088556250602e-18, 0.18926741775732078], 'false': [nan, 0.18926741775732078], 'true': [4.270088556250602e-18, nan]}
{'': [nan, 0.13768765382413106], 'false': [1.0675221390626506e-18, 0.1893319644719155], 'false,false': [nan, 0.1893319644719155], 'false,false,false': [nan, 0.1893319644719155]}
{'': [0.0, 0.18939997221089366], 'false': [nan, 0.18939997221089366]}
{'': [0.11392904712522121, 0.14501835567107177], 'false': [9.912705577010326e-19, 0.2463250810383517], 'false,false': [0.2463250810383517, nan], 'true': [nan, 0.11392904712522121], 'true,false': [5.782411586589357e-19, 0.14138515376965258]}
{'': [3.736327486719277e-18, 0.18603739096555325], 'false': [0.1415673843406852, 0.24642323678762681], 'false,false': [nan, 0.24642323678762681], 'false,false,false': [nan, 0.24642323678762681]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
8;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
8;true;teamplaysagainstteam(B, E).;true;true
8;false;teamplaysagainstteam(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true


Refining candidate
***************************
Model training time 3.1413776874542236
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.41751358415830986;  // std dev = 5.16e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.3207118471601496;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.25517224256948945;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527744;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.1527438580936708;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.15274385809367075;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.06419184008202619;  // std dev = 6.97e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
Inference time using transfer learning 4.106098890304565
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results 

CLL : -0.099192 

AUC ROC : 0.991093 

AUC PR : 0.122807 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 3.1413776874542236 

Total Inference Time : 0.6888623237609863 

Total revision time: 6.055926322937012
Best scored revision CLL: -0.094637


Results 

CLL : -0.099192 

AUC ROC : 0.991093 

AUC PR : 0.122807 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 6.108899116516113 

Total Inference Time : 0.6888623237609863 

Amount of data: 25
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.610152244567871
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5724346493852258;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysinleague(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.4876778839172633;  // std dev = 0.452, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.3912569620992533;  // std dev = 0.452, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteledsportsteam(D, A) )
%   | then if ( teamplaysagainstteam(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(F, G) )
%   | | | then return 0.33628544050277553;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.270495966818565;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926094;  // std dev = 1.86e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(G, A) )
%   | | then return 0.2530862268287332;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | else if ( teamplaysagainstteam(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20373422907768574;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.08518475138839685;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16988125423744477;  // std dev = 0.451, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, A), athleteledsportsteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( teamplaysagainstteam(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12819414521543923;  // std dev = 2.668, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09750064198204277;  // std dev = 0.451, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysinleague(C, D), teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.09442658724525183;  // std dev = 2.095, 23.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=17 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( teamplaysinleague(G, H) )
%   | | then return 0.03703586292885425;  // std dev = 1.644, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.06419184008202619;  // std dev = 7.90e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.07311875166271257;  // std dev = 2.096, 23.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=17 */
%   | else if ( athleteplaysforteam(E, A), teamplaysinleague(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.028443452633941158;  // std dev = 1.644, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
Inference time using transfer learning 33.907169580459595
Parameter learned model CLL:-0.43892 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, A)', 'false,false,false': 'teamplaysagainstteam(B, F)'}, {'true': [0.0, 15, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.673, 10, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysinleague(D, A)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [7.45e-09, 15, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.452, 10, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [1.39e-08, 15, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.452, 10, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteledsportsteam(D, A)', 'false,true': 'teamplaysagainstteam(B, E)', 'false,true,false': 'athleteledsportsteam(F, G)', 'false,false': 'teamplaysagainstteam(B, H)', 'false,false,false': 'teamplaysinleague(I, A)'}, {'true': [0.0, 15, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.732, 4, 12], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.026, 6, 13]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(G, A)', 'false,false,false': 'teamplaysagainstteam(B, H)'}, {'true': [1.86e-09, 15, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.732, 4, 12], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.026, 6, 13]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)'}, {'true,true': [9.13e-09, 15, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.451, 10, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(C, A), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysagainstteam(B, G)', 'false,false,false': 'teamplaysinleague(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 15, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.668, 10, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)'}, {'true': [3.73e-09, 15, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.451, 10, 25]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'teamplaysinleague(C, D), teamplaysagainstteam(B, D)', 'true,false': 'teamplaysagainstteam(B, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysinleague(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 8, 0], 'true,false,false': [2.095, 6, 17], 'false,true': [2.63e-09, 7, 0], 'false,false,true': [1.644, 4, 8], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteplaysforteam(D, A)', 'false,false': 'athleteplaysforteam(E, A), teamplaysinleague(E, F)', 'false,false,false': 'teamplaysagainstteam(B, G)'}, {'true': [7.9e-09, 15, 0], 'false,true': [2.096, 6, 17], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.644, 4, 8]}]
{'': [-1.4802973661668754e-17, 0.20408163265306242], 'false': [nan, 0.20408163265306242], 'false,false': [nan, 0.20408163265306242], 'false,false,false': [nan, 0.20408163265306242]}
{'': [3.7007434154171884e-18, 0.20408163265306106], 'false': [nan, 0.20408163265306106], 'false,false': [0.20408163265306106, nan], 'true': [nan, 3.7007434154171884e-18]}
{'': [1.295260195396016e-17, 0.20408163265306165], 'false': [nan, 0.20408163265306165], 'false,false': [0.20408163265306165, nan], 'true': [1.295260195396016e-17, nan]}
{'': [-5.551115123125783e-18, 0.20408163265306103], 'false': [0.1875, 0.2160664819944599], 'false,false': [nan, 0.2160664819944599], 'false,false,false': [nan, 0.2160664819944599], 'false,true': [nan, 0.1875], 'false,true,false': [0.1875, nan]}
{'': [3.7007434154171884e-18, 0.20361195013032624], 'false': [nan, 0.20361195013032624], 'false,false': [0.1874999999999999, 0.21606648199446], 'false,false,false': [nan, 0.21606648199446]}
{'': [5.551115123125783e-18, 0.20335189585321822], 'false': [nan, 0.20335189585321822], 'true': [5.551115123125783e-18, nan]}
{'': [nan, 0.15135041384986878], 'false': [-1.8503717077085942e-18, 0.20336379090098095], 'false,false': [nan, 0.20336379090098095], 'false,false,false': [nan, 0.20336379090098095]}
{'': [9.251858538542971e-19, 0.20337755435457774], 'false': [nan, 0.20337755435457774]}
{'': [0.1466927491516807, 0.1448322895121824], 'true': [nan, 0.1466927491516807], 'true,false': [0.0, 0.1908721118385605], 'false': [9.912705577010326e-19, 0.22522006143880838], 'false,false': [0.22522006143880838, nan]}
{'': [4.163336342344337e-18, 0.20312022691253173], 'false': [0.1909225710118015, 0.22518748756332777], 'false,false': [nan, 0.22518748756332777], 'false,false,false': [nan, 0.22518748756332777]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
8;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
8;true;teamplaysagainstteam(B, E).;true;true
8;false;teamplaysagainstteam(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true


Refining candidate
***************************
Model training time 3.4524288177490234
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926094;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.32071184716014955;  // std dev = 2.11e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.08518475138839685;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.25517224256948956;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07877675473109173;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.20975771563253554;  // std dev = 1.49e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07877675473109172;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527747;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.1527438580936708;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.15274385809367075;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.06419184008202619;  // std dev = 7.90e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.06419184008202619;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
Inference time using transfer learning 4.111982822418213
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results 

CLL : -0.099192 

AUC ROC : 0.991093 

AUC PR : 0.122807 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 3.4524288177490234 

Total Inference Time : 0.7033777236938477 

Total revision time: 6.5458643436431885
Best scored revision CLL: -0.094637


Results 

CLL : -0.099192 

AUC ROC : 0.991093 

AUC PR : 0.122807 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 6.59883713722229 

Total Inference Time : 0.7033777236938477 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 266
Target train neg examples: 106662

Target test facts examples: 9691
Target test pos examples: 131
Target test neg examples: 53329

Amount of data: 5
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.1277835369110107
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysinleague(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.5851860008555361;  // std dev = 0.373, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.46125983910675533;  // std dev = 0.373, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteledsportsteam(D, A) )
%   | then if ( teamplaysagainstteam(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(F, G) )
%   | | | then return 0.015512992361508937;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5155129923615089;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(G, A) )
%   | | then return 0.011637622617081983;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( teamplaysagainstteam(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.38854292568974114;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20365453715297907;  // std dev = 0.320, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, A), athleteledsportsteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( teamplaysagainstteam(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1593478248946479;  // std dev = 0.788, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12662876837639803;  // std dev = 0.324, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysinleague(C, D), teamplaysagainstteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.38824154140138345;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( teamplaysagainstteam(B, F) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysinleague(G, H) )
%   | | then return 0.04476216814417302;  // std dev = 0.734, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.30091355039427736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplaysforteam(E, A), teamplaysinleague(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03680610869757217;  // std dev = 0.737, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
Inference time using transfer learning 32.0268030166626
Parameter learned model CLL:-0.239405 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, A)', 'false,false,false': 'teamplaysagainstteam(B, F)'}, {'true': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.913, 1, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysinleague(D, A)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.373, 1, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [0.0, 4, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.373, 1, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteledsportsteam(D, A)', 'false,true': 'teamplaysagainstteam(B, E)', 'false,true,false': 'athleteledsportsteam(F, G)', 'false,false': 'teamplaysagainstteam(B, H)', 'false,false,false': 'teamplaysinleague(I, A)'}, {'true': [0.0, 4, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.707, 1, 1], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 4]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(G, A)', 'false,false,false': 'teamplaysagainstteam(B, H)'}, {'true': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.707, 1, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 4]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'true': 'teamplaysagainstteam(B, D)', 'false': 'teamplaysagainstteam(B, E)'}, {'true,true': [0.0, 4, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.32, 1, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(C, A), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysagainstteam(B, G)', 'false,false,false': 'teamplaysinleague(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 4, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.788, 1, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'teamplaysagainstteam(B, D)'}, {'true': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.324, 1, 5]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'teamplaysinleague(C, D), teamplaysagainstteam(B, D)', 'true,false': 'teamplaysagainstteam(B, E)', 'false': 'teamplaysagainstteam(B, F)', 'false,false': 'teamplaysinleague(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [0.0, 3, 0], 'false,false,true': [0.734, 1, 4], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(B, C)', 'false': 'athleteplaysforteam(D, A)', 'false,false': 'athleteplaysforteam(E, A), teamplaysinleague(E, F)', 'false,false,false': 'teamplaysagainstteam(B, G)'}, {'true': [0.0, 4, 0], 'false,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.737, 1, 4]}]
{'': [0.0, 0.1388888888888887], 'false': [nan, 0.1388888888888887], 'false,false': [nan, 0.1388888888888887], 'false,false,false': [nan, 0.1388888888888887]}
{'': [0.0, 0.13888888888888884], 'false': [nan, 0.13888888888888884], 'false,false': [0.13888888888888884, nan], 'true': [nan, 0.0]}
{'': [0.0, 0.13888888888888887], 'false': [nan, 0.13888888888888887], 'false,false': [0.13888888888888887, nan], 'true': [0.0, nan]}
{'': [0.0, 0.13888888888888898], 'false': [0.25, 0.0], 'false,true': [nan, 0.25], 'false,true,false': [0.25, nan], 'false,false': [nan, 0.0], 'false,false,false': [nan, 0.0]}
{'': [0.0, 0.11490169055206512], 'false': [nan, 0.11490169055206512], 'false,false': [0.25000000000000006, 0.0], 'false,false,false': [nan, 0.0]}
{'': [0.0, 0.10233123163317441], 'false': [nan, 0.10233123163317441], 'true': [0.0, nan]}
{'': [nan, 0.07578117124579381], 'false': [0.0, 0.10362062590754893], 'false,false': [nan, 0.10362062590754893], 'false,false,false': [nan, 0.10362062590754893]}
{'': [0.0, 0.10494893992968457], 'false': [nan, 0.10494893992968457]}
{'': [0.05213653411748907, 0.07034953242079875], 'false': [-5.782411586589357e-19, 0.10775483333468631], 'false,false': [0.10775483333468631, nan], 'true': [nan, 0.05213653411748907], 'true,false': [0.0, 0.0]}
{'': [0.0, 0.10020190690506996], 'false': [0.0, 0.10861683149282084], 'false,false': [nan, 0.10861683149282084], 'false,false,false': [nan, 0.10861683149282084]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
3;false;athleteledsportsteam(D, A).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
4;false;athleteledsportsteam(E, F), athleteledsportsteam(G, A).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
8;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
8;true;teamplaysagainstteam(B, E).;true;true
8;false;teamplaysagainstteam(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(B, C).;true;true
9;false;athleteplaysforteam(D, A).;true;true


Refining candidate
***************************
Model training time 0.8739418983459473
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.5851860008555361;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.46125983910675533;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteledsportsteam(D, A) )
%   | then return 0.015512992361508937;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.5155129923615089;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteledsportsteam(D, E), athleteledsportsteam(F, A) )
%   | then return 0.011637622617081983;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.38854292568974114;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.20365453715297907;  // std dev = 0.784, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.1593478248946479;  // std dev = 0.788, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.12662876837639803;  // std dev = 0.794, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysagainstteam(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.38824154140138345;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( teamplaysagainstteam(B, E) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.04476216814417302;  // std dev = 0.734, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(B, C) )
%   then return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.30091355039427736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.03680610869757217;  // std dev = 0.737, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
Inference time using transfer learning 7.080552816390991
Refined model CLL: -0.239405


******************************************
Best model found
******************************************
Results 

CLL : -0.759328 

AUC ROC : 0.795154 

AUC PR : 0.005884 

Precision : 0.005419 

Recall : 1.0 

F1 : 0.010779 

Total Learning Time : 0.8739418983459473 

Total Inference Time : 0.6182527542114258 

Total revision time: 3.329874277114868
Best scored revision CLL: -0.239405


Results 

CLL : -0.759328 

AUC ROC : 0.795154 

AUC PR : 0.005884 

Precision : 0.005419 

Recall : 1.0 

F1 : 0.010779 

Total Learning Time : 3.3828470706939697 

Total Inference Time : 0.6182527542114258 

Amount of data: 10
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.2485718727111816
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(A, E) )
%   | | then if ( athleteplaysforteam(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5248156017661789;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( teamplaysagainstteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.5317349311554982;  // std dev = 0.412, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(D, B) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.42340078379149715;  // std dev = 0.410, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.10159632948783627;  // std dev = 1.86e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteledsportsteam(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return 0.24600278325965666;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.49667888633127444;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.243641191521629;  // std dev = 1.449, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18457446316797116;  // std dev = 0.402, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteledsportsteam(D, E) )
%   then return 0.009994213353090323;  // std dev = 1.448, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   else if ( teamplaysagainstteam(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.28126828418771277;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.07950510470644069;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12320788098405865;  // std dev = 0.398, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(D, B) )
%   | then return -0.07387769630781559;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( teamplaysinleague(E, F) )
%   | | then return 0.09637776103200255;  // std dev = 1.439, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.06897943006396572;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplaysforteam(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(A, E), teamplaysinleague(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07610868249486515;  // std dev = 1.441, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
Inference time using transfer learning 34.35903334617615
Parameter learned model CLL:-0.349624 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(A, E)', 'false,false,true': 'athleteplaysforteam(A, E)', 'false,false,false': 'teamplaysagainstteam(F, B)'}, {'true': [0.0, 7, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.414, 3, 6], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 4]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysinleague(A, D)', 'false': 'teamplaysagainstteam(E, B)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [0.0, 7, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.412, 3, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysagainstteam(D, B)', 'false': 'teamplaysagainstteam(E, B)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [0.0, 7, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.41, 3, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'athleteledsportsteam(A, D)', 'false,false': 'teamplaysagainstteam(E, B)', 'false,false,false': 'teamplaysinleague(A, F)'}, {'true': [1.86e-09, 7, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.414, 3, 6], 'false,false,false,false': [0.0, 0, 4]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(A, G)', 'false,false,false': 'teamplaysagainstteam(H, B)'}, {'true': [0.0, 7, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.449, 3, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysagainstteam(D, B)', 'false': 'teamplaysagainstteam(E, B)'}, {'true,true': [2.63e-09, 7, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.402, 3, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(F, B)', 'false,false': 'teamplaysagainstteam(G, B)', 'false,false,false': 'teamplaysinleague(A, H)'}, {'true': [1.448, 10, 6], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 4]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)'}, {'true': [0.0, 7, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.398, 3, 10]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(A, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [2.63e-09, 7, 0], 'false,false,true': [1.439, 3, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'athleteplaysforteam(A, D)', 'false,false': 'athleteplaysforteam(A, E), teamplaysinleague(F, E)', 'false,false,false': 'teamplaysagainstteam(G, B)'}, {'true': [0.0, 7, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.441, 3, 10]}]
{'': [-7.93016446160826e-18, 0.1775147928994082], 'false': [nan, 0.1775147928994082], 'false,false': [0.22222222222222218, 0.0], 'false,false,true': [nan, 0.22222222222222218], 'false,false,false': [nan, 0.0]}
{'': [-1.982541115402065e-18, 0.16951092596571377], 'false': [nan, 0.16951092596571377], 'false,false': [0.16951092596571377, nan], 'true': [-1.982541115402065e-18, nan]}
{'': [-1.982541115402065e-18, 0.16788286513731926], 'false': [nan, 0.16788286513731926], 'false,false': [0.16788286513731926, nan], 'true': [-1.982541115402065e-18, nan]}
{'': [0.0, 0.16723187166533846], 'false': [nan, 0.16723187166533846], 'false,false': [nan, 0.16723187166533846], 'false,false,false': [0.2222222222222222, 0.0]}
{'': [0.0, 0.16153871636417086], 'false': [nan, 0.16153871636417086], 'false,false': [nan, 0.16153871636417086], 'false,false,false': [nan, 0.16153871636417086]}
{'': [9.912705577010326e-19, 0.1620016758661333], 'false': [nan, 0.1620016758661333], 'true': [9.912705577010326e-19, nan]}
{'': [0.13112911038024663, 0.0], 'false': [nan, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [nan, 0.0]}
{'': [-9.912705577010326e-19, 0.15872991037135187], 'false': [nan, 0.15872991037135187]}
{'': [nan, 0.11013445235329229], 'false': [9.912705577010326e-19, 0.15929219674116835], 'false,false': [0.15929219674116835, nan]}
{'': [-9.912705577010326e-19, 0.15978403147348055], 'false': [nan, 0.15978403147348055], 'false,false': [nan, 0.15978403147348055], 'false,false,false': [nan, 0.15978403147348055]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
0;false;teamplaysinleague(A, E).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
3;false;teamplaysinleague(A, F).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
6;;teamplayssport(A, B) :- teamplaysinleague(A, C), athleteledsportsteam(D, E).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(D, B).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true


Refining candidate
***************************
Model training time 2.9229540824890137
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysinleague(A, D) )
%   | then if ( athleteplayssport(E, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysinleague(A, D) )
%   | then if ( athleteplayssport(E, B) )
%   | | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteledsportsteam(D, E) )
%   then if ( athleteplayssport(F, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.07877675473109172;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.15274385809367094;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning 15.8672194480896
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results 

CLL : -0.124452 

AUC ROC : 0.990696 

AUC PR : 0.123704 

Precision : 0.124758 

Recall : 0.984733 

F1 : 0.221459 

Total Learning Time : 2.9229540824890137 

Total Inference Time : 0.6855700016021729 

Total revision time: 5.574223756790161
Best scored revision CLL: -0.094637


Results 

CLL : -0.124452 

AUC ROC : 0.990696 

AUC PR : 0.123704 

Precision : 0.124758 

Recall : 0.984733 

F1 : 0.221459 

Total Learning Time : 5.627196550369263 

Total Inference Time : 0.6855700016021729 

Amount of data: 15
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.420177936553955
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(A, E) )
%   | | then if ( athleteplaysforteam(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5724346493852266;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else if ( teamplaysagainstteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.5486767071524451;  // std dev = 0.401, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(D, B) )
%   | then return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.43547903485058537;  // std dev = 0.400, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteledsportsteam(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return 0.27483943614375994;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return 0.48942540777703575;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.24950378824379;  // std dev = 1.719, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1891273016730266;  // std dev = 0.395, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteledsportsteam(D, E) )
%   then return 0.020715250123842895;  // std dev = 1.747, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   else if ( teamplaysagainstteam(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2748085182657348;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.08029325908483978;  // std dev = 3.73e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12808617853338242;  // std dev = 0.392, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(D, B) )
%   | then return -0.07456018506478847;  // std dev = 6.97e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( teamplaysinleague(E, F) )
%   | | then return 0.10058078551615256;  // std dev = 1.711, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.06957587591748052;  // std dev = 3.73e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplaysforteam(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(A, E), teamplaysinleague(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07984313154992072;  // std dev = 1.713, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
Inference time using transfer learning 32.71184325218201
Parameter learned model CLL:-0.336551 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(A, E)', 'false,false,true': 'athleteplaysforteam(A, E)', 'false,false,false': 'teamplaysagainstteam(F, B)'}, {'true': [0.0, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.69, 4, 10], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysinleague(A, D)', 'false': 'teamplaysagainstteam(E, B)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [5.27e-09, 11, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.401, 4, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysagainstteam(D, B)', 'false': 'teamplaysagainstteam(E, B)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [7.45e-09, 11, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.4, 4, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'athleteledsportsteam(A, D)', 'false,false': 'teamplaysagainstteam(E, B)', 'false,false,false': 'teamplaysinleague(A, F)'}, {'true': [0.0, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.69, 4, 10], 'false,false,false,false': [0.0, 0, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(A, G)', 'false,false,false': 'teamplaysagainstteam(H, B)'}, {'true': [0.0, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.719, 4, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysagainstteam(D, B)', 'false': 'teamplaysagainstteam(E, B)'}, {'true,true': [5.27e-09, 11, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.395, 4, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(F, B)', 'false,false': 'teamplaysagainstteam(G, B)', 'false,false,false': 'teamplaysinleague(A, H)'}, {'true': [1.747, 15, 10], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)'}, {'true': [3.73e-09, 11, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.392, 4, 15]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(A, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [6.97e-09, 11, 0], 'false,false,true': [1.711, 4, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'athleteplaysforteam(A, D)', 'false,false': 'athleteplaysforteam(A, E), teamplaysinleague(F, E)', 'false,false,false': 'teamplaysagainstteam(G, B)'}, {'true': [3.73e-09, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.713, 4, 15]}]
{'': [-1.0092936587501423e-17, 0.16620498614958412], 'false': [nan, 0.16620498614958412], 'false,false': [0.20408163265306115, 0.0], 'false,false,true': [nan, 0.20408163265306115], 'false,false,false': [nan, 0.0]}
{'': [2.523234146875356e-18, 0.1607943378706395], 'false': [nan, 0.1607943378706395], 'false,false': [0.1607943378706395, nan], 'true': [2.523234146875356e-18, nan]}
{'': [5.046468293750712e-18, 0.1596988280244868], 'false': [nan, 0.1596988280244868], 'false,false': [0.1596988280244868, nan], 'true': [5.046468293750712e-18, nan]}
{'': [0.0, 0.15930474800897515], 'false': [nan, 0.15930474800897515], 'false,false': [nan, 0.15930474800897515], 'false,false,false': [0.2040816326530612, -4.4408920985006264e-17]}
{'': [0.0, 0.15557118763816502], 'false': [nan, 0.15557118763816502], 'false,false': [nan, 0.15557118763816502], 'false,false,false': [nan, 0.15557118763816502]}
{'': [2.523234146875356e-18, 0.1559497558235047], 'false': [nan, 0.1559497558235047], 'true': [2.523234146875356e-18, nan]}
{'': [0.12206323209504268, -2.2204460492503132e-17], 'false': [nan, -2.2204460492503132e-17], 'false,false': [nan, -2.2204460492503132e-17], 'false,false,false': [nan, -2.2204460492503132e-17]}
{'': [1.261617073437678e-18, 0.15362984598979645], 'false': [nan, 0.15362984598979645]}
{'': [nan, 0.10469225554881074], 'false': [4.4156597570318725e-18, 0.15405629621497993], 'false,false': [0.15405629621497993, nan]}
{'': [1.261617073437678e-18, 0.15442803900089586], 'false': [nan, 0.15442803900089586], 'false,false': [nan, 0.15442803900089586], 'false,false,false': [nan, 0.15442803900089586]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
0;false;teamplaysinleague(A, E).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
3;false;teamplaysinleague(A, F).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
6;;teamplayssport(A, B) :- teamplaysinleague(A, C), athleteledsportsteam(D, E).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(D, B).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true


Refining candidate
***************************
Model training time 5.066351652145386
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamplaysinleague(A, D) )
%   | then if ( athleteplayssport(E, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109543;  // std dev = 4.21e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamplaysinleague(A, D) )
%   | then if ( athleteplayssport(E, B) )
%   | | then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2551722425694894;  // std dev = 2.36e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteledsportsteam(D, E) )
%   then if ( athleteplayssport(F, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527741;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.06842697784420272;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.1527438580936708;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.06419184008202619;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning 15.661139726638794
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results 

CLL : -0.124452 

AUC ROC : 0.990696 

AUC PR : 0.123704 

Precision : 0.124758 

Recall : 0.984733 

F1 : 0.221459 

Total Learning Time : 5.066351652145386 

Total Inference Time : 0.7684218883514404 

Total revision time: 8.01688528060913
Best scored revision CLL: -0.094637


Results 

CLL : -0.124452 

AUC ROC : 0.990696 

AUC PR : 0.123704 

Precision : 0.124758 

Recall : 0.984733 

F1 : 0.221459 

Total Learning Time : 8.069858074188232 

Total Inference Time : 0.7684218883514404 

Amount of data: 20
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.5546014308929443
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(A, E) )
%   | | then if ( athleteplaysforteam(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5949910403626703;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( teamplaysagainstteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.5327140730682782;  // std dev = 0.420, 26.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(D, B) )
%   | then return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.42386564081120065;  // std dev = 0.420, 26.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteledsportsteam(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return 0.29863195231169515;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.3891312300593575;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.09269127618926096;  // std dev = 1.32e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2425926084864372;  // std dev = 2.137, 26.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(D, B) )
%   | then return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1829210194526662;  // std dev = 0.419, 26.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteledsportsteam(D, E) )
%   then return 0.03931003802019706;  // std dev = 1.997, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   else if ( teamplaysagainstteam(F, B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamplaysagainstteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19195133006565346;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.0810749644994653;  // std dev = 0.008, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12156812546651805;  // std dev = 0.418, 26.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(D, B) )
%   | then return -0.07523658368219777;  // std dev = 0.008, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( teamplaysinleague(E, F) )
%   | | then return 0.09449458261904721;  // std dev = 2.133, 26.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.07016662551081475;  // std dev = 0.007, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplaysforteam(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(A, E), teamplaysinleague(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0742124151266116;  // std dev = 2.134, 26.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
Inference time using transfer learning 37.853524923324585
Parameter learned model CLL:-0.376526 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(A, E)', 'false,false,true': 'athleteplaysforteam(A, E)', 'false,false,false': 'teamplaysagainstteam(F, B)'}, {'true': [0.0, 14, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.919, 5, 14], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.926, 1, 6]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysinleague(A, D)', 'false': 'teamplaysagainstteam(E, B)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [7.45e-09, 13, 0], 'true,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.42, 6, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysagainstteam(D, B)', 'false': 'teamplaysagainstteam(E, B)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [1.18e-08, 14, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.42, 6, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'athleteledsportsteam(A, D)', 'false,false': 'teamplaysagainstteam(E, B)', 'false,false,false': 'teamplaysinleague(A, F)'}, {'true': [0.0, 14, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.919, 5, 14], 'false,false,false,false': [0.926, 1, 6]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(A, G)', 'false,false,false': 'teamplaysagainstteam(H, B)'}, {'true': [1.32e-09, 14, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.137, 6, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysagainstteam(D, B)', 'false': 'teamplaysagainstteam(E, B)'}, {'true,true': [8.33e-09, 14, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.419, 6, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(F, B)', 'false,false': 'teamplaysagainstteam(G, B)', 'false,false,false': 'teamplaysinleague(A, H)'}, {'true': [1.997, 18, 14], 'false,true': [0.0, 1, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.926, 1, 6]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)'}, {'true': [0.008, 14, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.418, 6, 20]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(A, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.008, 14, 0], 'false,false,true': [2.133, 6, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'athleteplaysforteam(A, D)', 'false,false': 'athleteplaysforteam(A, E), teamplaysinleague(F, E)', 'false,false,false': 'teamplaysagainstteam(G, B)'}, {'true': [0.007, 14, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.134, 6, 20]}]
{'': [-1.1895246692412391e-17, 0.17751479289940847], 'false': [nan, 0.17751479289940847], 'false,false': [0.19390581717451486, 0.12244897959183662], 'false,false,true': [nan, 0.19390581717451486], 'false,false,false': [nan, 0.12244897959183662]}
{'': [3.96508223080413e-18, 0.17656740965757273], 'false': [nan, 0.17656740965757273], 'false,false': [0.17656740965757273, nan], 'true': [4.270088556250602e-18, 0.0]}
{'': [9.912705577010326e-18, 0.17636477627382388], 'false': [nan, 0.17636477627382388], 'false,false': [0.17636477627382388, nan], 'true': [9.912705577010326e-18, nan]}
{'': [-3.96508223080413e-18, 0.17627880744558252], 'false': [nan, 0.17627880744558252], 'false,false': [nan, 0.17627880744558252], 'false,false,false': [0.19390581717451544, 0.12244897959183665]}
{'': [3.96508223080413e-18, 0.17557628038614992], 'false': [nan, 0.17557628038614992], 'false,false': [nan, 0.17557628038614992], 'false,false,false': [nan, 0.17557628038614992]}
{'': [4.956352788505163e-18, 0.17562262048210692], 'false': [nan, 0.17562262048210692], 'true': [4.956352788505163e-18, nan]}
{'': [0.1246725462152482, 0.1151593551316696], 'false': [0.0, 0.12244897959183677], 'false,false': [nan, 0.12244897959183677], 'false,false,false': [nan, 0.12244897959183677]}
{'': [4.714550015272323e-06, 0.17497878057971672], 'false': [nan, 0.17497878057971672]}
{'': [nan, 0.12032811058864083], 'false': [4.107055268473547e-06, 0.17503492456017877], 'false,false': [0.17503492456017877, nan]}
{'': [3.6078839177135425e-06, 0.17508576492326558], 'false': [nan, 0.17508576492326558], 'false,false': [nan, 0.17508576492326558], 'false,false,false': [nan, 0.17508576492326558]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
1;true;teamplaysinleague(A, D).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
6;;teamplayssport(A, B) :- teamplaysinleague(A, C), athleteledsportsteam(D, E).;true;true
6;false;teamplaysagainstteam(F, B).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(D, B).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true


Refining candidate
***************************
Model training time 7.362694025039673
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteplaysforteam(D, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamalsoknownas(A, E) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4175135841583098;  // std dev = 4.21e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( athleteplaysforteam(E, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamplaysagainstteam(A, F) )
%   | | | then return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then if ( teamalsoknownas(E, D) )
%   | | then return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(F, B) )
%   | then if ( athleteplaysforteam(F, A) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamalsoknownas(A, G) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2551722425694894;  // std dev = 2.11e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteledsportsteam(D, E) )
%   then if ( athleteplayssport(F, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.07877675473109175;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( teamplaysagainstteam(G, B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.1685385055805888;  // std dev = 0.101, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then if ( teamalsoknownas(E, D) )
%   | | then return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(F, B) )
%   | then if ( teamplaysinleague(A, G) )
%   | | then return 0.1770964977452774;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.18318366776563177;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.07635668401358592;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( teamplaysinleague(A, F) )
%   | | then return 0.1527438580936708;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.15734607973828774;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.07114607479072514;  // std dev = 0.016, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(D, A) )
%   | then return -0.06419184008202618;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.06419184008202619;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( teamplaysinleague(A, F) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.13758974324182627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.06658827148891401;  // std dev = 0.015, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning 19.34315299987793
Refined model CLL: -0.095468


******************************************
Best model found
******************************************
Results 

CLL : -0.098765 

AUC ROC : 0.990646 

AUC PR : 0.122969 

Precision : 0.124758 

Recall : 0.984733 

F1 : 0.221459 

Total Learning Time : 7.362694025039673 

Total Inference Time : 0.8096842765808105 

Total revision time: 10.528280019760132
Best scored revision CLL: -0.095468


Results 

CLL : -0.098765 

AUC ROC : 0.990646 

AUC PR : 0.122969 

Precision : 0.124758 

Recall : 0.984733 

F1 : 0.221459 

Total Learning Time : 10.581252813339233 

Total Inference Time : 0.8096842765808105 

Amount of data: 25
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.5186512470245361
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(A, E) )
%   | | then if ( athleteplaysforteam(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.597279369882121;  // std dev = 2.106, 23.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=17 */
%   | | else if ( teamplaysagainstteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then return 0.5424776048065482;  // std dev = 0.412, 32.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(D, B) )
%   | then return -0.11231637819360635;  // std dev = 1.67e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then return 0.43089140842085893;  // std dev = 0.411, 32.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.10159632948783635;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( athleteledsportsteam(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return 0.29621831262817677;  // std dev = 2.106, 23.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=17 */
%   | | | else return 0.4087766814775527;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.09269127618926093;  // std dev = 2.63e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(E, F), athleteledsportsteam(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.24630041820611576;  // std dev = 2.317, 32.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=25 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(D, B) )
%   | then return -0.08518475138839683;  // std dev = 1.18e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18605045747833499;  // std dev = 0.410, 32.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=25 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteledsportsteam(D, E) )
%   then return 0.03659581551189405;  // std dev = 2.190, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   else if ( teamplaysagainstteam(F, B) )
%   | then return -0.07877675473109177;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( teamplaysagainstteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20720211421333357;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.0805596456842962;  // std dev = 0.011, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( teamplaysagainstteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12396620170223194;  // std dev = 0.409, 32.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=25 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(D, B) )
%   | then return -0.07479114931893965;  // std dev = 0.010, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( teamplaysinleague(E, F) )
%   | | then return 0.09681678216103076;  // std dev = 2.312, 32.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.06977796766468759;  // std dev = 0.010, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( athleteplaysforteam(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(A, E), teamplaysinleague(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07643671123657486;  // std dev = 2.313, 32.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=25 */
Inference time using transfer learning 38.980889320373535
Parameter learned model CLL:-0.360387 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(A, E)', 'false,false,true': 'athleteplaysforteam(A, E)', 'false,false,false': 'teamplaysagainstteam(F, B)'}, {'true': [0.0, 18, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [2.106, 6, 17], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.943, 1, 8]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysinleague(A, D)', 'false': 'teamplaysagainstteam(E, B)', 'false,false': 'teamplaysinleague(F, G)'}, {'true,true': [7.45e-09, 16, 0], 'true,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.412, 7, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysagainstteam(D, B)', 'false': 'teamplaysagainstteam(E, B)', 'false,false': 'athleteledsportsteam(F, G)'}, {'true,true': [1.67e-08, 18, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.411, 7, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'athleteledsportsteam(A, D)', 'false,false': 'teamplaysagainstteam(E, B)', 'false,false,false': 'teamplaysinleague(A, F)'}, {'true': [0.0, 18, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.106, 6, 17], 'false,false,false,false': [0.943, 1, 8]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'athleteledsportsteam(E, F), athleteledsportsteam(A, G)', 'false,false,false': 'teamplaysagainstteam(H, B)'}, {'true': [2.63e-09, 18, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.317, 7, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'true': 'teamplaysagainstteam(D, B)', 'false': 'teamplaysagainstteam(E, B)'}, {'true,true': [1.18e-08, 18, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.41, 7, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C), athleteledsportsteam(D, E)', 'false': 'teamplaysagainstteam(F, B)', 'false,false': 'teamplaysagainstteam(G, B)', 'false,false,false': 'teamplaysinleague(A, H)'}, {'true': [2.19, 22, 17], 'false,true': [0.0, 2, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.943, 1, 8]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'teamplaysagainstteam(D, B)'}, {'true': [0.011, 18, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.409, 7, 25]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(A, C)', 'false': 'teamplaysagainstteam(D, B)', 'false,false': 'teamplaysinleague(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.01, 18, 0], 'false,false,true': [2.312, 7, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, B)', 'false': 'athleteplaysforteam(A, D)', 'false,false': 'athleteplaysforteam(A, E), teamplaysinleague(F, E)', 'false,false,false': 'teamplaysagainstteam(G, B)'}, {'true': [0.01, 18, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.313, 7, 25]}]
{'': [-3.0839528461809902e-18, 0.1708984375000011], 'false': [nan, 0.1708984375000011], 'false,false': [0.19281663516068015, 0.09876543209876527], 'false,false,true': [nan, 0.19281663516068015], 'false,false,false': [nan, 0.09876543209876527]}
{'': [0.0, 0.1693781179053877], 'false': [nan, 0.1693781179053877], 'false,false': [0.1693781179053877, nan], 'true': [3.469446951953614e-18, 0.0]}
{'': [1.5419764230904953e-17, 0.1690550764836845], 'false': [nan, 0.1690550764836845], 'false,false': [0.1690550764836845, nan], 'true': [1.5419764230904953e-17, nan]}
{'': [-4.625929269271485e-18, 0.16892583096396302], 'false': [nan, 0.16892583096396302], 'false,false': [nan, 0.16892583096396302], 'false,false,false': [0.19281663516068084, 0.09876543209876543]}
{'': [6.1679056923619804e-18, 0.16782210377473844], 'false': [nan, 0.16782210377473844], 'false,false': [nan, 0.16782210377473844], 'false,false,false': [nan, 0.16782210377473844]}
{'': [7.709882115452476e-18, 0.16790850844386274], 'false': [nan, 0.16790850844386274], 'true': [7.709882115452476e-18, nan]}
{'': [0.12297208238331202, 0.09297428281377657], 'false': [0.0, 0.0987654320987654], 'false,false': [nan, 0.0987654320987654], 'false,false,false': [nan, 0.0987654320987654]}
{'': [6.6857638675333715e-06, 0.16699254736548716], 'false': [nan, 0.16699254736548716]}
{'': [nan, 0.11372762052686335], 'false': [5.82922511844204e-06, 0.16709438656123446], 'false,false': [0.16709438656123446, nan]}
{'': [5.124603194591367e-06, 0.16718544467670288], 'false': [nan, 0.16718544467670288], 'false,false': [nan, 0.16718544467670288], 'false,false,false': [nan, 0.16718544467670288]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
1;true;teamplaysinleague(A, D).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
6;;teamplayssport(A, B) :- teamplaysinleague(A, C), athleteledsportsteam(D, E).;true;true
6;false;teamplaysagainstteam(F, B).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(D, B).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(C, B).;true;true


Refining candidate
***************************
Model training time 13.056283712387085
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then if ( teamalsoknownas(D, E) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(F, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.10159632948783631;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then if ( teamalsoknownas(D, E) )
%   | | then return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(F, B) )
%   | then if ( athleteplaysforteam(F, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( teamplaysagainstteam(A, G) )
%   | | | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.3207118471601497;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteledsportsteam(E, D) )
%   | | then if ( athleteledsportsteam(F, A) )
%   | | | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(G, B) )
%   | then return 0.25517224256948956;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( athleteledsportsteam(H, A) )
%   | | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteledsportsteam(D, E) )
%   then if ( athleteplayssport(F, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.07877675473109176;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( teamplaysagainstteam(G, B) )
%   | then return -0.07877675473109175;  // std dev = 1.32e-09, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.17769833003657698;  // std dev = 0.091, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysinleague(A, E) )
%   | | then return 0.17709649774527741;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.1818170823026679;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( teamplaysagainstteam(F, A) )
%   | | then return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07972292816826043;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then return -0.06842697784420274;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysinleague(A, E) )
%   | | then return 0.1527438580936708;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.15631554463948172;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( teamplaysagainstteam(F, A) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07407245234915955;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteledsportsteam(E, D) )
%   | | then return -0.06419184008202618;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.06419184008202618;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(F, B) )
%   | then if ( teamplaysinleague(A, G) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.13678925382269824;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( teamplaysagainstteam(H, A) )
%   | | then return -0.06419184008202618;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06915464557039641;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning 18.346322298049927
Refined model CLL: -0.095325


******************************************
Best model found
******************************************
Results 

CLL : -0.098878 

AUC ROC : 0.990773 

AUC PR : 0.12307 

Precision : 0.124758 

Recall : 0.984733 

F1 : 0.221459 

Total Learning Time : 13.056283712387085 

Total Inference Time : 0.8611493110656738 

Total revision time: 16.214566469192505
Best scored revision CLL: -0.095325


Results 

CLL : -0.098878 

AUC ROC : 0.990773 

AUC PR : 0.12307 

Precision : 0.124758 

Recall : 0.984733 

F1 : 0.221459 

Total Learning Time : 16.267539262771606 

Total Inference Time : 0.8611493110656738 

Starting experiments for fasttext using softcosine 

Run: 1

 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 264
Target train neg examples: 106660

Target test facts examples: 9691
Target test pos examples: 133
Target test neg examples: 53331

Amount of data: 5
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.5852930545806885
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(D, B) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( athleteplayssport(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F) )
%   | | then return 0.30583693526097183;  // std dev = 0.484, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F) )
%   | | then return 0.25397322519719473;  // std dev = 0.481, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(D, A) )
%   | then if ( athleteplaysforteam(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.2860274064352427;  // std dev = 1.210, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(B, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.014044270966747837;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(G, A) )
%   | | then return 0.22530612414553244;  // std dev = 1.197, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( athleteplaysforteam(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.010984122944949918;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12411242732460985;  // std dev = 0.462, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, A), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09510641942195064;  // std dev = 1.459, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07241838012366272;  // std dev = 0.461, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F) )
%   | | then return 0.05493499617847153;  // std dev = 1.456, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(E, A), athleteplayssport(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04158077927857853;  // std dev = 1.456, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
Inference time using transfer learning 171.27803468704224
Parameter learned model CLL:-0.617777 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(E, A)', 'false,false,false': 'athleteplaysforteam(B, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 2, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.369, 3, 5]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(B, D)', 'false,false': 'athleteplayssport(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.484, 5, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(B, D)', 'false,false': 'teamplaysagainstteam(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.481, 5, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,true': 'athleteplaysforteam(B, E)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(B, H)', 'false,false,false': 'athleteplayssport(I, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.21, 3, 4], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.816, 2, 1]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(B, D)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(G, A)', 'false,false,false': 'athleteplaysforteam(B, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.197, 3, 4], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.816, 2, 1]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(B, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.462, 5, 5]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(C, A), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(B, F)', 'false,false': 'athleteplaysforteam(B, G)', 'false,false,false': 'athleteplayssport(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.459, 5, 5]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(B, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.461, 5, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(C, A)', 'false': 'athleteplaysforteam(B, D)', 'false,false': 'athleteplayssport(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.456, 5, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'teamplaysinleague(D, A)', 'false,false': 'teamplaysinleague(E, A), athleteplayssport(E, F)', 'false,false,false': 'athleteplaysforteam(B, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.456, 5, 5]}]
{'': [nan, 0.24999999999999983], 'false': [0.0, 0.23437499999999983], 'false,false': [nan, 0.23437499999999983], 'false,false,false': [nan, 0.23437499999999983]}
{'': [nan, 0.23400094897255735], 'false': [nan, 0.23400094897255735], 'false,false': [0.23400094897255735, nan]}
{'': [nan, 0.23096836693165726], 'false': [nan, 0.23096836693165726], 'false,false': [0.23096836693165726, nan]}
{'': [nan, 0.22852931543194582], 'false': [0.2090399075851881, 0.2222222222222222], 'false,false': [nan, 0.2222222222222222], 'false,false,false': [nan, 0.2222222222222222], 'false,true': [nan, 0.2090399075851881], 'false,true,false': [0.2090399075851881, nan]}
{'': [nan, 0.21969909420226347], 'false': [nan, 0.21969909420226347], 'false,false': [0.20483757756269425, 0.22222222222222224], 'false,false,false': [nan, 0.22222222222222224]}
{'': [nan, 0.21390620544569292], 'false': [nan, 0.21390620544569292]}
{'': [nan, 0.21298203449717995], 'false': [nan, 0.21298203449717995], 'false,false': [nan, 0.21298203449717995], 'false,false,false': [nan, 0.21298203449717995]}
{'': [nan, 0.21242243786280618], 'false': [nan, 0.21242243786280618]}
{'': [nan, 0.21208813728056103], 'false': [nan, 0.21208813728056103], 'false,false': [0.21208813728056103, nan]}
{'': [nan, 0.21188935724809657], 'false': [nan, 0.21188935724809657], 'false,false': [nan, 0.21188935724809657], 'false,false,false': [nan, 0.21188935724809657]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(D, B).;true;true


Refining candidate
***************************
Model training time 2.12918758392334
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( teamplaysagainstteam(A, D), teamplaysagainstteam(D, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5944714207525549;  // std dev = 0.829, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.14048860034631788;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.4739109396840884;  // std dev = 0.807, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.1243924937147545;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), teamplaysagainstteam(A, D) )
%   then return 0.46840931256012397;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.0239872215321487;  // std dev = 0.770, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2891470135888102;  // std dev = 0.744, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10913388450962706;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), teamplaysagainstteam(A, D) )
%   then return 0.29233143994776256;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.03644387213565517;  // std dev = 0.740, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.18960654947677966;  // std dev = 0.725, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09578256885606382;  // std dev = 0.022, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), teamplaysagainstteam(A, D) )
%   then return 0.20326272772610665;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.041505516273631284;  // std dev = 0.725, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13532931619794694;  // std dev = 0.719, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0845476660852904;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), teamplaysagainstteam(A, D) )
%   then return 0.15386313460398338;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.0428903576784793;  // std dev = 0.718, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
Inference time using transfer learning 3.4858202934265137
Refined model CLL: -0.228468


******************************************
Best model found
******************************************
Results 

CLL : -0.12857 

AUC ROC : 0.990601 

AUC PR : 0.132646 

Precision : 0.131796 

Recall : 0.601504 

F1 : 0.216216 

Total Learning Time : 2.12918758392334 

Total Inference Time : 0.6914632320404053 

Total revision time: 5.185934543609619
Best scored revision CLL: -0.228468


Results 

CLL : -0.12857 

AUC ROC : 0.990601 

AUC PR : 0.132646 

Precision : 0.131796 

Recall : 0.601504 

F1 : 0.216216 

Total Learning Time : 5.368317127227783 

Total Inference Time : 0.6914632320404053 

Amount of data: 10
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.7803668975830078
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5248156017661789;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplayssport(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.448295606241962;  // std dev = 0.471, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then return 0.36236334632262296;  // std dev = 0.471, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplaysforteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.39186496480769656;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11408718702991871;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(A, G) )
%   | | then return 0.2959349102454448;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( athleteplaysforteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0867238514598081;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15953360618918264;  // std dev = 0.458, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( athleteplaysforteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12034522131360371;  // std dev = 1.773, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09113021685295344;  // std dev = 0.458, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, C), athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, B) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.08412937368790517;  // std dev = 1.621, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(G, H) )
%   | | then return -0.026797955742375645;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysinleague(A, D) )
%   | then return 0.06451531248084612;  // std dev = 1.621, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | else if ( teamplaysinleague(A, E), athleteplayssport(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.020113310819826702;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
Inference time using transfer learning 91.24433374404907
Parameter learned model CLL:-0.474617 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(A, E)', 'false,false,false': 'athleteplaysforteam(F, B)'}, {'true': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.826, 5, 10]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplayssport(A, D)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.471, 5, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'teamplaysagainstteam(F, G)'}, {'true,true': [0.0, 5, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.471, 5, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'athleteplaysforteam(E, B)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(H, B)', 'false,false,false': 'athleteplayssport(A, I)'}, {'true': [0.0, 5, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.247, 2, 7], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.225, 3, 3]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(A, G)', 'false,false,false': 'athleteplaysforteam(H, B)'}, {'true': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.247, 2, 7], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.225, 3, 3]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)'}, {'true,true': [0.0, 5, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.458, 5, 10]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(A, C), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplaysforteam(G, B)', 'false,false,false': 'athleteplayssport(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 5, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.773, 5, 10]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)'}, {'true': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.458, 5, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'athleteplayssport(D, C), athleteplaysforteam(D, B)', 'true,false': 'athleteplaysforteam(E, B)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplayssport(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'true,false,false': [1.621, 4, 9], 'false,true': [0.0, 1, 0], 'false,false,true': [0.707, 1, 1], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysinleague(A, E), athleteplayssport(F, E)', 'false,false,false': 'athleteplaysforteam(G, B)'}, {'true': [0.0, 5, 0], 'false,true': [1.621, 4, 9], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.707, 1, 1]}]
{'': [-2.7755575615628915e-18, 0.22222222222222215], 'false': [nan, 0.22222222222222215], 'false,false': [nan, 0.22222222222222215], 'false,false,false': [nan, 0.22222222222222215]}
{'': [0.0, 0.22222222222222224], 'false': [nan, 0.22222222222222224], 'false,false': [0.22222222222222224, nan], 'true': [nan, 0.0]}
{'': [0.0, 0.22222222222222215], 'false': [nan, 0.22222222222222215], 'false,false': [0.22222222222222215, nan], 'true': [0.0, nan]}
{'': [0.0, 0.2222222222222223], 'false': [0.17283950617283952, 0.25], 'false,false': [nan, 0.25], 'false,false,false': [nan, 0.25], 'false,true': [nan, 0.17283950617283952], 'false,true,false': [0.17283950617283952, nan]}
{'': [0.0, 0.21420832781207336], 'false': [nan, 0.21420832781207336], 'false,false': [0.1728395061728395, 0.25], 'false,false,false': [nan, 0.25]}
{'': [0.0, 0.20959242172893092], 'false': [nan, 0.20959242172893092], 'true': [0.0, nan]}
{'': [nan, 0.16466053681983606], 'false': [-1.3877787807814458e-18, 0.209634992090462], 'false,false': [nan, 0.209634992090462], 'false,false,false': [nan, 0.209634992090462]}
{'': [-6.938893903907229e-19, 0.2097420795507653], 'false': [nan, 0.2097420795507653]}
{'': [0.1586964541784979, 0.16705177232914545], 'false': [0.0, 0.25], 'false,false': [0.25, nan], 'true': [nan, 0.1586964541784979], 'true,false': [0.0, 0.20205002876543393]}
{'': [0.0, 0.2093825707217859], 'false': [0.20217880159731222, 0.25], 'false,false': [nan, 0.25], 'false,false,false': [nan, 0.25]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(F, B).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
8;true;athleteplaysforteam(E, B).;true;true
8;false;athleteplaysforteam(F, B).;true;true
9;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true


Refining candidate
***************************
Model training time 12.19147276878357
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.5170719622367217;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.41257245288266;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3151786576185065;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.23676009386434207;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.1780694542720751;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return 0.2097577156325356;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.13513671764223453;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return 0.17709649774527736;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.103671751136855;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( athleteplayssport(E, B), teamplaysagainstteam(A, F) )
%   | | then return 0.152743858093671;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.035705989073588455;  // std dev = 0.820, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( athleteplaysforteam(G, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.13096067759307822;  // std dev = 0.282, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.07923249841326233;  // std dev = 0.856, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.06895469887735663;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning 4.37656569480896
Refined model CLL: -0.18573


******************************************
Best model found
******************************************
Results 

CLL : -0.093917 

AUC ROC : 0.989053 

AUC PR : 0.131562 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 12.19147276878357 

Total Inference Time : 0.6966569423675537 

Total revision time: 15.480305671691895
Best scored revision CLL: -0.18573


Results 

CLL : -0.093917 

AUC ROC : 0.989053 

AUC PR : 0.131562 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 15.662688255310059 

Total Inference Time : 0.6966569423675537 

Amount of data: 15
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 2.107534170150757
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5399671169176942;  // std dev = 2.185, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplayssport(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.46084995018555497;  // std dev = 0.466, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then return 0.371617857245754;  // std dev = 0.466, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783627;  // std dev = 1.32e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplaysforteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.37452285056873436;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1608476368935205;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(A, G) )
%   | | then return 0.2824882173525874;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else if ( athleteplaysforteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12184241972571727;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16286157793916375;  // std dev = 0.458, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( athleteplaysforteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12275619739916212;  // std dev = 2.147, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09299746633843707;  // std dev = 0.458, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, C), athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, B) )
%   | | then return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.06492094010126286;  // std dev = 1.985, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( athleteplayssport(G, H) )
%   | | then return 0.10849621292379279;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysinleague(A, D) )
%   | then return 0.049846899321523315;  // std dev = 1.986, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | else if ( teamplaysinleague(A, E), athleteplayssport(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0819329892882507;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
Inference time using transfer learning 90.41639256477356
Parameter learned model CLL:-0.466493 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(A, E)', 'false,false,false': 'athleteplaysforteam(F, B)'}, {'true': [0.0, 8, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.185, 7, 15]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplayssport(A, D)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 8, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.466, 7, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'teamplaysagainstteam(F, G)'}, {'true,true': [0.0, 8, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.466, 7, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'athleteplaysforteam(E, B)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(H, B)', 'false,false,false': 'athleteplayssport(A, I)'}, {'true': [1.32e-09, 8, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.519, 3, 10], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.491, 4, 5]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(A, G)', 'false,false,false': 'athleteplaysforteam(H, B)'}, {'true': [0.0, 8, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.519, 3, 10], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.491, 4, 5]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)'}, {'true,true': [3.73e-09, 8, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.458, 7, 15]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(A, C), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplaysforteam(G, B)', 'false,false,false': 'athleteplayssport(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 8, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.147, 7, 15]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)'}, {'true': [2.63e-09, 8, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.458, 7, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'athleteplayssport(D, C), athleteplaysforteam(D, B)', 'true,false': 'athleteplaysforteam(E, B)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplayssport(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [1.86e-09, 6, 0], 'true,false,false': [1.985, 6, 13], 'false,true': [0.0, 2, 0], 'false,false,true': [0.816, 1, 2], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysinleague(A, E), athleteplayssport(F, E)', 'false,false,false': 'athleteplaysforteam(G, B)'}, {'true': [0.0, 8, 0], 'false,true': [1.986, 6, 13], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.816, 1, 2]}]
{'': [-6.938893903907228e-18, 0.21694214876033016], 'false': [nan, 0.21694214876033016], 'false,false': [nan, 0.21694214876033016], 'false,false,false': [nan, 0.21694214876033016]}
{'': [0.0, 0.2169421487603304], 'false': [nan, 0.2169421487603304], 'false,false': [0.2169421487603304, nan], 'true': [nan, 0.0]}
{'': [-1.734723475976807e-18, 0.21694214876033022], 'false': [nan, 0.21694214876033022], 'false,false': [0.21694214876033022, nan], 'true': [-1.734723475976807e-18, nan]}
{'': [1.734723475976807e-18, 0.21694214876033052], 'false': [0.1775147928994081, 0.2469135802469136], 'false,false': [nan, 0.2469135802469136], 'false,false,false': [nan, 0.2469135802469136], 'false,true': [nan, 0.1775147928994081], 'false,true,false': [0.1775147928994081, nan]}
{'': [0.0, 0.212143692389783], 'false': [nan, 0.212143692389783], 'false,false': [0.17751479289940833, 0.2469135802469136], 'false,false,false': [nan, 0.2469135802469136]}
{'': [1.734723475976807e-18, 0.20940993838223046], 'false': [nan, 0.20940993838223046], 'true': [1.734723475976807e-18, nan]}
{'': [nan, 0.16154952726208469], 'false': [0.0, 0.20946400169102003], 'false,false': [nan, 0.20946400169102003], 'false,false,false': [nan, 0.20946400169102003]}
{'': [8.673617379884035e-19, 0.20955114168190328], 'false': [nan, 0.20955114168190328]}
{'': [0.16086574533542428, 0.1408457690369002], 'true': [nan, 0.16086574533542428], 'true,false': [5.782411586589357e-19, 0.20739785425582244], 'false': [0.0, 0.2222222222222222], 'false,false': [0.2222222222222222, nan]}
{'': [0.0, 0.2096263466876351], 'false': [0.2074971355298938, 0.22222222222222224], 'false,false': [nan, 0.22222222222222224], 'false,false,false': [nan, 0.22222222222222224]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(F, B).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
8;true;athleteplaysforteam(E, B).;true;true
8;false;athleteplaysforteam(F, B).;true;true
9;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true


Refining candidate
***************************
Model training time 13.716185331344604
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.5851860008555361;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.46125983910675533;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.3488463256948422;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.26212705508354184;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.19945264276423433;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.15451336627983223;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return 0.17709649774527736;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.12179491558002796;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( athleteplayssport(E, B), teamplaysagainstteam(A, F) )
%   | | then return 0.15274385809367094;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( athleteplayssport(G, B) )
%   | | | then return 0.014120214347483562;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplaysforteam(H, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.15327115028358815;  // std dev = 0.272, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.08606462005654109;  // std dev = 0.904, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.06663776394666902;  // std dev = 0.013, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning 4.630881309509277
Refined model CLL: -0.163445


******************************************
Best model found
******************************************
Results 

CLL : -0.095271 

AUC ROC : 0.985504 

AUC PR : 0.12113 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 13.716185331344604 

Total Inference Time : 0.6978294849395752 

Total revision time: 17.418262243270874
Best scored revision CLL: -0.163445


Results 

CLL : -0.095271 

AUC ROC : 0.985504 

AUC PR : 0.12113 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 17.600644826889038 

Total Inference Time : 0.6978294849395752 

Amount of data: 20
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 2.416353225708008
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5478041075133049;  // std dev = 2.491, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplayssport(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.4673349216153254;  // std dev = 0.463, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then return 0.37638199006737755;  // std dev = 0.463, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplaysforteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.4007231109631996;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1721516823917709;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(A, G) )
%   | | then return 0.3019389577406139;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | else if ( athleteplaysforteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1302369436048833;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16467826483796277;  // std dev = 0.453, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109172;  // std dev = 1.32e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( athleteplaysforteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12427036590304733;  // std dev = 2.440, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09430889578590668;  // std dev = 0.453, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, C), athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, B) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.052947551177276536;  // std dev = 2.132, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( athleteplayssport(G, H) )
%   | | then return 0.13196046833873107;  // std dev = 1.176, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.06419184008202619;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamplaysinleague(A, D) )
%   | then return 0.040783428071395546;  // std dev = 2.132, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | else if ( teamplaysinleague(A, E), athleteplayssport(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10039228954638243;  // std dev = 1.176, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
Inference time using transfer learning 88.42603588104248
Parameter learned model CLL:-0.454585 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(A, E)', 'false,false,false': 'athleteplaysforteam(F, B)'}, {'true': [0.0, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.491, 9, 20]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplayssport(A, D)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [5.27e-09, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.463, 9, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'teamplaysagainstteam(F, G)'}, {'true,true': [7.45e-09, 11, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.463, 9, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'athleteplaysforteam(E, B)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(H, B)', 'false,false,false': 'athleteplayssport(A, I)'}, {'true': [0.0, 11, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.549, 3, 12], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.852, 6, 8]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(A, G)', 'false,false,false': 'athleteplaysforteam(H, B)'}, {'true': [0.0, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.549, 3, 12], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.852, 6, 8]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)'}, {'true,true': [5.27e-09, 11, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.453, 9, 20]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(A, C), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplaysforteam(G, B)', 'false,false,false': 'athleteplayssport(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [1.32e-09, 11, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.44, 9, 20]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)'}, {'true': [2.63e-09, 11, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.453, 9, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'athleteplayssport(D, C), athleteplaysforteam(D, B)', 'true,false': 'athleteplaysforteam(E, B)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplayssport(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 9, 0], 'true,false,false': [2.132, 7, 15], 'false,true': [0.0, 2, 0], 'false,false,true': [1.176, 2, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysinleague(A, E), athleteplayssport(F, E)', 'false,false,false': 'athleteplaysforteam(G, B)'}, {'true': [5.27e-09, 11, 0], 'false,true': [2.132, 7, 15], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.176, 2, 5]}]
{'': [-1.0092936587501423e-17, 0.21403091557669457], 'false': [nan, 0.21403091557669457], 'false,false': [nan, 0.21403091557669457], 'false,false,false': [nan, 0.21403091557669457]}
{'': [2.523234146875356e-18, 0.21403091557669504], 'false': [nan, 0.21403091557669504], 'false,false': [0.21403091557669504, nan], 'true': [nan, 2.523234146875356e-18]}
{'': [5.046468293750712e-18, 0.21403091557669462], 'false': [nan, 0.21403091557669462], 'false,false': [0.21403091557669462, nan], 'true': [5.046468293750712e-18, nan]}
{'': [0.0, 0.21403091557669413], 'false': [0.15999999999999978, 0.2448979591836735], 'false,false': [nan, 0.2448979591836735], 'false,false,false': [nan, 0.2448979591836735], 'false,true': [nan, 0.15999999999999978], 'false,true,false': [0.15999999999999978, nan]}
{'': [0.0, 0.20834685324233934], 'false': [nan, 0.20834685324233934], 'false,false': [0.16, 0.24489795918367332], 'false,false,false': [nan, 0.24489795918367332]}
{'': [2.523234146875356e-18, 0.20514399003217787], 'false': [nan, 0.20514399003217787], 'true': [2.523234146875356e-18, nan]}
{'': [nan, 0.157015799154347], 'false': [0.0, 0.20523577944556246], 'false,false': [nan, 0.20523577944556246], 'false,false,false': [nan, 0.20523577944556246]}
{'': [6.30808536718839e-19, 0.20536055623289204], 'false': [nan, 0.20536055623289204]}
{'': [0.14960431107466848, 0.1605294411182619], 'false': [0.0, 0.19747163381509775], 'false,false': [0.19747163381509775, nan], 'true': [nan, 0.14960431107466848], 'true,false': [0.0, 0.2065291073846182]}
{'': [2.523234146875356e-18, 0.20512090038915098], 'false': [0.2066368514996406, 0.19766093916299635], 'false,false': [nan, 0.19766093916299635], 'false,false,false': [nan, 0.19766093916299635]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(F, B).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
8;true;athleteplaysforteam(E, B).;true;true
8;false;athleteplaysforteam(F, B).;true;true
9;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true


Refining candidate
***************************
Model training time 18.679537296295166
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | | then return 0.7264817617402088;  // std dev = 0.049, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( teamplaysinleague(A, G) )
%   | | | then return 0.5426009656574945;  // std dev = 0.878, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return 0.5612581585121518;  // std dev = 0.058, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return 0.4282406874165516;  // std dev = 0.876, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | | then return 0.42936198607662673;  // std dev = 0.105, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( teamplaysinleague(A, G) )
%   | | | then return 0.3094236170936902;  // std dev = 0.861, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.41722715556449064;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return 0.32717882269836;  // std dev = 0.089, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return 0.23575452568801278;  // std dev = 0.864, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.3207742504828279;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | | then return 0.26518049008970196;  // std dev = 0.112, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( teamalsoknownas(G, A) )
%   | | | then return 0.2919534910211591;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17730447667975277;  // std dev = 0.850, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07877675473109172;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | | then return 0.21705251847718054;  // std dev = 0.099, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( teamplaysinleague(A, G) )
%   | | | then return 0.1199184447934563;  // std dev = 0.851, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.21872418223091641;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return 0.18133230090681188;  // std dev = 0.076, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return 0.09836203714876135;  // std dev = 0.856, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.1831869682742778;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( athleteplayssport(E, B) )
%   | | then if ( teamplaysagainstteam(A, F) )
%   | | | then return 0.15569148266959354;  // std dev = 0.068, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.07840660528111867;  // std dev = 0.857, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplaysforteam(G, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( athleteplayssport(H, B), athleteledsportsteam(H, I) )
%   | | then return 0.1607296271536609;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.003109797596956426;  // std dev = 0.175, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.06419184008202619;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | | then return 0.14227942978515154;  // std dev = 0.103, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( teamalsoknownas(G, A) )
%   | | | then return 0.16556303632703187;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06575725683579682;  // std dev = 0.848, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return -0.06530024938369806;  // std dev = 0.005, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning 5.128527879714966
Refined model CLL: -0.140987


******************************************
Best model found
******************************************
Results 

CLL : -0.095896 

AUC ROC : 0.985855 

AUC PR : 0.134872 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 18.679537296295166 

Total Inference Time : 0.8392643928527832 

Total revision time: 22.799793481826782
Best scored revision CLL: -0.140987


Results 

CLL : -0.095896 

AUC ROC : 0.985855 

AUC PR : 0.134872 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 22.982176065444946 

Total Inference Time : 0.8392643928527832 

Amount of data: 25
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 2.6746068000793457
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5338246107751872;  // std dev = 2.847, 37.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplayssport(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.45576301035379385;  // std dev = 0.468, 37.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then return 0.3678730484528311;  // std dev = 0.468, 37.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplaysforteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.34570604099995106;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21997504684790437;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926096;  // std dev = 1.32e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(A, G) )
%   | | then return 0.26103152918499933;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( athleteplaysforteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1665236329950477;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16145737665314397;  // std dev = 0.465, 37.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109172;  // std dev = 9.31e-10, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( athleteplaysforteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12142504167037615;  // std dev = 2.830, 37.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09174631292804482;  // std dev = 0.465, 37.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, C), athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, B) )
%   | | then return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.03008885123552915;  // std dev = 2.509, 28.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=18 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplayssport(G, H) )
%   | | then return 0.19295772844822068;  // std dev = 1.239, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.06419184008202619;  // std dev = 6.97e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( teamplaysinleague(A, D) )
%   | then return 0.022992840664054503;  // std dev = 2.509, 28.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=18 */
%   | else if ( teamplaysinleague(A, E), athleteplayssport(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14705033152385807;  // std dev = 1.239, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
Inference time using transfer learning 90.12919926643372
Parameter learned model CLL:-0.476023 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(A, E)', 'false,false,false': 'athleteplaysforteam(F, B)'}, {'true': [0.0, 13, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.847, 12, 25]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplayssport(A, D)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [7.45e-09, 13, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.468, 12, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'teamplaysagainstteam(F, G)'}, {'true,true': [1.05e-08, 13, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.468, 12, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'athleteplaysforteam(E, B)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(H, B)', 'false,false,false': 'athleteplayssport(A, I)'}, {'true': [0.0, 13, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.919, 5, 14], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.068, 7, 11]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(A, G)', 'false,false,false': 'athleteplaysforteam(H, B)'}, {'true': [1.32e-09, 13, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.919, 5, 14], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.068, 7, 11]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)'}, {'true,true': [7.45e-09, 13, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.465, 12, 25]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(A, C), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplaysforteam(G, B)', 'false,false,false': 'athleteplayssport(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [9.31e-10, 13, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.83, 12, 25]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)'}, {'true': [0.0, 13, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.465, 12, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'athleteplayssport(D, C), athleteplaysforteam(D, B)', 'true,false': 'athleteplaysforteam(E, B)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplayssport(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.63e-09, 10, 0], 'true,false,false': [2.509, 10, 18], 'false,true': [0.0, 3, 0], 'false,false,true': [1.239, 2, 7], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysinleague(A, E), athleteplayssport(F, E)', 'false,false,false': 'athleteplaysforteam(G, B)'}, {'true': [6.97e-09, 13, 0], 'false,true': [2.509, 10, 18], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.239, 2, 7]}]
{'': [-1.2810265668751807e-17, 0.21913805697589603], 'false': [nan, 0.21913805697589603], 'false,false': [nan, 0.21913805697589603], 'false,false,false': [nan, 0.21913805697589603]}
{'': [4.270088556250602e-18, 0.21913805697589483], 'false': [nan, 0.21913805697589483], 'false,false': [0.21913805697589483, nan], 'true': [nan, 4.270088556250602e-18]}
{'': [8.540177112501205e-18, 0.21913805697589542], 'false': [nan, 0.21913805697589542], 'false,false': [0.21913805697589542, nan], 'true': [8.540177112501205e-18, nan]}
{'': [-2.135044278125301e-18, 0.21913805697589517], 'false': [0.19390581717451513, 0.23765432098765416], 'false,false': [nan, 0.23765432098765416], 'false,false,false': [nan, 0.23765432098765416], 'false,true': [nan, 0.19390581717451513], 'false,true,false': [0.19390581717451513, nan]}
{'': [2.135044278125301e-18, 0.21742017762360236], 'false': [nan, 0.21742017762360236], 'false,false': [0.19390581717451524, 0.23765432098765438], 'false,false,false': [nan, 0.23765432098765438]}
{'': [4.270088556250602e-18, 0.2164399477044314], 'false': [nan, 0.2164399477044314], 'true': [4.270088556250602e-18, nan]}
{'': [nan, 0.16789265185590596], 'false': [1.0675221390626506e-18, 0.21646096455402314], 'false,false': [nan, 0.21646096455402314], 'false,false,false': [nan, 0.21646096455402314]}
{'': [0.0, 0.21649310116156265], 'false': [nan, 0.21649310116156265]}
{'': [0.1675703648820705, 0.14069798304635572], 'true': [nan, 0.1675703648820705], 'true,false': [6.938893903907229e-19, 0.22486287940555932], 'false': [-5.782411586589357e-19, 0.17051681955758022], 'false,false': [0.17051681955758022, nan]}
{'': [3.736327486719277e-18, 0.21452096198638157], 'false': [0.22488963717289884, 0.17061617737702328], 'false,false': [nan, 0.17061617737702328], 'false,false,false': [nan, 0.17061617737702328]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(F, B).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
8;true;athleteplaysforteam(E, B).;true;true
8;false;athleteplaysforteam(F, B).;true;true
9;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true


Refining candidate
***************************
Model training time 23.416973114013672
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | | then return 0.7264118240633646;  // std dev = 0.050, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( teamplaysinleague(A, G) )
%   | | | then return 0.5389009653977034;  // std dev = 0.881, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | | then return 0.5623799808348955;  // std dev = 0.063, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( teamplaysinleague(A, G) )
%   | | | then return 0.42296334330780094;  // std dev = 0.878, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return 0.42591975522566344;  // std dev = 0.106, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | | | then return 0.4550531421452537;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3460972070419815;  // std dev = 0.871, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamalsoknownas(E, A) )
%   | | then return 0.36339674818561307;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | | | then return 0.3223841364464222;  // std dev = 0.047, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.25195695502105214;  // std dev = 0.869, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysinleague(A, E) )
%   | | then if ( athleteplaysinleague(F, E) )
%   | | | then return 0.2563544001038977;  // std dev = 0.041, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.15663000400536653;  // std dev = 0.862, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.27414366500601295;  // std dev = 0.027, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return 0.21641226015894446;  // std dev = 0.091, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return 0.12407883156500055;  // std dev = 0.856, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.2241625948374273;  // std dev = 0.022, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.07877675473109172;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return 0.18206903352907075;  // std dev = 0.081, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return 0.09960698997086286;  // std dev = 0.858, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.18760693942202764;  // std dev = 0.019, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( athleteplayssport(E, B) )
%   | | then if ( teamplaysagainstteam(A, F) )
%   | | | then return 0.1565728203434618;  // std dev = 0.072, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.08092133620590854;  // std dev = 0.861, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplaysforteam(G, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplayssport(H, B), athleteledsportsteam(H, I) )
%   | | then return 0.16165450525857988;  // std dev = 0.014, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.004646305372072251;  // std dev = 0.179, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.06419184008202619;  // std dev = 6.97e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | | then return 0.1401358285716848;  // std dev = 0.077, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( teamplaysinleague(A, G) )
%   | | | then return 0.04360111518132017;  // std dev = 0.853, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.14225437419098133;  // std dev = 0.015, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.06501582367964305;  // std dev = 0.006, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
Inference time using transfer learning 5.303658962249756
Refined model CLL: -0.132331


******************************************
Best model found
******************************************
Results 

CLL : -0.096164 

AUC ROC : 0.985892 

AUC PR : 0.135278 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 23.416973114013672 

Total Inference Time : 0.787867546081543 

Total revision time: 27.81065535545349
Best scored revision CLL: -0.132331


Results 

CLL : -0.096164 

AUC ROC : 0.985892 

AUC PR : 0.135278 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 27.993037939071655 

Total Inference Time : 0.787867546081543 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 264
Target train neg examples: 106660

Target test facts examples: 9691
Target test pos examples: 133
Target test neg examples: 53331

Amount of data: 5
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.6389930248260498
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(D, B) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41370449065506787;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F) )
%   | | then return 0.30745570149150986;  // std dev = 0.493, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F) )
%   | | then return 0.25532401548227945;  // std dev = 0.492, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(D, A) )
%   | then if ( athleteplaysforteam(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.26207765496238355;  // std dev = 1.455, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(B, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.3050178648229465;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(G, A) )
%   | | then return 0.20530138990389626;  // std dev = 1.451, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( athleteplaysforteam(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.24443181078345838;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12160446139328696;  // std dev = 0.470, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, A), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09323118039037827;  // std dev = 1.485, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07106161592156965;  // std dev = 0.469, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F) )
%   | | then return 0.0539785888356346;  // std dev = 1.481, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(E, A), athleteplayssport(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04092177374040815;  // std dev = 1.480, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
Inference time using transfer learning 173.70840048789978
Parameter learned model CLL:-0.629902 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(E, A)', 'false,false,false': 'athleteplaysforteam(B, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.491, 4, 5]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(B, D)', 'false,false': 'athleteplayssport(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.493, 5, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(B, D)', 'false,false': 'teamplaysagainstteam(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.492, 5, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,true': 'athleteplaysforteam(B, E)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(B, H)', 'false,false,false': 'athleteplayssport(I, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.455, 4, 5], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(B, D)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(G, A)', 'false,false,false': 'athleteplaysforteam(B, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.451, 4, 5], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(B, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.47, 5, 5]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(C, A), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(B, F)', 'false,false': 'athleteplaysforteam(B, G)', 'false,false,false': 'athleteplayssport(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.485, 5, 5]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(B, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.469, 5, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(C, A)', 'false': 'athleteplaysforteam(B, D)', 'false,false': 'athleteplayssport(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.481, 5, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'teamplaysinleague(D, A)', 'false,false': 'teamplaysinleague(E, A), athleteplayssport(E, F)', 'false,false,false': 'athleteplaysforteam(B, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.48, 5, 5]}]
{'': [nan, 0.24999999999999983], 'false': [0.0, 0.2469135802469134], 'false,false': [nan, 0.2469135802469134], 'false,false,false': [nan, 0.2469135802469134]}
{'': [nan, 0.24304474493214961], 'false': [nan, 0.24304474493214961], 'false,false': [0.24304474493214961, nan]}
{'': [nan, 0.24168741505143307], 'false': [nan, 0.24168741505143307], 'false,false': [0.24168741505143307, nan]}
{'': [nan, 0.24058484713875744], 'false': [0.23515676396478227, 0.0], 'false,true': [nan, 0.23515676396478227], 'false,true,false': [0.23515676396478227, nan], 'false,false': [nan, 0.0], 'false,false,false': [nan, 0.0]}
{'': [nan, 0.22867445162089156], 'false': [nan, 0.22867445162089156], 'false,false': [0.23385672884316364, 0.0], 'false,false,false': [nan, 0.0]}
{'': [nan, 0.22134646047019557], 'false': [nan, 0.22134646047019557]}
{'': [nan, 0.22039915603820065], 'false': [nan, 0.22039915603820065], 'false,false': [nan, 0.22039915603820065], 'false,false,false': [nan, 0.22039915603820065]}
{'': [nan, 0.2197672631732543], 'false': [nan, 0.2197672631732543]}
{'': [nan, 0.2193450872186559], 'false': [nan, 0.2193450872186559], 'false,false': [0.2193450872186559, nan]}
{'': [nan, 0.21906047045375182], 'false': [nan, 0.21906047045375182], 'false,false': [nan, 0.21906047045375182], 'false,false,false': [nan, 0.21906047045375182]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(D, B).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(D, A).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(E, F), teamplaysagainstteam(G, A).;true;true


Refining candidate
***************************
Model training time 41.57530665397644
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783633;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D), teamplaysagainstteam(E, A) )
%   then if ( athleteplayssport(F, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09269127618926098;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning 565.6447234153748
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results 

CLL : -0.09431 

AUC ROC : 0.990662 

AUC PR : 0.116458 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 41.57530665397644 

Total Inference Time : 0.8647468090057373 

Total revision time: 44.82070565223694
Best scored revision CLL: -0.094637


Results 

CLL : -0.09431 

AUC ROC : 0.990662 

AUC PR : 0.116458 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 45.0030882358551 

Total Inference Time : 0.8647468090057373 

Amount of data: 10
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.8732693195343018
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.44638422921715937;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplayssport(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.382955427940009;  // std dev = 0.492, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then return 0.3134863926750183;  // std dev = 0.492, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplaysforteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.2300538415562717;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3252919367943669;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926094;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(A, G) )
%   | | then return 0.17661433912002242;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else if ( athleteplaysforteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2488838957674633;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14320156797911815;  // std dev = 0.491, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplaysforteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10765092967513648;  // std dev = 2.025, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08077590694210676;  // std dev = 0.491, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, C), athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, B) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.04522048522819532;  // std dev = 1.856, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(G, H) )
%   | | then return 0.13254052425098614;  // std dev = 0.800, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysinleague(A, D) )
%   | then return 0.033971201400480745;  // std dev = 1.856, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | else if ( teamplaysinleague(A, E), athleteplayssport(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09980584620268947;  // std dev = 0.800, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
Inference time using transfer learning 91.95254182815552
Parameter learned model CLL:-0.584405 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(A, E)', 'false,false,false': 'athleteplaysforteam(F, B)'}, {'true': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.029, 7, 10]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplayssport(A, D)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.492, 7, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'teamplaysagainstteam(F, G)'}, {'true,true': [2.63e-09, 3, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.492, 7, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'athleteplaysforteam(E, B)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(H, B)', 'false,false,false': 'athleteplayssport(A, I)'}, {'true': [0.0, 3, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.852, 6, 8], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.816, 1, 2]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(A, G)', 'false,false,false': 'athleteplaysforteam(H, B)'}, {'true': [1.32e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.852, 6, 8], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.816, 1, 2]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)'}, {'true,true': [0.0, 3, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.491, 7, 10]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(A, C), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplaysforteam(G, B)', 'false,false,false': 'athleteplayssport(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 3, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.025, 7, 10]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)'}, {'true': [1.86e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.491, 7, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'athleteplayssport(D, C), athleteplaysforteam(D, B)', 'true,false': 'athleteplaysforteam(E, B)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplayssport(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 3, 0], 'true,false,false': [1.856, 6, 8], 'false,true': [0.0, 0, 0], 'false,false,true': [0.8, 1, 2], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysinleague(A, E), athleteplayssport(F, E)', 'false,false,false': 'athleteplaysforteam(G, B)'}, {'true': [1.32e-09, 3, 0], 'false,true': [1.856, 6, 8], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.8, 1, 2]}]
{'': [0.0, 0.24221453287197228], 'false': [nan, 0.24221453287197228], 'false,false': [nan, 0.24221453287197228], 'false,false,false': [nan, 0.24221453287197228]}
{'': [0.0, 0.2422145328719721], 'false': [nan, 0.2422145328719721], 'false,false': [0.2422145328719721, nan], 'true': [nan, 0.0]}
{'': [2.3129646346357427e-18, 0.24221453287197214], 'false': [nan, 0.24221453287197214], 'false,false': [0.24221453287197214, nan], 'true': [2.3129646346357427e-18, nan]}
{'': [-1.1564823173178713e-18, 0.24221453287197225], 'false': [0.24489795918367344, 0.22222222222222224], 'false,true': [nan, 0.24489795918367344], 'false,true,false': [0.24489795918367344, nan], 'false,false': [nan, 0.22222222222222224], 'false,false,false': [nan, 0.22222222222222224]}
{'': [2.3129646346357427e-18, 0.24165539428859628], 'false': [nan, 0.24165539428859628], 'false,false': [0.24489795918367335, 0.2222222222222222], 'false,false,false': [nan, 0.2222222222222222]}
{'': [0.0, 0.24131504730468947], 'false': [nan, 0.24131504730468947], 'true': [0.0, nan]}
{'': [nan, 0.20954534172176756], 'false': [0.0, 0.24131063921041337], 'false,false': [nan, 0.24131063921041337], 'false,false,false': [nan, 0.24131063921041337]}
{'': [1.1564823173178713e-18, 0.2413116950836697], 'false': [nan, 0.2413116950836697]}
{'': [0.20443061002619736, 0.21336850060818457], 'false': [nan, 0.21336850060818457], 'false,false': [0.21336850060818457, nan], 'true': [nan, 0.20443061002619736], 'true,false': [-5.782411586589357e-19, 0.24595792004762088]}
{'': [5.782411586589357e-19, 0.24085491363128994], 'false': [0.24595257010345242, 0.21349650854233979], 'false,false': [nan, 0.21349650854233979], 'false,false,false': [nan, 0.21349650854233979]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(F, B).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
8;true;athleteplaysforteam(E, B).;true;true
9;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true


Refining candidate
***************************
Model training time 2.567991256713867
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.15274385809367097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0.07902024611437974;  // std dev = 0.181, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.13576477441267673;  // std dev = 0.011, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.06554145440892811;  // std dev = 0.009, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
Inference time using transfer learning 3.610456943511963
Refined model CLL: -0.095888


******************************************
Best model found
******************************************
Results 

CLL : -0.101083 

AUC ROC : 0.990604 

AUC PR : 0.116317 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 2.567991256713867 

Total Inference Time : 0.663362979888916 

Total revision time: 5.929689645767212
Best scored revision CLL: -0.095888


Results 

CLL : -0.101083 

AUC ROC : 0.990604 

AUC PR : 0.116317 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 6.112072229385376 

Total Inference Time : 0.663362979888916 

Amount of data: 15
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 2.2311878204345703
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.48314893509951234;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplayssport(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.4136573287083127;  // std dev = 0.484, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then return 0.3366053739648666;  // std dev = 0.484, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783627;  // std dev = 1.32e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplaysforteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.2169229538697423;  // std dev = 2.152, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4379755854486899;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(A, G) )
%   | | then return 0.16548380738589435;  // std dev = 2.152, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | else if ( athleteplaysforteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.332108946226024;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1507875743374555;  // std dev = 0.478, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( athleteplaysforteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11334695598921318;  // std dev = 2.344, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08526298570305683;  // std dev = 0.478, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, C), athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, B) )
%   | | then return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.04475025831905345;  // std dev = 2.187, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(G, H) )
%   | | then return 0.1619915160436793;  // std dev = 0.816, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( teamplaysinleague(A, D) )
%   | then return 0.03377782242590772;  // std dev = 2.187, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | else if ( teamplaysinleague(A, E), athleteplayssport(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12372027106616496;  // std dev = 0.817, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
Inference time using transfer learning 91.48134350776672
Parameter learned model CLL:-0.5328 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(A, E)', 'false,false,false': 'athleteplaysforteam(F, B)'}, {'true': [0.0, 6, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.372, 9, 15]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplayssport(A, D)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 6, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.484, 9, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'teamplaysagainstteam(F, G)'}, {'true,true': [0.0, 6, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.484, 9, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'athleteplaysforteam(E, B)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(H, B)', 'false,false,false': 'athleteplayssport(A, I)'}, {'true': [1.32e-09, 6, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [2.152, 8, 11], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.894, 1, 4]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(A, G)', 'false,false,false': 'athleteplaysforteam(H, B)'}, {'true': [0.0, 6, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.152, 8, 11], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.894, 1, 4]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)'}, {'true,true': [2.63e-09, 6, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.478, 9, 15]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(A, C), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplaysforteam(G, B)', 'false,false,false': 'athleteplayssport(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 6, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.344, 9, 15]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)'}, {'true': [0.0, 6, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.478, 9, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'athleteplayssport(D, C), athleteplaysforteam(D, B)', 'true,false': 'athleteplaysforteam(E, B)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplayssport(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [1.86e-09, 6, 0], 'true,false,false': [2.187, 8, 12], 'false,true': [0.0, 0, 0], 'false,false,true': [0.816, 1, 3], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysinleague(A, E), athleteplayssport(F, E)', 'false,false,false': 'athleteplaysforteam(G, B)'}, {'true': [0.0, 6, 0], 'false,true': [2.187, 8, 12], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.817, 1, 3]}]
{'': [-6.938893903907228e-18, 0.23437499999999958], 'false': [nan, 0.23437499999999958], 'false,false': [nan, 0.23437499999999958], 'false,false,false': [nan, 0.23437499999999958]}
{'': [-2.3129646346357427e-18, 0.23437499999999964], 'false': [nan, 0.23437499999999964], 'false,false': [0.23437499999999964, nan], 'true': [nan, -2.3129646346357427e-18]}
{'': [0.0, 0.23437500000000008], 'false': [nan, 0.23437500000000008], 'false,false': [0.23437500000000008, nan], 'true': [0.0, nan]}
{'': [0.0, 0.234375], 'false': [0.24376731301939059, 0.16000000000000003], 'false,true': [nan, 0.24376731301939059], 'false,true,false': [0.24376731301939059, nan], 'false,false': [nan, 0.16000000000000003], 'false,false,false': [nan, 0.16000000000000003]}
{'': [1.1564823173178713e-18, 0.23089491100993717], 'false': [nan, 0.23089491100993717], 'false,false': [0.24376731301939045, 0.15999999999999998], 'false,false,false': [nan, 0.15999999999999998]}
{'': [1.1564823173178713e-18, 0.22886969856148073], 'false': [nan, 0.22886969856148073], 'true': [1.1564823173178713e-18, nan]}
{'': [nan, 0.18902172048851426], 'false': [-1.1564823173178713e-18, 0.22889484656645506], 'false,false': [nan, 0.22889484656645506], 'false,false,false': [nan, 0.22889484656645506]}
{'': [0.0, 0.22894285417861973], 'false': [nan, 0.22894285417861973]}
{'': [0.1863084243125777, 0.1662909702022111], 'true': [nan, 0.1863084243125777], 'true,false': [5.782411586589357e-19, 0.23924500850199254], 'false': [nan, 0.1662909702022111], 'false,false': [0.1662909702022111, nan]}
{'': [-5.782411586589357e-19, 0.2283157978591087], 'false': [0.23924207393309554, 0.16694304743300345], 'false,false': [nan, 0.16694304743300345], 'false,false,false': [nan, 0.16694304743300345]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(F, B).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
8;true;athleteplaysforteam(E, B).;true;true
9;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true


Refining candidate
***************************
Model training time 2.4660353660583496
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.4175135841583098;  // std dev = 4.71e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2551722425694894;  // std dev = 2.36e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527741;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.15274385809367078;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0.09745114910920238;  // std dev = 0.192, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.13531653075922162;  // std dev = 0.010, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.06538234148370166;  // std dev = 0.010, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
Inference time using transfer learning 3.7118759155273438
Refined model CLL: -0.095574


******************************************
Best model found
******************************************
Results 

CLL : -0.101432 

AUC ROC : 0.990604 

AUC PR : 0.116317 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 2.4660353660583496 

Total Inference Time : 0.664583683013916 

Total revision time: 6.193668842315674
Best scored revision CLL: -0.095574


Results 

CLL : -0.101432 

AUC ROC : 0.990604 

AUC PR : 0.116317 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 6.376051425933838 

Total Inference Time : 0.664583683013916 

Amount of data: 20
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 2.5950002670288086
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4642095411601179;  // std dev = 2.807, 33.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=20 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplayssport(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.39785743763027737;  // std dev = 0.489, 33.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then return 0.3247425543721847;  // std dev = 0.489, 33.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783627;  // std dev = 1.86e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplaysforteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.28866824672734653;  // std dev = 2.400, 25.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14866824672734635;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(A, G) )
%   | | then return 0.22042595476124943;  // std dev = 2.400, 25.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=16 */
%   | | else if ( athleteplaysforteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11408642262335793;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14678184353764825;  // std dev = 0.486, 33.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=20 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( athleteplaysforteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11027762435002064;  // std dev = 2.792, 33.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=20 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08280172048238146;  // std dev = 0.486, 33.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=20 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, C), athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, B) )
%   | | then return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.08004336966477428;  // std dev = 2.499, 27.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=17 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(G, H) )
%   | | then return -0.01779415446351525;  // std dev = 1.227, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysinleague(A, D) )
%   | then return 0.06035573415108307;  // std dev = 2.499, 27.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=17 */
%   | else if ( teamplaysinleague(A, E), athleteplayssport(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.013364843453306094;  // std dev = 1.227, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
Inference time using transfer learning 90.78645539283752
Parameter learned model CLL:-0.560447 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(A, E)', 'false,false,false': 'athleteplaysforteam(F, B)'}, {'true': [0.0, 7, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.807, 13, 20]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplayssport(A, D)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 7, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.489, 13, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'teamplaysagainstteam(F, G)'}, {'true,true': [0.0, 7, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.489, 13, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'athleteplaysforteam(E, B)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(H, B)', 'false,false,false': 'athleteplayssport(A, I)'}, {'true': [1.86e-09, 7, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [2.4, 9, 16], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.414, 4, 4]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(A, G)', 'false,false,false': 'athleteplaysforteam(H, B)'}, {'true': [0.0, 7, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.4, 9, 16], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.414, 4, 4]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)'}, {'true,true': [2.63e-09, 7, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.486, 13, 20]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(A, C), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplaysforteam(G, B)', 'false,false,false': 'athleteplayssport(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 7, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.792, 13, 20]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)'}, {'true': [2.63e-09, 7, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.486, 13, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'athleteplayssport(D, C), athleteplaysforteam(D, B)', 'true,false': 'athleteplaysforteam(E, B)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplayssport(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.63e-09, 7, 0], 'true,false,false': [2.499, 10, 17], 'false,true': [0.0, 0, 0], 'false,false,true': [1.227, 3, 3], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysinleague(A, E), athleteplayssport(F, E)', 'false,false,false': 'athleteplaysforteam(G, B)'}, {'true': [0.0, 7, 0], 'false,true': [2.499, 10, 17], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.227, 3, 3]}]
{'': [-7.93016446160826e-18, 0.23875114784205692], 'false': [nan, 0.23875114784205692], 'false,false': [nan, 0.23875114784205692], 'false,false,false': [nan, 0.23875114784205692]}
{'': [-1.982541115402065e-18, 0.23875114784205684], 'false': [nan, 0.23875114784205684], 'false,false': [0.23875114784205684, nan], 'true': [nan, -1.982541115402065e-18]}
{'': [-1.982541115402065e-18, 0.23875114784205673], 'false': [nan, 0.23875114784205673], 'false,false': [0.23875114784205673, nan], 'true': [-1.982541115402065e-18, nan]}
{'': [0.0, 0.23875114784205698], 'false': [0.23040000000000005, 0.25], 'false,false': [nan, 0.25], 'false,false,false': [nan, 0.25], 'false,true': [nan, 0.23040000000000005], 'false,true,false': [0.23040000000000005, nan]}
{'': [0.0, 0.2372283004766402], 'false': [nan, 0.2372283004766402], 'false,false': [0.23040000000000005, 0.24999999999999997], 'false,false,false': [nan, 0.24999999999999997]}
{'': [9.912705577010326e-19, 0.2363057660620244], 'false': [nan, 0.2363057660620244], 'true': [9.912705577010326e-19, nan]}
{'': [nan, 0.20009605099792555], 'false': [-9.912705577010326e-19, 0.2362858951825681], 'false,false': [nan, 0.2362858951825681], 'false,false,false': [nan, 0.2362858951825681]}
{'': [9.912705577010326e-19, 0.23628342755493376], 'false': [nan, 0.23628342755493376]}
{'': [0.1872958016975609, 0.2508354058749885], 'false': [nan, 0.2508354058749885], 'false,false': [0.2508354058749885, nan], 'true': [nan, 0.1872958016975609], 'true,false': [9.912705577010326e-19, 0.2313156163719793]}
{'': [-4.956352788505163e-19, 0.2356803986339301], 'false': [0.2313241464199363, 0.2508369415913636], 'false,false': [nan, 0.2508369415913636], 'false,false,false': [nan, 0.2508369415913636]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(F, B).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
8;true;athleteplaysforteam(E, B).;true;true
9;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true


Refining candidate
***************************
Model training time 2.785613775253296
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.41751358415830986;  // std dev = 5.16e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.3207118471601496;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.25517224256948945;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527744;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.1527438580936708;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.04215844012473402;  // std dev = 0.271, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.13601110133376065;  // std dev = 0.021, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.0658007411484273;  // std dev = 0.011, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
Inference time using transfer learning 3.8430137634277344
Refined model CLL: -0.09605


******************************************
Best model found
******************************************
Results 

CLL : -0.100392 

AUC ROC : 0.990604 

AUC PR : 0.116317 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 2.785613775253296 

Total Inference Time : 0.7235877513885498 

Total revision time: 6.997614622116089
Best scored revision CLL: -0.09605


Results 

CLL : -0.100392 

AUC ROC : 0.990604 

AUC PR : 0.116317 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 7.179997205734253 

Total Inference Time : 0.7235877513885498 

Amount of data: 25
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 3.0905158519744873
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.467905032660487;  // std dev = 3.123, 41.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=25 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplayssport(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.400943053369062;  // std dev = 0.488, 41.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then return 0.3270650229775736;  // std dev = 0.488, 41.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783627;  // std dev = 1.32e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplaysforteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.25373362205370664;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2619753802954651;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(A, G) )
%   | | then return 0.1938461002355237;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | | else if ( athleteplaysforteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20008795815922434;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14766150358815716;  // std dev = 0.488, 41.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=25 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( athleteplaysforteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11081941365095654;  // std dev = 3.123, 41.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=25 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08314005917120872;  // std dev = 0.488, 41.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=25 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, C), athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, B) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.07065616681508675;  // std dev = 2.834, 34.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=21 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(G, H) )
%   | | then return 0.022719249030648005;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( teamplaysinleague(A, D) )
%   | then return 0.05321347556454142;  // std dev = 2.834, 34.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=21 */
%   | else if ( teamplaysinleague(A, E), athleteplayssport(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.017099860303762045;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
Inference time using transfer learning 89.36839890480042
Parameter learned model CLL:-0.561432 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(A, E)', 'false,false,false': 'athleteplaysforteam(F, B)'}, {'true': [0.0, 9, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.123, 16, 25]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplayssport(A, D)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 9, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.488, 16, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'teamplaysagainstteam(F, G)'}, {'true,true': [0.0, 9, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.488, 16, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'athleteplaysforteam(E, B)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(H, B)', 'false,false,false': 'athleteplayssport(A, I)'}, {'true': [1.32e-09, 9, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [2.584, 11, 17], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.754, 5, 8]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(A, G)', 'false,false,false': 'athleteplaysforteam(H, B)'}, {'true': [0.0, 9, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.584, 11, 17], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.754, 5, 8]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)'}, {'true,true': [3.73e-09, 9, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.488, 16, 25]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(A, C), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplaysforteam(G, B)', 'false,false,false': 'athleteplayssport(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 9, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.123, 16, 25]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)'}, {'true': [2.63e-09, 9, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.488, 16, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'athleteplayssport(D, C), athleteplaysforteam(D, B)', 'true,false': 'athleteplaysforteam(E, B)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplayssport(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 8, 0], 'true,false,false': [2.834, 13, 21], 'false,true': [0.0, 1, 0], 'false,false,true': [1.309, 3, 4], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysinleague(A, E), athleteplayssport(F, E)', 'false,false,false': 'athleteplaysforteam(G, B)'}, {'true': [2.63e-09, 9, 0], 'false,true': [2.834, 13, 21], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.309, 3, 4]}]
{'': [-9.25185853854297e-18, 0.2379535990481869], 'false': [nan, 0.2379535990481869], 'false,false': [nan, 0.2379535990481869], 'false,false,false': [nan, 0.2379535990481869]}
{'': [0.0, 0.23795359904818522], 'false': [nan, 0.23795359904818522], 'false,false': [0.23795359904818522, nan], 'true': [nan, 0.0]}
{'': [-1.5419764230904951e-18, 0.2379535990481857], 'false': [nan, 0.2379535990481857], 'false,false': [0.2379535990481857, nan], 'true': [-1.5419764230904951e-18, nan]}
{'': [3.0839528461809902e-18, 0.23795359904818592], 'false': [0.23852040816326528, 0.23668639053254428], 'false,true': [nan, 0.23852040816326528], 'false,true,false': [0.23852040816326528, nan], 'false,false': [nan, 0.23668639053254428], 'false,false,false': [nan, 0.23668639053254428]}
{'': [0.0, 0.23794732686077238], 'false': [nan, 0.23794732686077238], 'false,false': [0.23852040816326528, 0.23668639053254437], 'false,false,false': [nan, 0.23668639053254437]}
{'': [1.5419764230904951e-18, 0.237943554286099], 'false': [nan, 0.237943554286099], 'true': [1.5419764230904951e-18, nan]}
{'': [nan, 0.20041941543656802], 'false': [0.0, 0.23794351399237954], 'false,false': [nan, 0.23794351399237954], 'false,false,false': [nan, 0.23794351399237954]}
{'': [7.709882115452476e-19, 0.23794353557754824], 'false': [nan, 0.23794353557754824]}
{'': [0.1941510630138327, 0.21506853161714065], 'false': [0.0, 0.24475415322825625], 'false,false': [0.24475415322825625, nan], 'true': [nan, 0.1941510630138327], 'true,false': [0.0, 0.23614907157527926]}
{'': [7.709882115452476e-19, 0.23780298977074543], 'false': [0.23614913379390448, 0.24475447844113526], 'false,false': [nan, 0.24475447844113526], 'false,false,false': [nan, 0.24475447844113526]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(F, B).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
8;true;athleteplaysforteam(E, B).;true;true
8;false;athleteplaysforteam(F, B).;true;true
9;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true


Refining candidate
***************************
Model training time 2.846273899078369
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360635;  // std dev = 1.39e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.10159632948783631;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.32071184716014955;  // std dev = 2.11e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.09269127618926094;  // std dev = 9.13e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.25517224256948956;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.08518475138839685;  // std dev = 1.05e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.20975771563253554;  // std dev = 1.49e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527747;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.1527438580936708;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.15274385809367075;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.06419184008202619;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
Inference time using transfer learning 3.68561053276062
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results 

CLL : -0.099192 

AUC ROC : 0.991093 

AUC PR : 0.122807 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 2.846273899078369 

Total Inference Time : 0.721177339553833 

Total revision time: 7.631596326828003
Best scored revision CLL: -0.094637


Results 

CLL : -0.099192 

AUC ROC : 0.991093 

AUC PR : 0.122807 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 7.813978910446167 

Total Inference Time : 0.721177339553833 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 266
Target train neg examples: 106662

Target test facts examples: 9691
Target test pos examples: 131
Target test neg examples: 53329

Amount of data: 5
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.6712353229522705
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(D, B) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( athleteplayssport(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F) )
%   | | then return 0.30583693526097183;  // std dev = 0.484, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F) )
%   | | then return 0.25397322519719473;  // std dev = 0.481, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(D, A) )
%   | then if ( athleteplaysforteam(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.2626237467015031;  // std dev = 1.407, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(B, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.3192890623665855;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(G, A) )
%   | | then return 0.2061984796683919;  // std dev = 1.398, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( athleteplaysforteam(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.25420116445082525;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12191650406894498;  // std dev = 0.454, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, A), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09366353798046431;  // std dev = 1.430, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07154407832527002;  // std dev = 0.451, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F) )
%   | | then return 0.05446291086419064;  // std dev = 1.425, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(E, A), athleteplayssport(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04137860222700097;  // std dev = 1.424, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
Inference time using transfer learning 189.85106706619263
Parameter learned model CLL:-0.597092 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(E, A)', 'false,false,false': 'athleteplaysforteam(B, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 2, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.369, 3, 5]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(B, D)', 'false,false': 'athleteplayssport(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.484, 5, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(B, D)', 'false,false': 'teamplaysagainstteam(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.481, 5, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,true': 'athleteplaysforteam(B, E)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(B, H)', 'false,false,false': 'athleteplayssport(I, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.407, 4, 5], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(B, D)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(G, A)', 'false,false,false': 'athleteplaysforteam(B, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.398, 4, 5], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(B, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.454, 5, 5]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(C, A), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(B, F)', 'false,false': 'athleteplaysforteam(B, G)', 'false,false,false': 'athleteplayssport(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.43, 5, 5]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(B, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.451, 5, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(C, A)', 'false': 'athleteplaysforteam(B, D)', 'false,false': 'athleteplayssport(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.425, 5, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'teamplaysinleague(D, A)', 'false,false': 'teamplaysinleague(E, A), athleteplayssport(E, F)', 'false,false,false': 'athleteplaysforteam(B, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.424, 5, 5]}]
{'': [nan, 0.24999999999999983], 'false': [0.0, 0.23437499999999983], 'false,false': [nan, 0.23437499999999983], 'false,false,false': [nan, 0.23437499999999983]}
{'': [nan, 0.23400094897255735], 'false': [nan, 0.23400094897255735], 'false,false': [0.23400094897255735, nan]}
{'': [nan, 0.23096836693165726], 'false': [nan, 0.23096836693165726], 'false,false': [0.23096836693165726, nan]}
{'': [nan, 0.22852931543194582], 'false': [0.22005920985529953, 0.0], 'false,true': [nan, 0.22005920985529953], 'false,true,false': [0.22005920985529953, nan], 'false,false': [nan, 0.0], 'false,false,false': [nan, 0.0]}
{'': [nan, 0.21454348394785056], 'false': [nan, 0.21454348394785056], 'false,false': [0.21718486560043487, 0.0], 'false,false,false': [nan, 0.0]}
{'': [nan, 0.2059583396196834], 'false': [nan, 0.2059583396196834]}
{'': [nan, 0.20461804608532122], 'false': [nan, 0.20461804608532122], 'false,false': [nan, 0.20461804608532122], 'false,false,false': [nan, 0.20461804608532122]}
{'': [nan, 0.20374540868336072], 'false': [nan, 0.20374540868336072]}
{'': [nan, 0.20317764317152834], 'false': [nan, 0.20317764317152834], 'false,false': [0.20317764317152834, nan]}
{'': [nan, 0.20280537407698676], 'false': [nan, 0.20280537407698676], 'false,false': [nan, 0.20280537407698676], 'false,false,false': [nan, 0.20280537407698676]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(D, B).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(D, A).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(E, F), teamplaysagainstteam(G, A).;true;true


Refining candidate
***************************
Model training time 32.26451563835144
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(D, B), teamplaysagainstteam(E, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), teamplaysagainstteam(D, A) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), teamplaysagainstteam(D, A) )
%   then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783633;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D), teamplaysagainstteam(E, A) )
%   then if ( athleteplayssport(F, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09269127618926098;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), teamplaysagainstteam(D, A) )
%   then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), teamplaysagainstteam(D, A) )
%   then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), teamplaysagainstteam(D, A) )
%   then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), teamplaysagainstteam(D, A) )
%   then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), teamplaysagainstteam(D, A) )
%   then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning 560.1705377101898
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results 

CLL : -0.08586 

AUC ROC : 0.792685 

AUC PR : 0.078803 

Precision : 0.127036 

Recall : 0.59542 

F1 : 0.209396 

Total Learning Time : 32.26451563835144 

Total Inference Time : 0.994300127029419 

Total revision time: 35.677900075912476
Best scored revision CLL: -0.094637


Results 

CLL : -0.08586 

AUC ROC : 0.792685 

AUC PR : 0.078803 

Precision : 0.127036 

Recall : 0.59542 

F1 : 0.209396 

Total Learning Time : 35.86028265953064 

Total Inference Time : 0.994300127029419 

Amount of data: 10
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.797546148300171
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5248156017661789;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplayssport(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.448295606241962;  // std dev = 0.471, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then return 0.36236334632262296;  // std dev = 0.471, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplaysforteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.3140871870299188;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21408718702991872;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(A, G) )
%   | | then return 0.23753879421721563;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( athleteplaysforteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16228436833293972;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15950048530188113;  // std dev = 0.470, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( athleteplaysforteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11983049104393757;  // std dev = 1.820, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09038597197360228;  // std dev = 0.470, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, C), athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, B) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1016765395675886;  // std dev = 1.415, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( athleteplayssport(G, H) )
%   | | then return 0.26302516349476585;  // std dev = 0.901, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysinleague(A, D) )
%   | then return -0.07711045277189682;  // std dev = 1.415, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( teamplaysinleague(A, E), athleteplayssport(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20158188741981803;  // std dev = 0.902, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
Inference time using transfer learning 91.613454580307
Parameter learned model CLL:-0.458392 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(A, E)', 'false,false,false': 'athleteplaysforteam(F, B)'}, {'true': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.826, 5, 10]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplayssport(A, D)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.471, 5, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'teamplaysagainstteam(F, G)'}, {'true,true': [0.0, 5, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.471, 5, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'athleteplaysforteam(E, B)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(H, B)', 'false,false,false': 'athleteplayssport(A, I)'}, {'true': [0.0, 5, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.449, 3, 7], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.095, 2, 3]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(A, G)', 'false,false,false': 'athleteplaysforteam(H, B)'}, {'true': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.449, 3, 7], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.095, 2, 3]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)'}, {'true,true': [0.0, 5, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.47, 5, 10]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(A, C), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplaysforteam(G, B)', 'false,false,false': 'athleteplayssport(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 5, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.82, 5, 10]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)'}, {'true': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.47, 5, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'athleteplayssport(D, C), athleteplaysforteam(D, B)', 'true,false': 'athleteplaysforteam(E, B)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplayssport(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 3, 0], 'true,false,false': [1.415, 4, 4], 'false,true': [0.0, 2, 0], 'false,false,true': [0.901, 1, 6], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysinleague(A, E), athleteplayssport(F, E)', 'false,false,false': 'athleteplaysforteam(G, B)'}, {'true': [0.0, 5, 0], 'false,true': [1.415, 4, 4], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.902, 1, 6]}]
{'': [-2.7755575615628915e-18, 0.22222222222222215], 'false': [nan, 0.22222222222222215], 'false,false': [nan, 0.22222222222222215], 'false,false,false': [nan, 0.22222222222222215]}
{'': [0.0, 0.22222222222222224], 'false': [nan, 0.22222222222222224], 'false,false': [0.22222222222222224, nan], 'true': [nan, 0.0]}
{'': [0.0, 0.22222222222222215], 'false': [nan, 0.22222222222222215], 'false,false': [0.22222222222222215, nan], 'true': [0.0, nan]}
{'': [0.0, 0.2222222222222223], 'false': [0.21000000000000005, 0.24], 'false,false': [nan, 0.24], 'false,false,false': [nan, 0.24], 'false,true': [nan, 0.21000000000000005], 'false,true,false': [0.21000000000000005, nan]}
{'': [0.0, 0.221258495247816], 'false': [nan, 0.221258495247816], 'false,false': [0.20999999999999996, 0.24], 'false,false,false': [nan, 0.24]}
{'': [0.0, 0.22070223554108453], 'false': [nan, 0.22070223554108453], 'true': [0.0, nan]}
{'': [nan, 0.17292774855351947], 'false': [-1.3877787807814458e-18, 0.22070912188610686], 'false,false': [nan, 0.22070912188610686], 'false,false,false': [nan, 0.22070912188610686]}
{'': [-6.938893903907229e-19, 0.2207233384262197], 'false': [nan, 0.2207233384262197]}
{'': [0.1822817961224545, 0.10919244756671888], 'true': [nan, 0.1822817961224545], 'true,false': [-5.782411586589357e-19, 0.250335960571612], 'false': [0.0, 0.11597684039570799], 'false,false': [0.11597684039570799, nan]}
{'': [0.0, 0.20714807268008315], 'false': [0.25034689613223365, 0.11635429781128319], 'false,false': [nan, 0.11635429781128319], 'false,false,false': [nan, 0.11635429781128319]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(F, B).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
8;true;athleteplaysforteam(E, B).;true;true
8;false;athleteplaysforteam(F, B).;true;true
9;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true


Refining candidate
***************************
Model training time 26.184770584106445
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | | then return 0.4850122940520396;  // std dev = 0.812, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.7372321343150519;  // std dev = 0.074, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(E, A) )
%   | | then return 0.5739596127789734;  // std dev = 0.084, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.3168467169572804;  // std dev = 0.770, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | | then return 0.25710754266150015;  // std dev = 0.740, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( teamplaysagainstteam(A, G) )
%   | | | then return 0.40870034559523694;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5062683070632409;  // std dev = 0.119, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B), teamplaysagainstteam(E, A) )
%   | then if ( teamplaysinleague(A, F) )
%   | | then return 0.407519691271355;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.310611500306252;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | | then return -0.210512566415727;  // std dev = 0.289, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.16824861877693686;  // std dev = 0.522, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | | then return 0.13673060630005293;  // std dev = 0.614, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( athleteledsportsteam(D, G), teamplaysagainstteam(H, A) )
%   | | | then return 0.24738797067874538;  // std dev = 0.016, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.34299069165533974;  // std dev = 0.112, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.09214208835620244;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysagainstteam(D, A), athleteplayssport(E, B) )
%   | then if ( teamplaysinleague(A, F) )
%   | | then return 0.28526797467649556;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.20197314023646493;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | | then return -0.18945744793878547;  // std dev = 0.292, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.10575120163129274;  // std dev = 0.410, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | | then return 0.07751195947581246;  // std dev = 0.531, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( teamplaysagainstteam(G, A), teamalsoknownas(G, H) )
%   | | | then return 0.1700127919243685;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2513468731623337;  // std dev = 0.091, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.08397148792506451;  // std dev = 0.050, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplayssport(E, B), teamplaysagainstteam(A, F) )
%   | | then return 0.21733605539875533;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.07417282194177596;  // std dev = 0.455, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( athleteplaysforteam(G, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( teamplaysagainstteam(A, H) )
%   | | then return 0.1478501882538447;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.09325452710853312;  // std dev = 0.248, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B), teamplaysagainstteam(E, A) )
%   | then if ( teamplaysinleague(A, F) )
%   | | then return 0.18263521708497632;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.13019086807400912;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | | then return -0.1614696531470893;  // std dev = 0.272, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.06803122312724152;  // std dev = 0.342, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
Inference time using transfer learning 7.13062596321106
Refined model CLL: -0.134917


******************************************
Best model found
******************************************
Results 

CLL : -0.096858 

AUC ROC : 0.990868 

AUC PR : 0.123431 

Precision : 0.128421 

Recall : 0.931298 

F1 : 0.225717 

Total Learning Time : 26.184770584106445 

Total Inference Time : 0.7668716907501221 

Total revision time: 29.52671456336975
Best scored revision CLL: -0.134917


Results 

CLL : -0.096858 

AUC ROC : 0.990868 

AUC PR : 0.123431 

Precision : 0.128421 

Recall : 0.931298 

F1 : 0.225717 

Total Learning Time : 29.709097146987915 

Total Inference Time : 0.7668716907501221 

Amount of data: 15
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 2.1407620906829834
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5399671169176942;  // std dev = 2.185, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplayssport(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.46084995018555497;  // std dev = 0.466, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then return 0.371617857245754;  // std dev = 0.466, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783627;  // std dev = 1.32e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplaysforteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.2975997736456574;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2719587480046316;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(A, G) )
%   | | then return 0.22475336073339294;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | else if ( athleteplaysforteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2054899434414856;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1627251995471886;  // std dev = 0.466, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( athleteplaysforteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12232274306887136;  // std dev = 2.184, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09243338835045467;  // std dev = 0.466, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, C), athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, B) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.029918295612596884;  // std dev = 1.709, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( athleteplayssport(G, H) )
%   | | then return 0.19048514004540634;  // std dev = 1.258, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysinleague(A, D) )
%   | then return -0.022799505690124604;  // std dev = 1.709, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else if ( teamplaysinleague(A, E), athleteplayssport(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1462107905836487;  // std dev = 1.259, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
Inference time using transfer learning 91.44455623626709
Parameter learned model CLL:-0.465469 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(A, E)', 'false,false,false': 'athleteplaysforteam(F, B)'}, {'true': [0.0, 8, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.185, 7, 15]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplayssport(A, D)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 8, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.466, 7, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'teamplaysagainstteam(F, G)'}, {'true,true': [0.0, 8, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.466, 7, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'athleteplaysforteam(E, B)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(H, B)', 'false,false,false': 'athleteplayssport(A, I)'}, {'true': [1.32e-09, 8, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.664, 4, 9], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.414, 3, 6]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(A, G)', 'false,false,false': 'athleteplaysforteam(H, B)'}, {'true': [0.0, 8, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.664, 4, 9], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.414, 3, 6]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)'}, {'true,true': [3.73e-09, 8, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.466, 7, 15]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(A, C), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplaysforteam(G, B)', 'false,false,false': 'athleteplayssport(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 8, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.184, 7, 15]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)'}, {'true': [2.63e-09, 8, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.466, 7, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'athleteplayssport(D, C), athleteplaysforteam(D, B)', 'true,false': 'athleteplaysforteam(E, B)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplayssport(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'true,false,false': [1.709, 5, 7], 'false,true': [0.0, 4, 0], 'false,false,true': [1.258, 2, 8], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysinleague(A, E), athleteplayssport(F, E)', 'false,false,false': 'athleteplaysforteam(G, B)'}, {'true': [0.0, 8, 0], 'false,true': [1.709, 5, 7], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.259, 2, 8]}]
{'': [-6.938893903907228e-18, 0.21694214876033016], 'false': [nan, 0.21694214876033016], 'false,false': [nan, 0.21694214876033016], 'false,false,false': [nan, 0.21694214876033016]}
{'': [0.0, 0.2169421487603304], 'false': [nan, 0.2169421487603304], 'false,false': [0.2169421487603304, nan], 'true': [nan, 0.0]}
{'': [-1.734723475976807e-18, 0.21694214876033022], 'false': [nan, 0.21694214876033022], 'false,false': [0.21694214876033022, nan], 'true': [-1.734723475976807e-18, nan]}
{'': [1.734723475976807e-18, 0.21694214876033052], 'false': [0.2130177514792898, 0.22222222222222218], 'false,false': [nan, 0.22222222222222218], 'false,false,false': [nan, 0.22222222222222218], 'false,true': [nan, 0.2130177514792898], 'false,true,false': [0.2130177514792898, nan]}
{'': [0.0, 0.21687291982403115], 'false': [nan, 0.21687291982403115], 'false,false': [0.21301775147928986, 0.2222222222222222], 'false,false,false': [nan, 0.2222222222222222]}
{'': [1.734723475976807e-18, 0.21683355253403624], 'false': [nan, 0.21683355253403624], 'true': [1.734723475976807e-18, nan]}
{'': [nan, 0.16692044999912667], 'false': [0.0, 0.21683452664924874], 'false,false': [nan, 0.21683452664924874], 'false,false,false': [nan, 0.21683452664924874]}
{'': [8.673617379884035e-19, 0.21683592562182968], 'false': [nan, 0.21683592562182968]}
{'': [0.182919383456079, 0.1267657966783484], 'true': [nan, 0.182919383456079], 'true,false': [0.0, 0.2435217816229683], 'false': [0.0, 0.15831911969537843], 'false,false': [0.15831911969537843, nan]}
{'': [0.0, 0.21191424232732692], 'false': [0.24352491491699113, 0.15840080963070338], 'false,false': [nan, 0.15840080963070338], 'false,false,false': [nan, 0.15840080963070338]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(F, B).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
8;true;athleteplaysforteam(E, B).;true;true
8;false;athleteplaysforteam(F, B).;true;true
9;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true


Refining candidate
***************************
Model training time 187.5057978630066
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | | then if ( athleteplaysinleague(D, E) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3989887196812545;  // std dev = 0.785, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7366049332824657;  // std dev = 0.057, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(E, A) )
%   | | then return 0.5674620532299378;  // std dev = 0.102, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.4154822465851226;  // std dev = 0.825, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | | then if ( athleteplaysforteam(F, A) )
%   | | | then return 0.4343938056497147;  // std dev = 0.069, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.16318236929317662;  // std dev = 0.715, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.4490978081797567;  // std dev = 0.130, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(E, A) )
%   | | then return 0.3361242404806099;  // std dev = 0.153, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.2179065687275751;  // std dev = 0.757, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | | then if ( athleteplaysforteam(F, A) )
%   | | | then return 0.2628886330076732;  // std dev = 0.056, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.05304202356073506;  // std dev = 0.696, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2835885215124036;  // std dev = 0.143, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(E, A) )
%   | | then if ( teamplaysinleague(A, F), teamalsoknownas(E, G) )
%   | | | then return 0.26188137899318326;  // std dev = 0.133, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.19432423747362546;  // std dev = 0.008, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.11603731448909135;  // std dev = 0.719, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | | then if ( athleteplaysinleague(D, E) )
%   | | | then return 0.18385901885369813;  // std dev = 0.064, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.014283174887654293;  // std dev = 0.666, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamplaysagainstteam(G, A) )
%   | | | then return 0.16446826055288066;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2540994929533865;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( athleteplayssport(E, B), teamplaysagainstteam(F, A) )
%   | | then return 0.1916787529347785;  // std dev = 0.145, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.10277441353945789;  // std dev = 0.551, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( athleteplaysforteam(G, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( athleteplayssport(H, B), athleteledsportsteam(H, I) )
%   | | then if ( teamplaysagainstteam(J, A) )
%   | | | then return 0.14309491729147295;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.208999651999342;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.002080320534355834;  // std dev = 0.173, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B), teamplaysagainstteam(E, A) )
%   | then if ( teamalsoknownas(F, E) )
%   | | then if ( athleteledsportsteam(D, F) )
%   | | | then return 0.11993937899210964;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14052906724089642;  // std dev = 0.049, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.17807915156959328;  // std dev = 0.108, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | | then return -0.17822139268081627;  // std dev = 0.402, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( athleteplayssport(I, B) )
%   | | | then return 0.18902975267937722;  // std dev = 0.043, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.06642619540497484;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning 20.80615758895874
Refined model CLL: -0.125647


******************************************
Best model found
******************************************
Results 

CLL : -0.088244 

AUC ROC : 0.992698 

AUC PR : 0.189973 

Precision : 0.13057 

Recall : 0.961832 

F1 : 0.229927 

Total Learning Time : 187.5057978630066 

Total Inference Time : 1.3506600856781006 

Total revision time: 191.80765843391418
Best scored revision CLL: -0.125647


Results 

CLL : -0.088244 

AUC ROC : 0.992698 

AUC PR : 0.189973 

Precision : 0.13057 

Recall : 0.961832 

F1 : 0.229927 

Total Learning Time : 191.99004101753235 

Total Inference Time : 1.3506600856781006 

Amount of data: 20
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 2.4193904399871826
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5478041075133049;  // std dev = 2.491, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplayssport(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.4673349216153254;  // std dev = 0.463, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then return 0.37638199006737755;  // std dev = 0.463, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplaysforteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.3066054639043761;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.26738977762986615;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(A, G) )
%   | | then return 0.23132872864521295;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | else if ( athleteplaysforteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20188057235154408;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16442291255381505;  // std dev = 0.462, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109172;  // std dev = 1.32e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( athleteplaysforteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12369408675006785;  // std dev = 2.490, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.093601011093113;  // std dev = 0.462, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, C), athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, B) )
%   | | then return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.00946350319896972;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( athleteplayssport(G, H) )
%   | | then return 0.20342513817806315;  // std dev = 1.270, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.06419184008202619;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamplaysinleague(A, D) )
%   | then return -0.00723318264562998;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | else if ( teamplaysinleague(A, E), athleteplayssport(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1565161954981792;  // std dev = 1.271, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
Inference time using transfer learning 91.36031532287598
Parameter learned model CLL:-0.457732 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(A, E)', 'false,false,false': 'athleteplaysforteam(F, B)'}, {'true': [0.0, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.491, 9, 20]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplayssport(A, D)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [5.27e-09, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.463, 9, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'teamplaysagainstteam(F, G)'}, {'true,true': [7.45e-09, 11, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.463, 9, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'athleteplaysforteam(E, B)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(H, B)', 'false,false,false': 'athleteplayssport(A, I)'}, {'true': [0.0, 11, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.879, 5, 12], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.633, 4, 8]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(A, G)', 'false,false,false': 'athleteplaysforteam(H, B)'}, {'true': [0.0, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.879, 5, 12], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.633, 4, 8]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)'}, {'true,true': [5.27e-09, 11, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.462, 9, 20]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(A, C), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplaysforteam(G, B)', 'false,false,false': 'athleteplayssport(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [1.32e-09, 11, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.49, 9, 20]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)'}, {'true': [2.63e-09, 11, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.462, 9, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'athleteplayssport(D, C), athleteplaysforteam(D, B)', 'true,false': 'athleteplaysforteam(E, B)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplayssport(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.63e-09, 7, 0], 'true,false,false': [2.068, 7, 11], 'false,true': [0.0, 4, 0], 'false,false,true': [1.27, 2, 9], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysinleague(A, E), athleteplayssport(F, E)', 'false,false,false': 'athleteplaysforteam(G, B)'}, {'true': [5.27e-09, 11, 0], 'false,true': [2.068, 7, 11], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.271, 2, 9]}]
{'': [-1.0092936587501423e-17, 0.21403091557669457], 'false': [nan, 0.21403091557669457], 'false,false': [nan, 0.21403091557669457], 'false,false,false': [nan, 0.21403091557669457]}
{'': [2.523234146875356e-18, 0.21403091557669504], 'false': [nan, 0.21403091557669504], 'false,false': [0.21403091557669504, nan], 'true': [nan, 2.523234146875356e-18]}
{'': [5.046468293750712e-18, 0.21403091557669462], 'false': [nan, 0.21403091557669462], 'false,false': [0.21403091557669462, nan], 'true': [5.046468293750712e-18, nan]}
{'': [0.0, 0.21403091557669413], 'false': [0.2076124567474046, 0.22222222222222224], 'false,false': [nan, 0.22222222222222224], 'false,false,false': [nan, 0.22222222222222224], 'false,true': [nan, 0.2076124567474046], 'false,true,false': [0.2076124567474046, nan]}
{'': [0.0, 0.21386823075774028], 'false': [nan, 0.21386823075774028], 'false,false': [0.20761245674740497, 0.2222222222222223], 'false,false,false': [nan, 0.2222222222222223]}
{'': [2.523234146875356e-18, 0.21377624438357584], 'false': [nan, 0.21377624438357584], 'true': [2.523234146875356e-18, nan]}
{'': [nan, 0.16316297388755055], 'false': [0.0, 0.2137789063221575], 'false,false': [nan, 0.2137789063221575], 'false,false,false': [nan, 0.2137789063221575]}
{'': [6.30808536718839e-19, 0.21378249988504228], 'false': [nan, 0.21378249988504228]}
{'': [0.17177792598279884, 0.12201453379024971], 'true': [nan, 0.17177792598279884], 'true,false': [9.912705577010326e-19, 0.23760697917806028], 'false': [0.0, 0.14667583570564677], 'false,false': [0.14667583570564677, nan]}
{'': [2.523234146875356e-18, 0.20947149950778235], 'false': [0.23760699143672387, 0.14678851882527655], 'false,false': [nan, 0.14678851882527655], 'false,false,false': [nan, 0.14678851882527655]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(F, B).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
8;true;athleteplaysforteam(E, B).;true;true
8;false;athleteplaysforteam(F, B).;true;true
9;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true


Refining candidate
***************************
Model training time 167.20180439949036
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(E, A) )
%   | | then return 0.7194734122109542;  // std dev = 5.16e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | | then if ( athleteplaysinleague(D, E) )
%   | | | then return 0.5754136143048091;  // std dev = 0.130, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.26880985104950844;  // std dev = 0.702, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5681237315562547;  // std dev = 0.134, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamalsoknownas(A, E) )
%   | | then return 0.4890470307180796;  // std dev = 0.106, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamplaysagainstteam(A, F) )
%   | | | then return 0.41969535606220704;  // std dev = 0.072, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.3093674908528159;  // std dev = 0.749, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | | then if ( athleteplaysinleague(D, E) )
%   | | | then return 0.340123192180987;  // std dev = 0.157, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.10554412720976436;  // std dev = 0.666, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.33636344130248663;  // std dev = 0.120, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(E, A) )
%   | | then return 0.2623968841984425;  // std dev = 0.139, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return 0.09984376278728702;  // std dev = 0.691, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2706204390519612;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07877675473109172;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(E, A) )
%   | | then return 0.21515049272772918;  // std dev = 0.124, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return 0.07605216510334467;  // std dev = 0.693, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.22061303918940023;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | | then if ( athleteplaysinleague(D, E) )
%   | | | then return 0.19661413479266857;  // std dev = 0.177, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -8.432785545463192E-4;  // std dev = 0.621, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.18893113806616776;  // std dev = 0.142, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( athleteplayssport(E, B), teamplaysagainstteam(F, A) )
%   | | then return 0.16803998450754276;  // std dev = 0.137, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( athleteplayssport(G, B) )
%   | | | then return 0.030340282076578313;  // std dev = 0.660, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplaysforteam(H, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( athleteplayssport(I, B), athleteledsportsteam(I, J) )
%   | | then return 0.15092759464024957;  // std dev = 0.022, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.00296732674098187;  // std dev = 0.175, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.06419184008202619;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamalsoknownas(A, E) )
%   | | then return 0.20449816109648453;  // std dev = 0.111, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamplaysagainstteam(A, F) )
%   | | | then return 0.13565619430499365;  // std dev = 0.099, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.05846540664874698;  // std dev = 0.647, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.06529797298104462;  // std dev = 0.005, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning 14.23369026184082
Refined model CLL: -0.124926


******************************************
Best model found
******************************************
Results 

CLL : -0.090823 

AUC ROC : 0.992962 

AUC PR : 0.205644 

Precision : 0.124758 

Recall : 0.984733 

F1 : 0.221459 

Total Learning Time : 167.20180439949036 

Total Inference Time : 0.9042460918426514 

Total revision time: 171.45255374908447
Best scored revision CLL: -0.124926


Results 

CLL : -0.090823 

AUC ROC : 0.992962 

AUC PR : 0.205644 

Precision : 0.124758 

Recall : 0.984733 

F1 : 0.221459 

Total Learning Time : 171.63493633270264 

Total Inference Time : 0.9042460918426514 

Amount of data: 25
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 2.766887664794922
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5724346493852258;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplayssport(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.4876778839172633;  // std dev = 0.452, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then return 0.3912569620992533;  // std dev = 0.452, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplaysforteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.3481902024075375;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2291425833599183;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926094;  // std dev = 1.86e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(A, G) )
%   | | then return 0.26201483745066334;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | else if ( athleteplaysforteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17269363274383093;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.08518475138839685;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.169952413136981;  // std dev = 0.449, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( athleteplaysforteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12831911436219276;  // std dev = 2.658, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09764525757728885;  // std dev = 0.449, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, C), athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, B) )
%   | | then return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.006068431543028974;  // std dev = 2.267, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( athleteplayssport(G, H) )
%   | | then return 0.2068140725911046;  // std dev = 1.268, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.06419184008202619;  // std dev = 7.90e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( teamplaysinleague(A, D) )
%   | then return 0.0046848177177884745;  // std dev = 2.267, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | else if ( teamplaysinleague(A, E), athleteplayssport(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15991553358401306;  // std dev = 1.270, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
Inference time using transfer learning 90.27344632148743
Parameter learned model CLL:-0.428327 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(A, E)', 'false,false,false': 'athleteplaysforteam(F, B)'}, {'true': [0.0, 15, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.673, 10, 25]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplayssport(A, D)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [7.45e-09, 15, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.452, 10, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'teamplaysagainstteam(F, G)'}, {'true,true': [1.39e-08, 15, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.452, 10, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'athleteplaysforteam(E, B)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(H, B)', 'false,false,false': 'athleteplayssport(A, I)'}, {'true': [0.0, 15, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.952, 5, 16], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.793, 5, 9]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(A, G)', 'false,false,false': 'athleteplaysforteam(H, B)'}, {'true': [1.86e-09, 15, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.952, 5, 16], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.793, 5, 9]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)'}, {'true,true': [9.13e-09, 15, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.449, 10, 25]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(A, C), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplaysforteam(G, B)', 'false,false,false': 'athleteplayssport(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 15, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.658, 10, 25]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)'}, {'true': [3.73e-09, 15, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.449, 10, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'athleteplayssport(D, C), athleteplaysforteam(D, B)', 'true,false': 'athleteplaysforteam(E, B)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplayssport(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.63e-09, 10, 0], 'true,false,false': [2.267, 8, 15], 'false,true': [1.86e-09, 5, 0], 'false,false,true': [1.268, 2, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysinleague(A, E), athleteplayssport(F, E)', 'false,false,false': 'athleteplaysforteam(G, B)'}, {'true': [7.9e-09, 15, 0], 'false,true': [2.267, 8, 15], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.27, 2, 10]}]
{'': [-1.4802973661668754e-17, 0.20408163265306242], 'false': [nan, 0.20408163265306242], 'false,false': [nan, 0.20408163265306242], 'false,false,false': [nan, 0.20408163265306242]}
{'': [3.7007434154171884e-18, 0.20408163265306106], 'false': [nan, 0.20408163265306106], 'false,false': [0.20408163265306106, nan], 'true': [nan, 3.7007434154171884e-18]}
{'': [1.295260195396016e-17, 0.20408163265306165], 'false': [nan, 0.20408163265306165], 'false,false': [0.20408163265306165, nan], 'true': [1.295260195396016e-17, nan]}
{'': [-5.551115123125783e-18, 0.20408163265306103], 'false': [0.18140589569160998, 0.22959183673469383], 'false,false': [nan, 0.22959183673469383], 'false,false,false': [nan, 0.22959183673469383], 'false,true': [nan, 0.18140589569160998], 'false,true,false': [0.18140589569160998, nan]}
{'': [3.7007434154171884e-18, 0.20259505873531092], 'false': [nan, 0.20259505873531092], 'false,false': [0.1814058956916101, 0.2295918367346939], 'false,false,false': [nan, 0.2295918367346939]}
{'': [5.551115123125783e-18, 0.20176803196562004], 'false': [nan, 0.20176803196562004], 'true': [5.551115123125783e-18, nan]}
{'': [nan, 0.15026809253921408], 'false': [-1.8503717077085942e-18, 0.201802093928798], 'false,false': [nan, 0.201802093928798], 'false,false,false': [nan, 0.201802093928798]}
{'': [9.251858538542971e-19, 0.20184308624276054], 'false': [nan, 0.20184308624276054]}
{'': [0.15691707341741706, 0.11034730167923153], 'true': [nan, 0.15691707341741706], 'true,false': [6.938893903907229e-19, 0.22346020127407093], 'false': [6.938893903907229e-19, 0.13404368644418643], 'false,false': [0.13404368644418643, nan]}
{'': [4.163336342344337e-18, 0.1983299607987117], 'false': [0.22346501478625297, 0.13431954841558622], 'false,false': [nan, 0.13431954841558622], 'false,false,false': [nan, 0.13431954841558622]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(F, B).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
8;true;athleteplaysforteam(E, B).;true;true
8;false;athleteplaysforteam(F, B).;true;true
9;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true


Refining candidate
***************************
Model training time 168.271817445755
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(E, A) )
%   | | then return 0.7194734122109542;  // std dev = 7.30e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(E, A) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return 0.36236334632262296;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | | then if ( athleteplaysinleague(D, E) )
%   | | | then return 0.4371709444454708;  // std dev = 0.186, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.1497047851155129;  // std dev = 0.656, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamplaysinleague(A, G) )
%   | | | then return 0.4830381184488463;  // std dev = 0.161, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926094;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamalsoknownas(A, E), teamplaysinleague(A, F) )
%   | | then return 0.397810932973172;  // std dev = 0.128, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamplaysagainstteam(G, A) )
%   | | | then return 0.32062170820068214;  // std dev = 0.065, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.24120841802408055;  // std dev = 0.736, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.08518475138839685;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | | then if ( athleteplaysinleague(D, E) )
%   | | | then return 0.2695730600483418;  // std dev = 0.187, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.04026159848997487;  // std dev = 0.639, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamplaysagainstteam(G, A) )
%   | | | then return 0.25168847089154783;  // std dev = 0.015, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2917113836365486;  // std dev = 0.116, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07877675473109173;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysinleague(A, E), teamalsoknownas(A, F) )
%   | | then return 0.2689203360999572;  // std dev = 0.100, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamplaysagainstteam(G, A) )
%   | | | then return 0.2115839976097881;  // std dev = 0.093, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.13923162832258895;  // std dev = 0.698, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | | then if ( athleteplaysinleague(D, E) )
%   | | | then return 0.18783216981660739;  // std dev = 0.171, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.011631739942853528;  // std dev = 0.631, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamplaysagainstteam(G, A) )
%   | | | then return 0.17467741956902416;  // std dev = 0.011, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2074542959001163;  // std dev = 0.072, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( athleteplayssport(E, B), teamplaysagainstteam(F, A) )
%   | | then if ( athleteplaysforteam(E, F) )
%   | | | then return 0.14503421227516253;  // std dev = 0.015, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.19645363783207587;  // std dev = 0.104, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( athleteplayssport(G, B) )
%   | | | then return 0.006167100251838124;  // std dev = 0.651, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplaysforteam(H, B) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( athleteplayssport(I, B), athleteledsportsteam(I, J) )
%   | | then return 0.1591348034875915;  // std dev = 0.016, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.005476636572177516;  // std dev = 0.181, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.06419184008202619;  // std dev = 7.90e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(E, A) )
%   | | then if ( athleteplaysforteam(D, E) )
%   | | | then return 0.12901437736793853;  // std dev = 0.015, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.15585084474529334;  // std dev = 0.100, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return 0.004848784354697415;  // std dev = 0.651, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.14316557153217047;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.06521074467728791;  // std dev = 0.006, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
Inference time using transfer learning 14.974175930023193
Refined model CLL: -0.118749


******************************************
Best model found
******************************************
Results 

CLL : -0.091009 

AUC ROC : 0.992787 

AUC PR : 0.18458 

Precision : 0.124758 

Recall : 0.984733 

F1 : 0.221459 

Total Learning Time : 168.271817445755 

Total Inference Time : 1.0181994438171387 

Total revision time: 172.94704413414001
Best scored revision CLL: -0.118749


Results 

CLL : -0.091009 

AUC ROC : 0.992787 

AUC PR : 0.18458 

Precision : 0.124758 

Recall : 0.984733 

F1 : 0.221459 

Total Learning Time : 173.12942671775818 

Total Inference Time : 1.0181994438171387 

Run: 2

 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 264
Target train neg examples: 106660

Target test facts examples: 9691
Target test pos examples: 133
Target test neg examples: 53331

Amount of data: 5
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.5502912998199463
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(D, B) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( athleteplayssport(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F) )
%   | | then return 0.30583693526097183;  // std dev = 0.484, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F) )
%   | | then return 0.25397322519719473;  // std dev = 0.481, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(D, A) )
%   | then if ( athleteplaysforteam(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.14317026357809998;  // std dev = 1.237, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(B, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3473776043000812;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(G, A) )
%   | | then return 0.11355013563982004;  // std dev = 1.233, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( athleteplaysforteam(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2676738084581565;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12289353665210805;  // std dev = 0.470, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, A), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09436543422237509;  // std dev = 1.482, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07202643834844973;  // std dev = 0.468, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F) )
%   | | then return 0.05478055610151046;  // std dev = 1.479, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(E, A), athleteplayssport(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041577889306306584;  // std dev = 1.478, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
Inference time using transfer learning 173.90447402000427
Parameter learned model CLL:-0.62915 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(E, A)', 'false,false,false': 'athleteplaysforteam(B, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 2, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.369, 3, 5]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(B, D)', 'false,false': 'athleteplayssport(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.484, 5, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(B, D)', 'false,false': 'teamplaysagainstteam(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.481, 5, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,true': 'athleteplaysforteam(B, E)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(B, H)', 'false,false,false': 'athleteplayssport(I, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.237, 4, 3], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.816, 1, 2]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(B, D)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(G, A)', 'false,false,false': 'athleteplaysforteam(B, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.233, 4, 3], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.816, 1, 2]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(B, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.47, 5, 5]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(C, A), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(B, F)', 'false,false': 'athleteplaysforteam(B, G)', 'false,false,false': 'athleteplayssport(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.482, 5, 5]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(B, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.468, 5, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(C, A)', 'false': 'athleteplaysforteam(B, D)', 'false,false': 'athleteplayssport(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.479, 5, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'teamplaysinleague(D, A)', 'false,false': 'teamplaysinleague(E, A), athleteplayssport(E, F)', 'false,false,false': 'athleteplaysforteam(B, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.478, 5, 5]}]
{'': [nan, 0.24999999999999983], 'false': [0.0, 0.23437499999999983], 'false,false': [nan, 0.23437499999999983], 'false,false,false': [nan, 0.23437499999999983]}
{'': [nan, 0.23400094897255735], 'false': [nan, 0.23400094897255735], 'false,false': [0.23400094897255735, nan]}
{'': [nan, 0.23096836693165726], 'false': [nan, 0.23096836693165726], 'false,false': [0.23096836693165726, nan]}
{'': [nan, 0.22852931543194582], 'false': [0.2187221639775471, 0.22222222222222218], 'false,false': [nan, 0.22222222222222218], 'false,false,false': [nan, 0.22222222222222218], 'false,true': [nan, 0.2187221639775471], 'false,true,false': [0.2187221639775471, nan]}
{'': [nan, 0.2236779519309649], 'false': [nan, 0.2236779519309649], 'false,false': [0.21717560413495046, 0.2222222222222222], 'false,false,false': [nan, 0.2222222222222222]}
{'': [nan, 0.22058607191151106], 'false': [nan, 0.22058607191151106]}
{'': [nan, 0.2196672647085552], 'false': [nan, 0.2196672647085552], 'false,false': [nan, 0.2196672647085552], 'false,false,false': [nan, 0.2196672647085552]}
{'': [nan, 0.21905731292177671], 'false': [nan, 0.21905731292177671]}
{'': [nan, 0.2186521167980155], 'false': [nan, 0.2186521167980155], 'false,false': [0.2186521167980155, nan]}
{'': [nan, 0.21838071274764564], 'false': [nan, 0.21838071274764564], 'false,false': [nan, 0.21838071274764564], 'false,false,false': [nan, 0.21838071274764564]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(D, B).;true;true


Refining candidate
***************************
Model training time 2.277829170227051
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning 3.1338651180267334
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results 

CLL : -0.098354 

AUC ROC : 0.98755 

AUC PR : 0.124187 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 2.277829170227051 

Total Inference Time : 0.6596372127532959 

Total revision time: 5.346607208251953
Best scored revision CLL: -0.094637


Results 

CLL : -0.098354 

AUC ROC : 0.98755 

AUC PR : 0.124187 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 5.503718137741089 

Total Inference Time : 0.6596372127532959 

Amount of data: 10
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.9449753761291504
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.44638422921715937;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplayssport(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.382955427940009;  // std dev = 0.492, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then return 0.3134863926750183;  // std dev = 0.492, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplaysforteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.24195860346103357;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2586252701277002;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926094;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(A, G) )
%   | | then return 0.18567109270552007;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( athleteplaysforteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1983389150079499;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14323849946765085;  // std dev = 0.492, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplaysforteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10764420550548484;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08074467360293426;  // std dev = 0.492, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, C), athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, B) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.11527034160590373;  // std dev = 1.795, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(G, H) )
%   | | then return -0.19460149452325903;  // std dev = 0.811, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysinleague(A, D) )
%   | then return 0.08666435748871328;  // std dev = 1.795, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | else if ( teamplaysinleague(A, E), athleteplayssport(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14599435546285397;  // std dev = 0.811, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
Inference time using transfer learning 89.78760695457458
Parameter learned model CLL:-0.570931 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(A, E)', 'false,false,false': 'athleteplaysforteam(F, B)'}, {'true': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.029, 7, 10]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplayssport(A, D)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.492, 7, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'teamplaysagainstteam(F, G)'}, {'true,true': [2.63e-09, 3, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.492, 7, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'athleteplaysforteam(E, B)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(H, B)', 'false,false,false': 'athleteplayssport(A, I)'}, {'true': [0.0, 3, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.708, 5, 7], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.095, 2, 3]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(A, G)', 'false,false,false': 'athleteplaysforteam(H, B)'}, {'true': [1.32e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.708, 5, 7], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.095, 2, 3]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)'}, {'true,true': [0.0, 3, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 7, 10]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(A, C), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplaysforteam(G, B)', 'false,false,false': 'athleteplayssport(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 3, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.029, 7, 10]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)'}, {'true': [1.86e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.492, 7, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'athleteplayssport(D, C), athleteplaysforteam(D, B)', 'true,false': 'athleteplaysforteam(E, B)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplayssport(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 3, 0], 'true,false,false': [1.795, 5, 9], 'false,true': [0.0, 0, 0], 'false,false,true': [0.811, 2, 1], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysinleague(A, E), athleteplayssport(F, E)', 'false,false,false': 'athleteplaysforteam(G, B)'}, {'true': [1.32e-09, 3, 0], 'false,true': [1.795, 5, 9], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.811, 2, 1]}]
{'': [0.0, 0.24221453287197228], 'false': [nan, 0.24221453287197228], 'false,false': [nan, 0.24221453287197228], 'false,false,false': [nan, 0.24221453287197228]}
{'': [0.0, 0.2422145328719721], 'false': [nan, 0.2422145328719721], 'false,false': [0.2422145328719721, nan], 'true': [nan, 0.0]}
{'': [2.3129646346357427e-18, 0.24221453287197214], 'false': [nan, 0.24221453287197214], 'false,false': [0.24221453287197214, nan], 'true': [2.3129646346357427e-18, nan]}
{'': [-1.1564823173178713e-18, 0.24221453287197225], 'false': [0.24305555555555558, 0.24000000000000005], 'false,true': [nan, 0.24305555555555558], 'false,true,false': [0.24305555555555558, nan], 'false,false': [nan, 0.24000000000000005], 'false,false,false': [nan, 0.24000000000000005]}
{'': [2.3129646346357427e-18, 0.24219017908874213], 'false': [nan, 0.24219017908874213], 'false,false': [0.2430555555555555, 0.24], 'false,false,false': [nan, 0.24]}
{'': [0.0, 0.24217527447887494], 'false': [nan, 0.24217527447887494], 'true': [0.0, nan]}
{'': [nan, 0.21027971508301016], 'false': [0.0, 0.24217498393532993], 'false,false': [nan, 0.24217498393532993], 'false,false,false': [nan, 0.24217498393532993]}
{'': [1.1564823173178713e-18, 0.24217495669641617], 'false': [nan, 0.24217495669641617]}
{'': [0.1944800140465399, 0.2189858439123595], 'false': [nan, 0.2189858439123595], 'false,false': [0.2189858439123595, nan], 'true': [nan, 0.1944800140465399], 'true,false': [-5.782411586589357e-19, 0.23019935479906528]}
{'': [5.782411586589357e-19, 0.23608100003079577], 'false': [0.23019318900431313, 0.2189797412540728], 'false,false': [nan, 0.2189797412540728], 'false,false,false': [nan, 0.2189797412540728]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(F, B).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
8;true;athleteplaysforteam(E, B).;true;true
9;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true


Refining candidate
***************************
Model training time 2.66558837890625
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.15274385809367097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.005296634135088509;  // std dev = 0.181, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.13581229339721346;  // std dev = 0.017, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.06549856665942531;  // std dev = 0.005, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
Inference time using transfer learning 3.6854660511016846
Refined model CLL: -0.0959


******************************************
Best model found
******************************************
Results 

CLL : -0.098825 

AUC ROC : 0.986059 

AUC PR : 0.13314 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 2.66558837890625 

Total Inference Time : 0.6995601654052734 

Total revision time: 6.116921901702881
Best scored revision CLL: -0.0959


Results 

CLL : -0.098825 

AUC ROC : 0.986059 

AUC PR : 0.13314 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 6.274032831192017 

Total Inference Time : 0.6995601654052734 

Amount of data: 15
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 2.269644260406494
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4581489350995123;  // std dev = 2.449, 25.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplayssport(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.39279418357704904;  // std dev = 0.490, 25.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then return 0.32092546969114216;  // std dev = 0.490, 25.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplaysforteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.20762120036988566;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3663513591000442;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(A, G) )
%   | | then return 0.15916088804578435;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | else if ( athleteplaysforteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27935953197344243;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14554639670851707;  // std dev = 0.486, 25.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( athleteplaysforteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10942770639041552;  // std dev = 2.432, 25.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08218602028645978;  // std dev = 0.486, 25.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, C), athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, B) )
%   | | then return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.06040952642492368;  // std dev = 2.183, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(G, H) )
%   | | then return 0.06729180826528505;  // std dev = 1.072, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysinleague(A, D) )
%   | then return 0.045501667364057065;  // std dev = 2.183, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | else if ( teamplaysinleague(A, E), athleteplayssport(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05063437099767611;  // std dev = 1.072, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
Inference time using transfer learning 89.87492895126343
Parameter learned model CLL:-0.567453 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(A, E)', 'false,false,false': 'athleteplaysforteam(F, B)'}, {'true': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.449, 10, 15]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplayssport(A, D)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.49, 10, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'teamplaysagainstteam(F, G)'}, {'true,true': [0.0, 5, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.49, 10, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'athleteplaysforteam(E, B)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(H, B)', 'false,false,false': 'athleteplayssport(A, I)'}, {'true': [0.0, 5, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [2.108, 8, 10], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.195, 2, 5]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(A, G)', 'false,false,false': 'athleteplaysforteam(H, B)'}, {'true': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.108, 8, 10], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.195, 2, 5]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)'}, {'true,true': [0.0, 5, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.486, 10, 15]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(A, C), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplaysforteam(G, B)', 'false,false,false': 'athleteplayssport(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 5, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.432, 10, 15]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)'}, {'true': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.486, 10, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'athleteplayssport(D, C), athleteplaysforteam(D, B)', 'true,false': 'athleteplaysforteam(E, B)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplayssport(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [1.86e-09, 5, 0], 'true,false,false': [2.183, 8, 12], 'false,true': [0.0, 0, 0], 'false,false,true': [1.072, 2, 3], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysinleague(A, E), athleteplayssport(F, E)', 'false,false,false': 'athleteplaysforteam(G, B)'}, {'true': [0.0, 5, 0], 'false,true': [2.183, 8, 12], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.072, 2, 3]}]
{'': [-2.7755575615628915e-18, 0.23999999999999955], 'false': [nan, 0.23999999999999955], 'false,false': [nan, 0.23999999999999955], 'false,false,false': [nan, 0.23999999999999955]}
{'': [0.0, 0.2399999999999995], 'false': [nan, 0.2399999999999995], 'false,false': [0.2399999999999995, nan], 'true': [nan, 0.0]}
{'': [0.0, 0.23999999999999966], 'false': [nan, 0.23999999999999966], 'false,false': [0.23999999999999966, nan], 'true': [0.0, nan]}
{'': [0.0, 0.2399999999999998], 'false': [0.24691358024691348, 0.20408163265306126], 'false,true': [nan, 0.24691358024691348], 'false,true,false': [0.24691358024691348, nan], 'false,false': [nan, 0.20408163265306126], 'false,false,false': [nan, 0.20408163265306126]}
{'': [0.0, 0.23783329406344791], 'false': [nan, 0.23783329406344791], 'false,false': [0.24691358024691365, 0.20408163265306128], 'false,false,false': [nan, 0.20408163265306128]}
{'': [0.0, 0.2365307214549472], 'false': [nan, 0.2365307214549472], 'true': [0.0, nan]}
{'': [nan, 0.202021100580921], 'false': [-1.3877787807814458e-18, 0.2365218341660991], 'false,false': [nan, 0.2365218341660991], 'false,false,false': [nan, 0.2365218341660991]}
{'': [-6.938893903907229e-19, 0.23653249531885973], 'false': [nan, 0.23653249531885973]}
{'': [0.19324923048019735, 0.22974620190870448], 'false': [nan, 0.22974620190870448], 'false,false': [0.22974620190870448, nan], 'true': [nan, 0.19324923048019735], 'true,false': [6.938893903907229e-19, 0.23824176913378897]}
{'': [0.0, 0.2365670743743171], 'false': [0.23824740771740505, 0.22982466528469275], 'false,false': [nan, 0.22982466528469275], 'false,false,false': [nan, 0.22982466528469275]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(F, B).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
8;true;athleteplaysforteam(E, B).;true;true
9;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true


Refining candidate
***************************
Model training time 2.699469566345215
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.4175135841583098;  // std dev = 4.71e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2551722425694894;  // std dev = 2.36e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07877675473109172;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527741;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.15274385809367078;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0.06427552371852137;  // std dev = 0.242, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.1361276449514346;  // std dev = 0.016, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.0658813940580904;  // std dev = 0.011, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
Inference time using transfer learning 3.7932345867156982
Refined model CLL: -0.09614


******************************************
Best model found
******************************************
Results 

CLL : -0.099931 

AUC ROC : 0.986059 

AUC PR : 0.13314 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 2.699469566345215 

Total Inference Time : 0.7218034267425537 

Total revision time: 6.543359041213989
Best scored revision CLL: -0.09614


Results 

CLL : -0.099931 

AUC ROC : 0.986059 

AUC PR : 0.13314 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 6.700469970703125 

Total Inference Time : 0.7218034267425537 

Amount of data: 20
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 2.5117077827453613
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5248156017661785;  // std dev = 2.582, 30.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplayssport(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.448295606241962;  // std dev = 0.471, 30.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then return 0.362363346322623;  // std dev = 0.471, 30.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783628;  // std dev = 1.32e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplaysforteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.21408718702991902;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41408718702991887;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(A, G) )
%   | | then return 0.16228436833293997;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | else if ( athleteplaysforteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3126068920931796;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15962636946923262;  // std dev = 0.465, 30.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109172;  // std dev = 9.31e-10, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( athleteplaysforteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12012208896806899;  // std dev = 2.547, 30.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09074547417530016;  // std dev = 0.465, 30.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, C), athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, B) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.08000985294816591;  // std dev = 2.309, 25.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(G, H) )
%   | | then return 0.013285552581649008;  // std dev = 1.067, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.06419184008202619;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( teamplaysinleague(A, D) )
%   | then return 0.061093235636840874;  // std dev = 2.310, 25.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
%   | else if ( teamplaysinleague(A, E), athleteplayssport(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.010082391517499812;  // std dev = 1.067, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
Inference time using transfer learning 92.87067747116089
Parameter learned model CLL:-0.485533 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(A, E)', 'false,false,false': 'athleteplaysforteam(F, B)'}, {'true': [0.0, 10, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.582, 10, 20]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplayssport(A, D)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [5.27e-09, 10, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.471, 10, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'teamplaysagainstteam(F, G)'}, {'true,true': [0.0, 10, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.471, 10, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'athleteplaysforteam(E, B)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(H, B)', 'false,false,false': 'athleteplayssport(A, I)'}, {'true': [1.32e-09, 10, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [2.191, 8, 12], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.265, 2, 8]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(A, G)', 'false,false,false': 'athleteplaysforteam(H, B)'}, {'true': [0.0, 10, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.191, 8, 12], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.265, 2, 8]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)'}, {'true,true': [3.73e-09, 10, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.465, 10, 20]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(A, C), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplaysforteam(G, B)', 'false,false,false': 'athleteplayssport(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [9.31e-10, 10, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.547, 10, 20]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)'}, {'true': [2.63e-09, 10, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.465, 10, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'athleteplayssport(D, C), athleteplaysforteam(D, B)', 'true,false': 'athleteplaysforteam(E, B)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplayssport(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 9, 0], 'true,false,false': [2.309, 8, 17], 'false,true': [0.0, 1, 0], 'false,false,true': [1.067, 2, 3], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysinleague(A, E), athleteplayssport(F, E)', 'false,false,false': 'athleteplaysforteam(G, B)'}, {'true': [3.73e-09, 10, 0], 'false,true': [2.31, 8, 17], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.067, 2, 3]}]
{'': [-1.1102230246251566e-17, 0.22222222222222232], 'false': [nan, 0.22222222222222232], 'false,false': [nan, 0.22222222222222232], 'false,false,false': [nan, 0.22222222222222232]}
{'': [2.7755575615628915e-18, 0.22222222222222204], 'false': [nan, 0.22222222222222204], 'false,false': [0.22222222222222204, nan], 'true': [nan, 2.7755575615628915e-18]}
{'': [0.0, 0.22222222222222252], 'false': [nan, 0.22222222222222252], 'false,false': [0.22222222222222252, nan], 'true': [0.0, nan]}
{'': [1.3877787807814458e-18, 0.22222222222222243], 'false': [0.23999999999999985, 0.15999999999999992], 'false,true': [nan, 0.23999999999999985], 'false,true,false': [0.23999999999999985, nan], 'false,false': [nan, 0.15999999999999992], 'false,false,false': [nan, 0.15999999999999992]}
{'': [0.0, 0.21835485803325502], 'false': [nan, 0.21835485803325502], 'false,false': [0.23999999999999985, 0.16000000000000003], 'false,false,false': [nan, 0.16000000000000003]}
{'': [1.3877787807814458e-18, 0.21616117786930383], 'false': [nan, 0.21616117786930383], 'true': [1.3877787807814458e-18, nan]}
{'': [nan, 0.16958165820279952], 'false': [0.0, 0.21621869009751704], 'false,false': [nan, 0.21621869009751704], 'false,false,false': [nan, 0.21621869009751704]}
{'': [6.938893903907229e-19, 0.216297545087483], 'false': [nan, 0.216297545087483]}
{'': [0.1611597684588304, 0.1907822079661304], 'false': [0.0, 0.22782582662125722], 'false,false': [0.22782582662125722, nan], 'true': [nan, 0.1611597684588304], 'true,false': [0.0, 0.21334488996809353]}
{'': [1.3877787807814458e-18, 0.21616845531769083], 'false': [0.21339664541817047, 0.22785908296715265], 'false,false': [nan, 0.22785908296715265], 'false,false,false': [nan, 0.22785908296715265]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(F, B).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
8;true;athleteplaysforteam(E, B).;true;true
8;false;athleteplaysforteam(F, B).;true;true
9;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true


Refining candidate
***************************
Model training time 2.785513401031494
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.41751358415830986;  // std dev = 5.16e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.3207118471601496;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.25517224256948945;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07877675473109172;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07877675473109172;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527744;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.1527438580936708;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.06427552371852137;  // std dev = 0.242, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.06419184008202619;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.13559749121557874;  // std dev = 0.017, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.0658813940580904;  // std dev = 0.011, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
Inference time using transfer learning 3.7744839191436768
Refined model CLL: -0.095765


******************************************
Best model found
******************************************
Results 

CLL : -0.099064 

AUC ROC : 0.986059 

AUC PR : 0.13314 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 2.785513401031494 

Total Inference Time : 0.6762032508850098 

Total revision time: 6.811715602874756
Best scored revision CLL: -0.095765


Results 

CLL : -0.099064 

AUC ROC : 0.986059 

AUC PR : 0.13314 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 6.968826532363892 

Total Inference Time : 0.6762032508850098 

Amount of data: 25
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 2.9602012634277344
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5160436719416167;  // std dev = 2.924, 38.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplayssport(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.4410172152320886;  // std dev = 0.474, 38.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then return 0.3569786026652371;  // std dev = 0.474, 38.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplaysforteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.2487840007804913;  // std dev = 2.509, 27.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=17 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3464270984235892;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(A, G) )
%   | | then return 0.18864735714795502;  // std dev = 2.509, 27.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=17 */
%   | | else if ( athleteplaysforteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.26209959318352444;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15765452171219826;  // std dev = 0.473, 38.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109172;  // std dev = 1.32e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( athleteplaysforteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11838237397755845;  // std dev = 2.916, 38.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08918527932921508;  // std dev = 0.473, 38.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, C), athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, B) )
%   | | then return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.06489839999472866;  // std dev = 2.682, 32.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=21 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( athleteplayssport(G, H) )
%   | | then return 0.08130403065937926;  // std dev = 1.143, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.06419184008202619;  // std dev = 5.89e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( teamplaysinleague(A, D) )
%   | then return 0.049336298668568326;  // std dev = 2.682, 32.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=21 */
%   | else if ( teamplaysinleague(A, E), athleteplayssport(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.061735766609207064;  // std dev = 1.144, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
Inference time using transfer learning 91.3308916091919
Parameter learned model CLL:-0.503573 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(A, E)', 'false,false,false': 'athleteplaysforteam(F, B)'}, {'true': [0.0, 12, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.924, 13, 25]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplayssport(A, D)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [5.27e-09, 12, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.474, 13, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'teamplaysagainstteam(F, G)'}, {'true,true': [9.13e-09, 12, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.474, 13, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'athleteplaysforteam(E, B)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(H, B)', 'false,false,false': 'athleteplayssport(A, I)'}, {'true': [0.0, 12, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [2.509, 10, 17], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.477, 3, 8]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(A, G)', 'false,false,false': 'athleteplaysforteam(H, B)'}, {'true': [0.0, 12, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.509, 10, 17], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.477, 3, 8]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)'}, {'true,true': [5.27e-09, 12, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.473, 13, 25]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(A, C), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplaysforteam(G, B)', 'false,false,false': 'athleteplayssport(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [1.32e-09, 12, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.916, 13, 25]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)'}, {'true': [3.73e-09, 12, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.473, 13, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'athleteplayssport(D, C), athleteplaysforteam(D, B)', 'true,false': 'athleteplaysforteam(E, B)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplayssport(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.63e-09, 10, 0], 'true,false,false': [2.682, 11, 21], 'false,true': [0.0, 2, 0], 'false,false,true': [1.143, 2, 4], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysinleague(A, E), athleteplayssport(F, E)', 'false,false,false': 'athleteplaysforteam(G, B)'}, {'true': [5.89e-09, 12, 0], 'false,true': [2.682, 11, 21], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.144, 2, 4]}]
{'': [-1.1564823173178714e-17, 0.2250692520775636], 'false': [nan, 0.2250692520775636], 'false,false': [nan, 0.2250692520775636], 'false,false,false': [nan, 0.2250692520775636]}
{'': [2.3129646346357427e-18, 0.22506925207756168], 'false': [nan, 0.22506925207756168], 'false,false': [0.22506925207756168, nan], 'true': [nan, 2.3129646346357427e-18]}
{'': [6.938893903907228e-18, 0.22506925207756245], 'false': [nan, 0.22506925207756245], 'false,false': [0.22506925207756245, nan], 'true': [6.938893903907228e-18, nan]}
{'': [0.0, 0.22506925207756226], 'false': [0.23319615912208513, 0.1983471074380163], 'false,true': [nan, 0.23319615912208513], 'false,true,false': [0.23319615912208513, nan], 'false,false': [nan, 0.1983471074380163], 'false,false,false': [nan, 0.1983471074380163]}
{'': [2.3129646346357427e-18, 0.22421795967382396], 'false': [nan, 0.22421795967382396], 'false,false': [0.23319615912208513, 0.1983471074380166], 'false,false,false': [nan, 0.1983471074380166]}
{'': [2.3129646346357427e-18, 0.22372841795576556], 'false': [nan, 0.22372841795576556], 'true': [2.3129646346357427e-18, nan]}
{'': [nan, 0.17713046872191807], 'false': [1.1564823173178713e-18, 0.22373719292509311], 'false,false': [nan, 0.22373719292509311], 'false,false,false': [nan, 0.22373719292509311]}
{'': [1.1564823173178713e-18, 0.2237515340511164], 'false': [nan, 0.2237515340511164]}
{'': [0.17452010876459487, 0.1676237128006196], 'true': [nan, 0.17452010876459487], 'true,false': [6.938893903907229e-19, 0.2248253436164133], 'false': [0.0, 0.21789344000728458], 'false,false': [0.21789344000728458, nan]}
{'': [2.8912057932946786e-18, 0.22376729287609173], 'false': [0.2248308948266987, 0.21796527814565927], 'false,false': [nan, 0.21796527814565927], 'false,false,false': [nan, 0.21796527814565927]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(F, B).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
8;true;athleteplaysforteam(E, B).;true;true
8;false;athleteplaysforteam(F, B).;true;true
9;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true


Refining candidate
***************************
Model training time 3.055263042449951
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.858148935099512;  // std dev = 1.03e-07, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( teamalsoknownas(E, A) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109544;  // std dev = 4.21e-08, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return -0.1329627967538569;  // std dev = 0.053, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.19410540472492188;  // std dev = 0.783, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return -0.11839735066242153;  // std dev = 0.048, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.16926580903354346;  // std dev = 0.778, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( teamalsoknownas(E, A) )
%   | | then return 0.1690079986616914;  // std dev = 0.744, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.11320707347491227;  // std dev = 0.090, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.32071184716014955;  // std dev = 2.98e-08, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return -0.10242346397813616;  // std dev = 0.083, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.14488476492631192;  // std dev = 0.736, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.08518475138839687;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2551722425694895;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( teamalsoknownas(E, A) )
%   | | then return 0.14399690907348253;  // std dev = 0.702, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.09941870654250763;  // std dev = 0.119, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07877675473109172;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.20975771563253576;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( teamalsoknownas(A, E), teamplaysagainstteam(A, F) )
%   | | then return 0.0938689312237744;  // std dev = 0.689, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.10114126052947588;  // std dev = 0.125, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527747;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return -0.08783726628583313;  // std dev = 0.117, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.12331990699038542;  // std dev = 0.666, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.15274385809367091;  // std dev = 2.36e-08, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.08114874839362347;  // std dev = 0.110, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.12795235596908597;  // std dev = 0.659, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.06419184008202619;  // std dev = 5.89e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.13436993331062402;  // std dev = 0.005, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( teamalsoknownas(E, A) )
%   | | then return 0.10984454696327874;  // std dev = 0.611, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.08327034125480938;  // std dev = 0.157, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
Inference time using transfer learning 3.9415550231933594
Refined model CLL: -0.118136


******************************************
Best model found
******************************************
Results 

CLL : -0.12615 

AUC ROC : 0.990543 

AUC PR : 0.133212 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 3.055263042449951 

Total Inference Time : 0.7775254249572754 

Total revision time: 7.723283052444458
Best scored revision CLL: -0.118136


Results 

CLL : -0.12615 

AUC ROC : 0.990543 

AUC PR : 0.133212 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 7.880393981933594 

Total Inference Time : 0.7775254249572754 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 264
Target train neg examples: 106660

Target test facts examples: 9691
Target test pos examples: 133
Target test neg examples: 53331

Amount of data: 5
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.5059661865234375
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(D, B) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( athleteplayssport(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F) )
%   | | then return 0.30583693526097183;  // std dev = 0.484, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F) )
%   | | then return 0.25397322519719473;  // std dev = 0.481, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(D, A) )
%   | then if ( athleteplaysforteam(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.21036284783501427;  // std dev = 0.944, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(B, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20047887776781437;  // std dev = 1.180, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(G, A) )
%   | | then return 0.16588544851376297;  // std dev = 0.939, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( athleteplaysforteam(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1572519965334512;  // std dev = 1.177, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12428093886454154;  // std dev = 0.475, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, A), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09510622324115296;  // std dev = 1.499, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07231763189204421;  // std dev = 0.473, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F) )
%   | | then return 0.05478291139007173;  // std dev = 1.496, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(E, A), athleteplayssport(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04140954286731688;  // std dev = 1.495, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
Inference time using transfer learning 170.4706609249115
Parameter learned model CLL:-0.640335 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(E, A)', 'false,false,false': 'athleteplaysforteam(B, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 2, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.369, 3, 5]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(B, D)', 'false,false': 'athleteplayssport(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.484, 5, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(B, D)', 'false,false': 'teamplaysagainstteam(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.481, 5, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,true': 'athleteplaysforteam(B, E)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(B, H)', 'false,false,false': 'athleteplayssport(I, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.944, 2, 2], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.18, 3, 3]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(B, D)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(G, A)', 'false,false,false': 'athleteplaysforteam(B, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.939, 2, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.177, 3, 3]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(B, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.475, 5, 5]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(C, A), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(B, F)', 'false,false': 'athleteplaysforteam(B, G)', 'false,false,false': 'athleteplayssport(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.499, 5, 5]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(B, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.473, 5, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(C, A)', 'false': 'athleteplaysforteam(B, D)', 'false,false': 'athleteplayssport(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.496, 5, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'teamplaysinleague(D, A)', 'false,false': 'teamplaysinleague(E, A), athleteplayssport(E, F)', 'false,false,false': 'athleteplaysforteam(B, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.495, 5, 5]}]
{'': [nan, 0.24999999999999983], 'false': [0.0, 0.23437499999999983], 'false,false': [nan, 0.23437499999999983], 'false,false,false': [nan, 0.23437499999999983]}
{'': [nan, 0.23400094897255735], 'false': [nan, 0.23400094897255735], 'false,false': [0.23400094897255735, nan]}
{'': [nan, 0.23096836693165726], 'false': [nan, 0.23096836693165726], 'false,false': [0.23096836693165726, nan]}
{'': [nan, 0.22852931543194582], 'false': [0.22298579713421146, 0.23218591715138623], 'false,false': [nan, 0.23218591715138623], 'false,false,false': [nan, 0.23218591715138623], 'false,true': [nan, 0.22298579713421146], 'false,true,false': [0.22298579713421146, nan]}
{'': [nan, 0.22672054060246194], 'false': [nan, 0.22672054060246194], 'false,false': [0.22065191342678606, 0.23073647745567394], 'false,false,false': [nan, 0.23073647745567394]}
{'': [nan, 0.22547203518844613], 'false': [nan, 0.22547203518844613]}
{'': [nan, 0.22465162973343178], 'false': [nan, 0.22465162973343178], 'false,false': [nan, 0.22465162973343178], 'false,false,false': [nan, 0.22465162973343178]}
{'': [nan, 0.22411475839189704], 'false': [nan, 0.22411475839189704]}
{'': [nan, 0.223764000566524], 'false': [nan, 0.223764000566524], 'false,false': [0.223764000566524, nan]}
{'': [nan, 0.22353313506794598], 'false': [nan, 0.22353313506794598], 'false,false': [nan, 0.22353313506794598], 'false,false,false': [nan, 0.22353313506794598]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(D, B).;true;true


Refining candidate
***************************
Model training time 1.4097824096679688
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning 3.1132237911224365
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results 

CLL : -0.099192 

AUC ROC : 0.991093 

AUC PR : 0.122807 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 1.4097824096679688 

Total Inference Time : 0.6419968605041504 

Total revision time: 4.315387487411499
Best scored revision CLL: -0.094637


Results 

CLL : -0.099192 

AUC ROC : 0.991093 

AUC PR : 0.122807 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 4.472498416900635 

Total Inference Time : 0.6419968605041504 

Amount of data: 10
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.8049707412719727
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5724346493852266;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplayssport(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.4876778839172629;  // std dev = 0.452, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then return 0.3912569620992537;  // std dev = 0.452, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783627;  // std dev = 1.32e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplaysforteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.3862854405027751;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2529521071694418;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(A, G) )
%   | | then return 0.2905873781727453;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( athleteplaysforteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1905680353359137;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17000001083479388;  // std dev = 0.449, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( athleteplaysforteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1283734318902505;  // std dev = 1.679, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09769855369575511;  // std dev = 0.449, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, C), athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, B) )
%   | | then return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.10305535406573359;  // std dev = 1.227, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(G, H) )
%   | | then return 0.037463156263882046;  // std dev = 1.140, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( teamplaysinleague(A, D) )
%   | then return 0.07995761510820666;  // std dev = 1.227, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( teamplaysinleague(A, E), athleteplayssport(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.028780376809949233;  // std dev = 1.140, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
Inference time using transfer learning 93.59222936630249
Parameter learned model CLL:-0.435594 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(A, E)', 'false,false,false': 'athleteplaysforteam(F, B)'}, {'true': [0.0, 6, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.69, 4, 10]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplayssport(A, D)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 6, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.452, 4, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'teamplaysagainstteam(F, G)'}, {'true,true': [0.0, 6, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.452, 4, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'athleteplaysforteam(E, B)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(H, B)', 'false,false,false': 'athleteplayssport(A, I)'}, {'true': [1.32e-09, 6, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.894, 1, 4], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.414, 3, 6]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(A, G)', 'false,false,false': 'athleteplaysforteam(H, B)'}, {'true': [0.0, 6, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.894, 1, 4], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.414, 3, 6]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)'}, {'true,true': [2.63e-09, 6, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.449, 4, 10]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(A, C), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplaysforteam(G, B)', 'false,false,false': 'athleteplayssport(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 6, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.679, 4, 10]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)'}, {'true': [0.0, 6, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.449, 4, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'athleteplayssport(D, C), athleteplaysforteam(D, B)', 'true,false': 'athleteplaysforteam(E, B)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplayssport(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [1.86e-09, 5, 0], 'true,false,false': [1.227, 2, 6], 'false,true': [0.0, 1, 0], 'false,false,true': [1.14, 2, 4], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysinleague(A, E), athleteplayssport(F, E)', 'false,false,false': 'athleteplaysforteam(G, B)'}, {'true': [0.0, 6, 0], 'false,true': [1.227, 2, 6], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.14, 2, 4]}]
{'': [-6.938893903907228e-18, 0.20408163265306115], 'false': [nan, 0.20408163265306115], 'false,false': [nan, 0.20408163265306115], 'false,false,false': [nan, 0.20408163265306115]}
{'': [-2.3129646346357427e-18, 0.20408163265306115], 'false': [nan, 0.20408163265306115], 'false,false': [0.20408163265306115, nan], 'true': [nan, -2.3129646346357427e-18]}
{'': [0.0, 0.20408163265306123], 'false': [nan, 0.20408163265306123], 'false,false': [0.20408163265306123, nan], 'true': [0.0, nan]}
{'': [0.0, 0.20408163265306126], 'false': [0.16, 0.22222222222222215], 'false,false': [nan, 0.22222222222222215], 'false,false,false': [nan, 0.22222222222222215], 'false,true': [nan, 0.16], 'false,true,false': [0.16, nan]}
{'': [1.1564823173178713e-18, 0.20229680664473484], 'false': [nan, 0.20229680664473484], 'false,false': [0.16000000000000003, 0.2222222222222222], 'false,false,false': [nan, 0.2222222222222222]}
{'': [1.1564823173178713e-18, 0.20131589326517768], 'false': [nan, 0.20131589326517768], 'true': [1.1564823173178713e-18, nan]}
{'': [nan, 0.14996732433172316], 'false': [-1.1564823173178713e-18, 0.20136567481442746], 'false,false': [nan, 0.20136567481442746], 'false,false,false': [nan, 0.20136567481442746]}
{'': [0.0, 0.20142128375117233], 'false': [nan, 0.20142128375117233]}
{'': [0.12278046516294815, 0.18711751067598661], 'false': [0.0, 0.21670194524082798], 'false,false': [0.21670194524082798, nan], 'true': [nan, 0.12278046516294815], 'true,false': [6.938893903907229e-19, 0.1882081827523794]}
{'': [-5.782411586589357e-19, 0.2010603779665978], 'false': [0.18816337603081734, 0.21675974642201748], 'false,false': [nan, 0.21675974642201748], 'false,false,false': [nan, 0.21675974642201748]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(F, B).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
8;true;athleteplaysforteam(E, B).;true;true
8;false;athleteplaysforteam(F, B).;true;true
9;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true


Refining candidate
***************************
Model training time 1.6028876304626465
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( teamalsoknownas(A, E) )
%   | | then return 0.005296634135088509;  // std dev = 0.181, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.07902024611437974;  // std dev = 0.255, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.13932778220654454;  // std dev = 0.019, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.0712022617366313;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning 3.728318691253662
Refined model CLL: -0.098385


******************************************
Best model found
******************************************
Results 

CLL : -0.104814 

AUC ROC : 0.990559 

AUC PR : 0.114453 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 1.6028876304626465 

Total Inference Time : 0.6706910133361816 

Total revision time: 4.876777410507202
Best scored revision CLL: -0.098385


Results 

CLL : -0.104814 

AUC ROC : 0.990559 

AUC PR : 0.114453 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 5.033888339996338 

Total Inference Time : 0.6706910133361816 

Amount of data: 15
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 2.1995513439178467
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5399671169176942;  // std dev = 2.185, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplayssport(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.46084995018555497;  // std dev = 0.466, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then return 0.371617857245754;  // std dev = 0.466, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783627;  // std dev = 1.32e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplaysforteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.4052920813379651;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18862541467129826;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(A, G) )
%   | | then return 0.30556801839536885;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( athleteplaysforteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14278566219594074;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1629409718012829;  // std dev = 0.457, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( athleteplaysforteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12283064358967319;  // std dev = 2.145, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0930621668186919;  // std dev = 0.457, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, C), athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, B) )
%   | | then return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.12010668275359232;  // std dev = 1.507, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(G, H) )
%   | | then return 0.011889844810537831;  // std dev = 1.507, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysinleague(A, D) )
%   | then return 0.09277320670628435;  // std dev = 1.507, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | else if ( teamplaysinleague(A, E), athleteplayssport(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.009027929524105537;  // std dev = 1.507, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
Inference time using transfer learning 90.3796033859253
Parameter learned model CLL:-0.462986 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(A, E)', 'false,false,false': 'athleteplaysforteam(F, B)'}, {'true': [0.0, 8, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.185, 7, 15]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplayssport(A, D)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 8, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.466, 7, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'teamplaysagainstteam(F, G)'}, {'true,true': [0.0, 8, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.466, 7, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'athleteplaysforteam(E, B)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(H, B)', 'false,false,false': 'athleteplayssport(A, I)'}, {'true': [1.32e-09, 8, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.265, 2, 8], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.708, 5, 7]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(A, G)', 'false,false,false': 'athleteplaysforteam(H, B)'}, {'true': [0.0, 8, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.265, 2, 8], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.708, 5, 7]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)'}, {'true,true': [3.73e-09, 8, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.457, 7, 15]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(A, C), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplaysforteam(G, B)', 'false,false,false': 'athleteplayssport(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 8, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.145, 7, 15]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)'}, {'true': [2.63e-09, 8, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.457, 7, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'athleteplayssport(D, C), athleteplaysforteam(D, B)', 'true,false': 'athleteplaysforteam(E, B)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplayssport(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.63e-09, 7, 0], 'true,false,false': [1.507, 3, 9], 'false,true': [0.0, 1, 0], 'false,false,true': [1.507, 4, 6], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysinleague(A, E), athleteplayssport(F, E)', 'false,false,false': 'athleteplaysforteam(G, B)'}, {'true': [0.0, 8, 0], 'false,true': [1.507, 3, 9], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.507, 4, 6]}]
{'': [-6.938893903907228e-18, 0.21694214876033016], 'false': [nan, 0.21694214876033016], 'false,false': [nan, 0.21694214876033016], 'false,false,false': [nan, 0.21694214876033016]}
{'': [0.0, 0.2169421487603304], 'false': [nan, 0.2169421487603304], 'false,false': [0.2169421487603304, nan], 'true': [nan, 0.0]}
{'': [-1.734723475976807e-18, 0.21694214876033022], 'false': [nan, 0.21694214876033022], 'false,false': [0.21694214876033022, nan], 'true': [-1.734723475976807e-18, nan]}
{'': [1.734723475976807e-18, 0.21694214876033052], 'false': [0.15999999999999984, 0.2430555555555555], 'false,false': [nan, 0.2430555555555555], 'false,false,false': [nan, 0.2430555555555555], 'false,true': [nan, 0.15999999999999984], 'false,true,false': [0.15999999999999984, nan]}
{'': [0.0, 0.21187280604431227], 'false': [nan, 0.21187280604431227], 'false,false': [0.1599999999999999, 0.24305555555555547], 'false,false,false': [nan, 0.24305555555555547]}
{'': [1.734723475976807e-18, 0.20901101350282267], 'false': [nan, 0.20901101350282267], 'true': [1.734723475976807e-18, nan]}
{'': [nan, 0.1612822428541597], 'false': [0.0, 0.20909151968271855], 'false,false': [nan, 0.20909151968271855], 'false,false,false': [nan, 0.20909151968271855]}
{'': [8.673617379884035e-19, 0.2092006965397111], 'false': [nan, 0.2092006965397111]}
{'': [0.12781703148222912, 0.20685766601789116], 'false': [0.0, 0.22695699698319358], 'false,false': [0.22695699698319358, nan], 'true': [nan, 0.12781703148222912], 'true,false': [9.912705577010326e-19, 0.189281461868854]}
{'': [0.0, 0.20810194362256887], 'false': [0.18917445914573702, 0.2269895042036834], 'false,false': [nan, 0.2269895042036834], 'false,false,false': [nan, 0.2269895042036834]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(F, B).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
8;true;athleteplaysforteam(E, B).;true;true
8;false;athleteplaysforteam(F, B).;true;true
9;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true


Refining candidate
***************************
Model training time 1.9697158336639404
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.4175135841583098;  // std dev = 4.71e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2551722425694894;  // std dev = 2.36e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527741;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.15274385809367075;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.15274385809367075;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
Inference time using transfer learning 3.678070068359375
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results 

CLL : -0.099192 

AUC ROC : 0.991093 

AUC PR : 0.122807 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 1.9697158336639404 

Total Inference Time : 0.6494405269622803 

Total revision time: 5.663920164108276
Best scored revision CLL: -0.094637


Results 

CLL : -0.099192 

AUC ROC : 0.991093 

AUC PR : 0.122807 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 5.821031093597412 

Total Inference Time : 0.6494405269622803 

Amount of data: 20
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 2.4525699615478516
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5478041075133049;  // std dev = 2.491, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplayssport(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.4673349216153254;  // std dev = 0.463, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then return 0.37638199006737755;  // std dev = 0.463, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplaysforteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.38643739667748533;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20072311096319953;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(A, G) )
%   | | then return 0.291224458663118;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | else if ( athleteplaysforteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1517529523269348;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16460220679834855;  // std dev = 0.456, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109172;  // std dev = 1.32e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( athleteplaysforteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1240783577465035;  // std dev = 2.457, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09406764273033047;  // std dev = 0.456, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, C), athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, B) )
%   | | then return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.09451826833847718;  // std dev = 1.905, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(G, H) )
%   | | then return 0.034538686232038686;  // std dev = 1.546, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.06419184008202619;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamplaysinleague(A, D) )
%   | then return 0.0728361719116326;  // std dev = 1.904, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | else if ( teamplaysinleague(A, E), athleteplayssport(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.026331531686611932;  // std dev = 1.547, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
Inference time using transfer learning 90.68921113014221
Parameter learned model CLL:-0.459354 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(A, E)', 'false,false,false': 'athleteplaysforteam(F, B)'}, {'true': [0.0, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.491, 9, 20]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplayssport(A, D)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [5.27e-09, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.463, 9, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'teamplaysagainstteam(F, G)'}, {'true,true': [7.45e-09, 11, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.463, 9, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'athleteplaysforteam(E, B)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(H, B)', 'false,false,false': 'athleteplayssport(A, I)'}, {'true': [0.0, 11, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.535, 3, 11], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.897, 6, 9]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(A, G)', 'false,false,false': 'athleteplaysforteam(H, B)'}, {'true': [0.0, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.535, 3, 11], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.897, 6, 9]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)'}, {'true,true': [5.27e-09, 11, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.456, 9, 20]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(A, C), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplaysforteam(G, B)', 'false,false,false': 'athleteplayssport(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [1.32e-09, 11, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.457, 9, 20]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)'}, {'true': [2.63e-09, 11, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.456, 9, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'athleteplayssport(D, C), athleteplaysforteam(D, B)', 'true,false': 'athleteplaysforteam(E, B)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplayssport(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.63e-09, 10, 0], 'true,false,false': [1.905, 5, 13], 'false,true': [0.0, 1, 0], 'false,false,true': [1.546, 4, 7], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysinleague(A, E), athleteplayssport(F, E)', 'false,false,false': 'athleteplaysforteam(G, B)'}, {'true': [5.27e-09, 11, 0], 'false,true': [1.904, 5, 13], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.547, 4, 7]}]
{'': [-1.0092936587501423e-17, 0.21403091557669457], 'false': [nan, 0.21403091557669457], 'false,false': [nan, 0.21403091557669457], 'false,false,false': [nan, 0.21403091557669457]}
{'': [2.523234146875356e-18, 0.21403091557669504], 'false': [nan, 0.21403091557669504], 'false,false': [0.21403091557669504, nan], 'true': [nan, 2.523234146875356e-18]}
{'': [5.046468293750712e-18, 0.21403091557669462], 'false': [nan, 0.21403091557669462], 'false,false': [0.21403091557669462, nan], 'true': [5.046468293750712e-18, nan]}
{'': [0.0, 0.21403091557669413], 'false': [0.16836734693877534, 0.23999999999999994], 'false,false': [nan, 0.23999999999999994], 'false,false,false': [nan, 0.23999999999999994], 'false,true': [nan, 0.16836734693877534], 'false,true,false': [0.16836734693877534, nan]}
{'': [0.0, 0.21027601199034063], 'false': [nan, 0.21027601199034063], 'false,false': [0.1683673469387756, 0.23999999999999996], 'false,false,false': [nan, 0.23999999999999996]}
{'': [2.523234146875356e-18, 0.20816251893335713], 'false': [nan, 0.20816251893335713], 'true': [2.523234146875356e-18, nan]}
{'': [nan, 0.15916931058853176], 'false': [0.0, 0.2082275725928051], 'false,false': [nan, 0.2082275725928051], 'false,false,false': [nan, 0.2082275725928051]}
{'': [6.30808536718839e-19, 0.208313191957912], 'false': [nan, 0.208313191957912]}
{'': [0.13565428230608453, 0.20008938576731036], 'false': [0.0, 0.21739583592975317], 'false,false': [0.21739583592975317, nan], 'true': [nan, 0.13565428230608453], 'true,false': [6.938893903907229e-19, 0.20153521774272637]}
{'': [2.523234146875356e-18, 0.20806751354344213], 'false': [0.20147993006965656, 0.21750484151820448], 'false,false': [nan, 0.21750484151820448], 'false,false,false': [nan, 0.21750484151820448]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(F, B).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
8;true;athleteplaysforteam(E, B).;true;true
8;false;athleteplaysforteam(F, B).;true;true
9;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true


Refining candidate
***************************
Model training time 2.424802780151367
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( teamalsoknownas(A, E) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109542;  // std dev = 7.30e-08, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( teamplaysagainstteam(A, E), teamalsoknownas(E, F) )
%   | | then return 0.19410540472492188;  // std dev = 0.783, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.1372588871684086;  // std dev = 0.049, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( teamplaysagainstteam(A, E), teamalsoknownas(E, F) )
%   | | then return 0.16926580903354346;  // std dev = 0.778, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.1218400983847209;  // std dev = 0.045, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.4175135841583098;  // std dev = 5.58e-08, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( teamalsoknownas(A, E) )
%   | | then return 0.16960770375638226;  // std dev = 0.743, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.12004968477207555;  // std dev = 0.085, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.3207118471601496;  // std dev = 2.58e-08, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( teamplaysagainstteam(A, E), teamalsoknownas(E, F) )
%   | | then return 0.14544466328187403;  // std dev = 0.735, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.10806345162347082;  // std dev = 0.078, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.25517224256948945;  // std dev = 1.49e-08, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( teamalsoknownas(A, E) )
%   | | then return 0.14495581264617097;  // std dev = 0.701, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.1077425909648665;  // std dev = 0.112, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07877675473109172;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return -0.14236882325434347;  // std dev = 0.077, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.07870297634035836;  // std dev = 0.680, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527744;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( teamalsoknownas(A, E) )
%   | | then return 0.12891946928152295;  // std dev = 0.662, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.0946472005131775;  // std dev = 0.079, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.1527438580936708;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.12701870162762235;  // std dev = 0.081, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamplaysagainstteam(A, G) )
%   | | then return 0.31532777644735543;  // std dev = 0.398, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( athleteplayssport(H, B) )
%   | | | then return 0.15274385809367075;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.07224195487410473;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.06419184008202619;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.13213638449815474;  // std dev = 0.024, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( teamplaysagainstteam(A, E), teamalsoknownas(E, F) )
%   | | then return 0.11064659072541867;  // std dev = 0.557, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.0865167654845503;  // std dev = 0.093, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
Inference time using transfer learning 4.153619289398193
Refined model CLL: -0.11752


******************************************
Best model found
******************************************
Results 

CLL : -0.135803 

AUC ROC : 0.991333 

AUC PR : 0.132541 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 2.424802780151367 

Total Inference Time : 0.6325864791870117 

Total revision time: 6.451881647109985
Best scored revision CLL: -0.11752


Results 

CLL : -0.135803 

AUC ROC : 0.991333 

AUC PR : 0.132541 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 6.608992576599121 

Total Inference Time : 0.6325864791870117 

Amount of data: 25
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 2.7901668548583984
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5338246107751872;  // std dev = 2.847, 37.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplayssport(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.45576301035379385;  // std dev = 0.468, 37.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then return 0.3678730484528311;  // std dev = 0.468, 37.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplaysforteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.38664171351457094;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18781130415784586;  // std dev = 2.152, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926096;  // std dev = 1.32e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(A, G) )
%   | | then return 0.2917485445039852;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | else if ( athleteplaysforteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14228725354384555;  // std dev = 2.152, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16154310934499896;  // std dev = 0.461, 37.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109172;  // std dev = 9.31e-10, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( athleteplaysforteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12166772306770877;  // std dev = 2.804, 37.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09205668898417349;  // std dev = 0.461, 37.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, C), athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, B) )
%   | | then return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.10495004735473216;  // std dev = 2.247, 25.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplayssport(G, H) )
%   | | then return -0.002713921342051654;  // std dev = 1.651, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.06419184008202619;  // std dev = 6.97e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( teamplaysinleague(A, D) )
%   | then return 0.08058692219443117;  // std dev = 2.247, 25.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else if ( teamplaysinleague(A, E), athleteplayssport(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.002058878816768676;  // std dev = 1.651, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
Inference time using transfer learning 92.43333601951599
Parameter learned model CLL:-0.472219 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(A, E)', 'false,false,false': 'athleteplaysforteam(F, B)'}, {'true': [0.0, 13, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.847, 12, 25]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplayssport(A, D)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [7.45e-09, 13, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.468, 12, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'teamplaysagainstteam(F, G)'}, {'true,true': [1.05e-08, 13, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.468, 12, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'athleteplaysforteam(E, B)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(H, B)', 'false,false,false': 'athleteplayssport(A, I)'}, {'true': [0.0, 13, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.764, 4, 14], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.152, 8, 11]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(A, G)', 'false,false,false': 'athleteplaysforteam(H, B)'}, {'true': [1.32e-09, 13, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.764, 4, 14], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.152, 8, 11]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)'}, {'true,true': [7.45e-09, 13, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.461, 12, 25]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(A, C), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplaysforteam(G, B)', 'false,false,false': 'athleteplayssport(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [9.31e-10, 13, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.804, 12, 25]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)'}, {'true': [0.0, 13, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.461, 12, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'athleteplayssport(D, C), athleteplaysforteam(D, B)', 'true,false': 'athleteplaysforteam(E, B)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplayssport(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.63e-09, 10, 0], 'true,false,false': [2.247, 7, 18], 'false,true': [0.0, 3, 0], 'false,false,true': [1.651, 5, 7], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysinleague(A, E), athleteplayssport(F, E)', 'false,false,false': 'athleteplaysforteam(G, B)'}, {'true': [6.97e-09, 13, 0], 'false,true': [2.247, 7, 18], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.651, 5, 7]}]
{'': [-1.2810265668751807e-17, 0.21913805697589603], 'false': [nan, 0.21913805697589603], 'false,false': [nan, 0.21913805697589603], 'false,false,false': [nan, 0.21913805697589603]}
{'': [4.270088556250602e-18, 0.21913805697589483], 'false': [nan, 0.21913805697589483], 'false,false': [0.21913805697589483, nan], 'true': [nan, 4.270088556250602e-18]}
{'': [8.540177112501205e-18, 0.21913805697589542], 'false': [nan, 0.21913805697589542], 'false,false': [0.21913805697589542, nan], 'true': [8.540177112501205e-18, nan]}
{'': [-2.135044278125301e-18, 0.21913805697589517], 'false': [0.17283950617283944, 0.2437673130193904], 'false,false': [nan, 0.2437673130193904], 'false,false,false': [nan, 0.2437673130193904], 'false,true': [nan, 0.17283950617283944], 'false,true,false': [0.17283950617283944, nan]}
{'': [2.135044278125301e-18, 0.2148424834676363], 'false': [nan, 0.2148424834676363], 'false,false': [0.17283950617283939, 0.24376731301939056], 'false,false,false': [nan, 0.24376731301939056]}
{'': [4.270088556250602e-18, 0.21239889800334438], 'false': [nan, 0.21239889800334438], 'true': [4.270088556250602e-18, nan]}
{'': [nan, 0.16494634652068257], 'false': [1.0675221390626506e-18, 0.212454191214384], 'false,false': [nan, 0.212454191214384], 'false,false,false': [nan, 0.212454191214384]}
{'': [0.0, 0.2125365542145101], 'false': [nan, 0.2125365542145101]}
{'': [0.1503647125317523, 0.18235453635273693], 'false': [-5.782411586589357e-19, 0.22707952928195016], 'false,false': [0.22707952928195016, nan], 'true': [nan, 0.1503647125317523], 'true,false': [6.938893903907229e-19, 0.20192214243964404]}
{'': [3.736327486719277e-18, 0.2115431407968151], 'false': [0.20187450707125024, 0.22707104095157338], 'false,false': [nan, 0.22707104095157338], 'false,false,false': [nan, 0.22707104095157338]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(F, B).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
8;true;athleteplaysforteam(E, B).;true;true
8;false;athleteplaysforteam(F, B).;true;true
9;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true


Refining candidate
***************************
Model training time 2.548820734024048
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.858148935099512;  // std dev = 1.03e-07, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( teamalsoknownas(E, A) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109544;  // std dev = 4.21e-08, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( teamplaysagainstteam(A, E), teamalsoknownas(E, F) )
%   | | then return 0.19410540472492188;  // std dev = 0.783, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.13371461257640344;  // std dev = 0.052, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( teamplaysagainstteam(A, E), teamalsoknownas(E, F) )
%   | | then return 0.16926580903354346;  // std dev = 0.778, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.1190015133675542;  // std dev = 0.047, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( teamalsoknownas(E, A) )
%   | | then return 0.16911332276786636;  // std dev = 0.744, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.11439371129247677;  // std dev = 0.090, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.32071184716014955;  // std dev = 2.98e-08, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( teamplaysagainstteam(A, E), teamalsoknownas(E, F) )
%   | | then return 0.1449819812600397;  // std dev = 0.736, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.10340626422504962;  // std dev = 0.082, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2551722425694895;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( teamalsoknownas(E, A) )
%   | | then return 0.1441651967281161;  // std dev = 0.702, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.10086578890863895;  // std dev = 0.118, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.20975771563253576;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( teamalsoknownas(E, A) )
%   | | then return 0.12177076239572056;  // std dev = 0.692, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.09220394645101242;  // std dev = 0.109, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527747;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( teamplaysagainstteam(A, E), teamalsoknownas(E, F) )
%   | | then return 0.12067559345368394;  // std dev = 0.661, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.09064217511331243;  // std dev = 0.138, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.15274385809367091;  // std dev = 2.11e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( athleteledsportsteam(F, A), athleteplaysinleague(F, G) )
%   | | | then return -0.0971919014860186;  // std dev = 0.083, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.13967901525775447;  // std dev = 0.088, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplaysforteam(H, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysagainstteam(A, I) )
%   | | then return 0.3127774355151714;  // std dev = 0.392, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( athleteplayssport(J, B) )
%   | | | then return 0.15274385809367097;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.06320511760137987;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.06419184008202619;  // std dev = 6.97e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.1325479556946068;  // std dev = 0.024, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then if ( athleteplaysinleague(F, E), athleteledsportsteam(F, A) )
%   | | | then return -0.08919137200627349;  // std dev = 0.077, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.12395491433610312;  // std dev = 0.079, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.04330594547825518;  // std dev = 0.563, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
Inference time using transfer learning 5.998252630233765
Refined model CLL: -0.113467


******************************************
Best model found
******************************************
Results 

CLL : -0.134848 

AUC ROC : 0.991333 

AUC PR : 0.132541 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 2.548820734024048 

Total Inference Time : 0.6748642921447754 

Total revision time: 6.951425552368164
Best scored revision CLL: -0.113467


Results 

CLL : -0.134848 

AUC ROC : 0.991333 

AUC PR : 0.132541 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 7.1085364818573 

Total Inference Time : 0.6748642921447754 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 266
Target train neg examples: 106662

Target test facts examples: 9691
Target test pos examples: 131
Target test neg examples: 53329

Amount of data: 5
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.589909553527832
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3581489350995123;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F) )
%   | | then return 0.30874113578563506;  // std dev = 0.500, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F) )
%   | | then return 0.2564123687585864;  // std dev = 0.500, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(D, A) )
%   | then if ( athleteplaysforteam(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return -0.2938625926554603;  // std dev = 7.45e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(B, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.42042312163025397;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(G, A) )
%   | | then return -0.2367537489080538;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( athleteplaysforteam(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3264157124824993;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11369597453240773;  // std dev = 0.429, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, A), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08825609938744429;  // std dev = 1.350, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06823230049635358;  // std dev = 0.426, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F) )
%   | | then return 0.05262889705459182;  // std dev = 1.343, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(E, A), athleteplayssport(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04054075453157997;  // std dev = 1.341, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
Inference time using transfer learning 174.12302041053772
Parameter learned model CLL:-0.545427 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(E, A)', 'false,false,false': 'athleteplaysforteam(B, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.581, 5, 5]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(B, D)', 'false,false': 'athleteplayssport(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.5, 5, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(B, D)', 'false,false': 'teamplaysagainstteam(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.5, 5, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,true': 'athleteplaysforteam(B, E)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(B, H)', 'false,false,false': 'athleteplayssport(I, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [7.45e-09, 3, 0], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.195, 2, 5]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(B, D)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(G, A)', 'false,false,false': 'athleteplaysforteam(B, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.27e-09, 3, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.195, 2, 5]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(B, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.429, 5, 5]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(C, A), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(B, F)', 'false,false': 'athleteplaysforteam(B, G)', 'false,false,false': 'athleteplayssport(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.35, 5, 5]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(B, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.426, 5, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(C, A)', 'false': 'athleteplaysforteam(B, D)', 'false,false': 'athleteplayssport(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.343, 5, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'teamplaysinleague(D, A)', 'false,false': 'teamplaysinleague(E, A), athleteplayssport(E, F)', 'false,false,false': 'athleteplaysforteam(B, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.341, 5, 5]}]
{'': [nan, 0.24999999999999983], 'false': [nan, 0.24999999999999983], 'false,false': [nan, 0.24999999999999983], 'false,false,false': [nan, 0.24999999999999983]}
{'': [nan, 0.24999999999999994], 'false': [nan, 0.24999999999999994], 'false,false': [0.24999999999999994, nan]}
{'': [nan, 0.25000000000000006], 'false': [nan, 0.25000000000000006], 'false,false': [0.25000000000000006, nan]}
{'': [nan, 0.24999999999999992], 'false': [1.850371707708594e-17, 0.20408163265306117], 'false,false': [nan, 0.20408163265306117], 'false,false,false': [nan, 0.20408163265306117], 'false,true': [nan, 1.850371707708594e-17], 'false,true,false': [1.850371707708594e-17, nan]}
{'': [nan, 0.20946070972815717], 'false': [nan, 0.20946070972815717], 'false,false': [9.25185853854297e-18, 0.20408163265306115], 'false,false,false': [nan, 0.20408163265306115]}
{'': [nan, 0.18413698562355693], 'false': [nan, 0.18413698562355693]}
{'': [nan, 0.18233308471184564], 'false': [nan, 0.18233308471184564], 'false,false': [nan, 0.18233308471184564], 'false,false,false': [nan, 0.18233308471184564]}
{'': [nan, 0.18110910598687752], 'false': [nan, 0.18110910598687752]}
{'': [nan, 0.18027419822062735], 'false': [nan, 0.18027419822062735], 'false,false': [0.18027419822062735, nan]}
{'': [nan, 0.17969881538886917], 'false': [nan, 0.17969881538886917], 'false,false': [nan, 0.17969881538886917], 'false,false,false': [nan, 0.17969881538886917]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
3;;teamplayssport(A, B) :- teamplaysagainstteam(D, A).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(E, F), teamplaysagainstteam(G, A).;true;true


Refining candidate
***************************
Model training time 2.039778470993042
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5851860008555361;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return -0.19890208353793024;  // std dev = 0.212, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysinleague(A, D), athleteplayssport(E, B) )
%   | then return 0.627926505773422;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.25780506378990786;  // std dev = 0.740, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return -0.17160802746415868;  // std dev = 0.190, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysinleague(A, D), athleteplayssport(E, B) )
%   | then return 0.4738751192217358;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2126473412700317;  // std dev = 0.707, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D), teamplaysagainstteam(E, A) )
%   then return -0.15032912895732745;  // std dev = 0.171, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysinleague(A, F), athleteplayssport(G, B) )
%   | then return 0.35928474691333445;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.17239674091353674;  // std dev = 0.682, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2540047790396533;  // std dev = 0.600, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.1319356999603604;  // std dev = 0.124, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.20034677868313322;  // std dev = 0.593, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11798287640542594;  // std dev = 0.112, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return -0.1557601910486174;  // std dev = 0.246, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysinleague(A, D), athleteplayssport(E, B) )
%   | then return 0.1990717270564617;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.10125074954587576;  // std dev = 0.518, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.14342870991412535;  // std dev = 0.542, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.1097394987935243;  // std dev = 0.124, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return -0.14659120329694506;  // std dev = 0.254, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysinleague(A, D) )
%   | then return 0.07331998200553339;  // std dev = 0.266, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.1518086036803911;  // std dev = 0.378, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
Inference time using transfer learning 61.14441132545471
Refined model CLL: -0.193969


******************************************
Best model found
******************************************
Results 

CLL : -0.115235 

AUC ROC : 0.985233 

AUC PR : 0.12009 

Precision : 0.123711 

Recall : 0.458015 

F1 : 0.194805 

Total Learning Time : 2.039778470993042 

Total Inference Time : 0.7006251811981201 

Total revision time: 5.107828855514526
Best scored revision CLL: -0.193969


Results 

CLL : -0.115235 

AUC ROC : 0.985233 

AUC PR : 0.12009 

Precision : 0.123711 

Recall : 0.458015 

F1 : 0.194805 

Total Learning Time : 5.264939785003662 

Total Inference Time : 0.7006251811981201 

Amount of data: 10
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.8664796352386475
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.44638422921715937;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplayssport(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.382955427940009;  // std dev = 0.492, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then return 0.3134863926750183;  // std dev = 0.492, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplaysforteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.10306971457214464;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4086252701277002;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926094;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(A, G) )
%   | | then return 0.07953172421955085;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( athleteplaysforteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.31181924940376193;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14245235185804522;  // std dev = 0.476, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplaysforteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10767503135360401;  // std dev = 1.962, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08124568355069028;  // std dev = 0.476, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, C), athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, B) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.0229930913809593;  // std dev = 1.714, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(G, H) )
%   | | then return 0.18588465859346912;  // std dev = 0.911, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysinleague(A, D) )
%   | then return 0.017348894510813784;  // std dev = 1.714, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | else if ( teamplaysinleague(A, E), athleteplayssport(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1414408607124715;  // std dev = 0.910, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
Inference time using transfer learning 91.09803247451782
Parameter learned model CLL:-0.554283 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(A, E)', 'false,false,false': 'athleteplaysforteam(F, B)'}, {'true': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.029, 7, 10]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplayssport(A, D)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.492, 7, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'teamplaysagainstteam(F, G)'}, {'true,true': [2.63e-09, 3, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.492, 7, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'athleteplaysforteam(E, B)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(H, B)', 'false,false,false': 'athleteplayssport(A, I)'}, {'true': [0.0, 3, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.491, 5, 4], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.225, 2, 6]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(A, G)', 'false,false,false': 'athleteplaysforteam(H, B)'}, {'true': [1.32e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.491, 5, 4], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.225, 2, 6]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)'}, {'true,true': [0.0, 3, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.476, 7, 10]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(A, C), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplaysforteam(G, B)', 'false,false,false': 'athleteplayssport(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 3, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.962, 7, 10]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)'}, {'true': [1.86e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.476, 7, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'athleteplayssport(D, C), athleteplaysforteam(D, B)', 'true,false': 'athleteplaysforteam(E, B)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplayssport(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 3, 0], 'true,false,false': [1.714, 6, 7], 'false,true': [0.0, 0, 0], 'false,false,true': [0.911, 1, 3], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysinleague(A, E), athleteplayssport(F, E)', 'false,false,false': 'athleteplaysforteam(G, B)'}, {'true': [1.32e-09, 3, 0], 'false,true': [1.714, 6, 7], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.91, 1, 3]}]
{'': [0.0, 0.24221453287197228], 'false': [nan, 0.24221453287197228], 'false,false': [nan, 0.24221453287197228], 'false,false,false': [nan, 0.24221453287197228]}
{'': [0.0, 0.2422145328719721], 'false': [nan, 0.2422145328719721], 'false,false': [0.2422145328719721, nan], 'true': [nan, 0.0]}
{'': [2.3129646346357427e-18, 0.24221453287197214], 'false': [nan, 0.24221453287197214], 'false,false': [0.24221453287197214, nan], 'true': [2.3129646346357427e-18, nan]}
{'': [-1.1564823173178713e-18, 0.24221453287197225], 'false': [0.2469135802469136, 0.1875], 'false,true': [nan, 0.2469135802469136], 'false,true,false': [0.2469135802469136, nan], 'false,false': [nan, 0.1875], 'false,false,false': [nan, 0.1875]}
{'': [2.3129646346357427e-18, 0.2323969459218843], 'false': [nan, 0.2323969459218843], 'false,false': [0.2469135802469136, 0.1875], 'false,false,false': [nan, 0.1875]}
{'': [0.0, 0.22643456985195534], 'false': [nan, 0.22643456985195534], 'true': [0.0, nan]}
{'': [nan, 0.19681060938877132], 'false': [0.0, 0.22632725311842852], 'false,false': [nan, 0.22632725311842852], 'false,false,false': [nan, 0.22632725311842852]}
{'': [1.1564823173178713e-18, 0.22632158891980272], 'false': [nan, 0.22632158891980272]}
{'': [0.1848420633159966, 0.2074659757765322], 'false': [nan, 0.2074659757765322], 'false,false': [0.2074659757765322, nan], 'true': [nan, 0.1848420633159966], 'true,false': [-5.782411586589357e-19, 0.22593086863301404]}
{'': [5.782411586589357e-19, 0.2242711432492716], 'false': [0.22595931356728152, 0.20700902448130892], 'false,false': [nan, 0.20700902448130892], 'false,false,false': [nan, 0.20700902448130892]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(F, B).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
8;true;athleteplaysforteam(E, B).;true;true
9;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true


Refining candidate
***************************
Model training time 7.652404546737671
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamalsoknownas(A, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E), athleteledsportsteam(F, E) )
%   | | then return 0.40685858799906804;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7350122940520397;  // std dev = 0.076, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E), athleteledsportsteam(F, E) )
%   | | then return 0.3218969203777237;  // std dev = 0.756, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.571607705529837;  // std dev = 0.098, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamalsoknownas(A, E) )
%   | | then return 0.20586338784497019;  // std dev = 0.701, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( athleteplaysforteam(D, A) )
%   | | | then return 0.5053173474175024;  // std dev = 0.117, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4098056335126702;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(E, A), teamalsoknownas(F, E) )
%   | | then return 0.155628655647001;  // std dev = 0.667, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( teamplaysinleague(A, G) )
%   | | | then return 0.3748482091601538;  // std dev = 0.119, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.35731093785052953;  // std dev = 0.102, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(A, D), teamalsoknownas(A, E) )
%   | then return -0.20808887195420647;  // std dev = 0.301, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplayssport(F, B) )
%   | | then if ( teamplaysagainstteam(A, G), teamalsoknownas(G, H) )
%   | | | then return 0.3373028921920594;  // std dev = 0.076, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.27712553434518294;  // std dev = 0.129, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E), athleteledsportsteam(F, E) )
%   | | then return 0.05943456074482434;  // std dev = 0.567, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamplaysagainstteam(G, A) )
%   | | | then return 0.20992063639787276;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.23396349436257954;  // std dev = 0.108, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.07595338327150457;  // std dev = 0.010, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamalsoknownas(A, E) )
%   | | then return 0.025572666326449445;  // std dev = 0.542, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamplaysagainstteam(A, F), teamalsoknownas(F, G) )
%   | | | then return 0.24765610864123447;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1654659097276246;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.07079247253381052;  // std dev = 0.009, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysagainstteam(E, A), teamalsoknownas(A, F) )
%   | | then return -0.18206545601231963;  // std dev = 0.296, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( athleteplayssport(G, B) )
%   | | | then return 0.18430414040938775;  // std dev = 0.120, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.06876413379279345;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.11493751451964818;  // std dev = 0.228, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(A, D), teamalsoknownas(A, E) )
%   | then return -0.161039438547457;  // std dev = 0.268, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplayssport(F, B) )
%   | | then if ( athleteplaysforteam(F, A) )
%   | | | then return 0.1785347600236692;  // std dev = 0.059, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1507108577645399;  // std dev = 0.110, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.06749169767625993;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning 5.914583206176758
Refined model CLL: -0.12329


******************************************
Best model found
******************************************
Results 

CLL : -0.093025 

AUC ROC : 0.984286 

AUC PR : 0.124378 

Precision : 0.126283 

Recall : 0.938931 

F1 : 0.222624 

Total Learning Time : 7.652404546737671 

Total Inference Time : 0.7463979721069336 

Total revision time: 11.10431957244873
Best scored revision CLL: -0.12329


Results 

CLL : -0.093025 

AUC ROC : 0.984286 

AUC PR : 0.124378 

Precision : 0.126283 

Recall : 0.938931 

F1 : 0.222624 

Total Learning Time : 11.261430501937866 

Total Inference Time : 0.7463979721069336 

Amount of data: 15
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 2.418719530105591
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.48314893509951234;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplayssport(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.4136573287083127;  // std dev = 0.484, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then return 0.3366053739648666;  // std dev = 0.484, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783627;  // std dev = 1.32e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplaysforteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.13797558544868993;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.38797558544868976;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(A, G) )
%   | | then return 0.1055423637299242;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( athleteplaysforteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.29453485923199185;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15056212078058534;  // std dev = 0.473, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( athleteplaysforteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11339542960817556;  // std dev = 2.317, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08546492116303045;  // std dev = 0.473, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, C), athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, B) )
%   | | then return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.027015039797539584;  // std dev = 2.095, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(G, H) )
%   | | then return 0.2072574456832351;  // std dev = 0.923, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( teamplaysinleague(A, D) )
%   | then return 0.02041990655123981;  // std dev = 2.096, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | else if ( teamplaysinleague(A, E), athleteplayssport(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15870392043982803;  // std dev = 0.922, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
Inference time using transfer learning 95.03014254570007
Parameter learned model CLL:-0.52054 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(A, E)', 'false,false,false': 'athleteplaysforteam(F, B)'}, {'true': [0.0, 6, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.372, 9, 15]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplayssport(A, D)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 6, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.484, 9, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'teamplaysagainstteam(F, G)'}, {'true,true': [0.0, 6, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.484, 9, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'athleteplaysforteam(E, B)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(H, B)', 'false,false,false': 'athleteplayssport(A, I)'}, {'true': [1.32e-09, 6, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.732, 6, 6], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.5, 3, 9]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(A, G)', 'false,false,false': 'athleteplaysforteam(H, B)'}, {'true': [0.0, 6, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.732, 6, 6], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.5, 3, 9]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)'}, {'true,true': [2.63e-09, 6, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.473, 9, 15]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(A, C), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplaysforteam(G, B)', 'false,false,false': 'athleteplayssport(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 6, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.317, 9, 15]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)'}, {'true': [0.0, 6, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.473, 9, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'athleteplayssport(D, C), athleteplaysforteam(D, B)', 'true,false': 'athleteplaysforteam(E, B)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplayssport(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [1.86e-09, 6, 0], 'true,false,false': [2.095, 8, 11], 'false,true': [0.0, 0, 0], 'false,false,true': [0.923, 1, 4], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysinleague(A, E), athleteplayssport(F, E)', 'false,false,false': 'athleteplaysforteam(G, B)'}, {'true': [0.0, 6, 0], 'false,true': [2.096, 8, 11], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.922, 1, 4]}]
{'': [-6.938893903907228e-18, 0.23437499999999958], 'false': [nan, 0.23437499999999958], 'false,false': [nan, 0.23437499999999958], 'false,false,false': [nan, 0.23437499999999958]}
{'': [-2.3129646346357427e-18, 0.23437499999999964], 'false': [nan, 0.23437499999999964], 'false,false': [0.23437499999999964, nan], 'true': [nan, -2.3129646346357427e-18]}
{'': [0.0, 0.23437500000000008], 'false': [nan, 0.23437500000000008], 'false,false': [0.23437500000000008, nan], 'true': [0.0, nan]}
{'': [0.0, 0.234375], 'false': [0.25000000000000006, 0.18750000000000014], 'false,true': [nan, 0.25000000000000006], 'false,true,false': [0.25000000000000006, nan], 'false,false': [nan, 0.18750000000000014], 'false,false,false': [nan, 0.18750000000000014]}
{'': [1.1564823173178713e-18, 0.22767954083902484], 'false': [nan, 0.22767954083902484], 'false,false': [0.25000000000000006, 0.18749999999999992], 'false,false,false': [nan, 0.18749999999999992]}
{'': [1.1564823173178713e-18, 0.22371880742609906], 'false': [nan, 0.22371880742609906], 'true': [1.1564823173178713e-18, nan]}
{'': [nan, 0.18487093525435966], 'false': [-1.1564823173178713e-18, 0.22370263938120458], 'false,false': [nan, 0.22370263938120458], 'false,false,false': [nan, 0.22370263938120458]}
{'': [0.0, 0.22374721851672263], 'false': [nan, 0.22374721851672263]}
{'': [0.17728371908594048, 0.1704711596899625], 'true': [nan, 0.17728371908594048], 'true,false': [5.782411586589357e-19, 0.23108184853330263], 'false': [nan, 0.1704711596899625], 'false,false': [0.1704711596899625, nan]}
{'': [-5.782411586589357e-19, 0.2215464822760942], 'false': [0.23111576319400184, 0.17004459389447663], 'false,false': [nan, 0.17004459389447663], 'false,false,false': [nan, 0.17004459389447663]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(F, B).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
8;true;athleteplaysforteam(E, B).;true;true
9;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true


Refining candidate
***************************
Model training time 10.416898727416992
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamalsoknownas(A, E), teamplaysagainstteam(A, F) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteledsportsteam(E, A), teamplaysagainstteam(A, F) )
%   | | then return 0.40685858799906804;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7290358010362374;  // std dev = 0.081, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E), athleteledsportsteam(F, A) )
%   | | then return 0.3218969203777237;  // std dev = 0.756, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5653481744130237;  // std dev = 0.104, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamalsoknownas(A, E), athleteledsportsteam(D, F) )
%   | | then return 0.2733623837807079;  // std dev = 0.719, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( teamplaysagainstteam(A, G), athleteledsportsteam(H, G) )
%   | | | then return 0.5337822206256004;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4127683319289133;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(E, A), teamalsoknownas(A, F) )
%   | | then return 0.12013174369977841;  // std dev = 0.678, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( athleteplaysforteam(D, A) )
%   | | | then return 0.386171080196028;  // std dev = 0.084, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.326780046768737;  // std dev = 0.045, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E), athleteledsportsteam(F, A) )
%   | | then return 0.06624880472202915;  // std dev = 0.647, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamalsoknownas(G, A) )
%   | | | then return 0.3381378409719937;  // std dev = 0.085, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.25555004003149306;  // std dev = 0.037, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E), teamalsoknownas(A, F) )
%   | | then return 0.036344363872542695;  // std dev = 0.632, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamplaysagainstteam(A, G), teamalsoknownas(G, H) )
%   | | | then return 0.27929095060663417;  // std dev = 0.089, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.21099970774080826;  // std dev = 0.033, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E), athleteledsportsteam(F, A) )
%   | | then return 0.010037567678461016;  // std dev = 0.609, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamalsoknownas(A, G), teamplaysinleague(A, H) )
%   | | | then return 0.25574850749288963;  // std dev = 0.084, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17497276655856148;  // std dev = 0.026, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( athleteplayssport(E, B) )
%   | | then if ( teamalsoknownas(A, F), athleteledsportsteam(E, G) )
%   | | | then return -0.02385901398415785;  // std dev = 0.575, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.179125194190973;  // std dev = 0.139, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0.11162861758042535;  // std dev = 0.202, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteledsportsteam(E, A), teamplaysagainstteam(A, F) )
%   | | then return -0.011878569358423555;  // std dev = 0.578, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamalsoknownas(A, G), teamplaysinleague(A, H) )
%   | | | then return 0.20374085653684249;  // std dev = 0.077, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1327910122534996;  // std dev = 0.030, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.06565470082728704;  // std dev = 0.011, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning 6.644003868103027
Refined model CLL: -0.1295


******************************************
Best model found
******************************************
Results 

CLL : -0.097384 

AUC ROC : 0.988352 

AUC PR : 0.138297 

Precision : 0.12279 

Recall : 0.954198 

F1 : 0.217581 

Total Learning Time : 10.416898727416992 

Total Inference Time : 0.8306708335876465 

Total revision time: 14.56702709197998
Best scored revision CLL: -0.1295


Results 

CLL : -0.097384 

AUC ROC : 0.988352 

AUC PR : 0.138297 

Precision : 0.12279 

Recall : 0.954198 

F1 : 0.217581 

Total Learning Time : 14.724138021469116 

Total Inference Time : 0.8306708335876465 

Amount of data: 20
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 2.400545835494995
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5248156017661785;  // std dev = 2.582, 30.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplayssport(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.448295606241962;  // std dev = 0.471, 30.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then return 0.362363346322623;  // std dev = 0.471, 30.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783628;  // std dev = 1.32e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplaysforteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.17658718702991888;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3998014727442047;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(A, G) )
%   | | then return 0.13399130975467757;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( athleteplaysforteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.30188963253606665;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15961212557311893;  // std dev = 0.462, 30.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109172;  // std dev = 9.31e-10, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( athleteplaysforteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12021846516033569;  // std dev = 2.533, 30.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0908965875997673;  // std dev = 0.463, 30.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, C), athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, B) )
%   | | then return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.018134207527413092;  // std dev = 2.289, 23.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=14 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(G, H) )
%   | | then return 0.23639035280555268;  // std dev = 0.961, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.06419184008202619;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( teamplaysinleague(A, D) )
%   | then return 0.013794227999896486;  // std dev = 2.290, 23.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=14 */
%   | else if ( teamplaysinleague(A, E), athleteplayssport(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18291167196796815;  // std dev = 0.958, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
Inference time using transfer learning 91.54167032241821
Parameter learned model CLL:-0.473354 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(A, E)', 'false,false,false': 'athleteplaysforteam(F, B)'}, {'true': [0.0, 10, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.582, 10, 20]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplayssport(A, D)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [5.27e-09, 10, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.471, 10, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'teamplaysagainstteam(F, G)'}, {'true,true': [0.0, 10, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.471, 10, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'athleteplaysforteam(E, B)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(H, B)', 'false,false,false': 'athleteplayssport(A, I)'}, {'true': [1.32e-09, 10, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.984, 7, 9], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.535, 3, 11]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(A, G)', 'false,false,false': 'athleteplaysforteam(H, B)'}, {'true': [0.0, 10, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.984, 7, 9], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.535, 3, 11]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)'}, {'true,true': [3.73e-09, 10, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.462, 10, 20]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(A, C), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplaysforteam(G, B)', 'false,false,false': 'athleteplayssport(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [9.31e-10, 10, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.533, 10, 20]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)'}, {'true': [2.63e-09, 10, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.463, 10, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'athleteplayssport(D, C), athleteplaysforteam(D, B)', 'true,false': 'athleteplaysforteam(E, B)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplayssport(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.63e-09, 10, 0], 'true,false,false': [2.289, 9, 14], 'false,true': [0.0, 0, 0], 'false,false,true': [0.961, 1, 6], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysinleague(A, E), athleteplayssport(F, E)', 'false,false,false': 'athleteplaysforteam(G, B)'}, {'true': [3.73e-09, 10, 0], 'false,true': [2.29, 9, 14], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.958, 1, 6]}]
{'': [-1.1102230246251566e-17, 0.22222222222222232], 'false': [nan, 0.22222222222222232], 'false,false': [nan, 0.22222222222222232], 'false,false,false': [nan, 0.22222222222222232]}
{'': [2.7755575615628915e-18, 0.22222222222222204], 'false': [nan, 0.22222222222222204], 'false,false': [0.22222222222222204, nan], 'true': [nan, 2.7755575615628915e-18]}
{'': [0.0, 0.22222222222222252], 'false': [nan, 0.22222222222222252], 'false,false': [0.22222222222222252, nan], 'true': [0.0, nan]}
{'': [1.3877787807814458e-18, 0.22222222222222243], 'false': [0.24609374999999994, 0.1683673469387754], 'false,true': [nan, 0.24609374999999994], 'false,true,false': [0.24609374999999994, nan], 'false,false': [nan, 0.1683673469387754], 'false,false,false': [nan, 0.1683673469387754]}
{'': [0.0, 0.2168375682176375], 'false': [nan, 0.2168375682176375], 'false,false': [0.24609374999999997, 0.16836734693877567], 'false,false,false': [nan, 0.16836734693877567]}
{'': [1.3877787807814458e-18, 0.21375952353877958], 'false': [nan, 0.21375952353877958], 'true': [1.3877787807814458e-18, nan]}
{'': [nan, 0.16778826162866628], 'false': [0.0, 0.21381790778664575], 'false,false': [nan, 0.21381790778664575], 'false,false,false': [nan, 0.21381790778664575]}
{'': [6.938893903907229e-19, 0.21391188666746971], 'false': [nan, 0.21391188666746971]}
{'': [0.16041996727484467, 0.13186291015596155], 'true': [nan, 0.16041996727484467], 'true,false': [6.938893903907229e-19, 0.22789722191743067], 'false': [nan, 0.13186291015596155], 'false,false': [0.13186291015596155, nan]}
{'': [1.3877787807814458e-18, 0.21047666723838293], 'false': [0.2279278140887671, 0.13120997384168567], 'false,false': [nan, 0.13120997384168567], 'false,false,false': [nan, 0.13120997384168567]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(F, B).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
8;true;athleteplaysforteam(E, B).;true;true
9;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true


Refining candidate
***************************
Model training time 8.963168621063232
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteledsportsteam(E, A), teamplaysagainstteam(A, F) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamalsoknownas(E, A), teamalsoknownas(A, E) )
%   | | then return 0.4850122940520396;  // std dev = 0.812, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.7267858271949943;  // std dev = 0.083, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteplaysforteam(E, A), teamalsoknownas(A, F) )
%   | | then return 0.2845640954341062;  // std dev = 0.732, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5689942359155499;  // std dev = 0.124, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E), athleteledsportsteam(F, A) )
%   | | then return 0.20449295257746525;  // std dev = 0.711, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.4301997423694453;  // std dev = 0.153, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteplaysforteam(E, A), teamalsoknownas(F, A) )
%   | | then return 0.15151771769426955;  // std dev = 0.706, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3302714282888976;  // std dev = 0.148, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamalsoknownas(A, E), athleteplaysforteam(F, A) )
%   | | then return 0.08000896286586447;  // std dev = 0.668, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.267761338764693;  // std dev = 0.190, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07877675473109172;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteledsportsteam(E, A) )
%   | | then return 0.09185338027109952;  // std dev = 0.672, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.22118424307321458;  // std dev = 0.190, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteplaysforteam(E, A), teamalsoknownas(A, F) )
%   | | then return 0.02261293251499319;  // std dev = 0.650, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.18787809177597156;  // std dev = 0.184, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( athleteplayssport(E, B) )
%   | | then if ( teamalsoknownas(A, F), teamalsoknownas(F, A) )
%   | | | then return -0.003856582659973055;  // std dev = 0.630, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.17300159623205943;  // std dev = 0.173, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0.11733605838187618;  // std dev = 0.077, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.06419184008202619;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteledsportsteam(E, A), teamplaysagainstteam(A, F) )
%   | | then return -0.013904555023707058;  // std dev = 0.608, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamplaysagainstteam(A, G), teamalsoknownas(A, H) )
%   | | | then return 0.23691484369391158;  // std dev = 0.111, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12842045632865115;  // std dev = 0.035, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.06553674518069215;  // std dev = 0.011, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
Inference time using transfer learning 5.874690055847168
Refined model CLL: -0.123508


******************************************
Best model found
******************************************
Results 

CLL : -0.097264 

AUC ROC : 0.98898 

AUC PR : 0.131336 

Precision : 0.124758 

Recall : 0.984733 

F1 : 0.221459 

Total Learning Time : 8.963168621063232 

Total Inference Time : 0.8082840442657471 

Total revision time: 13.127623796463013
Best scored revision CLL: -0.123508


Results 

CLL : -0.097264 

AUC ROC : 0.98898 

AUC PR : 0.131336 

Precision : 0.124758 

Recall : 0.984733 

F1 : 0.221459 

Total Learning Time : 13.284734725952148 

Total Inference Time : 0.8082840442657471 

Amount of data: 25
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 2.7732045650482178
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5338246107751872;  // std dev = 2.847, 37.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplayssport(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.45576301035379385;  // std dev = 0.468, 37.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then return 0.3678730484528311;  // std dev = 0.468, 37.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplaysforteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.22791155478441233;  // std dev = 2.225, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.35886393573679326;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926096;  // std dev = 1.32e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(A, G) )
%   | | then return 0.17249953142332014;  // std dev = 2.225, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | else if ( athleteplaysforteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27090665180847046;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16147015504847537;  // std dev = 0.465, 37.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109172;  // std dev = 9.31e-10, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( athleteplaysforteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1214420354257361;  // std dev = 2.829, 37.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09176414087482972;  // std dev = 0.465, 37.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, C), athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, B) )
%   | | then return -0.06842697784420272;  // std dev = 2.63e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.017632479275384395;  // std dev = 2.592, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(G, H) )
%   | | then return 0.2585491586325846;  // std dev = 0.960, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.06419184008202619;  // std dev = 6.97e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( teamplaysinleague(A, D) )
%   | then return 0.013431660971263477;  // std dev = 2.592, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( teamplaysinleague(A, E), athleteplayssport(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.199685371649465;  // std dev = 0.958, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
Inference time using transfer learning 89.60805225372314
Parameter learned model CLL:-0.470392 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(A, E)', 'false,false,false': 'athleteplaysforteam(F, B)'}, {'true': [0.0, 13, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.847, 12, 25]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplayssport(A, D)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [7.45e-09, 13, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.468, 12, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'teamplaysagainstteam(F, G)'}, {'true,true': [1.05e-08, 13, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.468, 12, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'athleteplaysforteam(E, B)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(H, B)', 'false,false,false': 'athleteplayssport(A, I)'}, {'true': [0.0, 13, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [2.225, 8, 13], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.732, 4, 12]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(A, G)', 'false,false,false': 'athleteplaysforteam(H, B)'}, {'true': [1.32e-09, 13, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.225, 8, 13], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.732, 4, 12]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)'}, {'true,true': [7.45e-09, 13, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.465, 12, 25]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(A, C), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplaysforteam(G, B)', 'false,false,false': 'athleteplayssport(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [9.31e-10, 13, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.829, 12, 25]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)'}, {'true': [0.0, 13, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.465, 12, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'athleteplayssport(D, C), athleteplaysforteam(D, B)', 'true,false': 'athleteplaysforteam(E, B)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplayssport(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.63e-09, 12, 0], 'true,false,false': [2.592, 11, 18], 'false,true': [0.0, 1, 0], 'false,false,true': [0.96, 1, 7], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysinleague(A, E), athleteplayssport(F, E)', 'false,false,false': 'athleteplaysforteam(G, B)'}, {'true': [6.97e-09, 13, 0], 'false,true': [2.592, 11, 18], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.958, 1, 7]}]
{'': [-1.2810265668751807e-17, 0.21913805697589603], 'false': [nan, 0.21913805697589603], 'false,false': [nan, 0.21913805697589603], 'false,false,false': [nan, 0.21913805697589603]}
{'': [4.270088556250602e-18, 0.21913805697589483], 'false': [nan, 0.21913805697589483], 'false,false': [0.21913805697589483, nan], 'true': [nan, 4.270088556250602e-18]}
{'': [8.540177112501205e-18, 0.21913805697589542], 'false': [nan, 0.21913805697589542], 'false,false': [0.21913805697589542, nan], 'true': [8.540177112501205e-18, nan]}
{'': [-2.135044278125301e-18, 0.21913805697589517], 'false': [0.2358276643990928, 0.18749999999999983], 'false,true': [nan, 0.2358276643990928], 'false,true,false': [0.2358276643990928, nan], 'false,false': [nan, 0.18749999999999983], 'false,false,false': [nan, 0.18749999999999983]}
{'': [2.135044278125301e-18, 0.2173059943383305], 'false': [nan, 0.2173059943383305], 'false,false': [0.23582766439909314, 0.1875000000000001], 'false,false,false': [nan, 0.1875000000000001]}
{'': [4.270088556250602e-18, 0.2162641609467781], 'false': [nan, 0.2162641609467781], 'true': [4.270088556250602e-18, nan]}
{'': [nan, 0.1677671553049541], 'false': [1.0675221390626506e-18, 0.21628960541143719], 'false,false': [nan, 0.21628960541143719], 'false,false,false': [nan, 0.21628960541143719]}
{'': [0.0, 0.21632608660147246], 'false': [nan, 0.21632608660147246]}
{'': [0.16543687953890376, 0.11294358339416337], 'true': [nan, 0.16543687953890376], 'true,false': [5.782411586589357e-19, 0.23172584222818796], 'false': [0.0, 0.1151822653378464], 'false,false': [0.1151822653378464, nan]}
{'': [3.736327486719277e-18, 0.21231814548723937], 'false': [0.23173768315932738, 0.11473251338536411], 'false,false': [nan, 0.11473251338536411], 'false,false,false': [nan, 0.11473251338536411]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(F, B).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
8;true;athleteplaysforteam(E, B).;true;true
8;false;athleteplaysforteam(F, B).;true;true
9;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true


Refining candidate
***************************
Model training time 117.41475653648376
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E), teamalsoknownas(E, F) )
%   | | then if ( athleteledsportsteam(D, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteplaysforteam(E, A), teamplaysagainstteam(A, F) )
%   | | then if ( athleteplaysforteam(D, A) )
%   | | | then return 0.7194734122109545;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.29279418357704884;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.723786398761901;  // std dev = 0.071, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E), athleteledsportsteam(F, E) )
%   | | then if ( athleteledsportsteam(D, E), teamplaysagainstteam(E, A) )
%   | | | then return 0.5552142541523307;  // std dev = 0.000986, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.21788987985075325;  // std dev = 0.957, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.5659444457636056;  // std dev = 0.180, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteplaysforteam(E, A), athleteledsportsteam(E, A) )
%   | | then return 0.27263001545932314;  // std dev = 0.644, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( athleteplaysforteam(F, A), athleteplaysinleague(F, G) )
%   | | | then return 0.23731335351226296;  // std dev = 0.624, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.45138162066303955;  // std dev = 0.361, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteledsportsteam(E, A), athleteplaysforteam(E, A) )
%   | | then return 0.2090123046665921;  // std dev = 0.641, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( athleteplaysforteam(F, A), athleteplaysinleague(F, G) )
%   | | | then return 0.1819638837205684;  // std dev = 0.621, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3468893380228415;  // std dev = 0.356, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteplaysforteam(D, A) )
%   | | then return 0.3122342044321729;  // std dev = 0.019, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( athleteplaysforteam(E, A) )
%   | | | then return 0.029530651458738053;  // std dev = 0.873, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.251352009178018;  // std dev = 0.155, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteplaysforteam(E, A), athleteledsportsteam(E, A) )
%   | | then return 0.11112508400456185;  // std dev = 0.595, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( athleteplaysforteam(F, A), athleteplaysinleague(F, G) )
%   | | | then return 0.09097005289913657;  // std dev = 0.573, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.23519595737315818;  // std dev = 0.367, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.07877675473109172;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteplaysforteam(D, A) )
%   | | then return 0.23074234482882883;  // std dev = 0.020, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( athleteplaysforteam(E, A) )
%   | | | then return -0.018594009032813788;  // std dev = 0.841, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.17160024411910169;  // std dev = 0.125, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.06842697784420272;  // std dev = 2.63e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( athleteplayssport(E, B) )
%   | | then if ( athleteledsportsteam(F, A), athleteplaysforteam(F, A) )
%   | | | then return 0.060595578526615144;  // std dev = 0.563, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.15455925004136678;  // std dev = 0.692, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplaysforteam(G, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamplaysagainstteam(A, H) )
%   | | then return 0.16089818459675242;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.09937745399975417;  // std dev = 0.188, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.06419184008202619;  // std dev = 6.97e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteplaysforteam(D, A) )
%   | | then return 0.1769545590173666;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( teamplaysagainstteam(A, E), athleteledsportsteam(F, E) )
%   | | | then return -0.031242302230546627;  // std dev = 0.808, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.13877439613042256;  // std dev = 0.196, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.06527665068389418;  // std dev = 0.010, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
Inference time using transfer learning 10.899254560470581
Refined model CLL: -0.134995


******************************************
Best model found
******************************************
Results 

CLL : -0.089615 

AUC ROC : 0.99227 

AUC PR : 0.140856 

Precision : 0.148191 

Recall : 0.969466 

F1 : 0.257085 

Total Learning Time : 117.41475653648376 

Total Inference Time : 1.018256425857544 

Total revision time: 122.1934564113617
Best scored revision CLL: -0.134995


Results 

CLL : -0.089615 

AUC ROC : 0.99227 

AUC PR : 0.140856 

Precision : 0.148191 

Recall : 0.969466 

F1 : 0.257085 

Total Learning Time : 122.35056734085083 

Total Inference Time : 1.018256425857544 

Run: 3

 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 264
Target train neg examples: 106660

Target test facts examples: 9691
Target test pos examples: 133
Target test neg examples: 53331

Amount of data: 5
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.5724880695343018
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(D, B) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41370449065506787;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F) )
%   | | then return 0.30745570149150986;  // std dev = 0.493, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F) )
%   | | then return 0.25532401548227945;  // std dev = 0.492, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(D, A) )
%   | then if ( athleteplaysforteam(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.2949821351770535;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(B, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11575407079064756;  // std dev = 1.061, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(G, A) )
%   | | then return 0.22914104590235268;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( athleteplaysforteam(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09184444087191962;  // std dev = 1.059, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12320389961311655;  // std dev = 0.484, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, A), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0943091987384648;  // std dev = 1.530, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07174198136162399;  // std dev = 0.483, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F) )
%   | | then return 0.0543741461767563;  // std dev = 1.528, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(E, A), athleteplayssport(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0411230157359522;  // std dev = 1.528, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
Inference time using transfer learning 176.4868986606598
Parameter learned model CLL:-0.660209 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(E, A)', 'false,false,false': 'athleteplaysforteam(B, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.491, 4, 5]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(B, D)', 'false,false': 'athleteplayssport(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.493, 5, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(B, D)', 'false,false': 'teamplaysagainstteam(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.492, 5, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,true': 'athleteplaysforteam(B, E)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(B, H)', 'false,false,false': 'athleteplayssport(I, A)'}, {'true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.095, 2, 3], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.061, 3, 2]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(B, D)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(G, A)', 'false,false,false': 'athleteplaysforteam(B, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.095, 2, 3], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.059, 3, 2]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(B, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.484, 5, 5]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(C, A), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(B, F)', 'false,false': 'athleteplaysforteam(B, G)', 'false,false,false': 'athleteplayssport(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.53, 5, 5]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'athleteplaysforteam(B, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.483, 5, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(C, A)', 'false': 'athleteplaysforteam(B, D)', 'false,false': 'athleteplayssport(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.528, 5, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(B, C)', 'false': 'teamplaysinleague(D, A)', 'false,false': 'teamplaysinleague(E, A), athleteplayssport(E, F)', 'false,false,false': 'athleteplaysforteam(B, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.528, 5, 5]}]
{'': [nan, 0.24999999999999983], 'false': [0.0, 0.2469135802469134], 'false,false': [nan, 0.2469135802469134], 'false,false,false': [nan, 0.2469135802469134]}
{'': [nan, 0.24304474493214961], 'false': [nan, 0.24304474493214961], 'false,false': [0.24304474493214961, nan]}
{'': [nan, 0.24168741505143307], 'false': [nan, 0.24168741505143307], 'false,false': [0.24168741505143307, nan]}
{'': [nan, 0.24058484713875744], 'false': [0.24, 0.22510834474566596], 'false,true': [nan, 0.24], 'false,true,false': [0.24, nan], 'false,false': [nan, 0.22510834474566596], 'false,false,false': [nan, 0.22510834474566596]}
{'': [nan, 0.2368999263653983], 'false': [nan, 0.2368999263653983], 'false,false': [0.24000000000000005, 0.22437467385435542], 'false,false,false': [nan, 0.22437467385435542]}
{'': [nan, 0.23452236597185988], 'false': [nan, 0.23452236597185988]}
{'': [nan, 0.234033014311946], 'false': [nan, 0.234033014311946], 'false,false': [nan, 0.234033014311946], 'false,false,false': [nan, 0.234033014311946]}
{'': [nan, 0.23370705190839952], 'false': [nan, 0.23370705190839952]}
{'': [nan, 0.23348947484397362], 'false': [nan, 0.23348947484397362], 'false,false': [0.23348947484397362, nan]}
{'': [nan, 0.23334290456038867], 'false': [nan, 0.23334290456038867], 'false,false': [nan, 0.23334290456038867], 'false,false,false': [nan, 0.23334290456038867]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(D, B).;true;true


Refining candidate
***************************
Model training time 1.250281810760498
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.021527587339896626;  // std dev = 0.909, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.018837831550799367;  // std dev = 0.909, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.016450487536888506;  // std dev = 0.909, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.014339832974418603;  // std dev = 0.909, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.012480205384354398;  // std dev = 0.909, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.010846677215080425;  // std dev = 0.909, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527736;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.009415530899778623;  // std dev = 0.909, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then return -7.582681808106182E-4;  // std dev = 0.377, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return 0.16612811250833556;  // std dev = 0.817, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.14774685865797565;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.0037468405926858275;  // std dev = 0.896, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
Inference time using transfer learning 3.2013168334960938
Refined model CLL: -0.315185


******************************************
Best model found
******************************************
Results 

CLL : -0.20233 

AUC ROC : 0.988086 

AUC PR : 0.110592 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 1.250281810760498 

Total Inference Time : 0.6335031986236572 

Total revision time: 4.311570882797241
Best scored revision CLL: -0.315185


Results 

CLL : -0.20233 

AUC ROC : 0.988086 

AUC PR : 0.110592 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 4.461258411407471 

Total Inference Time : 0.6335031986236572 

Amount of data: 10
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.8599298000335693
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(A, E) )
%   | | then if ( teamplaysinleague(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( athleteplaysforteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4581489350995123;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplayssport(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.4132116353666677;  // std dev = 0.481, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then return 0.3363220831675936;  // std dev = 0.480, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplaysforteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.2945691788189962;  // std dev = 1.130, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2438966757304594;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(A, G) )
%   | | then return 0.22398650320659338;  // std dev = 1.129, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( athleteplaysforteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18623454334185724;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1509934582422316;  // std dev = 0.479, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0.382906009506511;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( athleteplaysforteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09543263972114364;  // std dev = 1.898, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.085721197435492;  // std dev = 0.478, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, C), athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, B) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.07184382234411353;  // std dev = 1.548, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(G, H) )
%   | | then return 0.04887125731445132;  // std dev = 1.119, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysinleague(A, D) )
%   | then return 0.054447327186530496;  // std dev = 1.549, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | else if ( teamplaysinleague(A, E), athleteplayssport(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.036819280850483874;  // std dev = 1.119, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
Inference time using transfer learning 92.36475539207458
Parameter learned model CLL:-0.532911 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(A, E)', 'false,false,true': 'teamplaysinleague(A, E)', 'false,false,false': 'athleteplaysforteam(F, B)'}, {'true': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.897, 6, 9]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplayssport(A, D)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.481, 6, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'teamplaysagainstteam(F, G)'}, {'true,true': [0.0, 4, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.48, 6, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'athleteplaysforteam(E, B)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(H, B)', 'false,false,false': 'athleteplayssport(A, I)'}, {'true': [0.0, 4, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.13, 2, 4], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.549, 4, 6]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(A, G)', 'false,false,false': 'athleteplaysforteam(H, B)'}, {'true': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.129, 2, 4], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.549, 4, 6]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)'}, {'true,true': [0.0, 4, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.479, 6, 10]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(A, C), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplaysforteam(G, B)', 'false,false,false': 'athleteplayssport(A, H)'}, {'true': [0.0, 0, 1], 'false,true': [0.0, 4, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.898, 6, 9]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)'}, {'true': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.478, 6, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'athleteplayssport(D, C), athleteplaysforteam(D, B)', 'true,false': 'athleteplaysforteam(E, B)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplayssport(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'true,false,false': [1.548, 4, 7], 'false,true': [0.0, 0, 0], 'false,false,true': [1.119, 2, 3], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysinleague(A, E), athleteplayssport(F, E)', 'false,false,false': 'athleteplaysforteam(G, B)'}, {'true': [0.0, 4, 0], 'false,true': [1.549, 4, 7], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.119, 2, 3]}]
{'': [0.0, 0.23437499999999994], 'false': [nan, 0.23437499999999994], 'false,false': [0.0, 0.2399999999999999], 'false,false,false': [nan, 0.2399999999999999], 'false,false,true': [nan, 0.0]}
{'': [0.0, 0.23125308506372144], 'false': [nan, 0.23125308506372144], 'false,false': [0.23125308506372144, nan], 'true': [nan, 0.0]}
{'': [0.0, 0.2307171598901139], 'false': [nan, 0.2307171598901139], 'false,false': [0.2307171598901139, nan], 'true': [0.0, nan]}
{'': [0.0, 0.2304162476070284], 'false': [0.21283851284628888, 0.23999999999999994], 'false,false': [nan, 0.23999999999999994], 'false,false,false': [nan, 0.23999999999999994], 'false,true': [nan, 0.21283851284628888], 'false,true,false': [0.21283851284628888, nan]}
{'': [0.0, 0.23003928002226678], 'false': [nan, 0.23003928002226678], 'false,false': [0.21254732351336025, 0.24000000000000005], 'false,false,false': [nan, 0.24000000000000005]}
{'': [0.0, 0.22989515303869495], 'false': [nan, 0.22989515303869495], 'true': [0.0, nan]}
{'': [0.0, 0.19460348368240166], 'false': [0.0, 0.24010850113130566], 'false,false': [nan, 0.24010850113130566], 'false,false,false': [nan, 0.24010850113130566]}
{'': [0.0, 0.22808561046194734], 'false': [nan, 0.22808561046194734]}
{'': [0.1635872683145889, 0.2506031210562527], 'false': [nan, 0.2506031210562527], 'false,false': [0.2506031210562527, nan], 'true': [nan, 0.1635872683145889], 'true,false': [0.0, 0.21782664173225327]}
{'': [0.0, 0.2282355334762228], 'false': [0.21799951160605566, 0.2505411423284727], 'false,false': [nan, 0.2505411423284727], 'false,false,false': [nan, 0.2505411423284727]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
0;false;athleteplayssport(A, E).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
6;;teamplayssport(A, B) :- athleteplayssport(A, C), teamplaysagainstteam(D, E).;true;true
6;false;athleteplaysforteam(F, B).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
8;true;athleteplaysforteam(E, B).;true;true
9;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true


Refining candidate
***************************
Model training time 2.110637903213501
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109543;  // std dev = 4.21e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.16653882456488175;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.1420942428155648;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.11914890490746428;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.09841340278401862;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.08026654944252243;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.2097577156325356;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.06479591611329232;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.05187916934404054;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.152743858093671;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.08585914122801613;  // std dev = 0.826, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysagainstteam(D, A), athleteledsportsteam(E, D) )
%   | then return -0.08806041838149989;  // std dev = 0.444, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( teamplaysinleague(A, F) )
%   | | then if ( athleteplayssport(G, B) )
%   | | | then return 0.13400703000801117;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.3245978307145341;  // std dev = 0.447, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
Inference time using transfer learning 4.117897033691406
Refined model CLL: -0.165984


******************************************
Best model found
******************************************
Results 

CLL : -0.148943 

AUC ROC : 0.983991 

AUC PR : 0.108202 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 2.110637903213501 

Total Inference Time : 0.7074286937713623 

Total revision time: 5.478429317474365
Best scored revision CLL: -0.165984


Results 

CLL : -0.148943 

AUC ROC : 0.983991 

AUC PR : 0.108202 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 5.628116846084595 

Total Inference Time : 0.7074286937713623 

Amount of data: 15
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 2.146329402923584
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(A, E) )
%   | | then if ( teamplaysinleague(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( athleteplaysforteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.524815601766179;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplayssport(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.46062187014964345;  // std dev = 0.464, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then return 0.3714880433045225;  // std dev = 0.464, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783627;  // std dev = 1.32e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplaysforteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.3777043093182377;  // std dev = 1.235, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22437598997914965;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(A, G) )
%   | | then return 0.28490011316632124;  // std dev = 1.235, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( athleteplaysforteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16984235682702795;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16302937361283837;  // std dev = 0.459, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0.3282980909940848;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( athleteplaysforteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11301989095827199;  // std dev = 2.145, 21.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0933529704845954;  // std dev = 0.459, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, C), athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, B) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.07305843879887353;  // std dev = 1.767, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(G, H) )
%   | | then return 0.06598841070040962;  // std dev = 1.228, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysinleague(A, D) )
%   | then return 0.056062438936627886;  // std dev = 1.769, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | else if ( teamplaysinleague(A, E), athleteplayssport(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05032840112568463;  // std dev = 1.227, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
Inference time using transfer learning 92.89187502861023
Parameter learned model CLL:-0.467536 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(A, E)', 'false,false,true': 'teamplaysinleague(A, E)', 'false,false,false': 'athleteplaysforteam(F, B)'}, {'true': [0.0, 8, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.16, 7, 14]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplayssport(A, D)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 8, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.464, 7, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'teamplaysagainstteam(F, G)'}, {'true,true': [0.0, 8, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.464, 7, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'athleteplaysforteam(E, B)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(H, B)', 'false,false,false': 'athleteplayssport(A, I)'}, {'true': [1.32e-09, 8, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.235, 2, 7], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.754, 5, 8]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(A, G)', 'false,false,false': 'athleteplaysforteam(H, B)'}, {'true': [0.0, 8, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.235, 2, 7], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.754, 5, 8]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)'}, {'true,true': [3.73e-09, 8, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.459, 7, 15]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(A, C), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplaysforteam(G, B)', 'false,false,false': 'athleteplayssport(A, H)'}, {'true': [0.0, 0, 1], 'false,true': [0.0, 8, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.145, 7, 14]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)'}, {'true': [2.63e-09, 8, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.459, 7, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'athleteplayssport(D, C), athleteplaysforteam(D, B)', 'true,false': 'athleteplaysforteam(E, B)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplayssport(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 8, 0], 'true,false,false': [1.767, 5, 11], 'false,true': [0.0, 0, 0], 'false,false,true': [1.228, 2, 4], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysinleague(A, E), athleteplayssport(F, E)', 'false,false,false': 'athleteplaysforteam(G, B)'}, {'true': [0.0, 8, 0], 'false,true': [1.769, 5, 11], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.227, 2, 4]}]
{'': [-6.938893903907228e-18, 0.21694214876033016], 'false': [nan, 0.21694214876033016], 'false,false': [0.0, 0.22222222222222185], 'false,false,false': [nan, 0.22222222222222185], 'false,false,true': [nan, 0.0]}
{'': [0.0, 0.2153118845415705], 'false': [nan, 0.2153118845415705], 'false,false': [0.2153118845415705, nan], 'true': [nan, 0.0]}
{'': [-1.734723475976807e-18, 0.21501582760292418], 'false': [nan, 0.21501582760292418], 'false,false': [0.21501582760292418, nan], 'true': [-1.734723475976807e-18, nan]}
{'': [1.734723475976807e-18, 0.21487108118156542], 'false': [0.1694680580744553, 0.23668639053254437], 'false,false': [nan, 0.23668639053254437], 'false,false,false': [nan, 0.23668639053254437], 'false,true': [nan, 0.1694680580744553], 'false,true,false': [0.1694680580744553, nan]}
{'': [0.0, 0.21236990211687756], 'false': [nan, 0.21236990211687756], 'false,false': [0.1694234612064781, 0.23668639053254445], 'false,false,false': [nan, 0.23668639053254445]}
{'': [1.734723475976807e-18, 0.21102127228344303], 'false': [nan, 0.21102127228344303], 'true': [1.734723475976807e-18, nan]}
{'': [0.0, 0.16597790008063532], 'false': [0.0, 0.21905972711625982], 'false,false': [nan, 0.21905972711625982], 'false,false,false': [nan, 0.21905972711625982]}
{'': [8.673617379884035e-19, 0.21046502324782565], 'false': [nan, 0.21046502324782565]}
{'': [0.13461495608674415, 0.2514174393005182], 'false': [nan, 0.2514174393005182], 'false,false': [0.2514174393005182, nan], 'true': [nan, 0.13461495608674415], 'true,false': [0.0, 0.19524972642256122]}
{'': [0.0, 0.21068853078027738], 'false': [0.19558208724386486, 0.2509484680728073], 'false,false': [nan, 0.2509484680728073], 'false,false,false': [nan, 0.2509484680728073]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
0;false;athleteplayssport(A, E).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
6;;teamplayssport(A, B) :- athleteplayssport(A, C), teamplaysagainstteam(D, E).;true;true
6;false;athleteplaysforteam(F, B).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
8;true;athleteplaysforteam(E, B).;true;true
9;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true


Refining candidate
***************************
Model training time 2.5806684494018555
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109542;  // std dev = 5.96e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.16653882456488175;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.1420942428155648;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.11914890490746428;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.09841340278401862;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2551722425694894;  // std dev = 2.11e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.08026654944252243;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.20975771563253562;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.06479591611329232;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.1770964977452774;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.05187916934404054;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.15274385809367078;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.09700659403895846;  // std dev = 0.828, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.13542157589225093;  // std dev = 0.010, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.020815451005705882;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
Inference time using transfer learning 4.187424421310425
Refined model CLL: -0.150564


******************************************
Best model found
******************************************
Results 

CLL : -0.13985 

AUC ROC : 0.987312 

AUC PR : 0.133161 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 2.5806684494018555 

Total Inference Time : 0.6860983371734619 

Total revision time: 6.264540195465088
Best scored revision CLL: -0.150564


Results 

CLL : -0.13985 

AUC ROC : 0.987312 

AUC PR : 0.133161 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 6.414227724075317 

Total Inference Time : 0.6860983371734619 

Amount of data: 20
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 2.3672711849212646
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(A, E) )
%   | | then if ( teamplaysinleague(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( athleteplaysforteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5367203636709408;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=19 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplayssport(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.46717234326960505;  // std dev = 0.461, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then return 0.3762911564332119;  // std dev = 0.461, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplaysforteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.3468674035227877;  // std dev = 1.489, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.25049807566665944;  // std dev = 1.970, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(A, G) )
%   | | then return 0.2615598166104522;  // std dev = 1.489, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | else if ( athleteplaysforteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18928750049997614;  // std dev = 1.970, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16459202193390066;  // std dev = 0.459, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0.33746050792122106;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109172;  // std dev = 1.32e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( athleteplaysforteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11630348531797266;  // std dev = 2.465, 28.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=19 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09412127185038752;  // std dev = 0.459, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, C), athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, B) )
%   | | then return -0.06842697784420272;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.07690645517899375;  // std dev = 1.999, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(G, H) )
%   | | then return 0.060337750772399654;  // std dev = 1.452, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.06419184008202619;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamplaysinleague(A, D) )
%   | then return 0.05911536485083968;  // std dev = 2.000, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | else if ( teamplaysinleague(A, E), athleteplayssport(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04604777721541685;  // std dev = 1.452, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
Inference time using transfer learning 89.45920968055725
Parameter learned model CLL:-0.463287 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(A, E)', 'false,false,true': 'teamplaysinleague(A, E)', 'false,false,false': 'athleteplaysforteam(F, B)'}, {'true': [0.0, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.471, 9, 19]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplayssport(A, D)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [5.27e-09, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.461, 9, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'teamplaysagainstteam(F, G)'}, {'true,true': [7.45e-09, 11, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.461, 9, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'athleteplaysforteam(E, B)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(H, B)', 'false,false,false': 'athleteplayssport(A, I)'}, {'true': [0.0, 11, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.489, 3, 9], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.97, 6, 11]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(A, G)', 'false,false,false': 'athleteplaysforteam(H, B)'}, {'true': [0.0, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.489, 3, 9], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.97, 6, 11]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)'}, {'true,true': [5.27e-09, 11, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.459, 9, 20]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(A, C), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplaysforteam(G, B)', 'false,false,false': 'athleteplayssport(A, H)'}, {'true': [0.0, 0, 1], 'false,true': [1.32e-09, 11, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.465, 9, 19]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)'}, {'true': [2.63e-09, 11, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.459, 9, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'athleteplayssport(D, C), athleteplaysforteam(D, B)', 'true,false': 'athleteplaysforteam(E, B)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplayssport(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.63e-09, 11, 0], 'true,false,false': [1.999, 6, 14], 'false,true': [0.0, 0, 0], 'false,false,true': [1.452, 3, 6], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysinleague(A, E), athleteplayssport(F, E)', 'false,false,false': 'athleteplaysforteam(G, B)'}, {'true': [5.27e-09, 11, 0], 'false,true': [2.0, 6, 14], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.452, 3, 6]}]
{'': [-1.0092936587501423e-17, 0.21403091557669457], 'false': [nan, 0.21403091557669457], 'false,false': [0.0, 0.21811224489795888], 'false,false,false': [nan, 0.21811224489795888], 'false,false,true': [nan, 0.0]}
{'': [2.523234146875356e-18, 0.2128645554831032], 'false': [nan, 0.2128645554831032], 'false,false': [0.2128645554831032, nan], 'true': [nan, 2.523234146875356e-18]}
{'': [5.046468293750712e-18, 0.2126516954151328], 'false': [nan, 0.2126516954151328], 'false,false': [0.2126516954151328, nan], 'true': [5.046468293750712e-18, nan]}
{'': [0.0, 0.21255008267578696], 'false': [0.18468915682909506, 0.2283737024221452], 'false,false': [nan, 0.2283737024221452], 'false,false,false': [nan, 0.2283737024221452], 'false,true': [nan, 0.18468915682909506], 'false,true,false': [0.18468915682909506, nan]}
{'': [0.0, 0.2115500565667256], 'false': [nan, 0.2115500565667256], 'false,false': [0.1846546310132193, 0.2283737024221452], 'false,false,false': [nan, 0.2283737024221452]}
{'': [2.523234146875356e-18, 0.2110291713101944], 'false': [nan, 0.2110291713101944], 'true': [2.523234146875356e-18, nan]}
{'': [0.0, 0.1634560991083933], 'false': [0.0, 0.21693716696531623], 'false,false': [nan, 0.21693716696531623], 'false,false,false': [nan, 0.21693716696531623]}
{'': [6.30808536718839e-19, 0.21053260452393824], 'false': [nan, 0.21053260452393824]}
{'': [0.13377495499021094, 0.2342914179083957], 'false': [nan, 0.2342914179083957], 'false,false': [0.2342914179083957, nan], 'true': [nan, 0.13377495499021094], 'true,false': [6.30808536718839e-19, 0.1998563455800725]}
{'': [2.523234146875356e-18, 0.210656732026253], 'false': [0.20005090532821548, 0.23410746900890458], 'false,false': [nan, 0.23410746900890458], 'false,false,false': [nan, 0.23410746900890458]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
0;false;athleteplayssport(A, E).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
6;;teamplayssport(A, B) :- athleteplayssport(A, C), teamplaysagainstteam(D, E).;true;true
6;false;athleteplaysforteam(F, B).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
8;true;athleteplaysforteam(E, B).;true;true
9;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true


Refining candidate
***************************
Model training time 2.5489532947540283
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109542;  // std dev = 7.30e-08, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.09446743783575562;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.08165239320886175;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.4175135841583098;  // std dev = 5.58e-08, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( teamalsoknownas(E, A) )
%   | | then return -0.11729525904058875;  // std dev = 0.070, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.051306881853906326;  // std dev = 0.863, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.3207118471601496;  // std dev = 2.58e-08, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( teamplaysagainstteam(A, E) )
%   | | then return -0.15565418236054626;  // std dev = 0.079, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( teamalsoknownas(A, F) )
%   | | | then return -0.1131377528872812;  // std dev = 0.059, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.2048176751247829;  // std dev = 0.744, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.25517224256948945;  // std dev = 1.49e-08, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return -0.09625043289553707;  // std dev = 0.043, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.07500966513737906;  // std dev = 0.813, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109172;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.20975771563253562;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( teamplaysagainstteam(A, H) )
%   | | | then return -0.14136852533874655;  // std dev = 0.084, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.021524217612295924;  // std dev = 0.807, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527744;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return -0.0882290288465763;  // std dev = 0.045, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.07206045786503332;  // std dev = 0.797, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.06842697784420272;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.1527438580936708;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.08141159312107285;  // std dev = 0.042, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( teamplaysagainstteam(F, A), athleteplaysforteam(G, F) )
%   | then return -0.05973992727412397;  // std dev = 0.260, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.1980679695792825;  // std dev = 0.669, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.06419184008202619;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.13431949544019853;  // std dev = 0.029, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( teamalsoknownas(E, A) )
%   | | then return -0.09496967884963106;  // std dev = 0.121, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.042842352075871504;  // std dev = 0.749, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
Inference time using transfer learning 4.24972677230835
Refined model CLL: -0.133202


******************************************
Best model found
******************************************
Results 

CLL : -0.133899 

AUC ROC : 0.983733 

AUC PR : 0.114363 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 2.5489532947540283 

Total Inference Time : 0.7452223300933838 

Total revision time: 6.583093166351318
Best scored revision CLL: -0.133202


Results 

CLL : -0.133899 

AUC ROC : 0.983733 

AUC PR : 0.114363 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 6.732780694961548 

Total Inference Time : 0.7452223300933838 

Amount of data: 25
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 2.7581098079681396
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(A, E) )
%   | | then if ( teamplaysinleague(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( athleteplaysforteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5438632208137972;  // std dev = 2.746, 35.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=24 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplayssport(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.471169054943373;  // std dev = 0.460, 36.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then return 0.3792163217933223;  // std dev = 0.459, 36.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplaysforteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.345242570239235;  // std dev = 1.722, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2500687086743626;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926096;  // std dev = 1.32e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(A, G) )
%   | | then return 0.2602333133300889;  // std dev = 1.722, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | else if ( athleteplaysforteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18884225314813957;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1656106748277995;  // std dev = 0.458, 36.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=25 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0.33634592568363053;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( athleteplaysforteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11869824416166597;  // std dev = 2.738, 35.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=24 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09475479072749024;  // std dev = 0.457, 36.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=25 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, C), athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, B) )
%   | | then return -0.06842697784420272;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0.06681549954113773;  // std dev = 2.311, 26.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=18 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(G, H) )
%   | | then return 0.08662884362774614;  // std dev = 1.480, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.06419184008202619;  // std dev = 6.97e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( teamplaysinleague(A, D) )
%   | then return 0.05136519446792334;  // std dev = 2.311, 26.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=18 */
%   | else if ( teamplaysinleague(A, E), athleteplayssport(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06632446565814511;  // std dev = 1.479, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
Inference time using transfer learning 90.3412435054779
Parameter learned model CLL:-0.458562 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(A, E)', 'false,false,true': 'teamplaysinleague(A, E)', 'false,false,false': 'athleteplaysforteam(F, B)'}, {'true': [0.0, 14, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.746, 11, 24]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplayssport(A, D)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [7.45e-09, 14, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.46, 11, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'teamplaysagainstteam(F, G)'}, {'true,true': [1.18e-08, 14, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.459, 11, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'athleteplaysforteam(E, B)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(H, B)', 'false,false,false': 'athleteplayssport(A, I)'}, {'true': [0.0, 14, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.722, 4, 12], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.133, 7, 13]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(A, G)', 'false,false,false': 'athleteplaysforteam(H, B)'}, {'true': [1.32e-09, 14, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.722, 4, 12], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.133, 7, 13]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)'}, {'true,true': [8.33e-09, 14, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.458, 11, 25]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(A, C), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplaysforteam(G, B)', 'false,false,false': 'athleteplayssport(A, H)'}, {'true': [0.0, 0, 1], 'false,true': [0.0, 14, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.738, 11, 24]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)'}, {'true': [3.73e-09, 14, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.457, 11, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'athleteplayssport(D, C), athleteplaysforteam(D, B)', 'true,false': 'athleteplaysforteam(E, B)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplayssport(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [3.73e-09, 14, 0], 'true,false,false': [2.311, 8, 18], 'false,true': [0.0, 0, 0], 'false,false,true': [1.48, 3, 7], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysinleague(A, E), athleteplayssport(F, E)', 'false,false,false': 'athleteplaysforteam(G, B)'}, {'true': [6.97e-09, 14, 0], 'false,true': [2.311, 8, 18], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.479, 3, 7]}]
{'': [-1.1895246692412391e-17, 0.21219135802469255], 'false': [nan, 0.21219135802469255], 'false,false': [0.0, 0.21551020408163377], 'false,false,false': [nan, 0.21551020408163377], 'false,false,true': [nan, 0.0]}
{'': [3.96508223080413e-18, 0.21128538249061182], 'false': [nan, 0.21128538249061182], 'false,false': [0.21128538249061182, nan], 'true': [nan, 3.96508223080413e-18]}
{'': [9.912705577010326e-18, 0.2111195616021733], 'false': [nan, 0.2111195616021733], 'false,false': [0.2111195616021733, nan], 'true': [9.912705577010326e-18, nan]}
{'': [-3.96508223080413e-18, 0.21104158342291898], 'false': [0.18543630496536134, 0.22749999999999995], 'false,false': [nan, 0.22749999999999995], 'false,false,false': [nan, 0.22749999999999995], 'false,true': [nan, 0.18543630496536134], 'false,true,false': [0.18543630496536134, nan]}
{'': [3.96508223080413e-18, 0.21005352282962977], 'false': [nan, 0.21005352282962977], 'false,false': [0.1854139355478324, 0.22749999999999998], 'false,false,false': [nan, 0.22749999999999998]}
{'': [4.956352788505163e-18, 0.2095312799777742], 'false': [nan, 0.2095312799777742], 'true': [4.956352788505163e-18, nan]}
{'': [0.0, 0.16099596471778077], 'false': [-9.912705577010326e-19, 0.2142525291226947], 'false,false': [nan, 0.2142525291226947], 'false,false,false': [nan, 0.2142525291226947]}
{'': [9.912705577010326e-19, 0.2091536450229826], 'false': [nan, 0.2091536450229826]}
{'': [0.13764803200908032, 0.21893904840400968], 'false': [nan, 0.21893904840400968], 'false,false': [0.21893904840400968, nan], 'true': [nan, 0.13764803200908032], 'true,false': [9.912705577010326e-19, 0.20536451839962938]}
{'': [3.469446951953614e-18, 0.2092155607342949], 'false': [0.20549365450654752, 0.21873089818593514], 'false,false': [nan, 0.21873089818593514], 'false,false,false': [nan, 0.21873089818593514]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
0;false;athleteplayssport(A, E).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
6;;teamplayssport(A, B) :- athleteplayssport(A, C), teamplaysagainstteam(D, E).;true;true
6;false;athleteplaysforteam(F, B).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
8;true;athleteplaysforteam(E, B).;true;true
9;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true


Refining candidate
***************************
Model training time 2.7970921993255615
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplayssport(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109544;  // std dev = 4.21e-08, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.09446743783575562;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.08165239320886175;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.06990902274840138;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.32071184716014955;  // std dev = 2.98e-08, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.059354635365447495;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2551722425694895;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( teamplaysagainstteam(A, E) )
%   | | then return -0.1425785192445045;  // std dev = 0.115, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( teamalsoknownas(A, F) )
%   | | | then return -0.10814225853083992;  // std dev = 0.103, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.2098860700408647;  // std dev = 0.723, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0.20975771563253576;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.20975771563253573;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return -0.08299836367775641;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.05620879391010818;  // std dev = 0.818, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527747;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( teamplaysagainstteam(A, E) )
%   | | then return -0.12784192809108588;  // std dev = 0.117, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( teamalsoknownas(A, F) )
%   | | | then return -0.09549664705390697;  // std dev = 0.108, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.18761426997059505;  // std dev = 0.694, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.06842697784420272;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.15274385809367091;  // std dev = 2.11e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.07629294211482626;  // std dev = 0.060, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysagainstteam(A, F) )
%   | then return -0.061009850388452136;  // std dev = 0.262, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamalsoknownas(G, A) )
%   | | then return 0.04268786433864428;  // std dev = 0.270, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.293966538141051;  // std dev = 0.489, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.06419184008202619;  // std dev = 6.97e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.1342867109936442;  // std dev = 0.042, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( teamplaysagainstteam(A, E) )
%   | | then return -0.1083323602845099;  // std dev = 0.102, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( teamalsoknownas(A, F) )
%   | | | then return -0.08541585910145096;  // std dev = 0.110, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.1477094604727304;  // std dev = 0.621, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
Inference time using transfer learning 4.37450098991394
Refined model CLL: -0.119822


******************************************
Best model found
******************************************
Results 

CLL : -0.140186 

AUC ROC : 0.984842 

AUC PR : 0.1181 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 2.7970921993255615 

Total Inference Time : 0.736156702041626 

Total revision time: 7.241131544113159
Best scored revision CLL: -0.119822


Results 

CLL : -0.140186 

AUC ROC : 0.984842 

AUC PR : 0.1181 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 7.390819072723389 

Total Inference Time : 0.736156702041626 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 264
Target train neg examples: 106660

Target test facts examples: 9691
Target test pos examples: 133
Target test neg examples: 53331

Amount of data: 5
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.4295933246612549
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplayssport(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.5851860008555361;  // std dev = 0.373, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then return 0.46125983910675533;  // std dev = 0.373, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplaysforteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.26551299236150894;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5155129923615089;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(A, G) )
%   | | then return 0.19931442009481617;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( athleteplaysforteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.38854292568974114;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2008060144322712;  // std dev = 0.361, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( athleteplaysforteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15589020014779595;  // std dev = 0.885, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12308023397208447;  // std dev = 0.362, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, C), athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, B) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.042653367535768094;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(G, H) )
%   | | then return 0.21052554542770074;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysinleague(A, D) )
%   | then return 0.03390252532677118;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( teamplaysinleague(A, E), athleteplayssport(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17765945989100207;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
Inference time using transfer learning 89.37316298484802
Parameter learned model CLL:-0.28387 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(A, E)', 'false,false,false': 'athleteplaysforteam(F, B)'}, {'true': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.913, 1, 5]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplayssport(A, D)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.373, 1, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'teamplaysagainstteam(F, G)'}, {'true,true': [0.0, 4, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.373, 1, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'athleteplaysforteam(E, B)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(H, B)', 'false,false,false': 'athleteplayssport(A, I)'}, {'true': [0.0, 4, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.866, 1, 3], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 2]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(A, G)', 'false,false,false': 'athleteplaysforteam(H, B)'}, {'true': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.866, 1, 3], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 2]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)'}, {'true,true': [0.0, 4, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.361, 1, 5]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(A, C), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplaysforteam(G, B)', 'false,false,false': 'athleteplayssport(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 4, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.885, 1, 5]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)'}, {'true': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.362, 1, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'athleteplayssport(D, C), athleteplaysforteam(D, B)', 'true,false': 'athleteplaysforteam(E, B)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplayssport(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'true,false,false': [0.866, 1, 3], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 2], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysinleague(A, E), athleteplayssport(F, E)', 'false,false,false': 'athleteplaysforteam(G, B)'}, {'true': [0.0, 4, 0], 'false,true': [0.866, 1, 3], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 2]}]
{'': [0.0, 0.1388888888888887], 'false': [nan, 0.1388888888888887], 'false,false': [nan, 0.1388888888888887], 'false,false,false': [nan, 0.1388888888888887]}
{'': [0.0, 0.13888888888888884], 'false': [nan, 0.13888888888888884], 'false,false': [0.13888888888888884, nan], 'true': [nan, 0.0]}
{'': [0.0, 0.13888888888888887], 'false': [nan, 0.13888888888888887], 'false,false': [0.13888888888888887, nan], 'true': [0.0, nan]}
{'': [0.0, 0.13888888888888898], 'false': [0.18750000000000003, 0.0], 'false,true': [nan, 0.18750000000000003], 'false,true,false': [0.18750000000000003, nan], 'false,false': [nan, 0.0], 'false,false,false': [nan, 0.0]}
{'': [0.0, 0.13295720607326414], 'false': [nan, 0.13295720607326414], 'false,false': [0.18749999999999997, 0.0], 'false,false,false': [nan, 0.0]}
{'': [0.0, 0.13003115591116754], 'false': [nan, 0.13003115591116754], 'true': [0.0, nan]}
{'': [nan, 0.09150645652602216], 'false': [0.0, 0.13048332899185167], 'false,false': [nan, 0.13048332899185167], 'false,false,false': [nan, 0.13048332899185167]}
{'': [0.0, 0.1309002214506239], 'false': [nan, 0.1309002214506239]}
{'': [0.09683471078243341, 0.0], 'true': [nan, 0.09683471078243341], 'true,false': [0.0, 0.1875], 'false': [nan, 0.0], 'false,false': [0.0, nan]}
{'': [0.0, 0.1295924569411788], 'false': [0.1875, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;false;teamplaysagainstteam(A, D).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
4;false;teamplaysagainstteam(E, F), teamplaysagainstteam(A, G).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(F, B).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
8;true;athleteplaysforteam(E, B).;true;true
9;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
9;false;teamplaysinleague(A, D).;true;true


Refining candidate
***************************
Model training time 1.045398473739624
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.5851860008555361;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.46125983910675533;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then return 0.26551299236150894;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.5155129923615089;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysagainstteam(D, E), teamplaysagainstteam(A, F) )
%   | then return 0.19931442009481617;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.38854292568974114;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.2008060144322712;  // std dev = 0.883, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.15589020014779595;  // std dev = 0.885, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.12308023397208447;  // std dev = 0.886, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.042653367535768094;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return 0.21052554542770074;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysinleague(A, D) )
%   | then return 0.03390252532677118;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.17765945989100207;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
Inference time using transfer learning 35.368024587631226
Refined model CLL: -0.28387


******************************************
Best model found
******************************************
Results 

CLL : -0.866648 

AUC ROC : 0.729756 

AUC PR : 0.004644 

Precision : 0.004387 

Recall : 1.0 

F1 : 0.008736 

Total Learning Time : 1.045398473739624 

Total Inference Time : 0.6364774703979492 

Total revision time: 3.8026418685913086
Best scored revision CLL: -0.28387


Results 

CLL : -0.866648 

AUC ROC : 0.729756 

AUC PR : 0.004644 

Precision : 0.004387 

Recall : 1.0 

F1 : 0.008736 

Total Learning Time : 3.952329397201538 

Total Inference Time : 0.6364774703979492 

Amount of data: 10
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.7633957862854004
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6273797043302815;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplayssport(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.5328490890947368;  // std dev = 0.421, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then return 0.4239325089396988;  // std dev = 0.421, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783627;  // std dev = 1.86e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplaysforteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.35375116373648846;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22041783040315513;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(A, G) )
%   | | then return 0.2655764271147205;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( athleteplaysforteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1655218854750559;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1828826777514025;  // std dev = 0.419, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( athleteplaysforteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13943502908754682;  // std dev = 1.510, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10762522841224179;  // std dev = 0.419, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, C), athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, B) )
%   | | then return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.03486661931878536;  // std dev = 1.452, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(G, H) )
%   | | then return 0.35433363797181705;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysinleague(A, D) )
%   | then return 0.027498431364508955;  // std dev = 1.453, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else if ( teamplaysinleague(A, E), athleteplayssport(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27800530570494086;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
Inference time using transfer learning 90.71327519416809
Parameter learned model CLL:-0.362085 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(A, E)', 'false,false,false': 'athleteplaysforteam(F, B)'}, {'true': [0.0, 7, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.519, 3, 10]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplayssport(A, D)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 7, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.421, 3, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'teamplaysagainstteam(F, G)'}, {'true,true': [0.0, 7, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.421, 3, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'athleteplaysforteam(E, B)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(H, B)', 'false,false,false': 'athleteplayssport(A, I)'}, {'true': [1.86e-09, 7, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.265, 2, 8], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.816, 1, 2]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(A, G)', 'false,false,false': 'athleteplaysforteam(H, B)'}, {'true': [0.0, 7, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.265, 2, 8], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.816, 1, 2]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)'}, {'true,true': [2.63e-09, 7, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.419, 3, 10]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(A, C), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplaysforteam(G, B)', 'false,false,false': 'athleteplayssport(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 7, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.51, 3, 10]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)'}, {'true': [2.63e-09, 7, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.419, 3, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'athleteplayssport(D, C), athleteplaysforteam(D, B)', 'true,false': 'athleteplaysforteam(E, B)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplayssport(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [1.86e-09, 6, 0], 'true,false,false': [1.452, 3, 8], 'false,true': [0.0, 1, 0], 'false,false,true': [0.0, 0, 2], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysinleague(A, E), athleteplayssport(F, E)', 'false,false,false': 'athleteplaysforteam(G, B)'}, {'true': [0.0, 7, 0], 'false,true': [1.453, 3, 8], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 2]}]
{'': [-7.93016446160826e-18, 0.1775147928994082], 'false': [nan, 0.1775147928994082], 'false,false': [nan, 0.1775147928994082], 'false,false,false': [nan, 0.1775147928994082]}
{'': [-1.982541115402065e-18, 0.1775147928994084], 'false': [nan, 0.1775147928994084], 'false,false': [0.1775147928994084, nan], 'true': [nan, -1.982541115402065e-18]}
{'': [-1.982541115402065e-18, 0.177514792899408], 'false': [nan, 0.177514792899408], 'false,false': [0.177514792899408, nan], 'true': [-1.982541115402065e-18, nan]}
{'': [0.0, 0.17751479289940836], 'false': [0.16000000000000006, 0.22222222222222224], 'false,false': [nan, 0.22222222222222224], 'false,false,false': [nan, 0.22222222222222224], 'false,true': [nan, 0.16000000000000006], 'false,true,false': [0.16000000000000006, nan]}
{'': [0.0, 0.17613605920561162], 'false': [nan, 0.17613605920561162], 'false,false': [0.16000000000000003, 0.22222222222222224], 'false,false,false': [nan, 0.22222222222222224]}
{'': [9.912705577010326e-19, 0.17539053492513113], 'false': [nan, 0.17539053492513113], 'true': [9.912705577010326e-19, nan]}
{'': [nan, 0.12487062014479178], 'false': [-9.912705577010326e-19, 0.17544291246754348], 'false,false': [nan, 0.17544291246754348], 'false,false,false': [nan, 0.17544291246754348]}
{'': [9.912705577010326e-19, 0.1754986222053675], 'false': [nan, 0.1754986222053675]}
{'': [0.1265212163664013, 0.03971700850780893], 'true': [nan, 0.1265212163664013], 'true,false': [5.782411586589357e-19, 0.19176705932464477], 'false': [0.0, 0.0], 'false,false': [0.0, nan]}
{'': [-4.956352788505163e-19, 0.17049894329998963], 'false': [0.1918443366970515, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(F, B).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
8;true;athleteplaysforteam(E, B).;true;true
8;false;athleteplaysforteam(F, B).;true;true
9;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
9;false;teamplaysinleague(A, D).;true;true


Refining candidate
***************************
Model training time 2.516751766204834
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( athleteledsportsteam(E, A), athleteplaysforteam(E, A) )
%   | | then return 0.005296634135088509;  // std dev = 0.181, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamplaysagainstteam(A, F), teamalsoknownas(G, F) )
%   | | | then return 0.15274385809367097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.07902024611437974;  // std dev = 0.181, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( athleteplaysforteam(H, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysinleague(A, D) )
%   | then if ( athleteplayssport(E, B), athleteplaysinleague(E, F) )
%   | | then return 0.13846078975034598;  // std dev = 0.018, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.07038996885872856;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.13400703000801117;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
Inference time using transfer learning 3.9799396991729736
Refined model CLL: -0.097142


******************************************
Best model found
******************************************
Results 

CLL : -0.090928 

AUC ROC : 0.991825 

AUC PR : 0.18737 

Precision : 0.194651 

Recall : 0.984962 

F1 : 0.325062 

Total Learning Time : 2.516751766204834 

Total Inference Time : 0.7016472816467285 

Total revision time: 5.716059684753418
Best scored revision CLL: -0.097142


Results 

CLL : -0.090928 

AUC ROC : 0.991825 

AUC PR : 0.18737 

Precision : 0.194651 

Recall : 0.984962 

F1 : 0.325062 

Total Learning Time : 5.8657472133636475 

Total Inference Time : 0.7016472816467285 

Amount of data: 15
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 2.1233184337615967
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5399671169176942;  // std dev = 2.185, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplayssport(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.46084995018555497;  // std dev = 0.466, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then return 0.371617857245754;  // std dev = 0.466, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783627;  // std dev = 1.32e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplaysforteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.29279208133796514;  // std dev = 1.854, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2719587480046316;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(A, G) )
%   | | then return 0.22114234136950214;  // std dev = 1.854, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | else if ( athleteplaysforteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20548994344148563;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1627239682903041;  // std dev = 0.466, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( athleteplaysforteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1223196066799904;  // std dev = 2.184, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09242945204400027;  // std dev = 0.466, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, C), athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, B) )
%   | | then return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.03781130559588656;  // std dev = 2.131, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(G, H) )
%   | | then return 0.3947577171906229;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysinleague(A, D) )
%   | then return 0.028873813606266556;  // std dev = 2.131, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | else if ( teamplaysinleague(A, E), athleteplayssport(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.30531502436501745;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
Inference time using transfer learning 91.29299902915955
Parameter learned model CLL:-0.46695 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(A, E)', 'false,false,false': 'athleteplaysforteam(F, B)'}, {'true': [0.0, 8, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.185, 7, 15]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplayssport(A, D)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 8, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.466, 7, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'teamplaysagainstteam(F, G)'}, {'true,true': [0.0, 8, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.466, 7, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'athleteplaysforteam(E, B)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(H, B)', 'false,false,false': 'athleteplayssport(A, I)'}, {'true': [1.32e-09, 8, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.854, 5, 11], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.155, 2, 4]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(A, G)', 'false,false,false': 'athleteplaysforteam(H, B)'}, {'true': [0.0, 8, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.854, 5, 11], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.155, 2, 4]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)'}, {'true,true': [3.73e-09, 8, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.466, 7, 15]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(A, C), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplaysforteam(G, B)', 'false,false,false': 'athleteplayssport(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 8, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.184, 7, 15]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)'}, {'true': [2.63e-09, 8, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.466, 7, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'athleteplayssport(D, C), athleteplaysforteam(D, B)', 'true,false': 'athleteplaysforteam(E, B)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplayssport(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.63e-09, 7, 0], 'true,false,false': [2.131, 7, 13], 'false,true': [0.0, 1, 0], 'false,false,true': [0.0, 0, 2], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysinleague(A, E), athleteplayssport(F, E)', 'false,false,false': 'athleteplaysforteam(G, B)'}, {'true': [0.0, 8, 0], 'false,true': [2.131, 7, 13], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 2]}]
{'': [-6.938893903907228e-18, 0.21694214876033016], 'false': [nan, 0.21694214876033016], 'false,false': [nan, 0.21694214876033016], 'false,false,false': [nan, 0.21694214876033016]}
{'': [0.0, 0.2169421487603304], 'false': [nan, 0.2169421487603304], 'false,false': [0.2169421487603304, nan], 'true': [nan, 0.0]}
{'': [-1.734723475976807e-18, 0.21694214876033022], 'false': [nan, 0.21694214876033022], 'false,false': [0.21694214876033022, nan], 'true': [-1.734723475976807e-18, nan]}
{'': [1.734723475976807e-18, 0.21694214876033052], 'false': [0.21484374999999983, 0.2222222222222223], 'false,false': [nan, 0.2222222222222223], 'false,false,false': [nan, 0.2222222222222223], 'false,true': [nan, 0.21484374999999983], 'false,true,false': [0.21484374999999983, nan]}
{'': [0.0, 0.21690465516359395], 'false': [nan, 0.21690465516359395], 'false,false': [0.21484375000000006, 0.2222222222222222], 'false,false,false': [nan, 0.2222222222222222]}
{'': [1.734723475976807e-18, 0.21688331793093135], 'false': [nan, 0.21688331793093135], 'true': [1.734723475976807e-18, nan]}
{'': [nan, 0.1669563600158927], 'false': [0.0, 0.21688383123862842], 'false,false': [nan, 0.21688383123862842], 'false,false,false': [nan, 0.21688383123862842]}
{'': [8.673617379884035e-19, 0.21688457852762674], 'false': [nan, 0.21688457852762674]}
{'': [0.17030905985949327, 0.04767556926988987], 'true': [nan, 0.17030905985949327], 'true,false': [9.912705577010326e-19, 0.2269910822889057], 'false': [0.0, 0.0], 'false,false': [0.0, nan]}
{'': [0.0, 0.2126750910165078], 'false': [0.2269953507539982, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(F, B).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
8;true;athleteplaysforteam(E, B).;true;true
8;false;athleteplaysforteam(F, B).;true;true
9;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
9;false;teamplaysinleague(A, D).;true;true


Refining candidate
***************************
Model training time 2.353877305984497
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.4175135841583098;  // std dev = 4.71e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.2551722425694894;  // std dev = 2.36e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.17709649774527741;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( athleteplayssport(E, B), athleteplaysinleague(E, F) )
%   | | then return 0.1527438580936708;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplaysforteam(G, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.15274385809367075;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysinleague(A, D) )
%   | then if ( athleteplayssport(E, B), athleteplaysinleague(E, F) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.13400703000801117;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
Inference time using transfer learning 3.97562837600708
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results 

CLL : -0.087504 

AUC ROC : 0.990155 

AUC PR : 0.192597 

Precision : 0.194651 

Recall : 0.984962 

F1 : 0.325062 

Total Learning Time : 2.353877305984497 

Total Inference Time : 0.7424659729003906 

Total revision time: 6.043906211853027
Best scored revision CLL: -0.094637


Results 

CLL : -0.087504 

AUC ROC : 0.990155 

AUC PR : 0.192597 

Precision : 0.194651 

Recall : 0.984962 

F1 : 0.325062 

Total Learning Time : 6.193593740463257 

Total Inference Time : 0.7424659729003906 

Amount of data: 20
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 2.5404958724975586
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5033102254220925;  // std dev = 2.664, 31.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplayssport(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.4304386407365384;  // std dev = 0.478, 31.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then return 0.34912632896074897;  // std dev = 0.478, 31.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783627;  // std dev = 1.32e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplaysforteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.2931418707901975;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22647520412353073;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(A, G) )
%   | | then return 0.2224294675521842;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | else if ( athleteplaysforteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17215515850917343;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15496921516221318;  // std dev = 0.478, 31.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( athleteplaysforteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1162892430548362;  // std dev = 2.660, 31.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08746454444157645;  // std dev = 0.478, 31.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, C), athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, B) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.047626790590897534;  // std dev = 2.501, 27.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=17 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(G, H) )
%   | | then return 0.19023002638150643;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( teamplaysinleague(A, D) )
%   | then return 0.036094253509416446;  // std dev = 2.501, 27.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=17 */
%   | else if ( teamplaysinleague(A, E), athleteplayssport(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14401683059513562;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
Inference time using transfer learning 112.62431287765503
Parameter learned model CLL:-0.51696 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(A, E)', 'false,false,false': 'athleteplaysforteam(F, B)'}, {'true': [0.0, 9, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.664, 11, 20]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplayssport(A, D)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 9, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.478, 11, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'teamplaysagainstteam(F, G)'}, {'true,true': [0.0, 9, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.478, 11, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'athleteplaysforteam(E, B)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(H, B)', 'false,false,false': 'athleteplayssport(A, I)'}, {'true': [1.32e-09, 9, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [2.16, 7, 14], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.549, 4, 6]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(A, G)', 'false,false,false': 'athleteplaysforteam(H, B)'}, {'true': [0.0, 9, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.16, 7, 14], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.549, 4, 6]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)'}, {'true,true': [3.73e-09, 9, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.478, 11, 20]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(A, C), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplaysforteam(G, B)', 'false,false,false': 'athleteplayssport(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 9, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.66, 11, 20]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)'}, {'true': [2.63e-09, 9, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.478, 11, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'athleteplayssport(D, C), athleteplaysforteam(D, B)', 'true,false': 'athleteplaysforteam(E, B)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplayssport(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 8, 0], 'true,false,false': [2.501, 10, 17], 'false,true': [0.0, 1, 0], 'false,false,true': [0.866, 1, 3], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysinleague(A, E), athleteplayssport(F, E)', 'false,false,false': 'athleteplaysforteam(G, B)'}, {'true': [2.63e-09, 9, 0], 'false,true': [2.501, 10, 17], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.866, 1, 3]}]
{'': [-9.25185853854297e-18, 0.22892819979188353], 'false': [nan, 0.22892819979188353], 'false,false': [nan, 0.22892819979188353], 'false,false,false': [nan, 0.22892819979188353]}
{'': [0.0, 0.2289281997918831], 'false': [nan, 0.2289281997918831], 'false,false': [0.2289281997918831, nan], 'true': [nan, 0.0]}
{'': [-1.5419764230904951e-18, 0.2289281997918831], 'false': [nan, 0.2289281997918831], 'false,false': [0.2289281997918831, nan], 'true': [-1.5419764230904951e-18, nan]}
{'': [3.0839528461809902e-18, 0.2289281997918833], 'false': [0.22222222222222232, 0.24000000000000005], 'false,false': [nan, 0.24000000000000005], 'false,false,false': [nan, 0.24000000000000005], 'false,true': [nan, 0.22222222222222232], 'false,true,false': [0.22222222222222232, nan]}
{'': [0.0, 0.2285093058877363], 'false': [nan, 0.2285093058877363], 'false,false': [0.22222222222222218, 0.24000000000000013], 'false,false,false': [nan, 0.24000000000000013]}
{'': [1.5419764230904951e-18, 0.22826372994353492], 'false': [nan, 0.22826372994353492], 'true': [1.5419764230904951e-18, nan]}
{'': [nan, 0.183539989678461], 'false': [0.0, 0.22826437584774875], 'false,false': [nan, 0.22826437584774875], 'false,false,false': [nan, 0.22826437584774875]}
{'': [7.709882115452476e-19, 0.22826861333233175], 'false': [nan, 0.22826861333233175]}
{'': [0.1811075281155376, 0.16070455133360298], 'true': [nan, 0.1811075281155376], 'true,false': [0.0, 0.2316905088605801], 'false': [0.0, 0.1875], 'false,false': [0.1875, nan]}
{'': [7.709882115452476e-19, 0.2273064768386224], 'false': [0.23170085748658928, 0.1875], 'false,false': [nan, 0.1875], 'false,false,false': [nan, 0.1875]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(F, B).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
8;true;athleteplaysforteam(E, B).;true;true
8;false;athleteplaysforteam(F, B).;true;true
9;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true


Refining candidate
***************************
Model training time 2.726019859313965
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.41751358415830986;  // std dev = 5.16e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.3207118471601496;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.25517224256948945;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07877675473109172;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.17709649774527744;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( athleteplayssport(E, B), athleteplaysinleague(E, F) )
%   | | then return 0.1527438580936708;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplaysforteam(G, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.09745114910920238;  // std dev = 0.192, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.13498915557141905;  // std dev = 0.010, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.06516588668339703;  // std dev = 0.010, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
Inference time using transfer learning 3.9900972843170166
Refined model CLL: -0.09534


******************************************
Best model found
******************************************
Results 

CLL : -0.084804 

AUC ROC : 0.988192 

AUC PR : 0.181441 

Precision : 0.194651 

Recall : 0.984962 

F1 : 0.325062 

Total Learning Time : 2.726019859313965 

Total Inference Time : 0.7839686870574951 

Total revision time: 6.954956769943237
Best scored revision CLL: -0.09534


Results 

CLL : -0.084804 

AUC ROC : 0.988192 

AUC PR : 0.181441 

Precision : 0.194651 

Recall : 0.984962 

F1 : 0.325062 

Total Learning Time : 7.104644298553467 

Total Inference Time : 0.7839686870574951 

Amount of data: 25
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 2.8760855197906494
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5160436719416167;  // std dev = 2.924, 38.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplayssport(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.4410172152320886;  // std dev = 0.474, 38.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then return 0.3569786026652371;  // std dev = 0.474, 38.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplaysforteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.32285807485456525;  // std dev = 2.373, 27.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16460891660540738;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(A, G) )
%   | | then return 0.24438915825180946;  // std dev = 2.373, 27.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=19 */
%   | | else if ( athleteplaysforteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12510815594808292;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15762001798441075;  // std dev = 0.471, 38.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109172;  // std dev = 1.32e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( athleteplaysforteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1184528260996366;  // std dev = 2.902, 38.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08930935996927182;  // std dev = 0.471, 38.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, C), athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, B) )
%   | | then return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.06912203961317359;  // std dev = 2.687, 33.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=22 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( athleteplayssport(G, H) )
%   | | then return 0.05781582726578986;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.06419184008202619;  // std dev = 5.89e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( teamplaysinleague(A, D) )
%   | then return 0.05266327870502532;  // std dev = 2.687, 33.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=22 */
%   | else if ( teamplaysinleague(A, E), athleteplayssport(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04350364665034401;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
Inference time using transfer learning 92.17744469642639
Parameter learned model CLL:-0.500221 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(A, E)', 'false,false,false': 'athleteplaysforteam(F, B)'}, {'true': [0.0, 12, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.924, 13, 25]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplayssport(A, D)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [5.27e-09, 12, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.474, 13, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'teamplaysagainstteam(F, G)'}, {'true,true': [9.13e-09, 12, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.474, 13, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'athleteplaysforteam(E, B)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(H, B)', 'false,false,false': 'athleteplayssport(A, I)'}, {'true': [0.0, 12, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [2.373, 8, 19], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.651, 5, 6]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(A, G)', 'false,false,false': 'athleteplaysforteam(H, B)'}, {'true': [0.0, 12, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.373, 8, 19], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.651, 5, 6]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)'}, {'true,true': [5.27e-09, 12, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.471, 13, 25]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(A, C), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplaysforteam(G, B)', 'false,false,false': 'athleteplayssport(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [1.32e-09, 12, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.902, 13, 25]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)'}, {'true': [3.73e-09, 12, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.471, 13, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'athleteplayssport(D, C), athleteplaysforteam(D, B)', 'true,false': 'athleteplaysforteam(E, B)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplayssport(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.63e-09, 10, 0], 'true,false,false': [2.687, 11, 22], 'false,true': [0.0, 2, 0], 'false,false,true': [1.095, 2, 3], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysinleague(A, E), athleteplayssport(F, E)', 'false,false,false': 'athleteplaysforteam(G, B)'}, {'true': [5.89e-09, 12, 0], 'false,true': [2.687, 11, 22], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.095, 2, 3]}]
{'': [-1.1564823173178714e-17, 0.2250692520775636], 'false': [nan, 0.2250692520775636], 'false,false': [nan, 0.2250692520775636], 'false,false,false': [nan, 0.2250692520775636]}
{'': [2.3129646346357427e-18, 0.22506925207756168], 'false': [nan, 0.22506925207756168], 'false,false': [0.22506925207756168, nan], 'true': [nan, 2.3129646346357427e-18]}
{'': [6.938893903907228e-18, 0.22506925207756245], 'false': [nan, 0.22506925207756245], 'false,false': [0.22506925207756245, nan], 'true': [6.938893903907228e-18, nan]}
{'': [0.0, 0.22506925207756226], 'false': [0.20850480109739375, 0.24793388429752053], 'false,false': [nan, 0.24793388429752053], 'false,false,false': [nan, 0.24793388429752053], 'false,true': [nan, 0.20850480109739375], 'false,true,false': [0.20850480109739375, nan]}
{'': [2.3129646346357427e-18, 0.22284487045909449], 'false': [nan, 0.22284487045909449], 'false,false': [0.2085048010973938, 0.24793388429752064], 'false,false,false': [nan, 0.24793388429752064]}
{'': [2.3129646346357427e-18, 0.22154893252359265], 'false': [nan, 0.22154893252359265], 'true': [2.3129646346357427e-18, nan]}
{'': [nan, 0.17547567986921053], 'false': [1.1564823173178713e-18, 0.22155317064636806], 'false,false': [nan, 0.22155317064636806], 'false,false,false': [nan, 0.22155317064636806]}
{'': [1.1564823173178713e-18, 0.22157689232554087], 'false': [nan, 0.22157689232554087]}
{'': [0.17129490176199982, 0.1746810705800081], 'false': [0.0, 0.24], 'false,false': [0.24, nan], 'true': [nan, 0.17129490176199982], 'true,false': [6.938893903907229e-19, 0.2188025100287429]}
{'': [2.8912057932946786e-18, 0.22162890348171052], 'false': [0.2188343646856402, 0.23999999999999994], 'false,false': [nan, 0.23999999999999994], 'false,false,false': [nan, 0.23999999999999994]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(F, B).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
8;true;athleteplaysforteam(E, B).;true;true
8;false;athleteplaysforteam(F, B).;true;true
9;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true


Refining candidate
***************************
Model training time 3.275527000427246
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.32071184716014955;  // std dev = 2.11e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.08518475138839687;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.25517224256948956;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07877675473109172;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.20975771563253554;  // std dev = 1.49e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.17709649774527747;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( athleteplayssport(E, B), athleteplaysinleague(E, F) )
%   | | then return 0.15274385809367083;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.06842697784420272;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplaysforteam(G, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.06427552371852137;  // std dev = 0.242, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.06419184008202619;  // std dev = 5.89e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.13527939897406524;  // std dev = 0.017, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.06549149698669096;  // std dev = 0.011, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
Inference time using transfer learning 3.8877298831939697
Refined model CLL: -0.09554


******************************************
Best model found
******************************************
Results 

CLL : -0.084444 

AUC ROC : 0.988192 

AUC PR : 0.181441 

Precision : 0.194651 

Recall : 0.984962 

F1 : 0.325062 

Total Learning Time : 3.275527000427246 

Total Inference Time : 0.8069577217102051 

Total revision time: 7.879594802856445
Best scored revision CLL: -0.09554


Results 

CLL : -0.084444 

AUC ROC : 0.988192 

AUC PR : 0.181441 

Precision : 0.194651 

Recall : 0.984962 

F1 : 0.325062 

Total Learning Time : 8.029282331466675 

Total Inference Time : 0.8069577217102051 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 266
Target train neg examples: 106662

Target test facts examples: 9691
Target test pos examples: 131
Target test neg examples: 53329

Amount of data: 5
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.2325670719146729
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplayssport(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplaysforteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(A, G) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( athleteplaysforteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( athleteplaysforteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, C), athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, B) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.15274385809367097;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(G, H) )
%   | | then return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysinleague(A, D) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( teamplaysinleague(A, E), athleteplayssport(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
Inference time using transfer learning 89.6670732498169
Parameter learned model CLL:-0.094637 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(A, E)', 'false,false,false': 'athleteplaysforteam(F, B)'}, {'true': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 5]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplayssport(A, D)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'teamplaysagainstteam(F, G)'}, {'true,true': [0.0, 5, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'athleteplaysforteam(E, B)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(H, B)', 'false,false,false': 'athleteplayssport(A, I)'}, {'true': [0.0, 5, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 4], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(A, G)', 'false,false,false': 'athleteplaysforteam(H, B)'}, {'true': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 4], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)'}, {'true,true': [0.0, 5, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 0, 5]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(A, C), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplaysforteam(G, B)', 'false,false,false': 'athleteplayssport(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 5, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 5]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)'}, {'true': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 0, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'athleteplayssport(D, C), athleteplaysforteam(D, B)', 'true,false': 'athleteplaysforteam(E, B)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplayssport(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 4], 'false,true': [0.0, 1, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysinleague(A, E), athleteplayssport(F, E)', 'false,false,false': 'athleteplaysforteam(G, B)'}, {'true': [0.0, 5, 0], 'false,true': [0.0, 0, 4], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1]}]
{'': [-2.7755575615628915e-18, 0.0], 'false': [nan, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [nan, 0.0]}
{'': [0.0, 0.0], 'true': [nan, 0.0], 'false': [nan, 0.0], 'false,false': [0.0, nan]}
{'': [0.0, -4.4408920985006264e-17], 'true': [0.0, nan], 'false': [nan, -4.4408920985006264e-17], 'false,false': [-4.4408920985006264e-17, nan]}
{'': [0.0, 4.4408920985006264e-17], 'false': [0.0, 0.0], 'false,true': [nan, 0.0], 'false,false': [nan, 0.0], 'false,true,false': [0.0, nan], 'false,false,false': [nan, 0.0]}
{'': [0.0, -2.2204460492503132e-17], 'false': [nan, -2.2204460492503132e-17], 'false,false': [0.0, 0.0], 'false,false,false': [nan, 0.0]}
{'': [0.0, 0.0], 'true': [0.0, nan], 'false': [nan, 0.0]}
{'': [nan, 0.020813035147004732], 'false': [-1.3877787807814458e-18, -5.551115123125783e-18], 'false,false': [nan, -5.551115123125783e-18], 'false,false,false': [nan, -5.551115123125783e-18]}
{'': [-6.938893903907229e-19, 0.0], 'false': [nan, 0.0]}
{'': [0.01222913466736446, 0.01222913466736446], 'true': [nan, 0.01222913466736446], 'false': [0.0, 0.0], 'true,false': [0.0, 0.0], 'false,false': [0.0, nan]}
{'': [0.0, 0.0], 'false': [0.0, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;false;teamplaysagainstteam(A, D).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
4;false;teamplaysagainstteam(E, F), teamplaysagainstteam(A, G).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(F, B).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
8;true;athleteplaysforteam(E, B).;true;true
8;false;athleteplaysforteam(F, B).;true;true
9;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
9;false;teamplaysinleague(A, D).;true;true


Refining candidate
***************************
Model training time 1.1559538841247559
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysagainstteam(D, E), teamplaysagainstteam(A, F) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( athleteplaysforteam(E, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysinleague(A, D) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.13400703000801117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
Inference time using transfer learning 35.241737604141235
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results 

CLL : -1.215302 

AUC ROC : 0.718398 

AUC PR : 0.004343 

Precision : 0.004365 

Recall : 1.0 

F1 : 0.008692 

Total Learning Time : 1.1559538841247559 

Total Inference Time : 0.709458589553833 

Total revision time: 3.7965123653411865
Best scored revision CLL: -0.094637


Results 

CLL : -1.215302 

AUC ROC : 0.718398 

AUC PR : 0.004343 

Precision : 0.004365 

Recall : 1.0 

F1 : 0.008692 

Total Learning Time : 3.946199893951416 

Total Inference Time : 0.709458589553833 

Amount of data: 10
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.7838332653045654
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6273797043302815;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplayssport(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.5328490890947368;  // std dev = 0.421, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then return 0.4239325089396988;  // std dev = 0.421, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783627;  // std dev = 1.86e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplaysforteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.4108940208793456;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22041783040315513;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(A, G) )
%   | | then return 0.3085330484359079;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( athleteplaysforteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1655218854750559;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18325740263247192;  // std dev = 0.414, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( athleteplaysforteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13988886892262714;  // std dev = 1.494, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10808653952620483;  // std dev = 0.415, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, C), athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, B) )
%   | | then return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.07574561850824234;  // std dev = 1.218, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( athleteplayssport(G, H) )
%   | | then return 0.10403859396558479;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysinleague(A, D) )
%   | then return 0.06021216582191091;  // std dev = 1.219, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else if ( teamplaysinleague(A, E), athleteplayssport(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08062217059712073;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
Inference time using transfer learning 89.52013516426086
Parameter learned model CLL:-0.368863 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(A, E)', 'false,false,false': 'athleteplaysforteam(F, B)'}, {'true': [0.0, 7, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.519, 3, 10]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplayssport(A, D)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 7, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.421, 3, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'teamplaysagainstteam(F, G)'}, {'true,true': [0.0, 7, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.421, 3, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'athleteplaysforteam(E, B)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(H, B)', 'false,false,false': 'athleteplayssport(A, I)'}, {'true': [1.86e-09, 7, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.926, 1, 6], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.155, 2, 4]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(A, G)', 'false,false,false': 'athleteplaysforteam(H, B)'}, {'true': [0.0, 7, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.926, 1, 6], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.155, 2, 4]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)'}, {'true,true': [2.63e-09, 7, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.414, 3, 10]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(A, C), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplaysforteam(G, B)', 'false,false,false': 'athleteplayssport(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 7, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.494, 3, 10]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)'}, {'true': [2.63e-09, 7, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.415, 3, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'athleteplayssport(D, C), athleteplaysforteam(D, B)', 'true,false': 'athleteplaysforteam(E, B)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplayssport(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [1.86e-09, 5, 0], 'true,false,false': [1.218, 2, 7], 'false,true': [0.0, 2, 0], 'false,false,true': [0.866, 1, 3], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysinleague(A, E), athleteplayssport(F, E)', 'false,false,false': 'athleteplaysforteam(G, B)'}, {'true': [0.0, 7, 0], 'false,true': [1.219, 2, 7], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.866, 1, 3]}]
{'': [-7.93016446160826e-18, 0.1775147928994082], 'false': [nan, 0.1775147928994082], 'false,false': [nan, 0.1775147928994082], 'false,false,false': [nan, 0.1775147928994082]}
{'': [-1.982541115402065e-18, 0.1775147928994084], 'false': [nan, 0.1775147928994084], 'false,false': [0.1775147928994084, nan], 'true': [nan, -1.982541115402065e-18]}
{'': [-1.982541115402065e-18, 0.177514792899408], 'false': [nan, 0.177514792899408], 'false,false': [0.177514792899408, nan], 'true': [-1.982541115402065e-18, nan]}
{'': [0.0, 0.17751479289940836], 'false': [0.1224489795918368, 0.22222222222222224], 'false,false': [nan, 0.22222222222222224], 'false,false,false': [nan, 0.22222222222222224], 'false,true': [nan, 0.1224489795918368], 'false,true,false': [0.1224489795918368, nan]}
{'': [0.0, 0.1735809619580469], 'false': [nan, 0.1735809619580469], 'false,false': [0.12244897959183676, 0.22222222222222224], 'false,false,false': [nan, 0.22222222222222224]}
{'': [9.912705577010326e-19, 0.17148327362021723], 'false': [nan, 0.17148327362021723], 'true': [9.912705577010326e-19, nan]}
{'': [nan, 0.12245131743288293], 'false': [-9.912705577010326e-19, 0.17165151296568087], 'false,false': [nan, 0.17165151296568087], 'false,false,false': [nan, 0.17165151296568087]}
{'': [9.912705577010326e-19, 0.17182402574251496], 'false': [nan, 0.17182402574251496]}
{'': [0.11073929775301701, 0.13160986076881712], 'false': [0.0, 0.1875], 'false,false': [0.1875, nan], 'true': [nan, 0.11073929775301701], 'true,false': [6.938893903907229e-19, 0.16483765214552468]}
{'': [-4.956352788505163e-19, 0.17203952423180474], 'false': [0.1650400268081858, 0.1875], 'false,false': [nan, 0.1875], 'false,false,false': [nan, 0.1875]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(F, B).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
8;true;athleteplaysforteam(E, B).;true;true
8;false;athleteplaysforteam(F, B).;true;true
9;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true


Refining candidate
***************************
Model training time 2.008898973464966
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527736;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( athleteplayssport(E, B), teamplaysagainstteam(A, F) )
%   | | then return 0.15274385809367097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.005296634135088509;  // std dev = 0.181, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( athleteplaysforteam(G, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.09745114910920255;  // std dev = 0.192, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.13777654452402918;  // std dev = 0.018, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07081237296765051;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning 4.005723714828491
Refined model CLL: -0.097295


******************************************
Best model found
******************************************
Results 

CLL : -0.099852 

AUC ROC : 0.990564 

AUC PR : 0.125726 

Precision : 0.124758 

Recall : 0.984733 

F1 : 0.221459 

Total Learning Time : 2.008898973464966 

Total Inference Time : 0.6655113697052002 

Total revision time: 5.228779315948486
Best scored revision CLL: -0.097295


Results 

CLL : -0.099852 

AUC ROC : 0.990564 

AUC PR : 0.125726 

Precision : 0.124758 

Recall : 0.984733 

F1 : 0.221459 

Total Learning Time : 5.378466844558716 

Total Inference Time : 0.6655113697052002 

Amount of data: 15
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 2.096733570098877
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5724346493852266;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplayssport(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.48767788391726324;  // std dev = 0.452, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then return 0.39125696209925326;  // std dev = 0.452, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783627;  // std dev = 1.32e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplaysforteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.2529521071694417;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3640632182805528;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(A, G) )
%   | | then return 0.19056803533591368;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else if ( athleteplaysforteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2739196759301428;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16995267969242395;  // std dev = 0.449, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( athleteplaysforteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12830671674799488;  // std dev = 2.060, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09762669821103886;  // std dev = 0.450, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, C), athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, B) )
%   | | then return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.05326780752426599;  // std dev = 1.842, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( athleteplayssport(G, H) )
%   | | then return 0.14401667386093817;  // std dev = 0.905, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( teamplaysinleague(A, D) )
%   | then return 0.04102351939188081;  // std dev = 1.842, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | else if ( teamplaysinleague(A, E), athleteplayssport(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11232700284773925;  // std dev = 0.905, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
Inference time using transfer learning 89.8361747264862
Parameter learned model CLL:-0.436195 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(A, E)', 'false,false,false': 'athleteplaysforteam(F, B)'}, {'true': [0.0, 9, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.07, 6, 15]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplayssport(A, D)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 9, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.452, 6, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'teamplaysagainstteam(F, G)'}, {'true,true': [0.0, 9, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.452, 6, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'athleteplaysforteam(E, B)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(H, B)', 'false,false,false': 'athleteplayssport(A, I)'}, {'true': [1.32e-09, 9, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.633, 4, 8], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.247, 2, 7]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(A, G)', 'false,false,false': 'athleteplaysforteam(H, B)'}, {'true': [0.0, 9, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.633, 4, 8], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.247, 2, 7]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)'}, {'true,true': [3.73e-09, 9, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.449, 6, 15]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(A, C), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplaysforteam(G, B)', 'false,false,false': 'athleteplayssport(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 9, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.06, 6, 15]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)'}, {'true': [2.63e-09, 9, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.45, 6, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'athleteplayssport(D, C), athleteplaysforteam(D, B)', 'true,false': 'athleteplaysforteam(E, B)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplayssport(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.63e-09, 7, 0], 'true,false,false': [1.842, 5, 11], 'false,true': [0.0, 2, 0], 'false,false,true': [0.905, 1, 4], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysinleague(A, E), athleteplayssport(F, E)', 'false,false,false': 'athleteplaysforteam(G, B)'}, {'true': [2.63e-09, 9, 0], 'false,true': [1.842, 5, 11], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.905, 1, 4]}]
{'': [-9.25185853854297e-18, 0.20408163265306084], 'false': [nan, 0.20408163265306084], 'false,false': [nan, 0.20408163265306084], 'false,false,false': [nan, 0.20408163265306084]}
{'': [0.0, 0.2040816326530611], 'false': [nan, 0.2040816326530611], 'false,false': [0.2040816326530611, nan], 'true': [nan, 0.0]}
{'': [-1.5419764230904951e-18, 0.20408163265306142], 'false': [nan, 0.20408163265306142], 'false,false': [0.20408163265306142, nan], 'true': [-1.5419764230904951e-18, nan]}
{'': [3.0839528461809902e-18, 0.20408163265306126], 'false': [0.22222222222222218, 0.1728395061728395], 'false,true': [nan, 0.22222222222222218], 'false,true,false': [0.22222222222222218, nan], 'false,false': [nan, 0.1728395061728395], 'false,false,false': [nan, 0.1728395061728395]}
{'': [0.0, 0.20275962864752753], 'false': [nan, 0.20275962864752753], 'false,false': [0.2222222222222222, 0.17283950617283952], 'false,false,false': [nan, 0.17283950617283952]}
{'': [1.5419764230904951e-18, 0.20202952716249867], 'false': [nan, 0.20202952716249867], 'true': [1.5419764230904951e-18, nan]}
{'': [nan, 0.15045039449625147], 'false': [0.0, 0.20206406574669603], 'false,false': [nan, 0.20206406574669603], 'false,false,false': [nan, 0.20206406574669603]}
{'': [7.709882115452476e-19, 0.20210357667954829], 'false': [nan, 0.20210357667954829]}
{'': [0.15070715910235802, 0.12627348538802424], 'true': [nan, 0.15070715910235802], 'true,false': [9.912705577010326e-19, 0.21213426531828555], 'false': [0.0, 0.16388793521471529], 'false,false': [0.16388793521471529, nan]}
{'': [7.709882115452476e-19, 0.2015521002495234], 'false': [0.212170226728029, 0.1637004294208275], 'false,false': [nan, 0.1637004294208275], 'false,false,false': [nan, 0.1637004294208275]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(F, B).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
8;true;athleteplaysforteam(E, B).;true;true
8;false;athleteplaysforteam(F, B).;true;true
9;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true


Refining candidate
***************************
Model training time 2.0640408992767334
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.4175135841583098;  // std dev = 4.71e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2551722425694894;  // std dev = 2.36e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527741;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.15274385809367078;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.10850969090609605;  // std dev = 0.198, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.0641918400820262;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.13539821557977724;  // std dev = 0.009, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.06610591175936233;  // std dev = 0.010, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning 3.7188706398010254
Refined model CLL: -0.095634


******************************************
Best model found
******************************************
Results 

CLL : -0.098817 

AUC ROC : 0.990374 

AUC PR : 0.122886 

Precision : 0.124758 

Recall : 0.984733 

F1 : 0.221459 

Total Learning Time : 2.0640408992767334 

Total Inference Time : 0.6594514846801758 

Total revision time: 5.6796555519104
Best scored revision CLL: -0.095634


Results 

CLL : -0.098817 

AUC ROC : 0.990374 

AUC PR : 0.122886 

Precision : 0.124758 

Recall : 0.984733 

F1 : 0.221459 

Total Learning Time : 5.82934308052063 

Total Inference Time : 0.6594514846801758 

Amount of data: 20
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 2.379340410232544
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.572434649385226;  // std dev = 2.390, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplayssport(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.48767788391726324;  // std dev = 0.452, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then return 0.39125696209925315;  // std dev = 0.452, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplaysforteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.20167005588739073;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3862854405027755;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(A, G) )
%   | | then return 0.1520587459013438;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | else if ( athleteplaysforteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.29058737817274527;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.08518475138839687;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1701234256672103;  // std dev = 0.445, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109172;  // std dev = 1.32e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( athleteplaysforteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12860192874453352;  // std dev = 2.357, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09796699141113323;  // std dev = 0.446, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, C), athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, B) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.004986167712221005;  // std dev = 2.088, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( athleteplayssport(G, H) )
%   | | then return 0.22348225644423833;  // std dev = 0.954, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.06419184008202619;  // std dev = 5.89e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( teamplaysinleague(A, D) )
%   | then return 0.0038267106797966626;  // std dev = 2.088, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | else if ( teamplaysinleague(A, E), athleteplayssport(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17580106656989264;  // std dev = 0.953, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
Inference time using transfer learning 90.74175333976746
Parameter learned model CLL:-0.421612 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(A, E)', 'false,false,false': 'athleteplaysforteam(F, B)'}, {'true': [0.0, 12, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.39, 8, 20]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplayssport(A, D)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [5.27e-09, 12, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.452, 8, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'teamplaysagainstteam(F, G)'}, {'true,true': [9.13e-09, 12, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.452, 8, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'athleteplaysforteam(E, B)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(H, B)', 'false,false,false': 'athleteplayssport(A, I)'}, {'true': [0.0, 12, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.754, 5, 8], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.549, 3, 12]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(A, G)', 'false,false,false': 'athleteplaysforteam(H, B)'}, {'true': [0.0, 12, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.754, 5, 8], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.549, 3, 12]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)'}, {'true,true': [5.27e-09, 12, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.445, 8, 20]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(A, C), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplaysforteam(G, B)', 'false,false,false': 'athleteplayssport(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [1.32e-09, 12, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.357, 8, 20]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)'}, {'true': [3.73e-09, 12, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.446, 8, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'athleteplayssport(D, C), athleteplaysforteam(D, B)', 'true,false': 'athleteplaysforteam(E, B)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplayssport(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 8, 0], 'true,false,false': [2.088, 7, 12], 'false,true': [0.0, 4, 0], 'false,false,true': [0.954, 1, 8], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysinleague(A, E), athleteplayssport(F, E)', 'false,false,false': 'athleteplaysforteam(G, B)'}, {'true': [5.89e-09, 12, 0], 'false,true': [2.088, 7, 12], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.953, 1, 8]}]
{'': [-1.1564823173178714e-17, 0.20408163265306145], 'false': [nan, 0.20408163265306145], 'false,false': [nan, 0.20408163265306145], 'false,false,false': [nan, 0.20408163265306145]}
{'': [2.3129646346357427e-18, 0.20408163265306103], 'false': [nan, 0.20408163265306103], 'false,false': [0.20408163265306103, nan], 'true': [nan, 2.3129646346357427e-18]}
{'': [6.938893903907228e-18, 0.20408163265306167], 'false': [nan, 0.20408163265306167], 'false,false': [0.20408163265306167, nan], 'true': [6.938893903907228e-18, nan]}
{'': [0.0, 0.20408163265306126], 'false': [0.23668639053254437, 0.15999999999999998], 'false,true': [nan, 0.23668639053254437], 'false,true,false': [0.23668639053254437, nan], 'false,false': [nan, 0.15999999999999998], 'false,false,false': [nan, 0.15999999999999998]}
{'': [2.3129646346357427e-18, 0.20037746382123492], 'false': [nan, 0.20037746382123492], 'false,false': [0.23668639053254445, 0.16000000000000003], 'false,false,false': [nan, 0.16000000000000003]}
{'': [2.3129646346357427e-18, 0.19832356135486445], 'false': [nan, 0.19832356135486445], 'true': [2.3129646346357427e-18, nan]}
{'': [nan, 0.14791922993410572], 'false': [1.1564823173178713e-18, 0.198411410112126], 'false,false': [nan, 0.198411410112126], 'false,false,false': [nan, 0.198411410112126]}
{'': [1.1564823173178713e-18, 0.19851577693566935], 'false': [nan, 0.19851577693566935]}
{'': [0.16257892133010687, 0.08818257741621362], 'true': [nan, 0.16257892133010687], 'true,false': [0.0, 0.22943631808712214], 'false': [0.0, 0.10115606448783761], 'false,false': [0.10115606448783761, nan]}
{'': [2.8912057932946786e-18, 0.1945909299933102], 'false': [0.2294389913690666, 0.10095392890110963], 'false,false': [nan, 0.10095392890110963], 'false,false,false': [nan, 0.10095392890110963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(F, B).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
8;true;athleteplaysforteam(E, B).;true;true
8;false;athleteplaysforteam(F, B).;true;true
9;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true


Refining candidate
***************************
Model training time 2.1319098472595215
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.41751358415830986;  // std dev = 5.16e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926097;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.3207118471601496;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.08518475138839687;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.25517224256948945;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07877675473109172;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527744;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.15274385809367078;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.12816932076724036;  // std dev = 0.070, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.06419184008202619;  // std dev = 5.89e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.13515806625333837;  // std dev = 0.006, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.06580073159492111;  // std dev = 0.012, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning 3.6734869480133057
Refined model CLL: -0.095467


******************************************
Best model found
******************************************
Results 

CLL : -0.099066 

AUC ROC : 0.990374 

AUC PR : 0.122886 

Precision : 0.124758 

Recall : 0.984733 

F1 : 0.221459 

Total Learning Time : 2.1319098472595215 

Total Inference Time : 0.6489238739013672 

Total revision time: 6.103342056274414
Best scored revision CLL: -0.095467


Results 

CLL : -0.099066 

AUC ROC : 0.990374 

AUC PR : 0.122886 

Precision : 0.124758 

Recall : 0.984733 

F1 : 0.221459 

Total Learning Time : 6.2530295848846436 

Total Inference Time : 0.6489238739013672 

Amount of data: 25
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 2.6177945137023926
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6157246926752692;  // std dev = 2.462, 33.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplayssport(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.52329140204601;  // std dev = 0.429, 33.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.11231637819360635;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then return 0.41705713205422834;  // std dev = 0.429, 33.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783631;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplaysforteam(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, G) )
%   | | | then return 0.22734777937064318;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.39401444603730984;  // std dev = 1.581, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926094;  // std dev = 2.28e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, F), teamplaysagainstteam(A, G) )
%   | | then return 0.1708113201962259;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | else if ( athleteplaysforteam(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2958816926869417;  // std dev = 1.581, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.08518475138839685;  // std dev = 1.18e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18025829615505176;  // std dev = 0.423, 33.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(A, C), teamplaysagainstteam(D, E) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( athleteplaysforteam(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13720669523054466;  // std dev = 2.431, 33.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10561935031916152;  // std dev = 0.423, 33.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, C), athleteplaysforteam(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, B) )
%   | | then return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0.030120211321606694;  // std dev = 2.190, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( athleteplayssport(G, H) )
%   | | then return 0.20186114576728378;  // std dev = 0.957, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.06419184008202619;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( teamplaysinleague(A, D) )
%   | then return 0.023478261240538152;  // std dev = 2.190, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | else if ( teamplaysinleague(A, E), athleteplayssport(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16115594033760816;  // std dev = 0.957, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
Inference time using transfer learning 88.62608623504639
Parameter learned model CLL:-0.378199 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'athleteplayssport(A, E)', 'false,false,false': 'athleteplaysforteam(F, B)'}, {'true': [0.0, 17, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.462, 8, 25]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplayssport(A, D)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 17, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.429, 8, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)', 'false,false': 'teamplaysagainstteam(F, G)'}, {'true,true': [1.49e-08, 17, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.429, 8, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysagainstteam(A, D)', 'false,true': 'athleteplaysforteam(E, B)', 'false,true,false': 'teamplaysagainstteam(F, G)', 'false,false': 'athleteplaysforteam(H, B)', 'false,false,false': 'athleteplayssport(A, I)'}, {'true': [0.0, 17, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.826, 5, 10], 'false,true,false,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.581, 3, 15]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)', 'false,false': 'teamplaysagainstteam(E, F), teamplaysagainstteam(A, G)', 'false,false,false': 'athleteplaysforteam(H, B)'}, {'true': [2.28e-09, 17, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.826, 5, 10], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.581, 3, 15]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'true': 'athleteplaysforteam(D, B)', 'false': 'athleteplaysforteam(E, B)'}, {'true,true': [1.18e-08, 17, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.423, 8, 25]}]
['teamplayssport(A, B)', {'': 'athleteplayssport(A, C), teamplaysagainstteam(D, E)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplaysforteam(G, B)', 'false,false,false': 'athleteplayssport(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 17, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.431, 8, 25]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'athleteplaysforteam(D, B)'}, {'true': [0.0, 17, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.423, 8, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'athleteplayssport(D, C), athleteplaysforteam(D, B)', 'true,false': 'athleteplaysforteam(E, B)', 'false': 'athleteplaysforteam(F, B)', 'false,false': 'athleteplayssport(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.63e-09, 13, 0], 'true,false,false': [2.19, 7, 16], 'false,true': [0.0, 4, 0], 'false,false,true': [0.957, 1, 9], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, B)', 'false': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysinleague(A, E), athleteplayssport(F, E)', 'false,false,false': 'athleteplaysforteam(G, B)'}, {'true': [7.45e-09, 17, 0], 'false,true': [2.19, 7, 16], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.957, 1, 9]}]
{'': [-3.2653618371328133e-18, 0.1836547291092757], 'false': [nan, 0.1836547291092757], 'false,false': [nan, 0.1836547291092757], 'false,false,false': [nan, 0.1836547291092757]}
{'': [0.0, 0.18365472910927527], 'false': [nan, 0.18365472910927527], 'false,false': [0.18365472910927527, nan], 'true': [nan, 0.0]}
{'': [1.3061447348531253e-17, 0.1836547291092741], 'false': [nan, 0.1836547291092741], 'false,false': [0.1836547291092741, nan], 'true': [1.3061447348531253e-17, nan]}
{'': [-8.163404592832034e-18, 0.18365472910927455], 'false': [0.2222222222222222, 0.1388888888888889], 'false,true': [nan, 0.2222222222222222], 'false,true,false': [0.2222222222222222, nan], 'false,false': [nan, 0.1388888888888889], 'false,false,false': [nan, 0.1388888888888889]}
{'': [4.89804275569922e-18, 0.1806460068689082], 'false': [nan, 0.1806460068689082], 'false,false': [0.22222222222222227, 0.13888888888888895], 'false,false,false': [nan, 0.13888888888888895]}
{'': [8.163404592832034e-18, 0.17902738102162763], 'false': [nan, 0.17902738102162763], 'true': [8.163404592832034e-18, nan]}
{'': [nan, 0.12870253573702992], 'false': [-2.44902137784961e-18, 0.17914323280231056], 'false,false': [nan, 0.17914323280231056], 'false,false,false': [nan, 0.17914323280231056]}
{'': [0.0, 0.1792645591794875], 'false': [nan, 0.1792645591794875]}
{'': [0.13549939990015364, 0.08037486459035151], 'true': [nan, 0.13549939990015364], 'true,false': [5.337610695313253e-19, 0.20857906916829363], 'false': [0.0, 0.09165176192208693], 'false,false': [0.09165176192208693, nan]}
{'': [3.2653618371328133e-18, 0.17712035272022544], 'false': [0.20860195729800748, 0.09150150169448482], 'false,false': [nan, 0.09150150169448482], 'false,false,false': [nan, 0.09150150169448482]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
1;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
2;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(F, B).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true
8;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
8;true;athleteplaysforteam(E, B).;true;true
8;false;athleteplaysforteam(F, B).;true;true
9;;teamplayssport(A, B) :- athleteplaysforteam(C, B).;true;true


Refining candidate
***************************
Model training time 2.3600785732269287
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.11231637819360635;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.10159632948783631;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.09269127618926094;  // std dev = 9.13e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.32071184716014955;  // std dev = 2.11e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.08518475138839685;  // std dev = 1.18e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.25517224256948956;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07877675473109173;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.20975771563253554;  // std dev = 1.49e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.07324622576333704;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527747;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplaysforteam(D, B) )
%   | then return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.1527438580936708;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplaysforteam(F, B) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.1306267744998834;  // std dev = 0.066, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, B) )
%   then return -0.06419184008202619;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.13493853298926808;  // std dev = 0.006, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.06582260239079002;  // std dev = 0.012, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning 3.8046493530273438
Refined model CLL: -0.095309


******************************************
Best model found
******************************************
Results 

CLL : -0.099092 

AUC ROC : 0.990374 

AUC PR : 0.122886 

Precision : 0.124758 

Recall : 0.984733 

F1 : 0.221459 

Total Learning Time : 2.3600785732269287 

Total Inference Time : 0.6649420261383057 

Total revision time: 6.592777729034424
Best scored revision CLL: -0.095309


Results 

CLL : -0.099092 

AUC ROC : 0.990374 

AUC PR : 0.122886 

Precision : 0.124758 

Recall : 0.984733 

F1 : 0.221459 

Total Learning Time : 6.742465257644653 

Total Inference Time : 0.6649420261383057 

Starting experiments for fasttext using wmd 

Run: 1

 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 264
Target train neg examples: 106660

Target test facts examples: 9691
Target test pos examples: 133
Target test neg examples: 53331

Amount of data: 5
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.3879749774932861
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( teamplaysinleague(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, A) )
%   | | then if ( teamplaysagainstteam(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( teamplaysinleague(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(F, G) )
%   | | then return 0.4112141433504898;  // std dev = 0.468, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.3348574255028198;  // std dev = 0.465, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, A) )
%   | | | then return 0.036504807684900865;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3976732176640598;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F), athleteplayssport(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19801513136395887;  // std dev = 1.267, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15087501116555235;  // std dev = 0.447, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then return -0.06127990977671023;  // std dev = 0.817, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( teamplaysinleague(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21319234898406442;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.07444283726284448;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08842650386385331;  // std dev = 0.439, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(C, D), teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return -0.06947336969556583;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.10334925152488084;  // std dev = 0.926, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( teamplaysinleague(B, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(G, H) )
%   | | then return 0.009114961654623702;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.06511427158704394;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0.0792969173354172;  // std dev = 0.927, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( teamplaysagainstteam(E, A), athleteplaysforteam(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0070654352082731115;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
Inference time using transfer learning 40.76486349105835
Parameter learned model CLL:-0.472943 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(D, B)', 'false,false': 'athleteplaysforteam(E, A)', 'false,false,true': 'teamplaysagainstteam(E, A)', 'false,false,false': 'teamplaysinleague(B, F)'}, {'true': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.816, 2, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.894, 1, 4]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'athleteplaysforteam(D, A)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplaysforteam(F, G)'}, {'true,true': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.468, 3, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.465, 3, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'athleteplayssport(D, A)', 'false,false': 'teamplaysinleague(B, E)', 'false,false,false': 'athleteplaysforteam(F, A)'}, {'true': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.816, 2, 1], 'false,false,false,false': [0.894, 1, 4]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)', 'false,false': 'athleteplayssport(E, F), athleteplayssport(G, A)', 'false,false,false': 'teamplaysinleague(B, H)'}, {'true': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.267, 3, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)'}, {'true,true': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.447, 3, 5]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplayssport(D, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'teamplaysinleague(B, G)', 'false,false,false': 'athleteplaysforteam(H, A)'}, {'true': [0.817, 4, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.894, 1, 4]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)'}, {'true': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.439, 3, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'athleteplaysforteam(C, D), teamplaysinleague(B, D)', 'true,false': 'teamplaysinleague(B, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'athleteplaysforteam(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.926, 2, 3], 'false,true': [0.0, 0, 0], 'false,false,true': [0.816, 1, 2], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(E, A), athleteplaysforteam(E, F)', 'false,false,false': 'teamplaysinleague(B, G)'}, {'true': [0.0, 2, 0], 'false,true': [0.927, 2, 3], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.816, 1, 2]}]
{'': [0.0, 0.23437499999999983], 'false': [nan, 0.23437499999999983], 'false,false': [0.22222222222222224, 0.15999999999999986], 'false,false,true': [nan, 0.22222222222222224], 'false,false,false': [nan, 0.15999999999999986]}
{'': [0.0, 0.21925294030703676], 'false': [nan, 0.21925294030703676], 'false,false': [0.21925294030703676, nan], 'true': [0.0, nan]}
{'': [0.0, 0.21604089258653045], 'false': [nan, 0.21604089258653045], 'false,false': [0.21604089258653045, nan], 'true': [0.0, nan]}
{'': [0.0, 0.21390582248181939], 'false': [nan, 0.21390582248181939], 'false,false': [nan, 0.21390582248181939], 'false,false,false': [0.2222222222222222, 0.16]}
{'': [0.0, 0.2005076202010287], 'false': [nan, 0.2005076202010287], 'false,false': [nan, 0.2005076202010287], 'false,false,false': [nan, 0.2005076202010287]}
{'': [0.0, 0.199771969358785], 'false': [nan, 0.199771969358785], 'true': [0.0, nan]}
{'': [0.13353742638890514, 0.16], 'false': [nan, 0.16], 'false,false': [nan, 0.16], 'false,false,false': [nan, 0.16]}
{'': [0.0, 0.19250975541399337], 'false': [nan, 0.19250975541399337]}
{'': [0.12855656076947103, 0.2222222222222222], 'false': [nan, 0.2222222222222222], 'false,false': [0.2222222222222222, nan], 'true': [nan, 0.12855656076947103], 'true,false': [0.0, 0.171445568389972]}
{'': [0.0, 0.19194399308932272], 'false': [0.17182053548072654, 0.2222222222222222], 'false,false': [nan, 0.2222222222222222], 'false,false,false': [nan, 0.2222222222222222]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
2;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
7;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
8;true;teamplaysinleague(B, E).;true;true
9;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true


Refining candidate
***************************
Model training time 1.6908934116363525
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.07324622576333704;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.0642755237185215;  // std dev = 0.242, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return 0.07902024611437974;  // std dev = 0.181, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.0641918400820262;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.14388436364761265;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.07297278676501134;  // std dev = 0.000816, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning 3.365389585494995
Refined model CLL: -0.101596


******************************************
Best model found
******************************************
Results 

CLL : -0.102023 

AUC ROC : 0.987497 

AUC PR : 0.118041 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 1.6908934116363525 

Total Inference Time : 0.6183228492736816 

Total revision time: 4.4416258335113525
Best scored revision CLL: -0.101596


Results 

CLL : -0.102023 

AUC ROC : 0.987497 

AUC PR : 0.118041 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 4.57425856590271 

Total Inference Time : 0.6183228492736816 

Amount of data: 10
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.4827454090118408
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysinleague(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, A) )
%   | | then if ( teamplaysagainstteam(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( teamplaysinleague(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(F, G) )
%   | | then return 0.5313118734860143;  // std dev = 0.409, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.42309570554117937;  // std dev = 0.406, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.10159632948783627;  // std dev = 1.86e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, A) )
%   | | | then return 0.11950399829524304;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4135076145356012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F), athleteplayssport(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.24315384651394883;  // std dev = 1.422, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18465341841313065;  // std dev = 0.395, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then return -0.04686961517729024;  // std dev = 1.004, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysinleague(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2112897300032991;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.07450085754333081;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11458781348018252;  // std dev = 0.389, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(C, D), teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return -0.07040695120721792;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.0913676386153447;  // std dev = 1.069, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.06834704497582351;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplaysforteam(G, H) )
%   | | then return 0.0889955516413074;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.06515822391205565;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0.07113083161315624;  // std dev = 1.071, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( teamplaysagainstteam(E, A), athleteplaysforteam(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07243091204047956;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
Inference time using transfer learning 39.501561403274536
Parameter learned model CLL:-0.339715 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(D, B)', 'false,false': 'athleteplaysforteam(E, A)', 'false,false,true': 'teamplaysagainstteam(E, A)', 'false,false,false': 'teamplaysinleague(B, F)'}, {'true': [0.0, 7, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.0, 2, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.943, 1, 8]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'athleteplaysforteam(D, A)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplaysforteam(F, G)'}, {'true,true': [0.0, 4, 0], 'true,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.409, 3, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 7, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.406, 3, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'athleteplayssport(D, A)', 'false,false': 'teamplaysinleague(B, E)', 'false,false,false': 'athleteplaysforteam(F, A)'}, {'true': [1.86e-09, 7, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.0, 2, 2], 'false,false,false,false': [0.943, 1, 8]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)', 'false,false': 'athleteplayssport(E, F), athleteplayssport(G, A)', 'false,false,false': 'teamplaysinleague(B, H)'}, {'true': [0.0, 7, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.422, 3, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)'}, {'true,true': [2.63e-09, 7, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.395, 3, 10]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplayssport(D, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'teamplaysinleague(B, G)', 'false,false,false': 'athleteplaysforteam(H, A)'}, {'true': [1.004, 6, 2], 'false,true': [0.0, 3, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.943, 1, 8]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)'}, {'true': [0.003, 7, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.389, 3, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'athleteplaysforteam(C, D), teamplaysinleague(B, D)', 'true,false': 'teamplaysinleague(B, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'athleteplaysforteam(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'true,false,false': [1.069, 2, 5], 'false,true': [0.0, 3, 0], 'false,false,true': [0.913, 1, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(E, A), athleteplaysforteam(E, F)', 'false,false,false': 'teamplaysinleague(B, G)'}, {'true': [0.002, 7, 0], 'false,true': [1.071, 2, 5], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.913, 1, 5]}]
{'': [-7.93016446160826e-18, 0.1775147928994082], 'false': [nan, 0.1775147928994082], 'false,false': [0.25, 0.09876543209876527], 'false,false,true': [nan, 0.25], 'false,false,false': [nan, 0.09876543209876527]}
{'': [-1.982541115402065e-18, 0.1673159156460301], 'false': [nan, 0.1673159156460301], 'false,false': [0.1673159156460301, nan], 'true': [0.0, 0.0]}
{'': [-1.982541115402065e-18, 0.1648963865041374], 'false': [nan, 0.1648963865041374], 'false,false': [0.1648963865041374, nan], 'true': [-1.982541115402065e-18, nan]}
{'': [0.0, 0.16371200061894825], 'false': [nan, 0.16371200061894825], 'false,false': [nan, 0.16371200061894825], 'false,false,false': [0.25000000000000006, 0.0987654320987655]}
{'': [0.0, 0.15559366301849395], 'false': [nan, 0.15559366301849395], 'false,false': [nan, 0.15559366301849395], 'false,false,false': [nan, 0.15559366301849395]}
{'': [9.912705577010326e-19, 0.1557709052514967], 'false': [nan, 0.1557709052514967], 'true': [9.912705577010326e-19, nan]}
{'': [0.12601806555450573, 0.08985005511773031], 'false': [0.0, 0.09876543209876545], 'false,false': [nan, 0.09876543209876545], 'false,false,false': [nan, 0.09876543209876545]}
{'': [1.1805756775288913e-06, 0.15147053695287874], 'false': [nan, 0.15147053695287874]}
{'': [0.10984807802862853, 0.09809407986153065], 'true': [nan, 0.10984807802862853], 'true,false': [0.0, 0.1631016745444262], 'false': [-5.782411586589357e-19, 0.1388888888888889], 'false,false': [0.1388888888888889, nan]}
{'': [8.063919624605255e-07, 0.15236126764972882], 'false': [0.1639082407767901, 0.13888888888888887], 'false,false': [nan, 0.13888888888888887], 'false,false,false': [nan, 0.13888888888888887]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;true;athleteplaysforteam(D, A).;true;true
2;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteplayssport(D, E).;true;true
6;false;teamplaysinleague(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
8;true;teamplaysinleague(B, E).;true;true
8;false;teamplaysinleague(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true


Refining candidate
***************************
Model training time 17.08280897140503
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( teamplaysagainstteam(F, A) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then if ( athleteplaysforteam(F, A), athleteledsportsteam(F, G) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.036637033414359164;  // std dev = 0.316, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( teamplaysinleague(B, H) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysinleague(A, I), athleteplayssport(J, B) )
%   | | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.13762409804162873;  // std dev = 0.250, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysagainstteam(A, D), teamplaysagainstteam(D, A) )
%   | then return -0.07873334712374803;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( teamplaysagainstteam(A, F) )
%   | | then return 0.19311246884536096;  // std dev = 0.023, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.18068256096208926;  // std dev = 0.012, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.08136142844033482;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.0720139751301217;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( athleteplayssport(E, B), athleteledsportsteam(E, F) )
%   | | then return 0.16480872118061513;  // std dev = 0.020, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.0029257565519014337;  // std dev = 0.183, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamplaysinleague(B, G) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.11625637359336265;  // std dev = 0.218, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysagainstteam(A, D), teamplaysagainstteam(D, A) )
%   | then return -0.068472041402244;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06413805536759705;  // std dev = 0.000186, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( teamplaysagainstteam(F, A), teamalsoknownas(F, G) )
%   | | then return 0.14654593159359278;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.14102655930531044;  // std dev = 0.010, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.07871165068470151;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning 316.9452419281006
Refined model CLL: -0.101487


******************************************
Best model found
******************************************
Results 

CLL : -0.10043 

AUC ROC : 0.989864 

AUC PR : 0.154065 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 17.08280897140503 

Total Inference Time : 1.0269198417663574 

Total revision time: 20.438153505325317
Best scored revision CLL: -0.101487


Results 

CLL : -0.10043 

AUC ROC : 0.989864 

AUC PR : 0.154065 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 20.570786237716675 

Total Inference Time : 1.0269198417663574 

Amount of data: 15
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.741891622543335
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( teamplaysinleague(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, A) )
%   | | then if ( teamplaysagainstteam(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( teamplaysinleague(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7867203636709409;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(F, G) )
%   | | then return 0.5836791880124685;  // std dev = 0.359, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.4605561019079223;  // std dev = 0.355, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, A) )
%   | | | then return 0.09811468988635608;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.42083313310046827;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F), athleteplayssport(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2634655498404449;  // std dev = 1.453, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.08518475138839687;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2018986526757745;  // std dev = 0.343, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then return -0.06381444398655574;  // std dev = 1.002, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( teamplaysinleague(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21410977592018426;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.07375730953736416;  // std dev = 0.002, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12850187323520176;  // std dev = 0.338, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(C, D), teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return -0.06935393241674466;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.0818153642049828;  // std dev = 1.075, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.06839440613383473;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( athleteplaysforteam(G, H) )
%   | | then return 0.1210144110760091;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.06458608275617363;  // std dev = 0.001, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0.06489384997467001;  // std dev = 1.078, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( teamplaysagainstteam(E, A), athleteplaysforteam(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10088391014023981;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
Inference time using transfer learning 40.477943658828735
Parameter learned model CLL:-0.266734 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(D, B)', 'false,false': 'athleteplaysforteam(E, A)', 'false,false,true': 'teamplaysagainstteam(E, A)', 'false,false,false': 'teamplaysinleague(B, F)'}, {'true': [0.0, 12, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.0, 2, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.964, 1, 13]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'athleteplaysforteam(D, A)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplaysforteam(F, G)'}, {'true,true': [0.0, 6, 0], 'true,false': [0.0, 6, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.359, 3, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [9.13e-09, 12, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.355, 3, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'athleteplayssport(D, A)', 'false,false': 'teamplaysinleague(B, E)', 'false,false,false': 'athleteplaysforteam(F, A)'}, {'true': [0.0, 12, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.0, 2, 2], 'false,false,false,false': [0.964, 1, 13]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)', 'false,false': 'athleteplayssport(E, F), athleteplayssport(G, A)', 'false,false,false': 'teamplaysinleague(B, H)'}, {'true': [0.0, 12, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.453, 3, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)'}, {'true,true': [5.27e-09, 12, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.343, 3, 15]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplayssport(D, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'teamplaysinleague(B, G)', 'false,false,false': 'athleteplaysforteam(H, A)'}, {'true': [1.002, 8, 2], 'false,true': [0.0, 6, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.964, 1, 13]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)'}, {'true': [0.002, 12, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.338, 3, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'athleteplaysforteam(C, D), teamplaysinleague(B, D)', 'true,false': 'teamplaysinleague(B, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'athleteplaysforteam(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [1.86e-09, 6, 0], 'true,false,false': [1.075, 2, 6], 'false,true': [0.0, 6, 0], 'false,false,true': [0.949, 1, 9], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(E, A), athleteplaysforteam(E, F)', 'false,false,false': 'teamplaysinleague(B, G)'}, {'true': [0.001, 12, 0], 'false,true': [1.078, 2, 6], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.949, 1, 9]}]
{'': [-1.1564823173178714e-17, 0.1388888888888886], 'false': [nan, 0.1388888888888886], 'false,false': [0.25, 0.06632653061224467], 'false,false,true': [nan, 0.25], 'false,false,false': [nan, 0.06632653061224467]}
{'': [2.3129646346357427e-18, 0.12874026644636688], 'false': [nan, 0.12874026644636688], 'false,false': [0.12874026644636688, nan], 'true': [-2.3129646346357427e-18, -2.3129646346357427e-18]}
{'': [6.938893903907228e-18, 0.1262020816488871], 'false': [nan, 0.1262020816488871], 'false,false': [0.1262020816488871, nan], 'true': [6.938893903907228e-18, nan]}
{'': [0.0, 0.1251436066523332], 'false': [nan, 0.1251436066523332], 'false,false': [nan, 0.1251436066523332], 'false,false,false': [0.25, 0.06632653061224489]}
{'': [2.3129646346357427e-18, 0.11736452330692365], 'false': [nan, 0.11736452330692365], 'false,false': [nan, 0.11736452330692365], 'false,false,false': [nan, 0.11736452330692365]}
{'': [2.3129646346357427e-18, 0.11777338256375616], 'false': [nan, 0.11777338256375616], 'true': [2.3129646346357427e-18, nan]}
{'': [0.10033580611422403, 0.06444290059432896], 'false': [-1.1564823173178713e-18, 0.06632653061224486], 'false,false': [nan, 0.06632653061224486], 'false,false,false': [nan, 0.06632653061224486]}
{'': [2.6120662407457435e-07, 0.11391814651410363], 'false': [nan, 0.11391814651410363]}
{'': [0.08809723194056647, 0.06465836719613254], 'true': [nan, 0.08809723194056647], 'true,false': [5.782411586589357e-19, 0.1443763746498022], 'false': [-5.782411586589357e-19, 0.09000000000000001], 'false,false': [0.09000000000000001, nan]}
{'': [1.7891334692758665e-07, 0.11488221108087325], 'false': [0.1452653724704529, 0.09000000000000001], 'false,false': [nan, 0.09000000000000001], 'false,false,false': [nan, 0.09000000000000001]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;true;athleteplaysforteam(D, A).;true;true
2;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteplayssport(D, E).;true;true
6;false;teamplaysinleague(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
8;true;teamplaysinleague(B, E).;true;true
8;false;teamplaysinleague(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true


Refining candidate
***************************
Model training time 26.354318141937256
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteledsportsteam(D, A) )
%   | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( teamalsoknownas(A, F) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteledsportsteam(D, A) )
%   | then return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteledsportsteam(D, A) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplaysforteam(E, A) )
%   | | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(F, B) )
%   | then if ( teamplaysagainstteam(A, G) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( teamalsoknownas(A, H) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then if ( athleteplaysforteam(F, A), athleteledsportsteam(F, G) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.036637033414359164;  // std dev = 0.316, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( teamplaysinleague(B, H) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( teamplaysinleague(A, I), athleteplayssport(J, B) )
%   | | then return 0.2097577156325356;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.1520508215598101;  // std dev = 0.258, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysagainstteam(A, D), teamplaysagainstteam(D, A) )
%   | then return -0.07653849857958364;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | | then return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(G, B) )
%   | then if ( teamplaysagainstteam(A, H), teamalsoknownas(H, I) )
%   | | then return 0.19486506266191025;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamplaysinleague(A, J) )
%   | | | then return 0.17709649774527736;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.18566357503395048;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.08175508210147615;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.0708229691963257;  // std dev = 0.009, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( athleteplayssport(E, B), athleteledsportsteam(E, F) )
%   | | then return 0.1620628667862272;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.0030977308559578995;  // std dev = 0.183, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamplaysinleague(B, G) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( teamplaysinleague(A, H), athleteplayssport(I, B) )
%   | | then return 0.15274385809367097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.09840130056722934;  // std dev = 0.211, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A), athleteplaysinleague(D, E) )
%   | then return -0.06679277680967126;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | | then return -0.06407822167213172;  // std dev = 0.000278, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(H, B) )
%   | then if ( teamplaysinleague(A, I), athleteledsportsteam(H, J) )
%   | | then if ( teamplaysagainstteam(A, K), teamalsoknownas(K, L) )
%   | | | then return 0.14488314300052918;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1338530615470028;  // std dev = 0.000998, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.14609420759476782;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.07859527601600075;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning 312.2636411190033
Refined model CLL: -0.099184


******************************************
Best model found
******************************************
Results 

CLL : -0.100697 

AUC ROC : 0.989539 

AUC PR : 0.130802 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 26.354318141937256 

Total Inference Time : 1.080254316329956 

Total revision time: 30.017571210861206
Best scored revision CLL: -0.099184


Results 

CLL : -0.100697 

AUC ROC : 0.989539 

AUC PR : 0.130802 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 30.150203943252563 

Total Inference Time : 1.080254316329956 

Amount of data: 20
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.8586316108703613
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( teamplaysinleague(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, A) )
%   | | then if ( teamplaysagainstteam(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( teamplaysinleague(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7002541982574071;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(F, G) )
%   | | then return 0.5577524253340185;  // std dev = 0.398, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.44181966919472904;  // std dev = 0.397, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplayssport(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, A) )
%   | | | then return 0.2351368617816428;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.36712776886590687;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926094;  // std dev = 1.86e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F), athleteplayssport(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.25200601077529344;  // std dev = 1.976, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.08518475138839685;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19090781104476007;  // std dev = 0.395, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then return -0.011313652171304107;  // std dev = 1.184, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( teamplaysinleague(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17173329692932118;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.07544580730846721;  // std dev = 0.009, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1193902024652018;  // std dev = 0.394, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(C, D), teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return -0.072153780943233;  // std dev = 0.004, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.13254231230980956;  // std dev = 1.207, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.06828689915047685;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( athleteplaysforteam(G, H) )
%   | | then return 0.06874654832304848;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.06588252269012032;  // std dev = 0.008, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0.10413728761537144;  // std dev = 1.209, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else if ( teamplaysagainstteam(E, A), athleteplaysforteam(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05545292560833181;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
Inference time using transfer learning 42.06076788902283
Parameter learned model CLL:-0.334777 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(D, B)', 'false,false': 'athleteplaysforteam(E, A)', 'false,false,true': 'teamplaysagainstteam(E, A)', 'false,false,false': 'teamplaysinleague(B, F)'}, {'true': [0.0, 15, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.155, 2, 4], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.589, 3, 16]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'athleteplaysforteam(D, A)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplaysforteam(F, G)'}, {'true,true': [0.0, 7, 0], 'true,false': [0.0, 8, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.398, 5, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [1.39e-08, 15, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.397, 5, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'athleteplayssport(D, A)', 'false,false': 'teamplaysinleague(B, E)', 'false,false,false': 'athleteplaysforteam(F, A)'}, {'true': [0.0, 15, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.155, 2, 4], 'false,false,false,false': [1.589, 3, 16]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)', 'false,false': 'athleteplayssport(E, F), athleteplayssport(G, A)', 'false,false,false': 'teamplaysinleague(B, H)'}, {'true': [1.86e-09, 15, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.976, 5, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)'}, {'true,true': [9.13e-09, 15, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.395, 5, 20]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplayssport(D, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'teamplaysinleague(B, G)', 'false,false,false': 'athleteplaysforteam(H, A)'}, {'true': [1.184, 9, 4], 'false,true': [0.0, 8, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.589, 3, 16]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)'}, {'true': [0.009, 15, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.394, 5, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'athleteplaysforteam(C, D), teamplaysinleague(B, D)', 'true,false': 'teamplaysinleague(B, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'athleteplaysforteam(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.004, 8, 0], 'true,false,false': [1.207, 2, 8], 'false,true': [0.0, 7, 0], 'false,false,true': [1.549, 3, 12], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(E, A), athleteplaysforteam(E, F)', 'false,false,false': 'teamplaysinleague(B, G)'}, {'true': [0.008, 15, 0], 'false,true': [1.209, 2, 8], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.549, 3, 12]}]
{'': [-1.4802973661668754e-17, 0.16000000000000014], 'false': [nan, 0.16000000000000014], 'false,false': [0.22222222222222213, 0.13296398891966726], 'false,false,true': [nan, 0.22222222222222213], 'false,false,false': [nan, 0.13296398891966726]}
{'': [3.7007434154171884e-18, 0.15816937393725503], 'false': [nan, 0.15816937393725503], 'false,false': [0.15816937393725503, nan], 'true': [-1.982541115402065e-18, 0.0]}
{'': [1.295260195396016e-17, 0.15774344790653333], 'false': [nan, 0.15774344790653333], 'false,false': [0.15774344790653333, nan], 'true': [1.295260195396016e-17, nan]}
{'': [-5.551115123125783e-18, 0.1575636646707346], 'false': [nan, 0.1575636646707346], 'false,false': [nan, 0.1575636646707346], 'false,false,false': [0.22222222222222224, 0.1329639889196677]}
{'': [3.7007434154171884e-18, 0.15617280563363814], 'false': [nan, 0.15617280563363814], 'false,false': [nan, 0.15617280563363814], 'false,false,false': [nan, 0.15617280563363814]}
{'': [5.551115123125783e-18, 0.15625475550221643], 'false': [nan, 0.15625475550221643], 'true': [5.551115123125783e-18, nan]}
{'': [0.10787391780559369, 0.10665202988366351], 'false': [0.0, 0.13296398891966757], 'false,false': [nan, 0.13296398891966757], 'false,false,false': [nan, 0.13296398891966757]}
{'': [5.529324541344213e-06, 0.15515277087770302], 'false': [nan, 0.15515277087770302]}
{'': [0.09129178430968338, 0.11316468471338914], 'false': [-9.912705577010326e-19, 0.16], 'false,false': [0.16, nan], 'true': [nan, 0.09129178430968338], 'true,false': [2.136110685593308e-06, 0.14570106260530008]}
{'': [3.885952625325613e-06, 0.15508207483086445], 'false': [0.14628308681474164, 0.16000000000000003], 'false,false': [nan, 0.16000000000000003], 'false,false,false': [nan, 0.16000000000000003]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;true;athleteplaysforteam(D, A).;true;true
2;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteplayssport(D, E).;true;true
6;false;teamplaysinleague(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
8;true;teamplaysinleague(B, E).;true;true
8;false;teamplaysinleague(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true


Refining candidate
***************************
Model training time 44.204185247421265
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysinleague(E, D) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(F, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamalsoknownas(A, E) )
%   | | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( teamplaysagainstteam(A, F) )
%   | | | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysinleague(E, D) )
%   | | then return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(F, B) )
%   | then if ( teamplaysagainstteam(G, A) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.3207118471601497;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysinleague(E, D) )
%   | | then if ( athleteplaysforteam(E, A) )
%   | | | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(F, B) )
%   | then if ( athleteledsportsteam(G, A) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamalsoknownas(A, H) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2551722425694894;  // std dev = 2.11e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then if ( athleteplayssport(F, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( athleteledsportsteam(G, A) )
%   | | then return -0.07877675473109175;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07877675473109175;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysinleague(B, H) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( athleteplayssport(I, B) )
%   | | then return 0.20975771563253562;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.07877675473109177;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysinleague(E, D) )
%   | | then if ( athleteplaysforteam(E, A) )
%   | | | then return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(F, B) )
%   | then return 0.17709649774527744;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( athleteplayssport(E, B), athleteledsportsteam(E, F) )
%   | | then if ( teamplaysagainstteam(A, F) )
%   | | | then return 0.15274385809367075;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.15274385809367075;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.005296634135088435;  // std dev = 0.181, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamplaysinleague(B, G) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( athleteplayssport(H, B) )
%   | | then return 0.15274385809367078;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysinleague(E, D) )
%   | | then return -0.06419184008202619;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(F, B) )
%   | then if ( teamplaysagainstteam(G, A), athleteledsportsteam(H, G) )
%   | | then return 0.13761755678641577;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.13400703000801117;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.06602125729038497;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning 238.2442615032196
Refined model CLL: -0.095268


******************************************
Best model found
******************************************
Results 

CLL : -0.098269 

AUC ROC : 0.994654 

AUC PR : 0.233813 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 44.204185247421265 

Total Inference Time : 1.0423388481140137 

Total revision time: 47.95817947387695
Best scored revision CLL: -0.095268


Results 

CLL : -0.098269 

AUC ROC : 0.994654 

AUC PR : 0.233813 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 48.09081220626831 

Total Inference Time : 1.0423388481140137 

Amount of data: 25
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 2.16764497756958
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( teamplaysinleague(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, A) )
%   | | then if ( teamplaysagainstteam(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5248156017661789;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( teamplaysinleague(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7217852987358758;  // std dev = 1.610, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(F, G) )
%   | | then return 0.5629061965356837;  // std dev = 0.392, 31.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.11231637819360635;  // std dev = 1.67e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.44552390783074103;  // std dev = 0.391, 31.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.10159632948783635;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( athleteplayssport(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, A) )
%   | | | then return 0.232962582652744;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.38107543623808743;  // std dev = 1.610, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926093;  // std dev = 2.63e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F), athleteplayssport(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2541166876393549;  // std dev = 2.161, 31.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.08518475138839683;  // std dev = 1.29e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19280008420704492;  // std dev = 0.388, 31.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then return -0.006973530287930306;  // std dev = 1.447, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.07877675473109179;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( teamplaysinleague(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18267190328975025;  // std dev = 1.610, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.07562693290361795;  // std dev = 0.011, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12175539508844943;  // std dev = 0.386, 31.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(C, D), teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return -0.07204474799063285;  // std dev = 0.006, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.10509782600058333;  // std dev = 1.460, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.06879890001947737;  // std dev = 0.004, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( athleteplaysforteam(G, H) )
%   | | then return 0.09013957546873837;  // std dev = 1.581, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.06602237967156784;  // std dev = 0.009, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0.08234815219965655;  // std dev = 1.462, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | else if ( teamplaysagainstteam(E, A), athleteplaysforteam(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0733160103037228;  // std dev = 1.581, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
Inference time using transfer learning 38.95169806480408
Parameter learned model CLL:-0.32528 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(D, B)', 'false,false': 'athleteplaysforteam(E, A)', 'false,false,true': 'teamplaysagainstteam(E, A)', 'false,false,false': 'teamplaysinleague(B, F)'}, {'true': [0.0, 19, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.414, 3, 6], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.61, 3, 19]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'athleteplaysforteam(D, A)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplaysforteam(F, G)'}, {'true,true': [0.0, 9, 0], 'true,false': [5.27e-09, 10, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.392, 6, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [1.67e-08, 19, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.391, 6, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'athleteplayssport(D, A)', 'false,false': 'teamplaysinleague(B, E)', 'false,false,false': 'athleteplaysforteam(F, A)'}, {'true': [0.0, 19, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.414, 3, 6], 'false,false,false,false': [1.61, 3, 19]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)', 'false,false': 'athleteplayssport(E, F), athleteplayssport(G, A)', 'false,false,false': 'teamplaysinleague(B, H)'}, {'true': [2.63e-09, 19, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.161, 6, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)'}, {'true,true': [1.29e-08, 19, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.388, 6, 25]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplayssport(D, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'teamplaysinleague(B, G)', 'false,false,false': 'athleteplaysforteam(H, A)'}, {'true': [1.447, 12, 6], 'false,true': [0.0, 10, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.61, 3, 19]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)'}, {'true': [0.011, 19, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.386, 6, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'athleteplaysforteam(C, D), teamplaysinleague(B, D)', 'true,false': 'teamplaysinleague(B, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'athleteplaysforteam(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.006, 10, 0], 'true,false,false': [1.46, 3, 10], 'false,true': [0.004, 9, 0], 'false,false,true': [1.581, 3, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(E, A), athleteplaysforteam(E, F)', 'false,false,false': 'teamplaysinleague(B, G)'}, {'true': [0.009, 19, 0], 'false,true': [1.462, 3, 10], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.581, 3, 15]}]
{'': [0.0, 0.15608740894901246], 'false': [nan, 0.15608740894901246], 'false,false': [0.22222222222222218, 0.11776859504132219], 'false,false,true': [nan, 0.22222222222222218], 'false,false,false': [nan, 0.11776859504132219]}
{'': [0.0, 0.15346749103619545], 'false': [nan, 0.15346749103619545], 'false,false': [0.15346749103619545, nan], 'true': [0.0, 2.7755575615628915e-18]}
{'': [1.460819769243627e-17, 0.15286131500990693], 'false': [nan, 0.15286131500990693], 'false,false': [0.15286131500990693, nan], 'true': [1.460819769243627e-17, nan]}
{'': [-5.843279076974508e-18, 0.15261372576776924], 'false': [nan, 0.15261372576776924], 'false,false': [nan, 0.15261372576776924], 'false,false,false': [0.22222222222222215, 0.11776859504132235]}
{'': [7.304098846218135e-18, 0.15064716525785213], 'false': [nan, 0.15064716525785213], 'false,false': [nan, 0.15064716525785213], 'false,false,false': [nan, 0.15064716525785213]}
{'': [8.764918615461762e-18, 0.15077741791607233], 'false': [nan, 0.15077741791607233], 'true': [8.764918615461762e-18, nan]}
{'': [0.1162668141515461, 0.09565163972743046], 'false': [-1.3877787807814458e-18, 0.1177685950413224], 'false,false': [nan, 0.1177685950413224], 'false,false,false': [nan, 0.1177685950413224]}
{'': [6.2975183197600566e-06, 0.1493427735527123], 'false': [nan, 0.1493427735527123]}
{'': [0.10045112964940714, 0.09820697657423284], 'true': [nan, 0.10045112964940714], 'true,false': [3.552041012277324e-06, 0.16407523985776995], 'false': [2.1926179088140196e-06, 0.13888888888888884], 'false,false': [0.13888888888888884, nan]}
{'': [4.604472093481424e-06, 0.1496541321123825], 'false': [0.16451248470617402, 0.13888888888888892], 'false,false': [nan, 0.13888888888888892], 'false,false,false': [nan, 0.13888888888888892]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;true;athleteplaysforteam(D, A).;true;true
2;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteplayssport(D, E).;true;true
6;false;teamplaysinleague(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
8;true;teamplaysinleague(B, E).;true;true
8;false;teamplaysinleague(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true


Refining candidate
***************************
Model training time 57.60396766662598
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysinleague(E, D) )
%   | | then if ( athleteplaysforteam(E, A) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(F, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.10159632948783633;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysinleague(E, D) )
%   | | then return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(F, B) )
%   | then if ( athleteledsportsteam(F, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( teamplaysagainstteam(G, A) )
%   | | | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.3207118471601497;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysinleague(E, D) )
%   | | then if ( athleteplaysforteam(E, A) )
%   | | | then return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(F, B) )
%   | then return 0.25517224256948956;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then if ( athleteplayssport(F, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( athleteledsportsteam(G, A) )
%   | | then return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( teamplaysinleague(B, H) )
%   | then return -0.07877675473109172;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( athleteplayssport(I, B) )
%   | | then return 0.20975771563253562;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.07324622576333704;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527747;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysinleague(B, D) )
%   | then if ( athleteledsportsteam(E, A) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.15274385809367078;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysinleague(B, G) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( athleteplayssport(H, B) )
%   | | then return 0.1527438580936708;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysinleague(E, D) )
%   | | then if ( athleteplaysforteam(E, A) )
%   | | | then return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(F, B) )
%   | then return 0.13400703000801117;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning 238.92720365524292
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results 

CLL : -0.098354 

AUC ROC : 0.98755 

AUC PR : 0.124187 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 57.60396766662598 

Total Inference Time : 0.9292128086090088 

Total revision time: 61.588735580444336
Best scored revision CLL: -0.094637


Results 

CLL : -0.098354 

AUC ROC : 0.98755 

AUC PR : 0.124187 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 61.72136831283569 

Total Inference Time : 0.9292128086090088 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 264
Target train neg examples: 106660

Target test facts examples: 9691
Target test pos examples: 133
Target test neg examples: 53331

Amount of data: 5
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.2233498096466064
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysinleague(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, A) )
%   | | then if ( teamplaysagainstteam(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( teamplaysinleague(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, A) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F), athleteplayssport(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then return -0.006643137140184947;  // std dev = 0.250, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.07877675473109177;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( teamplaysinleague(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.07627609198731886;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18384939847158488;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(C, D), teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return -0.07296552619009876;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.166881142670952;  // std dev = 0.021, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.06823409221672942;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( athleteplaysforteam(G, H) )
%   | | then return 0.15187199161920562;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.0665173838459683;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0.14498111714526118;  // std dev = 0.019, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( teamplaysagainstteam(E, A), athleteplaysforteam(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13332600881056067;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
Inference time using transfer learning 39.942723751068115
Parameter learned model CLL:-0.097564 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(D, B)', 'false,false': 'athleteplaysforteam(E, A)', 'false,false,true': 'teamplaysagainstteam(E, A)', 'false,false,false': 'teamplaysinleague(B, F)'}, {'true': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 4]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'athleteplaysforteam(D, A)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplaysforteam(F, G)'}, {'true,true': [0.0, 3, 0], 'true,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 5, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'athleteplayssport(D, A)', 'false,false': 'teamplaysinleague(B, E)', 'false,false,false': 'athleteplaysforteam(F, A)'}, {'true': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 4]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)', 'false,false': 'athleteplayssport(E, F), athleteplayssport(G, A)', 'false,false,false': 'teamplaysinleague(B, H)'}, {'true': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)'}, {'true,true': [0.0, 5, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 0, 5]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplayssport(D, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'teamplaysinleague(B, G)', 'false,false,false': 'athleteplaysforteam(H, A)'}, {'true': [0.25, 3, 1], 'false,true': [0.0, 2, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 4]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)'}, {'true': [0.006, 5, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.014, 0, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'athleteplaysforteam(C, D), teamplaysinleague(B, D)', 'true,false': 'teamplaysinleague(B, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'athleteplaysforteam(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 3, 0], 'true,false,false': [0.021, 0, 2], 'false,true': [0.0, 2, 0], 'false,false,true': [0.0, 0, 3], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(E, A), athleteplaysforteam(E, F)', 'false,false,false': 'teamplaysinleague(B, G)'}, {'true': [0.005, 5, 0], 'false,true': [0.019, 0, 2], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 3]}]
{'': [-2.7755575615628915e-18, 0.0], 'false': [nan, 0.0], 'false,false': [0.0, 0.0], 'false,false,true': [nan, 0.0], 'false,false,false': [nan, 0.0]}
{'': [0.0, 0.0], 'true': [0.0, 0.0], 'false': [nan, 0.0], 'false,false': [0.0, nan]}
{'': [0.0, -4.4408920985006264e-17], 'true': [0.0, nan], 'false': [nan, -4.4408920985006264e-17], 'false,false': [-4.4408920985006264e-17, nan]}
{'': [0.0, 4.4408920985006264e-17], 'false': [nan, 4.4408920985006264e-17], 'false,false': [nan, 4.4408920985006264e-17], 'false,false,false': [0.0, 0.0]}
{'': [0.0, -2.2204460492503132e-17], 'false': [nan, -2.2204460492503132e-17], 'false,false': [nan, -2.2204460492503132e-17], 'false,false,false': [nan, -2.2204460492503132e-17]}
{'': [0.0, 0.0], 'true': [0.0, nan], 'false': [nan, 0.0]}
{'': [0.01560977636025355, 0.018500475686226432], 'false': [0.0, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [nan, 0.0]}
{'': [6.120059556817547e-06, 0.00018240667287746092], 'false': [nan, 0.00018240667287746092]}
{'': [0.013896451741415867, 0.011627205153982], 'true': [nan, 0.013896451741415867], 'true,false': [0.0, 0.00022527461529413956], 'false': [0.0, 0.0], 'false,false': [0.0, nan]}
{'': [4.152525916158861e-06, 0.00010421059559890256], 'false': [0.00017902155882109153, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
0;false;athleteplaysforteam(E, A).;true;true
1;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;true;athleteplaysforteam(D, A).;true;true
2;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
3;false;athleteplaysforteam(F, A).;true;true
4;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteplayssport(D, E).;true;true
6;false;teamplaysinleague(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
8;true;teamplaysinleague(B, E).;true;true
8;false;teamplaysinleague(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
9;false;teamplaysagainstteam(D, A).;true;true


Refining candidate
***************************
Model training time 0.8972022533416748
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then return -0.006643137140184947;  // std dev = 0.250, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.07877675473109177;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.07627609198731886;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.18384939847158488;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.07296552619009876;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.166881142670952;  // std dev = 0.021, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( teamplaysinleague(B, E) )
%   | then return -0.06823409221672942;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.15187199161920562;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.0665173838459683;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0.14498111714526118;  // std dev = 0.019, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.13332600881056067;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
Inference time using transfer learning 13.919938564300537
Refined model CLL: -0.097564


******************************************
Best model found
******************************************
Results 

CLL : -0.569263 

AUC ROC : 0.875414 

AUC PR : 0.009996 

Precision : 0.009735 

Recall : 1.0 

F1 : 0.019282 

Total Learning Time : 0.8972022533416748 

Total Inference Time : 0.6508896350860596 

Total revision time: 3.455008029937744
Best scored revision CLL: -0.097564


Results 

CLL : -0.569263 

AUC ROC : 0.875414 

AUC PR : 0.009996 

Precision : 0.009735 

Recall : 1.0 

F1 : 0.019282 

Total Learning Time : 3.5876407623291016 

Total Inference Time : 0.6508896350860596 

Amount of data: 10
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.3815803527832031
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( teamplaysinleague(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, A) )
%   | | then if ( teamplaysagainstteam(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( teamplaysinleague(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(F, G) )
%   | | then return 0.6464578760543233;  // std dev = 0.286, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.504443303574423;  // std dev = 0.286, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.10159632948783627;  // std dev = 1.32e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, A) )
%   | | | then return 0.44792697439889084;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.36442369080602666;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F), athleteplayssport(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.28733338898037314;  // std dev = 0.947, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2225498795414146;  // std dev = 0.286, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then return 0.02662314956908074;  // std dev = 0.365, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( teamplaysinleague(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16332194946248535;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.07657262254040756;  // std dev = 0.011, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15031711133017725;  // std dev = 0.287, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(C, D), teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return -0.07522729088214411;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.04666199940387026;  // std dev = 0.909, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.0682152417512561;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( athleteplaysforteam(G, H) )
%   | | then return 0.2165501276072269;  // std dev = 7.45e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.0667397677934032;  // std dev = 0.009, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0.03893688414124937;  // std dev = 0.909, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( teamplaysagainstteam(E, A), athleteplaysforteam(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18206261045845873;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
Inference time using transfer learning 42.445911169052124
Parameter learned model CLL:-0.206956 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(D, B)', 'false,false': 'athleteplaysforteam(E, A)', 'false,false,true': 'teamplaysagainstteam(E, A)', 'false,false,false': 'teamplaysinleague(B, F)'}, {'true': [0.0, 9, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.943, 1, 8]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'athleteplaysforteam(D, A)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplaysforteam(F, G)'}, {'true,true': [0.0, 4, 0], 'true,false': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.286, 1, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 9, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.286, 1, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'athleteplayssport(D, A)', 'false,false': 'teamplaysinleague(B, E)', 'false,false,false': 'athleteplaysforteam(F, A)'}, {'true': [1.32e-09, 9, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [0.943, 1, 8]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)', 'false,false': 'athleteplayssport(E, F), athleteplayssport(G, A)', 'false,false,false': 'teamplaysinleague(B, H)'}, {'true': [0.0, 9, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.947, 1, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)'}, {'true,true': [3.73e-09, 9, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.286, 1, 10]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplayssport(D, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'teamplaysinleague(B, G)', 'false,false,false': 'athleteplaysforteam(H, A)'}, {'true': [0.365, 4, 2], 'false,true': [0.0, 5, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.943, 1, 8]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)'}, {'true': [0.011, 9, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.287, 1, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'athleteplaysforteam(C, D), teamplaysinleague(B, D)', 'true,false': 'teamplaysinleague(B, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'athleteplaysforteam(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'true,false,false': [0.909, 1, 5], 'false,true': [0.0, 5, 0], 'false,false,true': [7.45e-09, 0, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(E, A), athleteplaysforteam(E, F)', 'false,false,false': 'teamplaysinleague(B, G)'}, {'true': [0.009, 9, 0], 'false,true': [0.909, 1, 5], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 5]}]
{'': [-9.25185853854297e-18, 0.0826446280991734], 'false': [nan, 0.0826446280991734], 'false,false': [0.0, 0.09876543209876527], 'false,false,false': [nan, 0.09876543209876527], 'false,false,true': [nan, 0.0]}
{'': [0.0, 0.08199280714591183], 'false': [nan, 0.08199280714591183], 'false,false': [0.08199280714591183, nan], 'true': [0.0, 0.0]}
{'': [-1.5419764230904951e-18, 0.08186217918374866], 'false': [nan, 0.08186217918374866], 'false,false': [0.08186217918374866, nan], 'true': [-1.5419764230904951e-18, nan]}
{'': [3.0839528461809902e-18, 0.08184535659877691], 'false': [nan, 0.08184535659877691], 'false,false': [nan, 0.08184535659877691], 'false,false,false': [0.0, 0.09876543209876545]}
{'': [0.0, 0.08145813693545155], 'false': [nan, 0.08145813693545155], 'false,false': [nan, 0.08145813693545155], 'false,false,false': [nan, 0.08145813693545155]}
{'': [1.5419764230904951e-18, 0.08154230706606386], 'false': [nan, 0.08154230706606386], 'true': [1.5419764230904951e-18, nan]}
{'': [0.022218279652971042, 0.07694885030711149], 'false': [-6.938893903907229e-19, 0.0987654320987654], 'false,false': [nan, 0.0987654320987654], 'false,false,false': [nan, 0.0987654320987654]}
{'': [1.3831144398132754e-05, 0.08231396535905794], 'false': [nan, 0.08231396535905794]}
{'': [0.08626717418405698, 0.020272828896468316], 'true': [nan, 0.08626717418405698], 'true,false': [0.0, 0.13783582400552366], 'false': [0.0, 1.1102230246251566e-17], 'false,false': [1.1102230246251566e-17, nan]}
{'': [9.34874621071906e-06, 0.08027724818577019], 'false': [0.13786360340095954, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
0;false;athleteplaysforteam(E, A).;true;true
1;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;true;athleteplaysforteam(D, A).;true;true
2;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
3;false;athleteplaysforteam(F, A).;true;true
4;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteplayssport(D, E).;true;true
6;false;teamplaysinleague(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
8;true;teamplaysinleague(B, E).;true;true
8;false;teamplaysinleague(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
9;false;teamplaysagainstteam(D, A).;true;true


Refining candidate
***************************
Model training time 2.2654924392700195
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( teamplaysagainstteam(A, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysagainstteam(A, E), teamalsoknownas(F, E) )
%   | then return 0.5005511758931249;  // std dev = 0.832, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.7283527732630031;  // std dev = 0.058, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( teamplaysagainstteam(D, A), athleteplayssport(E, B) )
%   | then return 0.6176465384532103;  // std dev = 0.095, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.40839767625608187;  // std dev = 0.793, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamalsoknownas(A, D) )
%   | then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplaysforteam(E, A) )
%   | then return 0.45602723455609495;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( teamplaysagainstteam(A, F) )
%   | | then return 0.2040063248467466;  // std dev = 0.752, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.44291002119196987;  // std dev = 0.047, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( teamplaysagainstteam(A, D), athleteplayssport(E, B) )
%   | then return 0.40347901293879307;  // std dev = 0.120, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( teamalsoknownas(A, F) )
%   | | then return 0.3343189996513425;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.07731745887999784;  // std dev = 0.658, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysagainstteam(A, E), teamalsoknownas(F, E) )
%   | then return 0.10858983836750978;  // std dev = 0.686, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( teamalsoknownas(A, G) )
%   | | then return 0.2645435144449607;  // std dev = 0.034, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3311915793448513;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then return 0.027984031353506578;  // std dev = 0.370, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( teamplaysagainstteam(A, G) )
%   | | then return 0.04163948696397387;  // std dev = 0.674, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.23092383035127942;  // std dev = 0.058, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.08083167152722827;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysagainstteam(A, E), athleteplayssport(F, B) )
%   | then return 0.2715045767823745;  // std dev = 0.097, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( teamalsoknownas(A, G) )
%   | | then return 0.17985967898178004;  // std dev = 0.026, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.02676118578644297;  // std dev = 0.600, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.07502591880679459;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.085415732804898;  // std dev = 0.662, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( teamplaysinleague(B, E) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.1859186398062152;  // std dev = 0.067, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.06998251267281629;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysagainstteam(E, A) )
%   | then return 0.07075517579827435;  // std dev = 0.668, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.1595434857560301;  // std dev = 0.059, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
Inference time using transfer learning 14.66933560371399
Refined model CLL: -0.156744


******************************************
Best model found
******************************************
Results 

CLL : -0.428883 

AUC ROC : 0.938204 

AUC PR : 0.025603 

Precision : 0.009735 

Recall : 1.0 

F1 : 0.019282 

Total Learning Time : 2.2654924392700195 

Total Inference Time : 0.6868572235107422 

Total revision time: 5.116329908370972
Best scored revision CLL: -0.156744


Results 

CLL : -0.428883 

AUC ROC : 0.938204 

AUC PR : 0.025603 

Precision : 0.009735 

Recall : 1.0 

F1 : 0.019282 

Total Learning Time : 5.248962640762329 

Total Inference Time : 0.6868572235107422 

Amount of data: 15
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.593313217163086
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( teamplaysinleague(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, A) )
%   | | then if ( teamplaysagainstteam(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( teamplaysinleague(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7672398441904213;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(F, G) )
%   | | then return 0.6693327697733902;  // std dev = 0.241, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.5204452237458101;  // std dev = 0.240, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplayssport(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, A) )
%   | | | then return 0.43833381823258;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3699169015724118;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926096;  // std dev = 1.32e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F), athleteplayssport(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2973675039736992;  // std dev = 0.959, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23213907571279707;  // std dev = 0.240, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then return 0.07495271269299213;  // std dev = 0.486, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( teamplaysinleague(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16708101949242657;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.0772264175787819;  // std dev = 0.020, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1611964857473076;  // std dev = 0.241, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(C, D), teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return -0.07861190769583426;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.08328252790782667;  // std dev = 0.937, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.06817369701117458;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( athleteplaysforteam(G, H) )
%   | | then return 0.2002522050612041;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.06723078015520383;  // std dev = 0.016, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0.0705730812890018;  // std dev = 0.937, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( teamplaysagainstteam(E, A), athleteplaysforteam(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17009261473692674;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
Inference time using transfer learning 41.43003559112549
Parameter learned model CLL:-0.175357 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(D, B)', 'false,false': 'athleteplaysforteam(E, A)', 'false,false,true': 'teamplaysagainstteam(E, A)', 'false,false,false': 'teamplaysinleague(B, F)'}, {'true': [0.0, 14, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 5], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.953, 1, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'athleteplaysforteam(D, A)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplaysforteam(F, G)'}, {'true,true': [0.0, 5, 0], 'true,false': [0.0, 9, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.241, 1, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [1.18e-08, 14, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.24, 1, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'athleteplayssport(D, A)', 'false,false': 'teamplaysinleague(B, E)', 'false,false,false': 'athleteplaysforteam(F, A)'}, {'true': [0.0, 14, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 5], 'false,false,false,false': [0.953, 1, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)', 'false,false': 'athleteplayssport(E, F), athleteplayssport(G, A)', 'false,false,false': 'teamplaysinleague(B, H)'}, {'true': [1.32e-09, 14, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.959, 1, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)'}, {'true,true': [8.33e-09, 14, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.24, 1, 15]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplayssport(D, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'teamplaysinleague(B, G)', 'false,false,false': 'athleteplaysforteam(H, A)'}, {'true': [0.486, 5, 5], 'false,true': [0.0, 9, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.953, 1, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)'}, {'true': [0.02, 14, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.241, 1, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'athleteplaysforteam(C, D), teamplaysinleague(B, D)', 'true,false': 'teamplaysinleague(B, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'athleteplaysforteam(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 5, 0], 'true,false,false': [0.937, 1, 8], 'false,true': [0.0, 9, 0], 'false,false,true': [0.0, 0, 7], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(E, A), athleteplaysforteam(E, F)', 'false,false,false': 'teamplaysinleague(B, G)'}, {'true': [0.016, 14, 0], 'false,true': [0.937, 1, 8], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 7]}]
{'': [-1.1895246692412391e-17, 0.05859374999999978], 'false': [nan, 0.05859374999999978], 'false,false': [0.0, 0.0826446280991734], 'false,false,false': [nan, 0.0826446280991734], 'false,false,true': [nan, 0.0]}
{'': [3.96508223080413e-18, 0.057960947283660025], 'false': [nan, 0.057960947283660025], 'false,false': [0.057960947283660025, nan], 'true': [0.0, 0.0]}
{'': [9.912705577010326e-18, 0.05783366236152737], 'false': [nan, 0.05783366236152737], 'false,false': [0.05783366236152737, nan], 'true': [9.912705577010326e-18, nan]}
{'': [-3.96508223080413e-18, 0.05782383844587949], 'false': [nan, 0.05782383844587949], 'false,false': [nan, 0.05782383844587949], 'false,false,false': [0.0, 0.08264462809917354]}
{'': [3.96508223080413e-18, 0.057457314785792704], 'false': [nan, 0.057457314785792704], 'false,false': [nan, 0.057457314785792704], 'false,false,false': [nan, 0.057457314785792704]}
{'': [4.956352788505163e-18, 0.05754666876810775], 'false': [nan, 0.05754666876810775], 'true': [4.956352788505163e-18, nan]}
{'': [0.023632749154492462, 0.0604149416282157], 'false': [0.0, 0.08264462809917354], 'false,false': [nan, 0.08264462809917354], 'false,false,false': [nan, 0.08264462809917354]}
{'': [2.8515468397919447e-05, 0.05817000411896527], 'false': [nan, 0.05817000411896527]}
{'': [0.06869033523305744, 0.01773166128481376], 'true': [nan, 0.06869033523305744], 'true,false': [-6.938893903907229e-19, 0.09749098677067464], 'false': [-7.709882115452476e-19, 0.0], 'false,false': [0.0, nan]}
{'': [1.915852583322743e-05, 0.05731152547982021], 'false': [0.09755409623582872, -3.96508223080413e-18], 'false,false': [nan, -3.96508223080413e-18], 'false,false,false': [nan, -3.96508223080413e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
0;false;athleteplaysforteam(E, A).;true;true
1;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;true;athleteplaysforteam(D, A).;true;true
2;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
3;false;athleteplaysforteam(F, A).;true;true
4;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteplayssport(D, E).;true;true
6;false;teamplaysinleague(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
8;true;teamplaysinleague(B, E).;true;true
8;false;teamplaysinleague(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
9;false;teamplaysagainstteam(D, A).;true;true


Refining candidate
***************************
Model training time 51.659735918045044
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( teamplaysagainstteam(A, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(E, B), teamplaysinleague(A, F) )
%   | then return 0.7290358010362374;  // std dev = 0.081, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.40685858799906804;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(E, B), teamplaysinleague(A, F) )
%   | then if ( athleteplaysinleague(E, F) )
%   | | then return 0.5850989819644392;  // std dev = 0.088, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.5530039196933889;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.3218969203777237;  // std dev = 0.756, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.41109904655542245;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( teamplaysagainstteam(A, E) )
%   | | then return 0.20461131314227177;  // std dev = 0.700, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamalsoknownas(A, F), teamplaysinleague(A, G) )
%   | | | then return 0.41576365103614665;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.48441842770303256;  // std dev = 0.137, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(E, B), teamplaysinleague(A, F) )
%   | then if ( teamplaysagainstteam(A, G), teamalsoknownas(G, H) )
%   | | then return 0.36530819433926853;  // std dev = 0.135, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( teamalsoknownas(A, I) )
%   | | | then return 0.31952570856616436;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.31092630571958946;  // std dev = 0.013, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.14993222943112422;  // std dev = 0.692, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( teamalsoknownas(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( teamplaysagainstteam(A, F), teamalsoknownas(G, F) )
%   | then return 0.1465082045370061;  // std dev = 0.663, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( teamalsoknownas(A, H), teamplaysinleague(A, I) )
%   | | then return 0.25436271371130426;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.31465321412669606;  // std dev = 0.168, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then if ( athleteplayssport(F, B) )
%   | then return 0.21523891332251205;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysinleague(B, G) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( teamplaysagainstteam(A, H) )
%   | | then return 0.038411164080229675;  // std dev = 0.646, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamalsoknownas(A, I), teamplaysinleague(A, J) )
%   | | | then return 0.20918571170070532;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2569361895532948;  // std dev = 0.134, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( teamalsoknownas(A, E) )
%   | | then return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(F, B), teamplaysinleague(A, G) )
%   | then if ( athleteplaysinleague(F, G) )
%   | | then return 0.22773314617335005;  // std dev = 0.124, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( teamalsoknownas(A, H) )
%   | | | then return 0.17847704248437474;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.15872077841221785;  // std dev = 0.013, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.014147563243751734;  // std dev = 0.628, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( athleteledsportsteam(E, A) )
%   | | then return 0.182765002779406;  // std dev = 0.095, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.036240869553652175;  // std dev = 0.606, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( teamalsoknownas(A, G), teamplaysinleague(A, H) )
%   | | then return 0.15219301031811971;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.20079615467172773;  // std dev = 0.134, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( teamalsoknownas(A, E) )
%   | | then return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( teamplaysagainstteam(F, A) )
%   | then if ( athleteledsportsteam(G, A) )
%   | | then return 0.15737797050541916;  // std dev = 0.085, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.030409422245624797;  // std dev = 0.609, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( teamalsoknownas(A, H), teamplaysinleague(A, I) )
%   | | then return 0.13357684465294684;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.17123721509769585;  // std dev = 0.118, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
Inference time using transfer learning 187.48838019371033
Refined model CLL: -0.131371


******************************************
Best model found
******************************************
Results 

CLL : -0.371954 

AUC ROC : 0.961136 

AUC PR : 0.108991 

Precision : 0.009735 

Recall : 1.0 

F1 : 0.019282 

Total Learning Time : 51.659735918045044 

Total Inference Time : 0.8986935615539551 

Total revision time: 54.958364725112915
Best scored revision CLL: -0.131371


Results 

CLL : -0.371954 

AUC ROC : 0.961136 

AUC PR : 0.108991 

Precision : 0.009735 

Recall : 1.0 

F1 : 0.019282 

Total Learning Time : 55.09099745750427 

Total Inference Time : 0.8986935615539551 

Amount of data: 20
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.7729988098144531
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( teamplaysinleague(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, A) )
%   | | then if ( teamplaysagainstteam(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( teamplaysinleague(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.724815601766179;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(F, G) )
%   | | then return 0.6463653544437897;  // std dev = 0.285, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.11231637819360635;  // std dev = 1.67e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.504420210053818;  // std dev = 0.285, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.10159632948783635;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( athleteplayssport(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, A) )
%   | | | then return 0.44795556485178156;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.3477753720671137;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926093;  // std dev = 2.63e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F), athleteplayssport(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.28753208112261935;  // std dev = 1.328, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.08518475138839683;  // std dev = 1.18e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2227739629575756;  // std dev = 0.283, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then return 0.09145189959133065;  // std dev = 0.568, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.07877675473109179;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( teamplaysinleague(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14884486264808536;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.07738895418323784;  // std dev = 0.025, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15199396878027116;  // std dev = 0.285, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(C, D), teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return -0.07814052252273333;  // std dev = 0.011, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.12499041655330861;  // std dev = 0.941, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.06816337242836087;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( athleteplaysforteam(G, H) )
%   | | then return 0.12539105242592347;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.0673565344506834;  // std dev = 0.021, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0.1051496604081593;  // std dev = 0.942, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else if ( teamplaysagainstteam(E, A), athleteplaysforteam(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10425452917776803;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
Inference time using transfer learning 41.74853873252869
Parameter learned model CLL:-0.211637 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(D, B)', 'false,false': 'athleteplaysforteam(E, A)', 'false,false,true': 'teamplaysagainstteam(E, A)', 'false,false,false': 'teamplaysinleague(B, F)'}, {'true': [0.0, 18, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 7], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.317, 2, 13]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'athleteplaysforteam(D, A)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplaysforteam(F, G)'}, {'true,true': [0.0, 6, 0], 'true,false': [5.27e-09, 12, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.285, 2, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [1.67e-08, 18, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.285, 2, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'athleteplayssport(D, A)', 'false,false': 'teamplaysinleague(B, E)', 'false,false,false': 'athleteplaysforteam(F, A)'}, {'true': [0.0, 18, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 7], 'false,false,false,false': [1.317, 2, 13]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)', 'false,false': 'athleteplayssport(E, F), athleteplayssport(G, A)', 'false,false,false': 'teamplaysinleague(B, H)'}, {'true': [2.63e-09, 18, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.328, 2, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)'}, {'true,true': [1.18e-08, 18, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.283, 2, 20]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplayssport(D, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'teamplaysinleague(B, G)', 'false,false,false': 'athleteplaysforteam(H, A)'}, {'true': [0.568, 6, 7], 'false,true': [0.0, 12, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.317, 2, 13]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)'}, {'true': [0.025, 18, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.285, 2, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'athleteplaysforteam(C, D), teamplaysinleague(B, D)', 'true,false': 'teamplaysinleague(B, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'athleteplaysforteam(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.011, 7, 0], 'true,false,false': [0.941, 1, 11], 'false,true': [0.0, 11, 0], 'false,false,true': [0.949, 1, 9], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(E, A), athleteplaysforteam(E, F)', 'false,false,false': 'teamplaysinleague(B, G)'}, {'true': [0.021, 18, 0], 'false,true': [0.942, 1, 11], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.949, 1, 9]}]
{'': [-3.0839528461809902e-18, 0.08264462809917356], 'false': [nan, 0.08264462809917356], 'false,false': [-2.5376526277146434e-16, 0.11555555555555533], 'false,false,false': [nan, 0.11555555555555533], 'false,false,true': [nan, -2.5376526277146434e-16]}
{'': [0.0, 0.08128211323943982], 'false': [nan, 0.08128211323943982], 'false,false': [0.08128211323943982, nan], 'true': [-2.3129646346357427e-18, 2.3129646346357427e-18]}
{'': [1.5419764230904953e-17, 0.08100442570077543], 'false': [nan, 0.08100442570077543], 'false,false': [0.08100442570077543, nan], 'true': [1.5419764230904953e-17, nan]}
{'': [-4.625929269271485e-18, 0.08096512560145146], 'false': [nan, 0.08096512560145146], 'false,false': [nan, 0.08096512560145146], 'false,false,false': [-6.344131569286608e-17, 0.11555555555555554]}
{'': [6.1679056923619804e-18, 0.08014396945770097], 'false': [nan, 0.08014396945770097], 'false,false': [nan, 0.08014396945770097], 'false,false,false': [nan, 0.08014396945770097]}
{'': [7.709882115452476e-18, 0.08031655276176028], 'false': [nan, 0.08031655276176028], 'true': [7.709882115452476e-18, nan]}
{'': [0.02483810978779099, 0.07699051869094135], 'false': [-1.1564823173178713e-18, 0.11555555555555558], 'false,false': [nan, 0.11555555555555558], 'false,false,false': [nan, 0.11555555555555558]}
{'': [3.432439752210698e-05, 0.08102340095284497], 'false': [nan, 0.08102340095284497]}
{'': [0.05618775019519532, 0.05220173399517916], 'true': [nan, 0.05618775019519532], 'true,false': [1.6590587334272345e-05, 0.07375240476279482], 'false': [-1.8924256101565167e-18, 0.09000000000000004], 'false,false': [0.09000000000000004, nan]}
{'': [2.3780043365202884e-05, 0.08123397405190343], 'false': [0.07392858821943522, 0.09], 'false,false': [nan, 0.09], 'false,false,false': [nan, 0.09]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
0;false;athleteplaysforteam(E, A).;true;true
1;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;true;athleteplaysforteam(D, A).;true;true
2;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
3;false;athleteplaysforteam(F, A).;true;true
4;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteplayssport(D, E).;true;true
6;false;teamplaysinleague(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
8;true;teamplaysinleague(B, E).;true;true
8;false;teamplaysinleague(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true


Refining candidate
***************************
Model training time 227.99594616889954
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( teamplaysinleague(A, E), athleteplayssport(F, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( teamplaysinleague(A, E), athleteplayssport(F, B) )
%   | then return 0.7194734122109542;  // std dev = 5.96e-08, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.448295606241962;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysinleague(E, D) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysinleague(A, F), athleteplayssport(G, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.36236334632262296;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.10159632948783631;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( athleteplaysforteam(D, A) )
%   | then if ( athleteledsportsteam(E, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( teamplaysagainstteam(F, A), teamplaysagainstteam(A, F) )
%   | | then return 0.14970478511551286;  // std dev = 0.656, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamalsoknownas(G, A), teamalsoknownas(A, G) )
%   | | | then return 0.4830381184488462;  // std dev = 0.161, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3937685187679139;  // std dev = 0.870, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysinleague(E, D) )
%   | | then return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysinleague(A, F), athleteplayssport(G, B) )
%   | then if ( athleteplaysinleague(G, F) )
%   | | then return 0.3410133248217249;  // std dev = 0.070, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( teamalsoknownas(A, H), teamplaysinleague(H, F) )
%   | | | then return 0.3113090746912678;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.32442246915540923;  // std dev = 0.006, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.19069347941337256;  // std dev = 1.114, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysinleague(E, D) )
%   | | then return -0.08518475138839687;  // std dev = 1.32e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.08518475138839687;  // std dev = 9.31e-10, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(F, A), athleteplayssport(G, B) )
%   | then if ( athleteplaysforteam(H, A) )
%   | | then if ( athleteplaysforteam(G, A) )
%   | | | then return 0.2513329709756583;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2543079246992802;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.33475127055432097;  // std dev = 0.161, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( teamplaysinleague(A, I), athleteplaysinleague(J, I) )
%   | | then return 0.016329748684128082;  // std dev = 0.594, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamalsoknownas(A, K) )
%   | | | then return 0.31239817741509485;  // std dev = 0.166, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1856304985335499;  // std dev = 0.827, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then if ( athleteplayssport(F, B) )
%   | then if ( athleteplaysinleague(F, G), teamplaysinleague(A, G) )
%   | | then return 0.20691998983114765;  // std dev = 0.000423, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.21001242049507407;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( teamplaysinleague(B, H) )
%   | then if ( teamalsoknownas(A, I) )
%   | | then return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( teamplaysagainstteam(J, A), teamplaysagainstteam(A, J) )
%   | | then return 0.0016061356462304295;  // std dev = 0.581, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamalsoknownas(K, A) )
%   | | | then return 0.2528817991284136;  // std dev = 0.148, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.19584458805602595;  // std dev = 0.861, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.07324622576333704;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( teamplaysinleague(A, D), athleteplayssport(E, B) )
%   | then if ( teamalsoknownas(A, F), teamplaysinleague(F, D) )
%   | | then return 0.16314153646755333;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( athleteplaysforteam(G, A) )
%   | | | then return 0.17555657859034723;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.20919661767506928;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.05275481639333576;  // std dev = 1.047, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysinleague(B, D) )
%   | then if ( athleteledsportsteam(E, A) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( teamplaysagainstteam(F, A), teamalsoknownas(F, G) )
%   | | then if ( athleteplaysforteam(H, A) )
%   | | | then return 0.1523945807682498;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.21987898498570774;  // std dev = 0.137, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.06109899404028318;  // std dev = 0.521, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamplaysinleague(B, I) )
%   | then if ( teamalsoknownas(A, J) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( teamalsoknownas(A, K) )
%   | | then return 0.18816984818610563;  // std dev = 0.139, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.10094611778159418;  // std dev = 0.834, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysinleague(E, D) )
%   | | then return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysinleague(A, F), athleteplayssport(G, B) )
%   | then if ( teamalsoknownas(A, H) )
%   | | then return 0.1272835045986222;  // std dev = 0.033, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( athleteplaysforteam(I, A), athleteplaysinleague(I, F) )
%   | | | then return 0.13295486571626608;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1611501489430773;  // std dev = 0.024, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.017392193455568934;  // std dev = 1.019, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
Inference time using transfer learning 404.24871039390564
Refined model CLL: -0.162025


******************************************
Best model found
******************************************
Results 

CLL : -0.324957 

AUC ROC : 0.969235 

AUC PR : 0.094176 

Precision : 0.01001 

Recall : 1.0 

F1 : 0.019821 

Total Learning Time : 227.99594616889954 

Total Inference Time : 2.136592149734497 

Total revision time: 232.78135442733765
Best scored revision CLL: -0.162025


Results 

CLL : -0.324957 

AUC ROC : 0.969235 

AUC PR : 0.094176 

Precision : 0.01001 

Recall : 1.0 

F1 : 0.019821 

Total Learning Time : 232.913987159729 

Total Inference Time : 2.136592149734497 

Amount of data: 25
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 2.0498197078704834
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( teamplaysinleague(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, A) )
%   | | then if ( teamplaysagainstteam(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7672398441904213;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( teamplaysinleague(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6914822684328457;  // std dev = 1.581, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(F, G) )
%   | | then return 0.6084588024385906;  // std dev = 0.344, 29.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.11231637819360636;  // std dev = 1.29e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.4777293091230448;  // std dev = 0.344, 29.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.10159632948783634;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( athleteplayssport(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, A) )
%   | | | then return 0.3957370965916216;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.33891550639180074;  // std dev = 1.581, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926103;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F), athleteplayssport(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27145850458428283;  // std dev = 1.850, 29.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=25 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.08518475138839683;  // std dev = 1.49e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20783858358152985;  // std dev = 0.344, 29.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=25 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then return 0.08689820576242885;  // std dev = 1.106, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.07877675473109179;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( teamplaysinleague(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1442402119626427;  // std dev = 1.581, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.07727027481965666;  // std dev = 0.026, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1372762673017815;  // std dev = 0.344, 29.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=25 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(C, D), teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return -0.07806487882956667;  // std dev = 0.011, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.12729863740389732;  // std dev = 1.326, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.0681709109869231;  // std dev = 6.97e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( athleteplaysforteam(G, H) )
%   | | then return 0.08733179460670697;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.0672662245089668;  // std dev = 0.022, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0.10453039652867749;  // std dev = 1.326, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else if ( teamplaysagainstteam(E, A), athleteplaysforteam(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07114198922858705;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
Inference time using transfer learning 47.36665415763855
Parameter learned model CLL:-0.269798 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(D, B)', 'false,false': 'athleteplaysforteam(E, A)', 'false,false,true': 'teamplaysagainstteam(E, A)', 'false,false,false': 'teamplaysinleague(B, F)'}, {'true': [1.05e-08, 21, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.953, 1, 10], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.581, 3, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'athleteplaysforteam(D, A)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplaysforteam(F, G)'}, {'true,true': [0.0, 7, 0], 'true,false': [7.45e-09, 14, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.344, 4, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [1.29e-08, 21, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.344, 4, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'athleteplayssport(D, A)', 'false,false': 'teamplaysinleague(B, E)', 'false,false,false': 'athleteplaysforteam(F, A)'}, {'true': [0.0, 21, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.953, 1, 10], 'false,false,false,false': [1.581, 3, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)', 'false,false': 'athleteplayssport(E, F), athleteplayssport(G, A)', 'false,false,false': 'teamplaysinleague(B, H)'}, {'true': [0.0, 21, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.85, 4, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)'}, {'true,true': [1.49e-08, 21, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.344, 4, 25]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplayssport(D, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'teamplaysinleague(B, G)', 'false,false,false': 'athleteplaysforteam(H, A)'}, {'true': [1.106, 8, 10], 'false,true': [0.0, 14, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.581, 3, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)'}, {'true': [0.026, 21, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.344, 4, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'athleteplaysforteam(C, D), teamplaysinleague(B, D)', 'true,false': 'teamplaysinleague(B, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'athleteplaysforteam(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.011, 8, 0], 'true,false,false': [1.326, 2, 15], 'false,true': [6.97e-09, 13, 0], 'false,false,true': [1.291, 2, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(E, A), athleteplaysforteam(E, F)', 'false,false,false': 'teamplaysinleague(B, G)'}, {'true': [0.022, 21, 0], 'false,true': [1.326, 2, 15], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.291, 2, 10]}]
{'': [5.28677630773884e-18, 0.11890606420927562], 'false': [nan, 0.11890606420927562], 'false,false': [0.0826446280991734, 0.1388888888888886], 'false,false,false': [nan, 0.1388888888888886], 'false,false,true': [nan, 0.0826446280991734]}
{'': [-2.64338815386942e-18, 0.1184411515962996], 'false': [nan, 0.1184411515962996], 'false,false': [0.1184411515962996, nan], 'true': [-1.982541115402065e-18, 3.96508223080413e-18]}
{'': [7.93016446160826e-18, 0.11834131000852971], 'false': [nan, 0.11834131000852971], 'false,false': [0.11834131000852971, nan], 'true': [7.93016446160826e-18, nan]}
{'': [-2.64338815386942e-18, 0.11831500309153153], 'false': [nan, 0.11831500309153153], 'false,false': [nan, 0.11831500309153153], 'false,false,false': [0.08264462809917356, 0.1388888888888889]}
{'': [-7.93016446160826e-18, 0.11800670766372696], 'false': [nan, 0.11800670766372696], 'false,false': [nan, 0.11800670766372696], 'false,false,false': [nan, 0.11800670766372696]}
{'': [1.057355261547768e-17, 0.11805151304888742], 'false': [nan, 0.11805151304888742], 'true': [1.057355261547768e-17, nan]}
{'': [0.06797208211793299, 0.09036485839178232], 'false': [-9.912705577010326e-19, 0.13888888888888892], 'false,false': [nan, 0.13888888888888892], 'false,false,false': [nan, 0.13888888888888892]}
{'': [3.238594161533186e-05, 0.11842558168579095], 'false': [nan, 0.11842558168579095]}
{'': [0.07947101600323819, 0.07270226709182269], 'true': [nan, 0.07947101600323819], 'true,false': [1.3984371381608497e-05, 0.10336682468465534], 'false': [3.736327486719277e-18, 0.13888888888888887], 'false,false': [0.13888888888888887, nan]}
{'': [2.2359892344085102e-05, 0.11835120516441268], 'false': [0.10339272600114044, 0.13888888888888892], 'false,false': [nan, 0.13888888888888892], 'false,false,false': [nan, 0.13888888888888892]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;true;athleteplaysforteam(D, A).;true;true
2;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteplayssport(D, E).;true;true
6;false;teamplaysinleague(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
8;true;teamplaysinleague(B, E).;true;true
8;false;teamplaysinleague(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true


Refining candidate
***************************
Model training time 45.39738965034485
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysinleague(E, D) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(F, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.10159632948783634;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysinleague(E, D) )
%   | | then return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(F, B) )
%   | then if ( athleteledsportsteam(F, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( teamplaysagainstteam(A, G) )
%   | | | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysinleague(E, D) )
%   | | then if ( athleteplaysforteam(E, A) )
%   | | | then return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( teamalsoknownas(A, F) )
%   | | | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(G, B) )
%   | then return 0.25517224256948956;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then if ( athleteplayssport(F, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysinleague(B, G) )
%   | then return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( athleteplayssport(H, B) )
%   | | then return 0.20975771563253562;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.07324622576333704;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527747;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( athleteplayssport(E, B), teamplaysagainstteam(A, F) )
%   | | then return 0.1527438580936708;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.005296634135088435;  // std dev = 0.181, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamplaysinleague(B, G) )
%   | then if ( teamalsoknownas(A, H) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( teamplaysinleague(A, I), athleteplayssport(J, B) )
%   | | then if ( teamalsoknownas(A, K) )
%   | | | then return 0.15274385809367075;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.15274385809367075;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.06427552371852137;  // std dev = 0.242, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysinleague(E, D) )
%   | | then if ( athleteledsportsteam(E, A) )
%   | | | then return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(F, B) )
%   | then if ( teamplaysinleague(A, G) )
%   | | then if ( teamalsoknownas(A, H), athleteledsportsteam(F, I) )
%   | | | then return 0.13701580232334834;  // std dev = 0.016, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.13400703000801117;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0.14195933604584907;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.07070249653263516;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning 182.88351821899414
Refined model CLL: -0.096038


******************************************
Best model found
******************************************
Results 

CLL : -0.100244 

AUC ROC : 0.991588 

AUC PR : 0.145272 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 45.39738965034485 

Total Inference Time : 1.023472547531128 

Total revision time: 49.44111442565918
Best scored revision CLL: -0.096038


Results 

CLL : -0.100244 

AUC ROC : 0.991588 

AUC PR : 0.145272 

Precision : 0.122807 

Recall : 1.0 

F1 : 0.21875 

Total Learning Time : 49.57374715805054 

Total Inference Time : 1.023472547531128 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 266
Target train neg examples: 106662

Target test facts examples: 9691
Target test pos examples: 131
Target test neg examples: 53329

Amount of data: 5
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.3115720748901367
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysinleague(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, A) )
%   | | then if ( teamplaysagainstteam(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamplaysinleague(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(F, G) )
%   | | then return 0.48476925425362916;  // std dev = 0.429, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.38958766240197146;  // std dev = 0.424, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, A) )
%   | | | then return 0.5168671344175766;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.13818476211075048;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926094;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F), athleteplayssport(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22733779147034192;  // std dev = 1.067, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1731821799834685;  // std dev = 0.404, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then return 0.20489729575882082;  // std dev = 0.328, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( teamplaysinleague(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.007196856595821824;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.08049378450760773;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11378723223747014;  // std dev = 0.398, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(C, D), teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return -0.07812878403221227;  // std dev = 0.014, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.2970760658728452;  // std dev = 0.208, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.0679664267450014;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplaysforteam(G, H) )
%   | | then return -0.18969902320237733;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.06972253112690331;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0.24167633075208098;  // std dev = 0.187, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( teamplaysagainstteam(E, A), athleteplaysforteam(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14230987321607988;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
Inference time using transfer learning 41.099143981933594
Parameter learned model CLL:-0.311048 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(D, B)', 'false,false': 'athleteplaysforteam(E, A)', 'false,false,true': 'teamplaysagainstteam(E, A)', 'false,false,false': 'teamplaysinleague(B, F)'}, {'true': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [2.11e-08, 0, 3], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.0, 2, 2]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'athleteplaysforteam(D, A)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplaysforteam(F, G)'}, {'true,true': [0.0, 1, 0], 'true,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.429, 2, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [2.63e-09, 3, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.424, 2, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'athleteplayssport(D, A)', 'false,false': 'teamplaysinleague(B, E)', 'false,false,false': 'athleteplaysforteam(F, A)'}, {'true': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 3], 'false,false,false,false': [1.0, 2, 2]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)', 'false,false': 'athleteplayssport(E, F), athleteplayssport(G, A)', 'false,false,false': 'teamplaysinleague(B, H)'}, {'true': [1.32e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.067, 2, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)'}, {'true,true': [0.0, 3, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.404, 2, 5]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplayssport(D, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'teamplaysinleague(B, G)', 'false,false,false': 'athleteplaysforteam(H, A)'}, {'true': [0.328, 1, 3], 'false,true': [0.0, 2, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.0, 2, 2]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)'}, {'true': [0.018, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.398, 2, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'athleteplaysforteam(C, D), teamplaysinleague(B, D)', 'true,false': 'teamplaysinleague(B, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'athleteplaysforteam(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.014, 2, 0], 'true,false,false': [0.208, 0, 4], 'false,true': [0.0, 1, 0], 'false,false,true': [0.816, 2, 1], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(E, A), athleteplaysforteam(E, F)', 'false,false,false': 'teamplaysinleague(B, G)'}, {'true': [0.015, 3, 0], 'false,true': [0.187, 0, 4], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.816, 2, 1]}]
{'': [0.0, 0.20408163265306106], 'false': [nan, 0.20408163265306106], 'false,false': [1.4802973661668753e-16, 0.25], 'false,false,false': [nan, 0.25], 'false,false,true': [nan, 1.4802973661668753e-16]}
{'': [0.0, 0.18417167417898567], 'false': [nan, 0.18417167417898567], 'false,false': [0.18417167417898567, nan], 'true': [0.0, 0.0]}
{'': [2.3129646346357427e-18, 0.1800649723369336], 'false': [nan, 0.1800649723369336], 'false,false': [0.1800649723369336, nan], 'true': [2.3129646346357427e-18, nan]}
{'': [-1.1564823173178713e-18, 0.1779755932479818], 'false': [nan, 0.1779755932479818], 'false,false': [nan, 0.1779755932479818], 'false,false,false': [0.0, 0.25]}
{'': [2.3129646346357427e-18, 0.16258197638830335], 'false': [nan, 0.16258197638830335], 'false,false': [nan, 0.16258197638830335], 'false,false,false': [nan, 0.16258197638830335]}
{'': [0.0, 0.16298332382630573], 'false': [nan, 0.16298332382630573], 'true': [0.0, nan]}
{'': [0.026823655640451152, 0.16830921374324245], 'false': [0.0, 0.25], 'false,false': [nan, 0.25], 'false,false,false': [nan, 0.25]}
{'': [0.00010505421550330875, 0.15852146403552164], 'false': [nan, 0.15852146403552164]}
{'': [0.03850990429756992, 0.16944519636171435], 'false': [0.0, 0.2222222222222222], 'false,false': [0.2222222222222222, nan], 'true': [nan, 0.03850990429756992], 'true,false': [0.00010327350563292797, 0.010786993229446179]}
{'': [7.791809279424078e-05, 0.1363594034595093], 'false': [0.008771401599812552, 0.22222222222222224], 'false,false': [nan, 0.22222222222222224], 'false,false,false': [nan, 0.22222222222222224]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
0;false;athleteplaysforteam(E, A).;true;true
1;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;true;athleteplaysforteam(D, A).;true;true
2;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
3;false;athleteplaysforteam(F, A).;true;true
4;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteplayssport(D, E).;true;true
6;false;teamplaysinleague(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
8;true;teamplaysinleague(B, E).;true;true
8;false;teamplaysinleague(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true


Refining candidate
***************************
Model training time 1.4706382751464844
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(E, B), athleteledsportsteam(E, F) )
%   | then return 0.7641072739982948;  // std dev = 0.089, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.11231856126074151;  // std dev = 0.744, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then return 0.6120324190030338;  // std dev = 0.137, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.08158717960379244;  // std dev = 0.712, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.4467890333070003;  // std dev = 0.132, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.17877160271563952;  // std dev = 0.809, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | then return 0.4151328425533259;  // std dev = 0.261, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.02273097251426981;  // std dev = 0.570, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | then return 0.32527710305485963;  // std dev = 0.239, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.01799207754747234;  // std dev = 0.571, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then return 0.17605514663985486;  // std dev = 0.377, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.05571596816367654;  // std dev = 0.613, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.07967690196119637;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0.12441330776337048;  // std dev = 0.262, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.07703964670343197;  // std dev = 0.013, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.22444878599125648;  // std dev = 0.211, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( teamplaysinleague(B, E) )
%   | then return -0.06801819206296413;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.06304802339057165;  // std dev = 0.539, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.06910559102182284;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | then return 0.20559025906809084;  // std dev = 0.235, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.070627662157924;  // std dev = 0.489, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
Inference time using transfer learning 14.443710088729858
Refined model CLL: -0.202827


******************************************
Best model found
******************************************
Results 

CLL : -0.226511 

AUC ROC : 0.9866 

AUC PR : 0.228378 

Precision : 0.019839 

Recall : 0.938931 

F1 : 0.038856 

Total Learning Time : 1.4706382751464844 

Total Inference Time : 0.6741275787353516 

Total revision time: 4.137447357177734
Best scored revision CLL: -0.202827


Results 

CLL : -0.226511 

AUC ROC : 0.9866 

AUC PR : 0.228378 

Precision : 0.019839 

Recall : 0.938931 

F1 : 0.038856 

Total Learning Time : 4.270080089569092 

Total Inference Time : 0.6741275787353516 

Amount of data: 10
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.616459846496582
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( teamplaysinleague(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, A) )
%   | | then if ( teamplaysagainstteam(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( teamplaysinleague(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(F, G) )
%   | | then return 0.48732996403948226;  // std dev = 0.449, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.3910483222828918;  // std dev = 0.449, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.10159632948783627;  // std dev = 1.32e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, A) )
%   | | | then return 0.34871965049535725;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.2138376917119417;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F), athleteplayssport(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2263339189187219;  // std dev = 1.670, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17018380772979375;  // std dev = 0.446, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then return 0.12057236411482815;  // std dev = 1.286, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( teamplaysinleague(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06334521711822796;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.07815856252441584;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10488103445777172;  // std dev = 0.446, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(C, D), teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return -0.07501239196760161;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.14381931081601432;  // std dev = 1.281, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.06811450536068765;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( athleteplaysforteam(G, H) )
%   | | then return -0.07813179121416391;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.06795465735064343;  // std dev = 0.015, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0.11223011659700259;  // std dev = 1.280, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else if ( teamplaysagainstteam(E, A), athleteplaysforteam(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.058968569191610753;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
Inference time using transfer learning 38.46693682670593
Parameter learned model CLL:-0.423949 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(D, B)', 'false,false': 'athleteplaysforteam(E, A)', 'false,false,true': 'teamplaysagainstteam(E, A)', 'false,false,false': 'teamplaysinleague(B, F)'}, {'true': [0.0, 6, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.247, 2, 7], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.095, 2, 3]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'athleteplaysforteam(D, A)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplaysforteam(F, G)'}, {'true,true': [0.0, 2, 0], 'true,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.449, 4, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 6, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.449, 4, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'athleteplayssport(D, A)', 'false,false': 'teamplaysinleague(B, E)', 'false,false,false': 'athleteplaysforteam(F, A)'}, {'true': [1.32e-09, 6, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.247, 2, 7], 'false,false,false,false': [1.095, 2, 3]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)', 'false,false': 'athleteplayssport(E, F), athleteplayssport(G, A)', 'false,false,false': 'teamplaysinleague(B, H)'}, {'true': [0.0, 6, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.67, 4, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)'}, {'true,true': [2.63e-09, 6, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.446, 4, 10]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplayssport(D, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'teamplaysinleague(B, G)', 'false,false,false': 'athleteplaysforteam(H, A)'}, {'true': [1.286, 4, 7], 'false,true': [0.0, 4, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.095, 2, 3]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)'}, {'true': [0.017, 6, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.446, 4, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'athleteplaysforteam(C, D), teamplaysinleague(B, D)', 'true,false': 'teamplaysinleague(B, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'athleteplaysforteam(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.014, 4, 0], 'true,false,false': [1.281, 2, 8], 'false,true': [0.0, 2, 0], 'false,false,true': [1.0, 2, 2], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(E, A), athleteplaysforteam(E, F)', 'false,false,false': 'teamplaysinleague(B, G)'}, {'true': [0.015, 6, 0], 'false,true': [1.28, 2, 8], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.0, 2, 2]}]
{'': [-6.938893903907228e-18, 0.20408163265306115], 'false': [nan, 0.20408163265306115], 'false,false': [0.17283950617283939, 0.23999999999999994], 'false,false,false': [nan, 0.23999999999999994], 'false,false,true': [nan, 0.17283950617283939]}
{'': [-2.3129646346357427e-18, 0.20179040448519778], 'false': [nan, 0.20179040448519778], 'false,false': [0.20179040448519778, nan], 'true': [0.0, 0.0]}
{'': [0.0, 0.20127888131157387], 'false': [nan, 0.20127888131157387], 'false,false': [0.20127888131157387, nan], 'true': [0.0, nan]}
{'': [0.0, 0.20100239389803096], 'false': [nan, 0.20100239389803096], 'false,false': [nan, 0.20100239389803096], 'false,false,false': [0.17283950617283955, 0.24000000000000005]}
{'': [1.1564823173178713e-18, 0.19911856768261801], 'false': [nan, 0.19911856768261801], 'false,false': [nan, 0.19911856768261801], 'false,false,false': [nan, 0.19911856768261801]}
{'': [1.1564823173178713e-18, 0.19912653708788838], 'false': [nan, 0.19912653708788838], 'true': [1.1564823173178713e-18, nan]}
{'': [0.15024526834406243, 0.13832065552650338], 'false': [0.0, 0.24000000000000005], 'false,false': [nan, 0.24000000000000005], 'false,false,false': [nan, 0.24000000000000005]}
{'': [4.826210490849192e-05, 0.19864596491235703], 'false': [nan, 0.19864596491235703]}
{'': [0.1270334355937844, 0.16668896578130454], 'false': [0.0, 0.25], 'false,false': [0.25, nan], 'true': [nan, 0.1270334355937844], 'true,false': [4.758083964184236e-05, 0.16414568774024807]}
{'': [3.6056670184897326e-05, 0.194523529641157], 'false': [0.1639589443502631, 0.25], 'false,false': [nan, 0.25], 'false,false,false': [nan, 0.25]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;true;athleteplaysforteam(D, A).;true;true
2;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteplayssport(D, E).;true;true
6;false;teamplaysinleague(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
8;true;teamplaysinleague(B, E).;true;true
8;false;teamplaysinleague(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true


Refining candidate
***************************
Model training time 23.5854229927063
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteledsportsteam(E, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteledsportsteam(E, A) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then if ( athleteplayssport(F, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysinleague(B, G) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.09434392748708463;  // std dev = 0.316, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteplaysforteam(E, A) )
%   | | then if ( athleteledsportsteam(E, A) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.19454710773335604;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.07957372670418496;  // std dev = 0.013, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( athleteplayssport(E, B), athleteledsportsteam(E, F) )
%   | | then if ( teamplaysagainstteam(A, F) )
%   | | | then return 0.15711496931323513;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.15274385809367097;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.005564797490400092;  // std dev = 0.180, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamplaysinleague(B, G) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.04300092914261739;  // std dev = 0.246, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteplaysforteam(E, A), athleteplaysforteam(D, F) )
%   | | then return 0.13383821244255548;  // std dev = 0.000585, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.1543141533076044;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.07572549023200355;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning 161.54557275772095
Refined model CLL: -0.100448


******************************************
Best model found
******************************************
Results 

CLL : -0.098168 

AUC ROC : 0.992335 

AUC PR : 0.23937 

Precision : 0.124758 

Recall : 0.984733 

F1 : 0.221459 

Total Learning Time : 23.5854229927063 

Total Inference Time : 0.8790726661682129 

Total revision time: 26.909991025924683
Best scored revision CLL: -0.100448


Results 

CLL : -0.098168 

AUC ROC : 0.992335 

AUC PR : 0.23937 

Precision : 0.124758 

Recall : 0.984733 

F1 : 0.221459 

Total Learning Time : 27.04262375831604 

Total Inference Time : 0.8790726661682129 

Amount of data: 15
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.78611421585083
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( teamplaysinleague(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, A) )
%   | | then if ( teamplaysagainstteam(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5504566274072047;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | else if ( teamplaysinleague(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6081489350995123;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(F, G) )
%   | | then return 0.4876402945705129;  // std dev = 0.451, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.3912349307626005;  // std dev = 0.451, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.10159632948783627;  // std dev = 1.32e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, A) )
%   | | | then return 0.28392810880294606;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return 0.3276114631247409;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F), athleteplayssport(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22630751345794486;  // std dev = 2.067, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16988438643650966;  // std dev = 0.451, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then return 0.07911879635128119;  // std dev = 1.692, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( teamplaysinleague(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14871371316026766;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.07706856040201607;  // std dev = 0.016, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10295369297233539;  // std dev = 0.451, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(C, D), teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return -0.07355469832398802;  // std dev = 0.013, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.09100916735688203;  // std dev = 1.684, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.06818372573674507;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplaysforteam(G, H) )
%   | | then return 0.054465097404881715;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.06712495973712569;  // std dev = 0.014, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0.0699004408901198;  // std dev = 1.684, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | else if ( teamplaysagainstteam(E, A), athleteplaysforteam(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04234847092871462;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
Inference time using transfer learning 39.015573263168335
Parameter learned model CLL:-0.440518 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(D, B)', 'false,false': 'athleteplaysforteam(E, A)', 'false,false,true': 'teamplaysagainstteam(E, A)', 'false,false,false': 'teamplaysinleague(B, F)'}, {'true': [0.0, 9, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.664, 4, 9], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.225, 2, 6]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'athleteplaysforteam(D, A)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplaysforteam(F, G)'}, {'true,true': [0.0, 3, 0], 'true,false': [0.0, 6, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.451, 6, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 9, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.451, 6, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'athleteplayssport(D, A)', 'false,false': 'teamplaysinleague(B, E)', 'false,false,false': 'athleteplaysforteam(F, A)'}, {'true': [1.32e-09, 9, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.664, 4, 9], 'false,false,false,false': [1.225, 2, 6]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)', 'false,false': 'athleteplayssport(E, F), athleteplayssport(G, A)', 'false,false,false': 'teamplaysinleague(B, H)'}, {'true': [0.0, 9, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.067, 6, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)'}, {'true,true': [3.73e-09, 9, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.451, 6, 15]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplayssport(D, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'teamplaysinleague(B, G)', 'false,false,false': 'athleteplaysforteam(H, A)'}, {'true': [1.692, 7, 9], 'false,true': [0.0, 6, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.225, 2, 6]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)'}, {'true': [0.016, 9, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.451, 6, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'athleteplaysforteam(C, D), teamplaysinleague(B, D)', 'true,false': 'teamplaysinleague(B, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'athleteplaysforteam(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.013, 6, 0], 'true,false,false': [1.684, 4, 10], 'false,true': [1.32e-09, 3, 0], 'false,false,true': [1.195, 2, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(E, A), athleteplaysforteam(E, F)', 'false,false,false': 'teamplaysinleague(B, G)'}, {'true': [0.014, 9, 0], 'false,true': [1.684, 4, 10], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.195, 2, 5]}]
{'': [-9.25185853854297e-18, 0.20408163265306084], 'false': [nan, 0.20408163265306084], 'false,false': [0.2130177514792898, 0.1874999999999999], 'false,false,true': [nan, 0.2130177514792898], 'false,false,false': [nan, 0.1874999999999999]}
{'': [0.0, 0.2038297636423122], 'false': [nan, 0.2038297636423122], 'false,false': [0.2038297636423122, nan], 'true': [0.0, -2.3129646346357427e-18]}
{'': [-1.5419764230904951e-18, 0.20377523602562453], 'false': [nan, 0.20377523602562453], 'false,false': [0.20377523602562453, nan], 'true': [-1.5419764230904951e-18, nan]}
{'': [3.0839528461809902e-18, 0.20374671800477484], 'false': [nan, 0.20374671800477484], 'false,false': [nan, 0.20374671800477484], 'false,false,false': [0.21301775147928986, 0.18750000000000006]}
{'': [0.0, 0.20354368604782958], 'false': [nan, 0.20354368604782958], 'false,false': [nan, 0.20354368604782958], 'false,false,false': [nan, 0.20354368604782958]}
{'': [1.5419764230904951e-18, 0.20354704852360295], 'false': [nan, 0.20354704852360295], 'true': [1.5419764230904951e-18, nan]}
{'': [0.178830231934986, 0.11981679501586028], 'false': [-1.1564823173178713e-18, 0.1875], 'false,false': [nan, 0.1875], 'false,false,false': [nan, 0.1875]}
{'': [2.9220484180089097e-05, 0.2033671576591965], 'false': [nan, 0.2033671576591965]}
{'': [0.14750033984779806, 0.14601611695892835], 'true': [nan, 0.14750033984779806], 'true,false': [2.8847346532914302e-05, 0.20257802829627655], 'false': [5.782411586589357e-19, 0.20408163265306123], 'false,false': [0.20408163265306123, nan]}
{'': [2.190588417619861e-05, 0.2032732101076858], 'false': [0.20261596181874664, 0.20408163265306123], 'false,false': [nan, 0.20408163265306123], 'false,false,false': [nan, 0.20408163265306123]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;true;athleteplaysforteam(D, A).;true;true
2;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteplayssport(D, E).;true;true
6;false;teamplaysinleague(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
8;true;teamplaysinleague(B, E).;true;true
8;false;teamplaysinleague(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true


Refining candidate
***************************
Model training time 34.909172773361206
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( athleteplaysforteam(E, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( athleteplaysforteam(F, A) )
%   | | | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( athleteplaysforteam(E, A) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( athleteplaysforteam(F, A) )
%   | | | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then if ( athleteplayssport(F, B) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysinleague(B, G) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( teamplaysinleague(A, H), athleteplayssport(I, B) )
%   | | then return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.0654904804507219;  // std dev = 0.289, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( teamplaysinleague(A, F) )
%   | | then if ( athleteplaysinleague(E, F) )
%   | | | then return 0.17709649774527736;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.17709649774527736;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.1917710214983451;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.07671831564052849;  // std dev = 0.012, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( athleteplayssport(E, B) )
%   | | then if ( teamalsoknownas(A, F) )
%   | | | then return 0.15211405321189228;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.152743858093671;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.06820598180025295;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysinleague(B, G) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysinleague(A, H), athleteplayssport(I, B) )
%   | | then return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.046156839258537356;  // std dev = 0.248, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( teamplaysinleague(A, F) )
%   | | then if ( athleteplaysinleague(E, F) )
%   | | | then return 0.13400703000801117;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.13403139839709552;  // std dev = 8.44e-05, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.15336657371132445;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.06978093717983229;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning 185.19116067886353
Refined model CLL: -0.097471


******************************************
Best model found
******************************************
Results 

CLL : -0.098818 

AUC ROC : 0.988487 

AUC PR : 0.096954 

Precision : 0.124758 

Recall : 0.984733 

F1 : 0.221459 

Total Learning Time : 34.909172773361206 

Total Inference Time : 0.9023642539978027 

Total revision time: 38.44424057006836
Best scored revision CLL: -0.097471


Results 

CLL : -0.098818 

AUC ROC : 0.988487 

AUC PR : 0.096954 

Precision : 0.124758 

Recall : 0.984733 

F1 : 0.221459 

Total Learning Time : 38.57687330245972 

Total Inference Time : 0.9023642539978027 

Amount of data: 20
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 2.032850980758667
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( teamplaysinleague(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, A) )
%   | | then if ( teamplaysagainstteam(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5640312880406888;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | else if ( teamplaysinleague(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(F, G) )
%   | | then return 0.5093644211135624;  // std dev = 0.437, 27.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.4070201921586595;  // std dev = 0.437, 27.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, A) )
%   | | | then return 0.285105243410341;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.3561290369230064;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926096;  // std dev = 1.32e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F), athleteplayssport(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.23408622619703343;  // std dev = 2.269, 27.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17602145117134035;  // std dev = 0.437, 27.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then return 0.06301855325374736;  // std dev = 1.922, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( teamplaysinleague(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16800841773660075;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.07796636068646177;  // std dev = 0.018, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10976903961287539;  // std dev = 0.436, 27.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(C, D), teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return -0.07386995360345969;  // std dev = 0.015, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.0851118982906388;  // std dev = 1.892, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.06812670636964169;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplaysforteam(G, H) )
%   | | then return 0.0838498033331541;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.06780937715224483;  // std dev = 0.016, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0.06568805070468348;  // std dev = 1.893, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | else if ( teamplaysagainstteam(E, A), athleteplaysforteam(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0663358326601692;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
Inference time using transfer learning 38.597705125808716
Parameter learned model CLL:-0.409117 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(D, B)', 'false,false': 'athleteplaysforteam(E, A)', 'false,false,true': 'teamplaysagainstteam(E, A)', 'false,false,false': 'teamplaysinleague(B, F)'}, {'true': [0.0, 13, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.879, 5, 12], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.265, 2, 8]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'athleteplaysforteam(D, A)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplaysforteam(F, G)'}, {'true,true': [0.0, 6, 0], 'true,false': [0.0, 7, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.437, 7, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [1.05e-08, 13, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.437, 7, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'athleteplayssport(D, A)', 'false,false': 'teamplaysinleague(B, E)', 'false,false,false': 'athleteplaysforteam(F, A)'}, {'true': [0.0, 13, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.879, 5, 12], 'false,false,false,false': [1.265, 2, 8]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)', 'false,false': 'athleteplayssport(E, F), athleteplayssport(G, A)', 'false,false,false': 'teamplaysinleague(B, H)'}, {'true': [1.32e-09, 13, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.269, 7, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)'}, {'true,true': [7.45e-09, 13, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.437, 7, 20]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplayssport(D, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'teamplaysinleague(B, G)', 'false,false,false': 'athleteplaysforteam(H, A)'}, {'true': [1.922, 11, 12], 'false,true': [0.0, 7, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.265, 2, 8]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)'}, {'true': [0.018, 13, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.436, 7, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'athleteplaysforteam(C, D), teamplaysinleague(B, D)', 'true,false': 'teamplaysinleague(B, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'athleteplaysforteam(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.015, 10, 0], 'true,false,false': [1.892, 5, 13], 'false,true': [1.32e-09, 3, 0], 'false,false,true': [1.247, 2, 7], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(E, A), athleteplaysforteam(E, F)', 'false,false,false': 'teamplaysinleague(B, G)'}, {'true': [0.016, 13, 0], 'false,true': [1.893, 5, 13], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.247, 2, 7]}]
{'': [-1.2810265668751807e-17, 0.19204389574759964], 'false': [nan, 0.19204389574759964], 'false,false': [0.20761245674740453, 0.15999999999999986], 'false,false,true': [nan, 0.20761245674740453], 'false,false,false': [nan, 0.15999999999999986]}
{'': [4.270088556250602e-18, 0.1913707432773306], 'false': [nan, 0.1913707432773306], 'false,false': [0.1913707432773306, nan], 'true': [-2.3129646346357427e-18, -1.982541115402065e-18]}
{'': [8.540177112501205e-18, 0.191224700223976], 'false': [nan, 0.191224700223976], 'false,false': [0.191224700223976, nan], 'true': [8.540177112501205e-18, nan]}
{'': [-2.135044278125301e-18, 0.19115454337269777], 'false': [nan, 0.19115454337269777], 'false,false': [nan, 0.19115454337269777], 'false,false,false': [0.20761245674740458, 0.15999999999999998]}
{'': [2.135044278125301e-18, 0.19063028717278604], 'false': [nan, 0.19063028717278604], 'false,false': [nan, 0.19063028717278604], 'false,false,false': [nan, 0.19063028717278604]}
{'': [4.270088556250602e-18, 0.1906498016619739], 'false': [nan, 0.1906498016619739], 'true': [4.270088556250602e-18, nan]}
{'': [0.16054888872782386, 0.10886921970413012], 'false': [-9.912705577010326e-19, 0.16], 'false,false': [nan, 0.16], 'false,false,false': [nan, 0.16]}
{'': [2.59929526412536e-05, 0.19021585991529585], 'false': [nan, 0.19021585991529585]}
{'': [0.1337075222034671, 0.13396029078615038], 'false': [5.782411586589357e-19, 0.17283950617283952], 'false,false': [0.17283950617283952, nan], 'true': [nan, 0.1337075222034671], 'true,false': [2.1989925859173392e-05, 0.19895039477495197]}
{'': [1.9421341383548267e-05, 0.19027557489521077], 'false': [0.19899346938257576, 0.1728395061728395], 'false,false': [nan, 0.1728395061728395], 'false,false,false': [nan, 0.1728395061728395]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;true;athleteplaysforteam(D, A).;true;true
2;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteplayssport(D, E).;true;true
6;false;teamplaysinleague(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
8;true;teamplaysinleague(B, E).;true;true
8;false;teamplaysinleague(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true


Refining candidate
***************************
Model training time 33.9869647026062
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteledsportsteam(D, A) )
%   | then return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteplaysforteam(D, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamalsoknownas(E, A) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4175135841583098;  // std dev = 4.21e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteledsportsteam(D, A) )
%   | then return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( athleteplaysforteam(E, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( athleteplaysforteam(F, A) )
%   | | | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteledsportsteam(D, A) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( teamplaysagainstteam(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(F, B) )
%   | then if ( athleteplaysforteam(F, A) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( athleteledsportsteam(G, A) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2551722425694894;  // std dev = 2.11e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( athleteledsportsteam(H, A) )
%   | | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then if ( athleteplayssport(F, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.07877675473109172;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamplaysinleague(B, G) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( athleteplayssport(H, B), teamplaysinleague(A, I) )
%   | | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.09434392748708462;  // std dev = 0.316, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysinleague(A, E) )
%   | | then return 0.17709649774527741;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.19018445523633637;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( teamplaysagainstteam(A, F), athleteledsportsteam(G, F) )
%   | | then return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08168289368446759;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysinleague(B, D) )
%   | then if ( athleteplaysforteam(E, A) )
%   | | then return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( athleteplayssport(F, B) )
%   | | then if ( teamalsoknownas(A, G) )
%   | | | then return 0.15232234132786787;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.15274385809367075;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.06831981006393086;  // std dev = 0.000479, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysinleague(B, H) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysinleague(A, I), athleteplayssport(J, B) )
%   | | then return 0.15274385809367075;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.0679967862726851;  // std dev = 0.270, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( teamplaysinleague(A, F) )
%   | | then if ( athleteplaysinleague(E, F) )
%   | | | then return 0.13400703000801117;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.13402170727028523;  // std dev = 7.09e-05, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.15106570659439955;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( teamplaysagainstteam(A, G), athleteledsportsteam(H, G) )
%   | | then return -0.06419827808498375;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07778618782279792;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning 166.25937247276306
Refined model CLL: -0.097157


******************************************
Best model found
******************************************
Results 

CLL : -0.099306 

AUC ROC : 0.988414 

AUC PR : 0.096927 

Precision : 0.124758 

Recall : 0.984733 

F1 : 0.221459 

Total Learning Time : 33.9869647026062 

Total Inference Time : 1.1098906993865967 

Total revision time: 38.07528805732727
Best scored revision CLL: -0.097157


Results 

CLL : -0.099306 

AUC ROC : 0.988414 

AUC PR : 0.096927 

Precision : 0.124758 

Recall : 0.984733 

F1 : 0.221459 

Total Learning Time : 38.20792078971863 

Total Inference Time : 1.1098906993865967 

Amount of data: 25
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 2.2194740772247314
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( teamplaysinleague(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, A) )
%   | | then if ( teamplaysagainstteam(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.524815601766179;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | else if ( teamplaysinleague(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7043027812533584;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(F, G) )
%   | | then return 0.5046205020930951;  // std dev = 0.438, 34.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.11231637819360635;  // std dev = 1.39e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.40363112232276555;  // std dev = 0.438, 34.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.10159632948783631;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( athleteplayssport(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, A) )
%   | | | then return 0.2573842877296605;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | | else return 0.39287851553360265;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926094;  // std dev = 2.28e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F), athleteplayssport(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.23262459662648552;  // std dev = 2.538, 34.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.08518475138839685;  // std dev = 1.05e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1750975235779919;  // std dev = 0.435, 34.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then return 0.0545712506519518;  // std dev = 2.192, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.07877675473109172;  // std dev = 9.31e-10, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( teamplaysinleague(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1974936728449219;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.07683983740406407;  // std dev = 0.019, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10787751719639907;  // std dev = 0.434, 34.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(C, D), teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return -0.07358477457736794;  // std dev = 0.014, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.07365732205120148;  // std dev = 2.183, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.0681982590203465;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( athleteplaysforteam(G, H) )
%   | | then return 0.10344009812606579;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.06694908147325847;  // std dev = 0.016, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0.056559415670341305;  // std dev = 2.183, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | else if ( teamplaysagainstteam(E, A), athleteplaysforteam(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08282637855933828;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
Inference time using transfer learning 41.6001410484314
Parameter learned model CLL:-0.407775 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(D, B)', 'false,false': 'athleteplaysforteam(E, A)', 'false,false,true': 'teamplaysagainstteam(E, A)', 'false,false,false': 'teamplaysinleague(B, F)'}, {'true': [0.0, 16, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [2.16, 7, 14], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.301, 2, 11]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'athleteplaysforteam(D, A)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplaysforteam(F, G)'}, {'true,true': [0.0, 6, 0], 'true,false': [5.27e-09, 10, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.438, 9, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [1.39e-08, 16, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.438, 9, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'athleteplayssport(D, A)', 'false,false': 'teamplaysinleague(B, E)', 'false,false,false': 'athleteplaysforteam(F, A)'}, {'true': [0.0, 16, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.16, 7, 14], 'false,false,false,false': [1.301, 2, 11]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)', 'false,false': 'athleteplayssport(E, F), athleteplayssport(G, A)', 'false,false,false': 'teamplaysinleague(B, H)'}, {'true': [2.28e-09, 16, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.538, 9, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)'}, {'true,true': [1.05e-08, 16, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.435, 9, 25]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplayssport(D, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'teamplaysinleague(B, G)', 'false,false,false': 'athleteplaysforteam(H, A)'}, {'true': [2.192, 13, 14], 'false,true': [9.31e-10, 10, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.301, 2, 11]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)'}, {'true': [0.019, 16, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.434, 9, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'athleteplaysforteam(C, D), teamplaysinleague(B, D)', 'true,false': 'teamplaysinleague(B, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'athleteplaysforteam(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.014, 10, 0], 'true,false,false': [2.183, 7, 16], 'false,true': [1.86e-09, 6, 0], 'false,false,true': [1.279, 2, 9], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(E, A), athleteplaysforteam(E, F)', 'false,false,false': 'teamplaysinleague(B, G)'}, {'true': [0.016, 16, 0], 'false,true': [2.183, 7, 16], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.279, 2, 9]}]
{'': [-6.938893903907228e-18, 0.1946366782006932], 'false': [nan, 0.1946366782006932], 'false,false': [0.22222222222222185, 0.13017751479289916], 'false,false,true': [nan, 0.22222222222222185], 'false,false,false': [nan, 0.13017751479289916]}
{'': [3.469446951953614e-18, 0.19215345544346676], 'false': [nan, 0.19215345544346676], 'false,false': [0.19215345544346676, nan], 'true': [-2.3129646346357427e-18, 2.7755575615628915e-18]}
{'': [1.214306433183765e-17, 0.19162150659614524], 'false': [nan, 0.19162150659614524], 'false,false': [0.19162150659614524, nan], 'true': [1.214306433183765e-17, nan]}
{'': [-6.938893903907228e-18, 0.19136422960194047], 'false': [nan, 0.19136422960194047], 'false,false': [nan, 0.19136422960194047], 'false,false,false': [0.22222222222222238, 0.1301775147928995]}
{'': [5.204170427930421e-18, 0.1894352872099921], 'false': [nan, 0.1894352872099921], 'false,false': [nan, 0.1894352872099921], 'false,false,false': [nan, 0.1894352872099921]}
{'': [6.938893903907228e-18, 0.18950599854812403], 'false': [nan, 0.18950599854812403], 'true': [6.938893903907228e-18, nan]}
{'': [0.17791998918416418, 0.09233529737801754], 'false': [0.0, 0.13017751479289938], 'false,false': [nan, 0.13017751479289938], 'false,false,false': [nan, 0.13017751479289938]}
{'': [2.1523407707280118e-05, 0.1883401919974268], 'false': [nan, 0.1883401919974268]}
{'': [0.1489710079064931, 0.10298451110962113], 'true': [nan, 0.1489710079064931], 'true,false': [1.934303323068709e-05, 0.20716283314190004], 'false': [5.782411586589357e-19, 0.1487603305785124], 'false,false': [0.1487603305785124, nan]}
{'': [1.590666180766205e-05, 0.18848252684779843], 'false': [0.20725687877854218, 0.14876033057851243], 'false,false': [nan, 0.14876033057851243], 'false,false,false': [nan, 0.14876033057851243]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;true;athleteplaysforteam(D, A).;true;true
2;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteplayssport(D, E).;true;true
6;false;teamplaysinleague(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
8;true;teamplaysinleague(B, E).;true;true
8;false;teamplaysinleague(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true


Refining candidate
***************************
Model training time 176.2062168121338
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysinleague(E, D) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(F, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.10159632948783631;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysinleague(E, D) )
%   | | then return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(F, B) )
%   | then if ( athleteplaysforteam(F, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( athleteplaysforteam(G, A) )
%   | | | then return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysinleague(E, D) )
%   | | then if ( athleteledsportsteam(E, A) )
%   | | | then return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(F, B) )
%   | then return 0.25517224256948956;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( athleteledsportsteam(G, A) )
%   | | then return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then if ( athleteplaysforteam(F, A), athleteplayssport(F, G) )
%   | then if ( athleteplayssport(H, B) )
%   | | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( athleteplayssport(I, B) )
%   | | then return 0.2097577156325356;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysinleague(B, J) )
%   | then return -0.07877675473109172;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( teamplaysinleague(A, K), athleteplayssport(L, B) )
%   | | then return 0.20975771563253556;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.12731929552864205;  // std dev = 0.130, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.07324622576333704;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysinleague(A, E) )
%   | | then return 0.17709649774527744;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return 0.18737600131337262;  // std dev = 0.011, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( teamplaysagainstteam(A, F), athleteplaysforteam(G, F) )
%   | | then return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08343282970903106;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysinleague(B, D) )
%   | then if ( athleteplaysforteam(E, A) )
%   | | then return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( athleteplayssport(F, B) )
%   | | then if ( athleteplaysforteam(F, G), athleteplaysforteam(H, A) )
%   | | | then return 0.15264189195948746;  // std dev = 0.001, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.15593521265149798;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( athleteledsportsteam(I, A) )
%   | | | then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0682114796667707;  // std dev = 0.000528, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysinleague(B, J) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( teamplaysinleague(A, K), athleteplayssport(L, B) )
%   | | then return 0.15274385809367075;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.0808715836502063;  // std dev = 0.282, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysinleague(E, D) )
%   | | then return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(F, B) )
%   | then if ( teamplaysinleague(A, G) )
%   | | then if ( athleteplaysinleague(F, G) )
%   | | | then return 0.13396432708842268;  // std dev = 0.000353, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.13398211997158452;  // std dev = 0.000361, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.14692063898068802;  // std dev = 0.018, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( teamplaysagainstteam(A, H), athleteplaysforteam(I, H) )
%   | | then return -0.06419615556877083;  // std dev = 1.49e-05, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08007827615978089;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning 2349.7422692775726
Refined model CLL: -0.096936


******************************************
Best model found
******************************************
Results 

CLL : -0.099834 

AUC ROC : 0.988652 

AUC PR : 0.099693 

Precision : 0.124758 

Recall : 0.984733 

F1 : 0.221459 

Total Learning Time : 176.2062168121338 

Total Inference Time : 2.6802024841308594 

Total revision time: 182.0604429244995
Best scored revision CLL: -0.096936


Results 

CLL : -0.099834 

AUC ROC : 0.988652 

AUC PR : 0.099693 

Precision : 0.124758 

Recall : 0.984733 

F1 : 0.221459 

Total Learning Time : 182.19307565689087 

Total Inference Time : 2.6802024841308594 

Run: 2

 Starting fold 1 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 264
Target train neg examples: 106660

Target test facts examples: 9691
Target test pos examples: 133
Target test neg examples: 53331

Amount of data: 5
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.2709240913391113
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( teamplaysinleague(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, A) )
%   | | then if ( teamplaysagainstteam(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( teamplaysinleague(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(F, G) )
%   | | then return 0.4134069886278803;  // std dev = 0.483, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.33642743834957023;  // std dev = 0.482, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, A) )
%   | | | then return 0.16641538764939945;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.29506458181298806;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F), athleteplayssport(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20010284672648715;  // std dev = 1.359, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15082471409007162;  // std dev = 0.480, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then return 0.04355772985384854;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( teamplaysinleague(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13654265171228877;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.07324622576333704;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08522492759036356;  // std dev = 0.480, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(C, D), teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.14627715871365726;  // std dev = 1.118, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplaysforteam(G, H) )
%   | | then return 0.4152242388300847;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.0641918400820262;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return -0.11016804073337241;  // std dev = 1.118, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( teamplaysagainstteam(E, A), athleteplaysforteam(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.31916017296700105;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
Inference time using transfer learning 39.1057767868042
Parameter learned model CLL:-0.453849 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(D, B)', 'false,false': 'athleteplaysforteam(E, A)', 'false,false,true': 'teamplaysagainstteam(E, A)', 'false,false,false': 'teamplaysinleague(B, F)'}, {'true': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.707, 1, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.155, 2, 4]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'athleteplaysforteam(D, A)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplaysforteam(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.483, 3, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.482, 3, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'athleteplayssport(D, A)', 'false,false': 'teamplaysinleague(B, E)', 'false,false,false': 'athleteplaysforteam(F, A)'}, {'true': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [1.155, 2, 4]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)', 'false,false': 'athleteplayssport(E, F), athleteplayssport(G, A)', 'false,false,false': 'teamplaysinleague(B, H)'}, {'true': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.359, 3, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)'}, {'true,true': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.48, 3, 5]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplayssport(D, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'teamplaysinleague(B, G)', 'false,false,false': 'athleteplaysforteam(H, A)'}, {'true': [0.707, 1, 1], 'false,true': [0.0, 2, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.155, 2, 4]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)'}, {'true': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.48, 3, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'athleteplaysforteam(C, D), teamplaysinleague(B, D)', 'true,false': 'teamplaysinleague(B, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'athleteplaysforteam(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [1.118, 3, 2], 'false,true': [0.0, 1, 0], 'false,false,true': [1.05e-08, 0, 3], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(E, A), athleteplaysforteam(E, F)', 'false,false,false': 'teamplaysinleague(B, G)'}, {'true': [0.0, 2, 0], 'false,true': [1.118, 3, 2], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 3]}]
{'': [0.0, 0.23437499999999983], 'false': [nan, 0.23437499999999983], 'false,false': [0.25, 0.22222222222222213], 'false,false,true': [nan, 0.25], 'false,false,false': [nan, 0.22222222222222213]}
{'': [0.0, 0.2328183135837315], 'false': [nan, 0.2328183135837315], 'false,false': [0.2328183135837315, nan], 'true': [nan, 0.0]}
{'': [0.0, 0.23248756508266902], 'false': [nan, 0.23248756508266902], 'false,false': [0.23248756508266902, nan], 'true': [0.0, nan]}
{'': [0.0, 0.23226990700896802], 'false': [nan, 0.23226990700896802], 'false,false': [nan, 0.23226990700896802], 'false,false,false': [0.25, 0.22222222222222218]}
{'': [0.0, 0.23087772868114162], 'false': [nan, 0.23087772868114162], 'false,false': [nan, 0.23087772868114162], 'false,false,false': [nan, 0.23087772868114162]}
{'': [0.0, 0.23080752414548217], 'false': [nan, 0.23080752414548217], 'true': [0.0, nan]}
{'': [0.25, 0.17535962544000347], 'false': [0.0, 0.22222222222222224], 'false,false': [nan, 0.22222222222222224], 'false,false,false': [nan, 0.22222222222222224]}
{'': [0.0, 0.2300851652723095], 'false': [nan, 0.2300851652723095]}
{'': [0.2091108687678724, 0.04385971863572226], 'true': [nan, 0.2091108687678724], 'true,false': [0.0, 0.2499229340778791], 'false': [0.0, 3.700743415417188e-17], 'false,false': [3.700743415417188e-17, nan]}
{'': [0.0, 0.19944390514161478], 'false': [0.24998923007190105, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
2;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteplayssport(D, E).;true;true
6;false;teamplaysinleague(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
8;true;teamplaysinleague(B, E).;true;true
8;false;teamplaysinleague(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
9;false;teamplaysagainstteam(D, A).;true;true


Refining candidate
***************************
Model training time 1.5505025386810303
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then return 0.0654904804507219;  // std dev = 0.204, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.1135795588446598;  // std dev = 0.333, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.07324622576333704;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.19306214556413917;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.08616998670466691;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.018929208708004755;  // std dev = 0.270, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( teamplaysinleague(B, E) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.1634159555132274;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.0641918400820262;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0.017044912732211044;  // std dev = 0.269, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.14228447158879287;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
Inference time using transfer learning 14.539834976196289
Refined model CLL: -0.11387


******************************************
Best model found
******************************************
Results 

CLL : -0.105579 

AUC ROC : 0.989378 

AUC PR : 0.116925 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 1.5505025386810303 

Total Inference Time : 0.6916451454162598 

Total revision time: 4.229622840881348
Best scored revision CLL: -0.11387


Results 

CLL : -0.105579 

AUC ROC : 0.989378 

AUC PR : 0.116925 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 4.365812063217163 

Total Inference Time : 0.6916451454162598 

Amount of data: 10
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.536132574081421
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( teamplaysinleague(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, A) )
%   | | then if ( teamplaysagainstteam(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( teamplaysinleague(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5581489350995124;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(F, G) )
%   | | then return 0.48765345674400445;  // std dev = 0.452, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.39124268530994877;  // std dev = 0.452, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.10159632948783627;  // std dev = 1.32e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, A) )
%   | | | then return 0.3276063599289347;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.28975554888175165;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F), athleteplayssport(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2263046851867237;  // std dev = 1.689, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16987040347750776;  // std dev = 0.451, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then return 0.07288371665711578;  // std dev = 0.905, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( teamplaysinleague(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11995071505237775;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.07690782753551481;  // std dev = 0.013, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10256745472159377;  // std dev = 0.452, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(C, D), teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return -0.0733395770989215;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.029389997508158898;  // std dev = 1.412, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.06819393856086742;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( athleteplaysforteam(G, H) )
%   | | then return 0.1669104927474468;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.06700236386274877;  // std dev = 0.011, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0.022624769677392638;  // std dev = 1.412, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( teamplaysagainstteam(E, A), athleteplaysforteam(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12906777855435975;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
Inference time using transfer learning 40.69446301460266
Parameter learned model CLL:-0.43726 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(D, B)', 'false,false': 'athleteplaysforteam(E, A)', 'false,false,true': 'teamplaysagainstteam(E, A)', 'false,false,false': 'teamplaysinleague(B, F)'}, {'true': [0.0, 6, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.866, 1, 3], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.449, 3, 7]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'athleteplaysforteam(D, A)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplaysforteam(F, G)'}, {'true,true': [0.0, 2, 0], 'true,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.452, 4, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 6, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.452, 4, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'athleteplayssport(D, A)', 'false,false': 'teamplaysinleague(B, E)', 'false,false,false': 'athleteplaysforteam(F, A)'}, {'true': [1.32e-09, 6, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.866, 1, 3], 'false,false,false,false': [1.449, 3, 7]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)', 'false,false': 'athleteplayssport(E, F), athleteplayssport(G, A)', 'false,false,false': 'teamplaysinleague(B, H)'}, {'true': [0.0, 6, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.689, 4, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)'}, {'true,true': [2.63e-09, 6, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.451, 4, 10]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplayssport(D, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'teamplaysinleague(B, G)', 'false,false,false': 'athleteplaysforteam(H, A)'}, {'true': [0.905, 3, 3], 'false,true': [0.0, 4, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.449, 3, 7]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)'}, {'true': [0.013, 6, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.452, 4, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'athleteplaysforteam(C, D), teamplaysinleague(B, D)', 'true,false': 'teamplaysinleague(B, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'athleteplaysforteam(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.01, 4, 0], 'true,false,false': [1.412, 3, 6], 'false,true': [0.0, 2, 0], 'false,false,true': [0.894, 1, 4], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(E, A), athleteplaysforteam(E, F)', 'false,false,false': 'teamplaysinleague(B, G)'}, {'true': [0.011, 6, 0], 'false,true': [1.412, 3, 6], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.894, 1, 4]}]
{'': [-6.938893903907228e-18, 0.20408163265306115], 'false': [nan, 0.20408163265306115], 'false,false': [0.18750000000000006, 0.20999999999999988], 'false,false,false': [nan, 0.20999999999999988], 'false,false,true': [nan, 0.18750000000000006]}
{'': [-2.3129646346357427e-18, 0.2039176079575984], 'false': [nan, 0.2039176079575984], 'false,false': [0.2039176079575984, nan], 'true': [0.0, 0.0]}
{'': [0.0, 0.20388223688834237], 'false': [nan, 0.20388223688834237], 'false,false': [0.20388223688834237, nan], 'true': [0.0, nan]}
{'': [0.0, 0.20386381304018958], 'false': [nan, 0.20386381304018958], 'false,false': [nan, 0.20386381304018958], 'false,false,false': [0.1875, 0.20999999999999996]}
{'': [1.1564823173178713e-18, 0.20373194933151856], 'false': [nan, 0.20373194933151856], 'false,false': [nan, 0.20373194933151856], 'false,false,false': [nan, 0.20373194933151856]}
{'': [1.1564823173178713e-18, 0.20373432701110125], 'false': [nan, 0.20373432701110125], 'true': [1.1564823173178713e-18, nan]}
{'': [0.13650044929084665, 0.15805971576459993], 'false': [0.0, 0.20999999999999996], 'false,false': [nan, 0.20999999999999996], 'false,false,false': [nan, 0.20999999999999996]}
{'': [2.6814655076030463e-05, 0.20390341045157265], 'false': [nan, 0.20390341045157265]}
{'': [0.15563439312598934, 0.1255661415552665], 'true': [nan, 0.15563439312598934], 'true,false': [2.6477595964306995e-05, 0.22154627731059648], 'false': [0.0, 0.15999999999999998], 'false,false': [0.15999999999999998, nan]}
{'': [2.011254701656089e-05, 0.2021702414620854], 'false': [0.22155168405018683, 0.16], 'false,false': [nan, 0.16], 'false,false,false': [nan, 0.16]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;true;athleteplaysforteam(D, A).;true;true
2;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteplayssport(D, E).;true;true
6;false;teamplaysinleague(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
8;true;teamplaysinleague(B, E).;true;true
8;false;teamplaysinleague(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true


Refining candidate
***************************
Model training time 13.93775725364685
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then return 0.06549048045072191;  // std dev = 0.353, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.2097577156325356;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.07671831564052847;  // std dev = 0.012, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteplaysforteam(E, A) )
%   | | then return 0.19910828337487896;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamplaysagainstteam(A, F) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17709649774527736;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.07585029317123061;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.07308588275055584;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.16099459318792786;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.0715168478779641;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.06820598180025295;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.10854285273156224;  // std dev = 0.198, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.0668577349009612;  // std dev = 0.010, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteplaysforteam(E, A) )
%   | | then return 0.14779765946533208;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamplaysagainstteam(A, F) )
%   | | | then return 0.1330524272868634;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.13922000181461547;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.06905850075265257;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning 15.004091024398804
Refined model CLL: -0.099007


******************************************
Best model found
******************************************
Results 

CLL : -0.102057 

AUC ROC : 0.98955 

AUC PR : 0.111603 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 13.93775725364685 

Total Inference Time : 0.7372758388519287 

Total revision time: 16.990172386169434
Best scored revision CLL: -0.099007


Results 

CLL : -0.102057 

AUC ROC : 0.98955 

AUC PR : 0.111603 

Precision : 0.124646 

Recall : 0.992481 

F1 : 0.221477 

Total Learning Time : 17.12636160850525 

Total Inference Time : 0.7372758388519287 

Amount of data: 15
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.763347864151001
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( teamplaysinleague(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, A) )
%   | | then if ( teamplaysagainstteam(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( teamplaysinleague(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5010060779566552;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(F, G) )
%   | | then return 0.4871907674959851;  // std dev = 0.448, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.39097749942294835;  // std dev = 0.447, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.10159632948783627;  // std dev = 1.32e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, A) )
%   | | | then return 0.40859506503652154;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.24653794785078512;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F), athleteplayssport(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22647948351472916;  // std dev = 2.034, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1704144949334388;  // std dev = 0.444, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then return 0.12457588509979137;  // std dev = 1.017, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( teamplaysinleague(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08743425302120225;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.07826582306812732;  // std dev = 0.021, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10522802235368028;  // std dev = 0.444, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(C, D), teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return -0.07656533426932738;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.06506486532298995;  // std dev = 1.643, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.06810769732169188;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( athleteplaysforteam(G, H) )
%   | | then return 0.11193521218510148;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.06803098018389034;  // std dev = 0.018, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0.05053370365190625;  // std dev = 1.644, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | else if ( teamplaysagainstteam(E, A), athleteplaysforteam(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08545501699165282;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
Inference time using transfer learning 41.347355365753174
Parameter learned model CLL:-0.430828 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(D, B)', 'false,false': 'athleteplaysforteam(E, A)', 'false,false,true': 'teamplaysagainstteam(E, A)', 'false,false,false': 'teamplaysinleague(B, F)'}, {'true': [0.0, 9, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.926, 1, 6], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.793, 5, 9]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'athleteplaysforteam(D, A)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplaysforteam(F, G)'}, {'true,true': [0.0, 3, 0], 'true,false': [0.0, 6, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.448, 6, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 9, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.447, 6, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'athleteplayssport(D, A)', 'false,false': 'teamplaysinleague(B, E)', 'false,false,false': 'athleteplaysforteam(F, A)'}, {'true': [1.32e-09, 9, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.926, 1, 6], 'false,false,false,false': [1.793, 5, 9]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)', 'false,false': 'athleteplayssport(E, F), athleteplayssport(G, A)', 'false,false,false': 'teamplaysinleague(B, H)'}, {'true': [0.0, 9, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.034, 6, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)'}, {'true,true': [3.73e-09, 9, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.444, 6, 15]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplayssport(D, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'teamplaysinleague(B, G)', 'false,false,false': 'athleteplaysforteam(H, A)'}, {'true': [1.017, 4, 6], 'false,true': [0.0, 6, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.793, 5, 9]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)'}, {'true': [0.021, 9, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.444, 6, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'athleteplaysforteam(C, D), teamplaysinleague(B, D)', 'true,false': 'teamplaysinleague(B, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'athleteplaysforteam(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.015, 5, 0], 'true,false,false': [1.643, 4, 10], 'false,true': [0.0, 4, 0], 'false,false,true': [1.195, 2, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(E, A), athleteplaysforteam(E, F)', 'false,false,false': 'teamplaysinleague(B, G)'}, {'true': [0.018, 9, 0], 'false,true': [1.644, 4, 10], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.195, 2, 5]}]
{'': [-9.25185853854297e-18, 0.20408163265306084], 'false': [nan, 0.20408163265306084], 'false,false': [0.12244897959183662, 0.22959183673469377], 'false,false,false': [nan, 0.22959183673469377], 'false,false,true': [nan, 0.12244897959183662]}
{'': [0.0, 0.20076142218138684], 'false': [nan, 0.20076142218138684], 'false,false': [0.20076142218138684, nan], 'true': [0.0, -2.3129646346357427e-18]}
{'': [-1.5419764230904951e-18, 0.20006622034327884], 'false': [nan, 0.20006622034327884], 'false,false': [0.20006622034327884, nan], 'true': [-1.5419764230904951e-18, nan]}
{'': [3.0839528461809902e-18, 0.19971366418275305], 'false': [nan, 0.19971366418275305], 'false,false': [nan, 0.19971366418275305], 'false,false,false': [0.1224489795918368, 0.22959183673469394]}
{'': [0.0, 0.19710326256410907], 'false': [nan, 0.19710326256410907], 'false,false': [nan, 0.19710326256410907], 'false,false,false': [nan, 0.19710326256410907]}
{'': [1.5419764230904951e-18, 0.19717465024829917], 'false': [nan, 0.19717465024829917], 'true': [1.5419764230904951e-18, nan]}
{'': [0.10343669833979521, 0.16651576652487265], 'false': [-1.1564823173178713e-18, 0.22959183673469383], 'false,false': [nan, 0.22959183673469383], 'false,false,false': [nan, 0.22959183673469383]}
{'': [5.039271420451593e-05, 0.19696119357326364], 'false': [nan, 0.19696119357326364]}
{'': [0.14602934300621323, 0.13737122556750836], 'true': [nan, 0.14602934300621323], 'true,false': [4.7687748492005605e-05, 0.19288693439314689], 'false': [0.0, 0.20408163265306123], 'false,false': [0.20408163265306123, nan]}
{'': [3.682794522650748e-05, 0.19701103079733018], 'false': [0.1930692304943404, 0.2040816326530612], 'false,false': [nan, 0.2040816326530612], 'false,false,false': [nan, 0.2040816326530612]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;true;athleteplaysforteam(D, A).;true;true
2;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteplayssport(D, E).;true;true
6;false;teamplaysinleague(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
8;true;teamplaysinleague(B, E).;true;true
8;false;teamplaysinleague(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true


Refining candidate
***************************
Model training time 34.4098858833313
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( teamplaysagainstteam(A, F) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( teamalsoknownas(F, A), teamplaysagainstteam(A, F) )
%   | | then return 0.4378340619645058;  // std dev = 0.690, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7282220336740769;  // std dev = 0.109, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.14198458662441546;  // std dev = 0.045, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamalsoknownas(E, A), athleteplaysforteam(D, F) )
%   | | then return 0.3869964608651256;  // std dev = 0.659, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( teamplaysagainstteam(A, G), athleteledsportsteam(D, H) )
%   | | | then return 0.5532050666361429;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.5979803139018863;  // std dev = 0.136, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.12560026048439857;  // std dev = 0.041, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(E, B), athleteplaysinleague(E, F) )
%   | then if ( teamalsoknownas(G, A) )
%   | | then return 0.4798202468918973;  // std dev = 0.059, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( teamplaysagainstteam(A, H) )
%   | | | then return 0.4159124668069776;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.4050778507512229;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( teamplaysinleague(A, I) )
%   | | then return -0.14430355316953605;  // std dev = 0.121, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.1127900876315155;  // std dev = 0.561, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamalsoknownas(A, E) )
%   | | then return 0.16062992287579833;  // std dev = 0.467, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return 0.3305854325256335;  // std dev = 0.088, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.37345612442487;  // std dev = 0.195, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.1092828430637951;  // std dev = 0.050, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( teamalsoknownas(A, F) )
%   | | then return 0.1272315677388984;  // std dev = 0.462, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamplaysagainstteam(A, G) )
%   | | | then return 0.2617697295606287;  // std dev = 0.079, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.2948384567473874;  // std dev = 0.178, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.09913769790816149;  // std dev = 0.045, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then if ( athleteplayssport(F, B) )
%   | then return 0.22103574784625413;  // std dev = 0.064, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.07698601623166988;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysinleague(B, G) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( athleteplayssport(H, B), athleteplaysinleague(H, I) )
%   | | then if ( teamplaysinleague(A, J), athleteledsportsteam(H, K) )
%   | | | then return 0.19905420032228918;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.23301748557206375;  // std dev = 0.103, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.04634556350418104;  // std dev = 0.493, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.07330705098358042;  // std dev = 0.000149, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( teamplaysagainstteam(A, F), teamalsoknownas(F, A) )
%   | | then return 0.0738047887650418;  // std dev = 0.415, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamplaysagainstteam(A, G) )
%   | | | then return 0.1727355578482206;  // std dev = 0.019, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.22253549215429347;  // std dev = 0.197, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.08654515138695824;  // std dev = 0.041, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.0684931909707037;  // std dev = 0.000121, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( athleteplayssport(E, B), athleteplaysinleague(E, F) )
%   | | then if ( teamalsoknownas(G, A) )
%   | | | then return 0.20746382592944437;  // std dev = 0.056, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1475590465371329;  // std dev = 0.009, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.12118832696403567;  // std dev = 0.184, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysinleague(B, H) )
%   | then return -0.06842406995526353;  // std dev = 3.36e-06, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( athleteplayssport(I, B), athleteledsportsteam(I, J) )
%   | | then return 0.15047853329883706;  // std dev = 0.056, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.04753338149067563;  // std dev = 0.355, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.06424010706067751;  // std dev = 0.000127, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.0641892467153707;  // std dev = 3.39e-06, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(E, B), athleteplaysinleague(E, F) )
%   | then if ( teamalsoknownas(G, A), teamalsoknownas(H, G) )
%   | | then return 0.18867593872065047;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamplaysinleague(A, I), athleteplaysinleague(J, I) )
%   | | | then return 0.13257887679589558;  // std dev = 0.005, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.12084962513483706;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( teamplaysinleague(A, K) )
%   | | then return -0.11429708153055856;  // std dev = 0.166, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.04723064973832904;  // std dev = 0.344, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
Inference time using transfer learning 166.9796450138092
Refined model CLL: -0.115248


******************************************
Best model found
******************************************
Results 

CLL : -0.090819 

AUC ROC : 0.987324 

AUC PR : 0.176554 

Precision : 0.158845 

Recall : 0.992481 

F1 : 0.273859 

Total Learning Time : 34.4098858833313 

Total Inference Time : 0.9107017517089844 

Total revision time: 37.95794367790222
Best scored revision CLL: -0.115248


Results 

CLL : -0.090819 

AUC ROC : 0.987324 

AUC PR : 0.176554 

Precision : 0.158845 

Recall : 0.992481 

F1 : 0.273859 

Total Learning Time : 38.09413290023804 

Total Inference Time : 0.9107017517089844 

Amount of data: 20
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.9445226192474365
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamplaysinleague(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, A) )
%   | | then if ( teamplaysagainstteam(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( teamplaysinleague(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4581489350995123;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(F, G) )
%   | | then return 0.46648184426609063;  // std dev = 0.456, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.3758706311567965;  // std dev = 0.455, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, A) )
%   | | | then return 0.4413475505855186;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.22234149063452907;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F), athleteplayssport(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21931424857398868;  // std dev = 2.419, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16528513978126458;  // std dev = 0.449, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then return 0.16010447684874288;  // std dev = 1.057, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( teamplaysinleague(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07316523735297617;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.07814474838462772;  // std dev = 0.027, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10128059499014283;  // std dev = 0.448, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(C, D), teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return -0.07820641295831895;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.11192419782752491;  // std dev = 1.674, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.06811538221733038;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( athleteplaysforteam(G, H) )
%   | | then return 0.03490374783586498;  // std dev = 1.729, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.06793466029317714;  // std dev = 0.023, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0.08698970037112175;  // std dev = 1.675, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | else if ( teamplaysagainstteam(E, A), athleteplaysforteam(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.026473901262104044;  // std dev = 1.729, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
Inference time using transfer learning 40.27964901924133
Parameter learned model CLL:-0.448061 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(D, B)', 'false,false': 'athleteplaysforteam(E, A)', 'false,false,true': 'teamplaysagainstteam(E, A)', 'false,false,false': 'teamplaysinleague(B, F)'}, {'true': [0.0, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.943, 1, 8], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.191, 8, 12]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'athleteplaysforteam(D, A)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplaysforteam(F, G)'}, {'true,true': [0.0, 3, 0], 'true,false': [0.0, 8, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.456, 9, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [7.45e-09, 11, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.455, 9, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'athleteplayssport(D, A)', 'false,false': 'teamplaysinleague(B, E)', 'false,false,false': 'athleteplaysforteam(F, A)'}, {'true': [0.0, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.943, 1, 8], 'false,false,false,false': [2.191, 8, 12]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)', 'false,false': 'athleteplayssport(E, F), athleteplayssport(G, A)', 'false,false,false': 'teamplaysinleague(B, H)'}, {'true': [0.0, 11, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.419, 9, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)'}, {'true,true': [5.27e-09, 11, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.449, 9, 20]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplayssport(D, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'teamplaysinleague(B, G)', 'false,false,false': 'athleteplaysforteam(H, A)'}, {'true': [1.057, 4, 8], 'false,true': [0.0, 8, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.191, 8, 12]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)'}, {'true': [0.027, 11, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.448, 9, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'athleteplaysforteam(C, D), teamplaysinleague(B, D)', 'true,false': 'teamplaysinleague(B, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'athleteplaysforteam(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.018, 5, 0], 'true,false,false': [1.674, 4, 12], 'false,true': [0.0, 6, 0], 'false,false,true': [1.729, 5, 8], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(E, A), athleteplaysforteam(E, F)', 'false,false,false': 'teamplaysinleague(B, G)'}, {'true': [0.023, 11, 0], 'false,true': [1.675, 4, 12], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.729, 5, 8]}]
{'': [-1.0092936587501423e-17, 0.21403091557669457], 'false': [nan, 0.21403091557669457], 'false,false': [0.09876543209876527, 0.2399999999999996], 'false,false,false': [nan, 0.2399999999999996], 'false,false,true': [nan, 0.09876543209876527]}
{'': [2.523234146875356e-18, 0.20823496312619702], 'false': [nan, 0.20823496312619702], 'false,false': [0.20823496312619702, nan], 'true': [0.0, 0.0]}
{'': [5.046468293750712e-18, 0.20706025263515193], 'false': [nan, 0.20706025263515193], 'false,false': [0.20706025263515193, nan], 'true': [5.046468293750712e-18, nan]}
{'': [0.0, 0.2064342872186968], 'false': [nan, 0.2064342872186968], 'false,false': [nan, 0.2064342872186968], 'false,false,false': [0.0987654320987656, 0.24]}
{'': [0.0, 0.20182798251157114], 'false': [nan, 0.20182798251157114], 'false,false': [nan, 0.20182798251157114], 'false,false,false': [nan, 0.20182798251157114]}
{'': [2.523234146875356e-18, 0.20190976485767978], 'false': [nan, 0.20190976485767978], 'true': [2.523234146875356e-18, nan]}
{'': [0.09309548834110691, 0.17614007529764794], 'false': [0.0, 0.24], 'false,false': [nan, 0.24], 'false,false,false': [nan, 0.24]}
{'': [6.398806365679037e-05, 0.20093442502174858], 'false': [nan, 0.20093442502174858]}
{'': [0.13999593879416158, 0.15962529956444496], 'false': [0.0, 0.22994705964585058], 'false,false': [0.22994705964585058, nan], 'true': [nan, 0.13999593879416158], 'true,false': [6.788593427704964e-05, 0.17511639598959025]}
{'': [4.637720870728779e-05, 0.20077001372727674], 'false': [0.175378432443823, 0.23000068755122233], 'false,false': [nan, 0.23000068755122233], 'false,false,false': [nan, 0.23000068755122233]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;true;athleteplaysforteam(D, A).;true;true
2;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteplayssport(D, E).;true;true
6;false;teamplaysinleague(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
8;true;teamplaysinleague(B, E).;true;true
8;false;teamplaysinleague(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true


Refining candidate
***************************
Model training time 228.32511401176453
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( teamplaysinleague(A, F) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( teamalsoknownas(A, F), teamplaysagainstteam(A, F) )
%   | | then return 0.4378340619645058;  // std dev = 0.690, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7264175247456655;  // std dev = 0.121, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.13672760989183624;  // std dev = 0.041, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( teamalsoknownas(A, F), athleteplaysforteam(E, G) )
%   | | then return 0.33174225098384197;  // std dev = 0.631, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamplaysagainstteam(A, H), athleteledsportsteam(E, I) )
%   | | | then return 0.5536510427633096;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.587980922946942;  // std dev = 0.160, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( teamplaysinleague(A, J) )
%   | | then return -0.11119636113325222;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.13840768052323052;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteledsportsteam(D, E) )
%   | | then if ( teamalsoknownas(F, A), teamalsoknownas(G, F) )
%   | | | then return 0.47672019129050497;  // std dev = 0.090, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.41347023050519355;  // std dev = 0.015, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0.27861194788074134;  // std dev = 0.636, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( teamplaysinleague(A, H) )
%   | | then return -0.10067245942280559;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.12271295047267945;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then if ( teamalsoknownas(A, F) )
%   | | then return 0.3969158232915731;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | | | then return 0.32045366349126686;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.3141085811887309;  // std dev = 0.012, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( teamplaysinleague(A, I) )
%   | | then return -0.12499008148130782;  // std dev = 0.181, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.048595992861789734;  // std dev = 0.550, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysforteam(E, A) )
%   | | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(F, B) )
%   | then if ( teamalsoknownas(A, G), athleteplaysforteam(F, H) )
%   | | then return 0.11238119930803836;  // std dev = 0.465, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamplaysinleague(A, I), athleteledsportsteam(F, J) )
%   | | | then return 0.25306710503411567;  // std dev = 0.011, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.2989815106341207;  // std dev = 0.239, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( teamplaysinleague(A, K) )
%   | | then return -0.08200305373763363;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.11495443338993984;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then if ( athleteplayssport(F, B) )
%   | then if ( teamalsoknownas(G, A) )
%   | | then return 0.23923880315897228;  // std dev = 0.083, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.20995303973956791;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.07809201510137165;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysinleague(B, H) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( athleteplayssport(I, B) )
%   | | then if ( teamplaysagainstteam(A, J), teamalsoknownas(K, J) )
%   | | | then return 0.05993033487567325;  // std dev = 0.427, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.23088923903302244;  // std dev = 0.223, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( teamplaysinleague(A, L) )
%   | | | then return -0.07603779621221135;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.10376650490808431;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysforteam(E, A) )
%   | | then return -0.07329272030676215;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(F, B), athleteplaysinleague(F, G) )
%   | then if ( teamplaysinleague(H, G), teamplaysagainstteam(A, H) )
%   | | then if ( teamalsoknownas(I, A), teamplaysagainstteam(A, I) )
%   | | | then return 0.2233263434403517;  // std dev = 0.072, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1770371318816163;  // std dev = 0.027, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( teamplaysinleague(A, J) )
%   | | | then return 0.1737289086455095;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.17503009406644018;  // std dev = 0.039, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( teamplaysinleague(A, K) )
%   | | then return -0.10906507101851164;  // std dev = 0.209, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.024706051050518638;  // std dev = 0.413, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.06845139542427828;  // std dev = 4.46e-05, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( athleteplayssport(E, B), athleteplaysinleague(E, F) )
%   | | then if ( teamalsoknownas(G, A), teamplaysagainstteam(A, G) )
%   | | | then return 0.1873013468552188;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.15277809041644685;  // std dev = 0.024, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.12558485151016038;  // std dev = 0.178, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysinleague(B, H) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( athleteplayssport(I, B) )
%   | | then if ( teamplaysinleague(A, J) )
%   | | | then return 0.14914566330627857;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19628856402018385;  // std dev = 0.204, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.0770631464725078;  // std dev = 0.036, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysforteam(E, A) )
%   | | then return -0.06422872333174563;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.0641908622294305;  // std dev = 1.20e-06, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(F, B) )
%   | then if ( teamalsoknownas(A, G), athleteplaysforteam(F, H) )
%   | | then return 0.029490513792002848;  // std dev = 0.347, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamplaysagainstteam(A, I), athleteledsportsteam(F, J) )
%   | | | then return 0.13247221664136735;  // std dev = 0.027, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.16080726671513465;  // std dev = 0.192, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( teamplaysinleague(A, K) )
%   | | then return -0.05846041727823096;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08881900904551826;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning 412.52569603919983
Refined model CLL: -0.108997


******************************************
Best model found
******************************************
Results 

CLL : -0.088224 

AUC ROC : 0.987938 

AUC PR : 0.213438 

Precision : 0.159613 

Recall : 0.992481 

F1 : 0.275 

Total Learning Time : 228.32511401176453 

Total Inference Time : 1.9667253494262695 

Total revision time: 233.180340051651
Best scored revision CLL: -0.108997


Results 

CLL : -0.088224 

AUC ROC : 0.987938 

AUC PR : 0.213438 

Precision : 0.159613 

Recall : 0.992481 

F1 : 0.275 

Total Learning Time : 233.31652927398682 

Total Inference Time : 1.9667253494262695 

Amount of data: 25
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 2.220183849334717
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( teamplaysinleague(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, A) )
%   | | then if ( teamplaysagainstteam(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7043027812533584;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else if ( teamplaysinleague(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4945125714631487;  // std dev = 2.256, 22.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(F, G) )
%   | | then return 0.4871869900928512;  // std dev = 0.448, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.39097347148764866;  // std dev = 0.447, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplayssport(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, A) )
%   | | | then return 0.40032458036436747;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.2415988288755153;  // std dev = 2.256, 22.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926094;  // std dev = 1.86e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F), athleteplayssport(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2264619016163567;  // std dev = 2.626, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.08518475138839685;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17040547857051544;  // std dev = 0.444, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then return 0.11549971734077458;  // std dev = 1.422, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( teamplaysinleague(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08377405017891672;  // std dev = 2.256, 22.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.07897855369593705;  // std dev = 0.027, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10620476591244521;  // std dev = 0.444, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(C, D), teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return -0.07699964944794369;  // std dev = 0.019, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.11077193442571241;  // std dev = 1.922, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.0680624749161644;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( athleteplaysforteam(G, H) )
%   | | then return 0.03737881547101018;  // std dev = 1.777, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.06857115899461659;  // std dev = 0.023, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0.08626291538340493;  // std dev = 1.923, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | else if ( teamplaysagainstteam(E, A), athleteplaysforteam(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02850643126130953;  // std dev = 1.777, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
Inference time using transfer learning 40.19936919212341
Parameter learned model CLL:-0.430175 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(D, B)', 'false,false': 'athleteplaysforteam(E, A)', 'false,false,true': 'teamplaysagainstteam(E, A)', 'false,false,false': 'teamplaysinleague(B, F)'}, {'true': [0.0, 15, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.301, 2, 11], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.256, 8, 14]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'athleteplaysforteam(D, A)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplaysforteam(F, G)'}, {'true,true': [0.0, 6, 0], 'true,false': [0.0, 9, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.448, 10, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [1.39e-08, 15, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.447, 10, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'athleteplayssport(D, A)', 'false,false': 'teamplaysinleague(B, E)', 'false,false,false': 'athleteplaysforteam(F, A)'}, {'true': [0.0, 15, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.301, 2, 11], 'false,false,false,false': [2.256, 8, 14]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)', 'false,false': 'athleteplayssport(E, F), athleteplayssport(G, A)', 'false,false,false': 'teamplaysinleague(B, H)'}, {'true': [1.86e-09, 15, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.626, 10, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)'}, {'true,true': [9.13e-09, 15, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.444, 10, 25]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplayssport(D, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'teamplaysinleague(B, G)', 'false,false,false': 'athleteplaysforteam(H, A)'}, {'true': [1.422, 8, 11], 'false,true': [0.0, 9, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.256, 8, 14]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)'}, {'true': [0.027, 15, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.444, 10, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'athleteplaysforteam(C, D), teamplaysinleague(B, D)', 'true,false': 'teamplaysinleague(B, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'athleteplaysforteam(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.019, 9, 0], 'true,false,false': [1.922, 5, 16], 'false,true': [0.0, 6, 0], 'false,false,true': [1.777, 5, 9], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(E, A), athleteplaysforteam(E, F)', 'false,false,false': 'teamplaysinleague(B, G)'}, {'true': [0.023, 15, 0], 'false,true': [1.923, 5, 16], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.777, 5, 9]}]
{'': [-1.4802973661668754e-17, 0.20408163265306242], 'false': [nan, 0.20408163265306242], 'false,false': [0.13017751479289916, 0.23140495867768554], 'false,false,false': [nan, 0.23140495867768554], 'false,false,true': [nan, 0.13017751479289916]}
{'': [3.7007434154171884e-18, 0.2007522538603507], 'false': [nan, 0.2007522538603507], 'false,false': [0.2007522538603507, nan], 'true': [-2.3129646346357427e-18, 0.0]}
{'': [1.295260195396016e-17, 0.20004855059769228], 'false': [nan, 0.20004855059769228], 'false,false': [0.20004855059769228, nan], 'true': [1.295260195396016e-17, nan]}
{'': [-5.551115123125783e-18, 0.19968818985281447], 'false': [nan, 0.19968818985281447], 'false,false': [nan, 0.19968818985281447], 'false,false,false': [0.13017751479289952, 0.23140495867768598]}
{'': [3.7007434154171884e-18, 0.1970526725685137], 'false': [nan, 0.1970526725685137], 'false,false': [nan, 0.1970526725685137], 'false,false,false': [nan, 0.1970526725685137]}
{'': [5.551115123125783e-18, 0.19711592650981435], 'false': [nan, 0.19711592650981435], 'true': [5.551115123125783e-18, nan]}
{'': [0.1064888324958653, 0.1696668981531804], 'false': [0.0, 0.23140495867768598], 'false,false': [nan, 0.23140495867768598], 'false,false,false': [nan, 0.23140495867768598]}
{'': [4.928937529030027e-05, 0.19694104981917143], 'false': [nan, 0.19694104981917143]}
{'': [0.13061192318712012, 0.16017509227887272], 'false': [0.0, 0.22548620068283584], 'false,false': [0.22548620068283584, nan], 'true': [nan, 0.13061192318712012], 'true,false': [3.993654430574444e-05, 0.17599389572091415]}
{'': [3.57366132814609e-05, 0.1966777416878335], 'false': [0.17611152565958235, 0.2255255788553228], 'false,false': [nan, 0.2255255788553228], 'false,false,false': [nan, 0.2255255788553228]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;true;athleteplaysforteam(D, A).;true;true
2;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteplayssport(D, E).;true;true
6;false;teamplaysinleague(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
8;true;teamplaysinleague(B, E).;true;true
8;false;teamplaysinleague(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true


Refining candidate
***************************
Model training time 292.8120131492615
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.858148935099512;  // std dev = 1.03e-07, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( teamplaysinleague(A, F) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( teamalsoknownas(A, F), teamalsoknownas(F, A) )
%   | | then return 0.508243899526118;  // std dev = 0.732, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.7251549588302635;  // std dev = 0.122, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.13547394640700905;  // std dev = 0.043, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysinleague(E, D) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(F, B) )
%   | then if ( teamalsoknownas(A, G), teamplaysagainstteam(A, G) )
%   | | then return 0.3403107082317867;  // std dev = 0.653, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0.553963028854259;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.5818716677076881;  // std dev = 0.160, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( teamplaysinleague(A, I) )
%   | | then return -0.111320323271298;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.1385572489225814;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( teamalsoknownas(A, E), athleteplaysforteam(D, F) )
%   | | then return 0.2862545205632292;  // std dev = 0.626, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( teamplaysinleague(A, G), athleteledsportsteam(D, H) )
%   | | | then return 0.41647352658051384;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.45241140315977557;  // std dev = 0.186, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( teamplaysinleague(A, I) )
%   | | then return -0.10077478592655331;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.12283186077876103;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysinleague(E, D) )
%   | | then return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(F, B), athleteplaysinleague(F, G) )
%   | then if ( teamalsoknownas(A, H), teamalsoknownas(H, A) )
%   | | then return 0.41871039376611563;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamplaysagainstteam(I, A), teamalsoknownas(J, I) )
%   | | | then return 0.3228393876434409;  // std dev = 0.021, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.3147257831373093;  // std dev = 0.024, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( teamplaysinleague(A, K) )
%   | | then if ( athleteplaysinleague(L, K) )
%   | | | then return -0.0920029806953265;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.1641757201414307;  // std dev = 0.177, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.038128473568669274;  // std dev = 0.514, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysinleague(E, D) )
%   | | then if ( athleteledsportsteam(E, A) )
%   | | | then return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(F, B) )
%   | then if ( teamalsoknownas(A, G), teamplaysagainstteam(A, G) )
%   | | then return 0.1306098648738107;  // std dev = 0.497, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamplaysagainstteam(A, H) )
%   | | | then return 0.2532157164632203;  // std dev = 0.015, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.2827411285965874;  // std dev = 0.209, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( teamplaysinleague(A, I) )
%   | | then return -0.08279219069663296;  // std dev = 0.006, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.1139932182390037;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then if ( athleteplayssport(F, B) )
%   | then if ( teamalsoknownas(G, A) )
%   | | then return 0.2469641695492917;  // std dev = 0.093, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( athleteledsportsteam(H, A) )
%   | | | then return 0.20919318507695017;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.21020224409998003;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.07868386792665784;  // std dev = 0.000161, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysinleague(B, I) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( athleteplayssport(J, B), athleteplaysinleague(J, K) )
%   | | then if ( teamalsoknownas(A, L) )
%   | | | then return 0.2506233404759513;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.20246559496690503;  // std dev = 0.018, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( teamplaysagainstteam(A, M) )
%   | | | then return -0.16092957317202553;  // std dev = 0.173, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.004493720008438738;  // std dev = 0.449, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysinleague(E, D) )
%   | | then if ( athleteplaysforteam(E, A) )
%   | | | then return -0.07325253128253356;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(F, B) )
%   | then if ( teamalsoknownas(A, G), teamplaysagainstteam(A, G) )
%   | | then return 0.08042028524969182;  // std dev = 0.428, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0.17602010593125259;  // std dev = 0.009, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.20279845151477793;  // std dev = 0.219, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( teamplaysinleague(A, I) )
%   | | then return -0.07291858972122418;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.09805233682677182;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysinleague(B, D) )
%   | then if ( athleteplaysforteam(E, A) )
%   | | then return -0.06843249715078605;  // std dev = 3.23e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplayssport(F, B), athleteplaysinleague(F, G) )
%   | | then if ( teamalsoknownas(A, H) )
%   | | | then return 0.21103385900137595;  // std dev = 0.074, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.15073451696593715;  // std dev = 0.014, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.11309326831512453;  // std dev = 0.192, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysinleague(B, I) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( athleteplayssport(J, B) )
%   | | then if ( teamplaysinleague(A, K) )
%   | | | then return 0.1513290673762661;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.18900698053190965;  // std dev = 0.190, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.07945340289053439;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysinleague(E, D) )
%   | | then return -0.0641950865261816;  // std dev = 2.30e-06, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(F, B), athleteplaysinleague(F, G) )
%   | then if ( teamalsoknownas(A, H), teamalsoknownas(H, A) )
%   | | then return 0.18395174590201024;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamplaysinleague(A, I) )
%   | | | then return 0.13348967067014603;  // std dev = 0.007, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.12222342485674498;  // std dev = 0.010, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( teamalsoknownas(J, A) )
%   | | then return -0.13765979923248498;  // std dev = 0.154, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( teamplaysinleague(A, K) )
%   | | | then return -0.062093676678838985;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.05152209799413732;  // std dev = 0.323, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
Inference time using transfer learning 600.5310063362122
Refined model CLL: -0.105897


******************************************
Best model found
******************************************
Results 

CLL : -0.089683 

AUC ROC : 0.986864 

AUC PR : 0.15977 

Precision : 0.1375 

Recall : 0.992481 

F1 : 0.241537 

Total Learning Time : 292.8120131492615 

Total Inference Time : 3.093705415725708 

Total revision time: 299.09364652633667
Best scored revision CLL: -0.105897


Results 

CLL : -0.089683 

AUC ROC : 0.986864 

AUC PR : 0.15977 

Precision : 0.1375 

Recall : 0.992481 

F1 : 0.241537 

Total Learning Time : 299.2298357486725 

Total Inference Time : 3.093705415725708 


 Starting fold 2 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 264
Target train neg examples: 106660

Target test facts examples: 9691
Target test pos examples: 133
Target test neg examples: 53331

Amount of data: 5
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.3271455764770508
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysinleague(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, A) )
%   | | then if ( teamplaysagainstteam(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamplaysinleague(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(F, G) )
%   | | then return 0.4875963810961104;  // std dev = 0.451, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.3912087496164244;  // std dev = 0.451, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, A) )
%   | | | then return 0.2644840968924073;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.32762856446914945;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926094;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F), athleteplayssport(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22631369276369995;  // std dev = 1.192, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1699286544143264;  // std dev = 0.450, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then return 0.0560273446521027;  // std dev = 0.831, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( teamplaysinleague(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.148714323539461;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.07647744205979745;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10233852624871755;  // std dev = 0.450, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(C, D), teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return -0.07276334433045503;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.02635220142731807;  // std dev = 1.107, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.06822129185423179;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplaysforteam(G, H) )
%   | | then return 0.3403179099449213;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.06667377929911825;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return -0.020184329890115336;  // std dev = 1.107, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( teamplaysagainstteam(E, A), athleteplaysforteam(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.26850993232242504;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
Inference time using transfer learning 41.617714166641235
Parameter learned model CLL:-0.411242 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(D, B)', 'false,false': 'athleteplaysforteam(E, A)', 'false,false,true': 'teamplaysagainstteam(E, A)', 'false,false,false': 'teamplaysinleague(B, F)'}, {'true': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.816, 1, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.866, 1, 3]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'athleteplaysforteam(D, A)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplaysforteam(F, G)'}, {'true,true': [0.0, 1, 0], 'true,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.451, 2, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [2.63e-09, 3, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.451, 2, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'athleteplayssport(D, A)', 'false,false': 'teamplaysinleague(B, E)', 'false,false,false': 'athleteplaysforteam(F, A)'}, {'true': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.816, 1, 2], 'false,false,false,false': [0.866, 1, 3]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)', 'false,false': 'athleteplayssport(E, F), athleteplayssport(G, A)', 'false,false,false': 'teamplaysinleague(B, H)'}, {'true': [1.32e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.192, 2, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)'}, {'true,true': [0.0, 3, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.45, 2, 5]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplayssport(D, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'teamplaysinleague(B, G)', 'false,false,false': 'athleteplaysforteam(H, A)'}, {'true': [0.831, 2, 2], 'false,true': [0.0, 2, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.866, 1, 3]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)'}, {'true': [0.008, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.45, 2, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'athleteplaysforteam(C, D), teamplaysinleague(B, D)', 'true,false': 'teamplaysinleague(B, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'athleteplaysforteam(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.006, 2, 0], 'true,false,false': [1.107, 2, 3], 'false,true': [0.0, 1, 0], 'false,false,true': [0.0, 0, 2], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(E, A), athleteplaysforteam(E, F)', 'false,false,false': 'teamplaysinleague(B, G)'}, {'true': [0.007, 3, 0], 'false,true': [1.107, 2, 3], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 2]}]
{'': [0.0, 0.20408163265306106], 'false': [nan, 0.20408163265306106], 'false,false': [0.22222222222222224, 0.18750000000000006], 'false,false,true': [nan, 0.22222222222222224], 'false,false,false': [nan, 0.18750000000000006]}
{'': [0.0, 0.20353936555905475], 'false': [nan, 0.20353936555905475], 'false,false': [0.20353936555905475, nan], 'true': [0.0, 0.0]}
{'': [2.3129646346357427e-18, 0.20342044486488184], 'false': [nan, 0.20342044486488184], 'false,false': [0.20342044486488184, nan], 'true': [2.3129646346357427e-18, nan]}
{'': [-1.1564823173178713e-18, 0.2033574153488423], 'false': [nan, 0.2033574153488423], 'false,false': [nan, 0.2033574153488423], 'false,false,false': [0.22222222222222224, 0.18750000000000003]}
{'': [2.3129646346357427e-18, 0.20291645935220332], 'false': [nan, 0.20291645935220332], 'false,false': [nan, 0.20291645935220332], 'false,false,false': [nan, 0.20291645935220332]}
{'': [0.0, 0.20292160792479064], 'false': [nan, 0.20292160792479064], 'true': [0.0, nan]}
{'': [0.17272404840350472, 0.13650048682059973], 'false': [0.0, 0.1875], 'false,false': [nan, 0.1875], 'false,false,false': [nan, 0.1875]}
{'': [2.088151750902212e-05, 0.20255167421861567], 'false': [nan, 0.20255167421861567]}
{'': [0.17557732271959794, 0.03708983986815314], 'true': [nan, 0.17557732271959794], 'true,false': [2.0630240696766985e-05, 0.24518457280099398], 'false': [0.0, 0.0], 'false,false': [0.0, nan]}
{'': [1.568380507068791e-05, 0.19216975674088996], 'false': [0.24522498028454792, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;true;athleteplaysforteam(D, A).;true;true
2;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteplayssport(D, E).;true;true
6;false;teamplaysinleague(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
8;true;teamplaysinleague(B, E).;true;true
8;false;teamplaysinleague(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
9;false;teamplaysagainstteam(D, A).;true;true


Refining candidate
***************************
Model training time 1.7577543258666992
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B), teamplaysagainstteam(A, E) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( teamplaysagainstteam(A, E), athleteledsportsteam(F, E) )
%   | then return 0.2641072739982948;  // std dev = 0.911, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.7789852279274081;  // std dev = 0.073, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(D, A), teamalsoknownas(D, E) )
%   | then return 0.18323635571122193;  // std dev = 0.842, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.6610142262364298;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B), teamplaysagainstteam(A, E) )
%   | then return 0.5400858441952524;  // std dev = 0.100, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.11522010393308735;  // std dev = 0.770, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(D, A), teamalsoknownas(D, E) )
%   | then return 0.0663495690892691;  // std dev = 0.725, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.438481381683643;  // std dev = 0.081, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B), teamplaysagainstteam(A, E) )
%   | then return 0.36559757751588345;  // std dev = 0.140, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.029085250261693785;  // std dev = 0.673, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then return 0.050038397919053276;  // std dev = 0.534, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.16859558111648476;  // std dev = 0.561, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.07632597936520001;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(A, D), athleteledsportsteam(E, D) )
%   | then return -0.0256797432904409;  // std dev = 0.636, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.2934443083124515;  // std dev = 0.067, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.07256047995771012;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.021640577398539675;  // std dev = 0.662, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( teamplaysinleague(B, E) )
%   | then return -0.06823092053531495;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.2605763708768364;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.06655803268724146;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0.01733964855532385;  // std dev = 0.663, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.21356793133737928;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
Inference time using transfer learning 14.559435367584229
Refined model CLL: -0.230732


******************************************
Best model found
******************************************
Results 

CLL : -0.320563 

AUC ROC : 0.918187 

AUC PR : 0.028263 

Precision : 0.014819 

Recall : 1.0 

F1 : 0.029205 

Total Learning Time : 1.7577543258666992 

Total Inference Time : 0.6352734565734863 

Total revision time: 4.443026542663574
Best scored revision CLL: -0.230732


Results 

CLL : -0.320563 

AUC ROC : 0.918187 

AUC PR : 0.028263 

Precision : 0.014819 

Recall : 1.0 

F1 : 0.029205 

Total Learning Time : 4.57921576499939 

Total Inference Time : 0.6352734565734863 

Amount of data: 10
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.4372072219848633
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysinleague(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, A) )
%   | | then if ( teamplaysagainstteam(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( teamplaysinleague(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(F, G) )
%   | | then return 0.5324200901364473;  // std dev = 0.418, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.4237126346632367;  // std dev = 0.417, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.10159632948783627;  // std dev = 1.86e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, A) )
%   | | | then return 0.24575978699463122;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.38924251835194407;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F), athleteplayssport(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.24279129582356027;  // std dev = 1.493, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18334276221618268;  // std dev = 0.414, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then return 0.01610532128881424;  // std dev = 1.180, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysinleague(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1918879204822015;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.07707894881918169;  // std dev = 0.009, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11591683543306272;  // std dev = 0.412, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(C, D), teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return -0.07289372382694873;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.03666380549741739;  // std dev = 1.444, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.0702766915423566;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplaysforteam(G, H) )
%   | | then return 0.2700032966668878;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.06713443354272682;  // std dev = 0.008, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0.028632196282897836;  // std dev = 1.444, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else if ( teamplaysagainstteam(E, A), athleteplaysforteam(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22018147391098586;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
Inference time using transfer learning 40.26324796676636
Parameter learned model CLL:-0.357568 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(D, B)', 'false,false': 'athleteplaysforteam(E, A)', 'false,false,true': 'teamplaysagainstteam(E, A)', 'false,false,false': 'teamplaysinleague(B, F)'}, {'true': [0.0, 7, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.155, 2, 4], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.926, 1, 6]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'athleteplaysforteam(D, A)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplaysforteam(F, G)'}, {'true,true': [0.0, 4, 0], 'true,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.418, 3, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 7, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.417, 3, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'athleteplayssport(D, A)', 'false,false': 'teamplaysinleague(B, E)', 'false,false,false': 'athleteplaysforteam(F, A)'}, {'true': [1.86e-09, 7, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.155, 2, 4], 'false,false,false,false': [0.926, 1, 6]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)', 'false,false': 'athleteplayssport(E, F), athleteplayssport(G, A)', 'false,false,false': 'teamplaysinleague(B, H)'}, {'true': [0.0, 7, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.493, 3, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)'}, {'true,true': [2.63e-09, 7, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.414, 3, 10]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplayssport(D, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'teamplaysinleague(B, G)', 'false,false,false': 'athleteplaysforteam(H, A)'}, {'true': [1.18, 6, 4], 'false,true': [0.0, 3, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.926, 1, 6]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)'}, {'true': [0.009, 7, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.412, 3, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'athleteplaysforteam(C, D), teamplaysinleague(B, D)', 'true,false': 'teamplaysinleague(B, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'athleteplaysforteam(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.005, 4, 0], 'true,false,false': [1.444, 3, 7], 'false,true': [0.005, 3, 0], 'false,false,true': [0.0, 0, 3], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(E, A), athleteplaysforteam(E, F)', 'false,false,false': 'teamplaysinleague(B, G)'}, {'true': [0.008, 7, 0], 'false,true': [1.444, 3, 7], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 3]}]
{'': [-7.93016446160826e-18, 0.1775147928994082], 'false': [nan, 0.1775147928994082], 'false,false': [0.22222222222222213, 0.12244897959183662], 'false,false,true': [nan, 0.22222222222222213], 'false,false,false': [nan, 0.12244897959183662]}
{'': [-1.982541115402065e-18, 0.1745641074614658], 'false': [nan, 0.1745641074614658], 'false,false': [0.1745641074614658, nan], 'true': [0.0, 0.0]}
{'': [-1.982541115402065e-18, 0.17390815913488641], 'false': [nan, 0.17390815913488641], 'false,false': [0.17390815913488641, nan], 'true': [-1.982541115402065e-18, nan]}
{'': [0.0, 0.1736145374703915], 'false': [nan, 0.1736145374703915], 'false,false': [nan, 0.1736145374703915], 'false,false,false': [0.22222222222222224, 0.12244897959183675]}
{'': [0.0, 0.17136272224074103], 'false': [nan, 0.17136272224074103], 'false,false': [nan, 0.17136272224074103], 'false,false,false': [nan, 0.17136272224074103]}
{'': [9.912705577010326e-19, 0.17147680614655264], 'false': [nan, 0.17147680614655264], 'true': [9.912705577010326e-19, nan]}
{'': [0.13933507223323144, 0.10109875266003236], 'false': [0.0, 0.12244897959183675], 'false,false': [nan, 0.12244897959183675], 'false,false,false': [nan, 0.12244897959183675]}
{'': [1.1017324517101753e-05, 0.16990096064341292], 'false': [nan, 0.16990096064341292]}
{'': [0.15139337625824584, 0.028952000863027186], 'true': [nan, 0.15139337625824584], 'true,false': [7.39676661688695e-06, 0.20851838170299475], 'false': [8.766538212604444e-06, 0.0], 'false,false': [0.0, nan]}
{'': [8.34800133077506e-06, 0.16689755385491212], 'false': [0.20849963714372982, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;true;athleteplaysforteam(D, A).;true;true
2;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteplayssport(D, E).;true;true
6;false;teamplaysinleague(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
8;true;teamplaysinleague(B, E).;true;true
8;false;teamplaysinleague(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
9;false;teamplaysagainstteam(D, A).;true;true


Refining candidate
***************************
Model training time 104.43970108032227
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(E, B), athleteplaysinleague(E, F) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then if ( teamplaysinleague(A, E) )
%   | | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(E, B), athleteplaysinleague(E, F) )
%   | then if ( teamplaysinleague(A, F) )
%   | | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then if ( athleteplayssport(F, B), athleteplaysinleague(F, G) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( teamplaysinleague(B, H) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysagainstteam(A, I) )
%   | | then return 0.11357955884465977;  // std dev = 0.236, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(E, B), athleteplaysinleague(E, F) )
%   | then if ( teamplaysagainstteam(A, G), teamplaysinleague(G, F) )
%   | | then return 0.1828781430917481;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.07797206129540628;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( athleteplayssport(E, B), athleteplaysinleague(E, F) )
%   | | then if ( athleteledsportsteam(G, A) )
%   | | | then return 0.15218381825499994;  // std dev = 0.000647, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.16078995215946448;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.07255086036210523;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysinleague(B, H) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then if ( athleteplayssport(E, B), athleteplaysinleague(E, F) )
%   | | then if ( athleteledsportsteam(G, A) )
%   | | | then return 0.13356967713076617;  // std dev = 0.000580, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.14026199455526234;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.067820553397643;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
Inference time using transfer learning 223.07043743133545
Refined model CLL: -0.095928


******************************************
Best model found
******************************************
Results 

CLL : -0.089485 

AUC ROC : 0.994297 

AUC PR : 0.201289 

Precision : 0.194651 

Recall : 0.984962 

F1 : 0.325062 

Total Learning Time : 104.43970108032227 

Total Inference Time : 0.8760180473327637 

Total revision time: 107.5469286441803
Best scored revision CLL: -0.095928


Results 

CLL : -0.089485 

AUC ROC : 0.994297 

AUC PR : 0.201289 

Precision : 0.194651 

Recall : 0.984962 

F1 : 0.325062 

Total Learning Time : 107.68311786651611 

Total Inference Time : 0.8760180473327637 

Amount of data: 15
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.6595523357391357
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( teamplaysinleague(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, A) )
%   | | then if ( teamplaysagainstteam(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( teamplaysinleague(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(F, G) )
%   | | then return 0.5850410217135088;  // std dev = 0.371, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.46120148525988214;  // std dev = 0.371, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, A) )
%   | | | then return 0.30720143728872407;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.39056879982722764;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F), athleteplayssport(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.26233192370926983;  // std dev = 1.569, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.08518475138839687;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.199736674227695;  // std dev = 0.370, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then return 0.033284388576547794;  // std dev = 1.308, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( teamplaysinleague(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1891787965138661;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.07790129996148554;  // std dev = 0.014, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1319858739317857;  // std dev = 0.369, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(C, D), teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return -0.07373204070102443;  // std dev = 0.009, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.07883065409683263;  // std dev = 1.546, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.06999790483076737;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( athleteplaysforteam(G, H) )
%   | | then return 0.23738275916353513;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.0677607470219068;  // std dev = 0.012, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0.06334407722566186;  // std dev = 1.546, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | else if ( teamplaysagainstteam(E, A), athleteplaysforteam(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19710851418455755;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
Inference time using transfer learning 41.82015872001648
Parameter learned model CLL:-0.297373 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(D, B)', 'false,false': 'athleteplaysforteam(E, A)', 'false,false,true': 'teamplaysagainstteam(E, A)', 'false,false,false': 'teamplaysinleague(B, F)'}, {'true': [0.0, 12, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.247, 2, 7], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.943, 1, 8]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'athleteplaysforteam(D, A)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplaysforteam(F, G)'}, {'true,true': [0.0, 7, 0], 'true,false': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.371, 3, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [9.13e-09, 12, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.371, 3, 15], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'athleteplayssport(D, A)', 'false,false': 'teamplaysinleague(B, E)', 'false,false,false': 'athleteplaysforteam(F, A)'}, {'true': [0.0, 12, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.247, 2, 7], 'false,false,false,false': [0.943, 1, 8]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)', 'false,false': 'athleteplayssport(E, F), athleteplayssport(G, A)', 'false,false,false': 'teamplaysinleague(B, H)'}, {'true': [0.0, 12, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.569, 3, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)'}, {'true,true': [5.27e-09, 12, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.37, 3, 15]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplayssport(D, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'teamplaysinleague(B, G)', 'false,false,false': 'athleteplaysforteam(H, A)'}, {'true': [1.308, 9, 7], 'false,true': [0.0, 5, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.943, 1, 8]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)'}, {'true': [0.014, 12, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.369, 3, 15]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'athleteplaysforteam(C, D), teamplaysinleague(B, D)', 'true,false': 'teamplaysinleague(B, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'athleteplaysforteam(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.009, 8, 0], 'true,false,false': [1.546, 3, 12], 'false,true': [0.006, 4, 0], 'false,false,true': [0.0, 0, 3], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(E, A), athleteplaysforteam(E, F)', 'false,false,false': 'teamplaysinleague(B, G)'}, {'true': [0.012, 12, 0], 'false,true': [1.546, 3, 12], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.73e-09, 0, 3]}]
{'': [-1.1564823173178714e-17, 0.1388888888888886], 'false': [nan, 0.1388888888888886], 'false,false': [0.17283950617283939, 0.09876543209876527], 'false,false,true': [nan, 0.17283950617283939], 'false,false,false': [nan, 0.09876543209876527]}
{'': [2.3129646346357427e-18, 0.1378447118529973], 'false': [nan, 0.1378447118529973], 'false,false': [0.1378447118529973, nan], 'true': [-1.982541115402065e-18, 0.0]}
{'': [6.938893903907228e-18, 0.13761544099415082], 'false': [nan, 0.13761544099415082], 'false,false': [0.13761544099415082, nan], 'true': [6.938893903907228e-18, nan]}
{'': [0.0, 0.13753999841995895], 'false': [nan, 0.13753999841995895], 'false,false': [nan, 0.13753999841995895], 'false,false,false': [0.1728395061728395, 0.09876543209876537]}
{'': [2.3129646346357427e-18, 0.13681090220328437], 'false': [nan, 0.13681090220328437], 'false,false': [nan, 0.13681090220328437], 'false,false,false': [nan, 0.13681090220328437]}
{'': [2.3129646346357427e-18, 0.13689165776627354], 'false': [nan, 0.13689165776627354], 'true': [2.3129646346357427e-18, nan]}
{'': [0.106989322097323, 0.07997679810907629], 'false': [-6.938893903907229e-19, 0.09876543209876543], 'false,false': [nan, 0.09876543209876543], 'false,false,false': [nan, 0.09876543209876543]}
{'': [1.547836842162124e-05, 0.1361634784510336], 'false': [nan, 0.1361634784510336]}
{'': [0.1091768589628913, 0.023144638578685463], 'true': [nan, 0.1091768589628913], 'true,false': [1.0457828023158026e-05, 0.15930315666589898], 'false': [1.0457828023154557e-05, 0.0], 'false,false': [0.0, nan]}
{'': [1.16156182934056e-05, 0.13522539491270327], 'false': [0.15928831979608887, 4.625929269271485e-18], 'false,false': [nan, 4.625929269271485e-18], 'false,false,false': [nan, 4.625929269271485e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;true;athleteplaysforteam(D, A).;true;true
2;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteplayssport(D, E).;true;true
6;false;teamplaysinleague(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
8;true;teamplaysinleague(B, E).;true;true
8;false;teamplaysinleague(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
9;false;teamplaysagainstteam(D, A).;true;true


Refining candidate
***************************
Model training time 92.89288139343262
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(E, B), athleteplaysinleague(E, F) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(E, B), athleteplaysinleague(E, F) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then if ( teamplaysinleague(A, E) )
%   | | then if ( athleteplaysforteam(D, A) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(E, B), athleteplaysinleague(E, F) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysforteam(E, A), athleteplaysinleague(E, D) )
%   | | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(F, B), athleteplaysinleague(F, G) )
%   | then if ( teamplaysinleague(A, G) )
%   | | then if ( athleteplaysforteam(F, A) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then if ( athleteplayssport(F, B), athleteplaysinleague(F, G) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( teamplaysinleague(B, H) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( teamplaysagainstteam(A, I), athleteledsportsteam(J, I) )
%   | | then return 0.11357955884465977;  // std dev = 0.236, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.20975771563253556;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysforteam(E, A), athleteplaysinleague(E, D) )
%   | | then return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07324622576333704;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(F, B), athleteplaysinleague(F, G) )
%   | then if ( teamplaysagainstteam(A, H), athleteledsportsteam(F, H) )
%   | | then if ( athleteledsportsteam(I, A) )
%   | | | then return 0.17709649774527736;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1867325733227286;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.17709649774527736;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.07797206129540628;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( athleteplayssport(E, B), athleteplaysinleague(E, F) )
%   | | then if ( athleteplaysforteam(G, A) )
%   | | | then return 0.152566305718711;  // std dev = 0.001, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.15735956419917227;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.07255086036210523;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysinleague(B, H) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysforteam(E, A), athleteplaysinleague(E, D) )
%   | | then return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0641918400820262;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(F, A) )
%   | then if ( athleteplayssport(G, B), athleteplaysinleague(G, H) )
%   | | then if ( athleteplaysforteam(I, A) )
%   | | | then return 0.1338684268833286;  // std dev = 0.001, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.13760447422306826;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.067820553397643;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.13400703000801117;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
Inference time using transfer learning 200.0821177959442
Refined model CLL: -0.0955


******************************************
Best model found
******************************************
Results 

CLL : -0.089585 

AUC ROC : 0.994614 

AUC PR : 0.221552 

Precision : 0.194651 

Recall : 0.984962 

F1 : 0.325062 

Total Learning Time : 92.89288139343262 

Total Inference Time : 1.0523028373718262 

Total revision time: 96.4231927394867
Best scored revision CLL: -0.0955


Results 

CLL : -0.089585 

AUC ROC : 0.994614 

AUC PR : 0.221552 

Precision : 0.194651 

Recall : 0.984962 

F1 : 0.325062 

Total Learning Time : 96.55938196182251 

Total Inference Time : 1.0523028373718262 

Amount of data: 20
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.859283447265625
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( teamplaysinleague(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, A) )
%   | | then if ( teamplaysagainstteam(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6081489350995123;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | else if ( teamplaysinleague(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7748156017661789;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(F, G) )
%   | | then return 0.5848599276690022;  // std dev = 0.370, 24.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.11231637819360635;  // std dev = 1.39e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.4611285721013127;  // std dev = 0.369, 24.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.10159632948783631;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( athleteplayssport(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, A) )
%   | | | then return 0.2864011253011827;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return 0.4114658288626854;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926094;  // std dev = 2.28e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F), athleteplayssport(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2625870825966033;  // std dev = 1.795, 24.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.08518475138839685;  // std dev = 1.05e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20009087419377325;  // std dev = 0.367, 24.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then return 0.025443191186561225;  // std dev = 1.556, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( teamplaysinleague(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2067564802078482;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.07740696378183047;  // std dev = 0.015, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.131950928592421;  // std dev = 0.365, 24.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(C, D), teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return -0.07300976430122638;  // std dev = 0.010, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.08132514456655361;  // std dev = 1.769, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.07047057889164311;  // std dev = 0.008, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( athleteplaysforteam(G, H) )
%   | | then return 0.2255423038418639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.0673850975619731;  // std dev = 0.013, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0.06533819750840868;  // std dev = 1.769, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | else if ( teamplaysagainstteam(E, A), athleteplaysforteam(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18859008090646612;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
Inference time using transfer learning 41.358378171920776
Parameter learned model CLL:-0.292889 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(D, B)', 'false,false': 'athleteplaysforteam(E, A)', 'false,false,true': 'teamplaysagainstteam(E, A)', 'false,false,false': 'teamplaysinleague(B, F)'}, {'true': [0.0, 16, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.5, 3, 9], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.957, 1, 11]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'athleteplaysforteam(D, A)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplaysforteam(F, G)'}, {'true,true': [0.0, 9, 0], 'true,false': [0.0, 7, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.37, 4, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [1.39e-08, 16, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.369, 4, 20], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'athleteplayssport(D, A)', 'false,false': 'teamplaysinleague(B, E)', 'false,false,false': 'athleteplaysforteam(F, A)'}, {'true': [0.0, 16, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.5, 3, 9], 'false,false,false,false': [0.957, 1, 11]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)', 'false,false': 'athleteplayssport(E, F), athleteplayssport(G, A)', 'false,false,false': 'teamplaysinleague(B, H)'}, {'true': [2.28e-09, 16, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.795, 4, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)'}, {'true,true': [1.05e-08, 16, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.367, 4, 20]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplayssport(D, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'teamplaysinleague(B, G)', 'false,false,false': 'athleteplaysforteam(H, A)'}, {'true': [1.556, 12, 9], 'false,true': [0.0, 7, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.957, 1, 11]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)'}, {'true': [0.015, 16, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.365, 4, 20]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'athleteplaysforteam(C, D), teamplaysinleague(B, D)', 'true,false': 'teamplaysinleague(B, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'athleteplaysforteam(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.01, 10, 0], 'true,false,false': [1.769, 4, 16], 'false,true': [0.008, 6, 0], 'false,false,true': [0.0, 0, 4], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(E, A), athleteplaysforteam(E, F)', 'false,false,false': 'teamplaysinleague(B, G)'}, {'true': [0.013, 16, 0], 'false,true': [1.769, 4, 16], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 4]}]
{'': [-6.938893903907228e-18, 0.13888888888888906], 'false': [nan, 0.13888888888888906], 'false,false': [0.18749999999999978, 0.07638888888888877], 'false,false,true': [nan, 0.18749999999999978], 'false,false,false': [nan, 0.07638888888888877]}
{'': [3.469446951953614e-18, 0.13653965270189264], 'false': [nan, 0.13653965270189264], 'false,false': [0.13653965270189264, nan], 'true': [0.0, -1.982541115402065e-18]}
{'': [1.214306433183765e-17, 0.13602438820219523], 'false': [nan, 0.13602438820219523], 'false,false': [0.13602438820219523, nan], 'true': [1.214306433183765e-17, nan]}
{'': [-6.938893903907228e-18, 0.13585473946367616], 'false': [nan, 0.13585473946367616], 'false,false': [nan, 0.13585473946367616], 'false,false,false': [0.18749999999999997, 0.07638888888888877]}
{'': [5.204170427930421e-18, 0.13421630207312985], 'false': [nan, 0.13421630207312985], 'false,false': [nan, 0.13421630207312985], 'false,false,false': [nan, 0.13421630207312985]}
{'': [6.938893903907228e-18, 0.13439759316819047], 'false': [nan, 0.13439759316819047], 'true': [6.938893903907228e-18, nan]}
{'': [0.11528920498816603, 0.06721640398908892], 'false': [-9.912705577010326e-19, 0.07638888888888885], 'false,false': [nan, 0.07638888888888885], 'false,false,false': [nan, 0.07638888888888885]}
{'': [1.3464687334416303e-05, 0.13310973972390008], 'false': [nan, 0.13310973972390008]}
{'': [0.10962732639140843, 0.021036064596338055], 'true': [nan, 0.10962732639140843], 'true,false': [1.0070829924472419e-05, 0.15649619947374177], 'false': [1.0656962883043066e-05, 0.0], 'false,false': [0.0, nan]}
{'': [1.0253269391681703e-05, 0.1325706372041757], 'false': [0.15655292685148275, 0.0], 'false,false': [nan, 0.0], 'false,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;true;athleteplaysforteam(D, A).;true;true
2;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteplayssport(D, E).;true;true
6;false;teamplaysinleague(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
8;true;teamplaysinleague(B, E).;true;true
8;false;teamplaysinleague(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
9;false;teamplaysagainstteam(D, A).;true;true


Refining candidate
***************************
Model training time 141.4101483821869
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( athleteplayssport(E, B), athleteplaysinleague(E, F) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysinleague(E, D) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(F, B), athleteplaysinleague(F, G) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.10159632948783631;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then if ( teamplaysinleague(A, E) )
%   | | then if ( athleteledsportsteam(D, A) )
%   | | | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( teamplaysagainstteam(A, F) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysinleague(E, D) )
%   | | then return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(F, B), athleteplaysinleague(F, G) )
%   | then if ( teamplaysinleague(A, G) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysinleague(E, D) )
%   | | then if ( athleteplaysforteam(E, A) )
%   | | | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(F, B), athleteplaysinleague(F, G) )
%   | then if ( teamplaysinleague(A, G) )
%   | | then if ( athleteledsportsteam(F, A) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( teamplaysagainstteam(A, H) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then if ( athleteplayssport(F, B), athleteplaysinleague(F, G) )
%   | then return 0.2097577156325356;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( athleteledsportsteam(H, A) )
%   | | then return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysinleague(B, I) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( teamplaysagainstteam(A, J), athleteledsportsteam(K, J) )
%   | | then return 0.11357955884465977;  // std dev = 0.236, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.20975771563253554;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.07324622576333704;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then if ( teamplaysagainstteam(A, F), athleteledsportsteam(D, F) )
%   | | then if ( athleteledsportsteam(G, A) )
%   | | | then return 0.17709649774527736;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.1867325733227286;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.17709649774527736;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.07679060241238897;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysinleague(B, D) )
%   | then if ( athleteplaysforteam(E, A) )
%   | | then if ( athleteledsportsteam(E, F) )
%   | | | then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplayssport(G, B), athleteplaysinleague(G, H) )
%   | | then if ( athleteplaysforteam(I, A) )
%   | | | then return 0.15260576180203542;  // std dev = 0.001, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.15604079102617188;  // std dev = 0.014, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.07152311042806052;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysinleague(B, J) )
%   | then return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.15274385809367097;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysinleague(E, D) )
%   | | then if ( athleteplaysforteam(E, A) )
%   | | | then return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(F, A) )
%   | then if ( athleteplayssport(G, B), athleteplaysinleague(G, H) )
%   | | then if ( athleteplaysforteam(I, A) )
%   | | | then return 0.13389923092783615;  // std dev = 0.001, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.1365792624445368;  // std dev = 0.012, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.0669187310600176;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.13400703000801117;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
Inference time using transfer learning 235.32047963142395
Refined model CLL: -0.095286


******************************************
Best model found
******************************************
Results 

CLL : -0.089625 

AUC ROC : 0.994614 

AUC PR : 0.221552 

Precision : 0.194651 

Recall : 0.984962 

F1 : 0.325062 

Total Learning Time : 141.4101483821869 

Total Inference Time : 1.3862652778625488 

Total revision time: 145.5451672077179
Best scored revision CLL: -0.095286


Results 

CLL : -0.089625 

AUC ROC : 0.994614 

AUC PR : 0.221552 

Precision : 0.194651 

Recall : 0.984962 

F1 : 0.325062 

Total Learning Time : 145.6813564300537 

Total Inference Time : 1.3862652778625488 

Amount of data: 25
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 2.1304190158843994
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( teamplaysinleague(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, A) )
%   | | then if ( teamplaysagainstteam(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.643863220813798;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | else if ( teamplaysinleague(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7331489350995123;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(F, G) )
%   | | then return 0.5850927458260865;  // std dev = 0.372, 30.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.11231637819360636;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.4612221493107836;  // std dev = 0.372, 30.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.10159632948783634;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( athleteplayssport(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, A) )
%   | | | then return 0.3131421952831019;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return 0.3801338620150441;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926093;  // std dev = 2.95e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F), athleteplayssport(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2622577203831871;  // std dev = 2.031, 30.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=25 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.08518475138839683;  // std dev = 1.39e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19963469690107613;  // std dev = 0.371, 30.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=25 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then return 0.04025862956629403;  // std dev = 1.612, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.07877675473109179;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( teamplaysinleague(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1804474425791231;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.0774972896226382;  // std dev = 0.019, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1308458065240313;  // std dev = 0.370, 30.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=25 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(C, D), teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return -0.07394547719263957;  // std dev = 0.012, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.09916074711343023;  // std dev = 1.799, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.06992534830497503;  // std dev = 0.010, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( athleteplaysforteam(G, H) )
%   | | then return 0.11864780777087658;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.06745255772759821;  // std dev = 0.016, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0.07964256232241006;  // std dev = 1.799, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | else if ( teamplaysagainstteam(E, A), athleteplaysforteam(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09745249539140215;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
Inference time using transfer learning 39.53429055213928
Parameter learned model CLL:-0.301955 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(D, B)', 'false,false': 'athleteplaysforteam(E, A)', 'false,false,true': 'teamplaysagainstteam(E, A)', 'false,false,false': 'teamplaysinleague(B, F)'}, {'true': [7.45e-09, 20, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.535, 3, 11], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.323, 2, 14]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'athleteplaysforteam(D, A)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplaysforteam(F, G)'}, {'true,true': [5.27e-09, 10, 0], 'true,false': [5.27e-09, 10, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.372, 5, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [1.49e-08, 20, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.372, 5, 25], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'athleteplayssport(D, A)', 'false,false': 'teamplaysinleague(B, E)', 'false,false,false': 'athleteplaysforteam(F, A)'}, {'true': [0.0, 20, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.535, 3, 11], 'false,false,false,false': [1.323, 2, 14]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)', 'false,false': 'athleteplayssport(E, F), athleteplayssport(G, A)', 'false,false,false': 'teamplaysinleague(B, H)'}, {'true': [2.95e-09, 20, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [2.031, 5, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)'}, {'true,true': [1.39e-08, 20, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.371, 5, 25]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplayssport(D, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'teamplaysinleague(B, G)', 'false,false,false': 'athleteplaysforteam(H, A)'}, {'true': [1.612, 13, 11], 'false,true': [0.0, 10, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.323, 2, 14]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)'}, {'true': [0.019, 20, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.37, 5, 25]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'athleteplaysforteam(C, D), teamplaysinleague(B, D)', 'true,false': 'teamplaysinleague(B, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'athleteplaysforteam(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.012, 11, 0], 'true,false,false': [1.799, 4, 18], 'false,true': [0.01, 9, 0], 'false,false,true': [0.935, 1, 7], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(E, A), athleteplaysforteam(E, F)', 'false,false,false': 'teamplaysinleague(B, G)'}, {'true': [0.016, 20, 0], 'false,true': [1.799, 4, 18], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.935, 1, 7]}]
{'': [2.7755575615628915e-18, 0.13888888888888987], 'false': [nan, 0.13888888888888987], 'false,false': [0.16836734693877523, 0.10937499999999967], 'false,false,true': [nan, 0.16836734693877523], 'false,false,false': [nan, 0.10937499999999967]}
{'': [0.0, 0.1382185220296452], 'false': [nan, 0.1382185220296452], 'false,false': [0.1382185220296452, nan], 'true': [2.7755575615628915e-18, 2.7755575615628915e-18]}
{'': [1.1102230246251566e-17, 0.138070724549675], 'false': [nan, 0.138070724549675], 'false,false': [0.138070724549675, nan], 'true': [1.1102230246251566e-17, nan]}
{'': [-1.3877787807814458e-18, 0.13802174622051874], 'false': [nan, 0.13802174622051874], 'false,false': [nan, 0.13802174622051874], 'false,false,false': [0.16836734693877559, 0.10937500000000014]}
{'': [6.938893903907228e-18, 0.13755208036595987], 'false': [nan, 0.13755208036595987], 'false,false': [nan, 0.13755208036595987], 'false,false,false': [nan, 0.13755208036595987]}
{'': [9.714451465470119e-18, 0.137603413409225], 'false': [nan, 0.137603413409225], 'true': [9.714451465470119e-18, nan]}
{'': [0.1083353019391617, 0.08321235135411247], 'false': [-1.3877787807814458e-18, 0.109375], 'false,false': [nan, 0.109375], 'false,false,false': [nan, 0.109375]}
{'': [1.8071543935855443e-05, 0.13708952435642333], 'false': [nan, 0.13708952435642333]}
{'': [0.10475163581820587, 0.060335583512816], 'true': [nan, 0.10475163581820587], 'true,false': [1.2567132846222604e-05, 0.14713258186305128], 'false': [1.0950989218879962e-05, 0.10937499999999999], 'false,false': [0.10937499999999999, nan]}
{'': [1.3533414670246353e-05, 0.1371551059943676], 'false': [0.14717237772867964, 0.10937499999999999], 'false,false': [nan, 0.10937499999999999], 'false,false,false': [nan, 0.10937499999999999]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;true;athleteplaysforteam(D, A).;true;true
2;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
4;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteplayssport(D, E).;true;true
6;false;teamplaysinleague(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
8;true;teamplaysinleague(B, E).;true;true
8;false;teamplaysinleague(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true


Refining candidate
***************************
Model training time 60.928266763687134
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplayssport(E, B), athleteplaysinleague(E, F) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysinleague(E, D) )
%   | | then return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(F, B), athleteplaysinleague(F, G) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.10159632948783633;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysinleague(E, D) )
%   | | then return -0.09269127618926098;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(F, B), athleteplaysinleague(F, G) )
%   | then if ( teamplaysinleague(A, G) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.3207118471601497;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysinleague(E, D) )
%   | | then if ( athleteplaysforteam(E, A) )
%   | | | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(F, B), athleteplaysinleague(F, G) )
%   | then return 0.25517224256948956;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then if ( athleteplayssport(F, B), athleteplaysinleague(F, G) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.07877675473109177;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( teamplaysinleague(B, H) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( athleteplayssport(I, B), athleteledsportsteam(I, J) )
%   | | then return 0.20975771563253562;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.017401402056783994;  // std dev = 0.236, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.07324622576333704;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then if ( teamalsoknownas(A, F), teamplaysagainstteam(A, G) )
%   | | then return 0.18454433242865237;  // std dev = 0.026, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.17709649774527741;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.07596728903322147;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysinleague(B, D) )
%   | then if ( athleteplaysforteam(E, A) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplayssport(F, B), athleteplaysinleague(F, G) )
%   | | then if ( athleteledsportsteam(F, H), teamplaysinleague(A, I) )
%   | | | then return 0.15261567714668825;  // std dev = 0.001, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.16092139869504615;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.06984780911215845;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysinleague(B, J) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( teamplaysinleague(A, K), athleteplayssport(L, B) )
%   | | then return 0.15274385809367075;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.09590038043624469;  // std dev = 0.197, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplaysinleague(E, D) )
%   | | then if ( athleteplaysforteam(E, A) )
%   | | | then return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.06419184008202619;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(F, B), athleteplaysinleague(F, G) )
%   | then if ( teamplaysinleague(A, H) )
%   | | then if ( teamalsoknownas(A, I), teamplaysinleague(I, H) )
%   | | | then return 0.13284126448493724;  // std dev = 0.000780, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.13401840576299123;  // std dev = 2.60e-05, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.14223216083339255;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.06866138516036477;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning 200.0863904953003
Refined model CLL: -0.095751


******************************************
Best model found
******************************************
Results 

CLL : -0.085061 

AUC ROC : 0.994674 

AUC PR : 0.201974 

Precision : 0.194651 

Recall : 0.984962 

F1 : 0.325062 

Total Learning Time : 60.928266763687134 

Total Inference Time : 1.196528434753418 

Total revision time: 65.20544576644897
Best scored revision CLL: -0.095751


Results 

CLL : -0.085061 

AUC ROC : 0.994674 

AUC PR : 0.201974 

Precision : 0.194651 

Recall : 0.984962 

F1 : 0.325062 

Total Learning Time : 65.34163498878479 

Total Inference Time : 1.196528434753418 


 Starting fold 3 of 3 folds 

Start transfer learning experiment

Target train facts examples: 9691
Target train pos examples: 266
Target train neg examples: 106662

Target test facts examples: 9691
Target test pos examples: 131
Target test neg examples: 53329

Amount of data: 5
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.2617719173431396
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysinleague(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, A) )
%   | | then if ( teamplaysagainstteam(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamplaysinleague(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(F, G) )
%   | | then return 0.48476925425362916;  // std dev = 0.429, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.38958766240197146;  // std dev = 0.424, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, A) )
%   | | | then return 0.5168671344175766;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.13818476211075048;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926094;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F), athleteplayssport(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22733779147034192;  // std dev = 1.067, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1731821799834685;  // std dev = 0.404, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then return 0.29945531258879166;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysinleague(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.007196856595821824;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10620230743638545;  // std dev = 0.395, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(C, D), teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12458854079867979;  // std dev = 0.756, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplaysforteam(G, H) )
%   | | then return -0.021139827508922848;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0.09974812763573901;  // std dev = 0.760, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( teamplaysagainstteam(E, A), athleteplaysforteam(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.01586215585155759;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
Inference time using transfer learning 47.53579258918762
Parameter learned model CLL:-0.35993 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(D, B)', 'false,false': 'athleteplaysforteam(E, A)', 'false,false,true': 'teamplaysagainstteam(E, A)', 'false,false,false': 'teamplaysinleague(B, F)'}, {'true': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [2.11e-08, 0, 3], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.0, 2, 2]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'athleteplaysforteam(D, A)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplaysforteam(F, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.429, 2, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [2.63e-09, 3, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.424, 2, 5], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'athleteplayssport(D, A)', 'false,false': 'teamplaysinleague(B, E)', 'false,false,false': 'athleteplaysforteam(F, A)'}, {'true': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 3], 'false,false,false,false': [1.0, 2, 2]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)', 'false,false': 'athleteplayssport(E, F), athleteplayssport(G, A)', 'false,false,false': 'teamplaysinleague(B, H)'}, {'true': [1.32e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.067, 2, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)'}, {'true,true': [0.0, 3, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.404, 2, 5]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplayssport(D, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'teamplaysinleague(B, G)', 'false,false,false': 'athleteplaysforteam(H, A)'}, {'true': [0.0, 0, 3], 'false,true': [0.0, 3, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.0, 2, 2]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)'}, {'true': [1.86e-09, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.395, 2, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'athleteplaysforteam(C, D), teamplaysinleague(B, D)', 'true,false': 'teamplaysinleague(B, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'athleteplaysforteam(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.756, 1, 4], 'false,true': [0.0, 3, 0], 'false,false,true': [0.707, 1, 1], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(E, A), athleteplaysforteam(E, F)', 'false,false,false': 'teamplaysinleague(B, G)'}, {'true': [1.32e-09, 3, 0], 'false,true': [0.76, 1, 4], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.707, 1, 1]}]
{'': [0.0, 0.20408163265306106], 'false': [nan, 0.20408163265306106], 'false,false': [1.4802973661668753e-16, 0.25], 'false,false,false': [nan, 0.25], 'false,false,true': [nan, 1.4802973661668753e-16]}
{'': [0.0, 0.18417167417898567], 'false': [nan, 0.18417167417898567], 'false,false': [0.18417167417898567, nan], 'true': [nan, 0.0]}
{'': [2.3129646346357427e-18, 0.1800649723369336], 'false': [nan, 0.1800649723369336], 'false,false': [0.1800649723369336, nan], 'true': [2.3129646346357427e-18, nan]}
{'': [-1.1564823173178713e-18, 0.1779755932479818], 'false': [nan, 0.1779755932479818], 'false,false': [nan, 0.1779755932479818], 'false,false,false': [0.0, 0.25]}
{'': [2.3129646346357427e-18, 0.16258197638830335], 'false': [nan, 0.16258197638830335], 'false,false': [nan, 0.16258197638830335], 'false,false,false': [nan, 0.16258197638830335]}
{'': [0.0, 0.16298332382630573], 'false': [nan, 0.16298332382630573], 'true': [0.0, nan]}
{'': [0.0, 0.1446672967782672], 'false': [0.0, 0.25], 'false,false': [nan, 0.25], 'false,false,false': [nan, 0.25]}
{'': [1.1564823173178713e-18, 0.15640583959247426], 'false': [nan, 0.15640583959247426]}
{'': [0.11415783821973084, 0.10053665790083954], 'true': [nan, 0.11415783821973084], 'true,false': [nan, 0.11415783821973084], 'false': [-5.782411586589357e-19, 0.25], 'false,false': [0.25, nan]}
{'': [5.782411586589357e-19, 0.15656617294532982], 'false': [0.11537385993831513, 0.25], 'false,false': [nan, 0.25], 'false,false,false': [nan, 0.25]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
0;false;athleteplaysforteam(E, A).;true;true
1;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
2;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
3;false;athleteplaysforteam(F, A).;true;true
4;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteplayssport(D, E).;true;true
6;false;teamplaysinleague(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
8;false;teamplaysinleague(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true


Refining candidate
***************************
Model training time 1.8206219673156738
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B), teamplaysagainstteam(A, E) )
%   | then return 0.7417903431046247;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.14207446911896834;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B), teamplaysinleague(A, E) )
%   | then return 0.6088361157077212;  // std dev = 0.204, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.07993199966316884;  // std dev = 0.720, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.39920579503689585;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2151240831389608;  // std dev = 0.886, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B), teamplaysinleague(A, E) )
%   | then return 0.3854305172393445;  // std dev = 0.267, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.021286944037428406;  // std dev = 0.709, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B), teamplaysagainstteam(A, E) )
%   | then return 0.3231793456325686;  // std dev = 0.314, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.00728031377115812;  // std dev = 0.649, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then return 0.17996405298388707;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.12449623354128826;  // std dev = 0.791, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B), teamplaysinleague(A, E) )
%   | then return 0.2395100160374811;  // std dev = 0.293, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.036022633945736425;  // std dev = 0.637, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.11653372989149466;  // std dev = 0.553, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( teamplaysinleague(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.07260774472230888;  // std dev = 0.511, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(D, B), teamplaysagainstteam(A, E) )
%   | then return 0.20132889433938403;  // std dev = 0.303, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.06691632682995645;  // std dev = 0.592, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
Inference time using transfer learning 14.863282442092896
Refined model CLL: -0.228524


******************************************
Best model found
******************************************
Results 

CLL : -0.194984 

AUC ROC : 0.956321 

AUC PR : 0.102014 

Precision : 0.12252 

Recall : 0.801527 

F1 : 0.212551 

Total Learning Time : 1.8206219673156738 

Total Inference Time : 0.73565673828125 

Total revision time: 4.560161113739014
Best scored revision CLL: -0.228524


Results 

CLL : -0.194984 

AUC ROC : 0.956321 

AUC PR : 0.102014 

Precision : 0.12252 

Recall : 0.801527 

F1 : 0.212551 

Total Learning Time : 4.696350336074829 

Total Inference Time : 0.73565673828125 

Amount of data: 10
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(A, D).;true;true
0;true;economicsectorcompany(B, C).;false;true
0;true,false;economicsectorcompany(B, D).;false;false
0;false;companyceo(A, E).;true;true
0;false,true;bankchiefexecutiveceo(A, E).;true;false
0;false,true,true;bankboughtbank(F, A), bankboughtbank(G, F).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,false,false;acquired(I, A), economicsectorcompany(B, I).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyceo(A, D).;false;false
1;false;acquired(A, E), economicsectorcompany(B, E).;true;true
1;false,true;companyalsoknownas(A, F).;false;true
1;false,true,false;companyceo(A, G).;false;false
1;false,false;acquired(H, A), companyceo(H, I).;true;true
1;false,false,true;companyalsoknownas(H, J), acquired(K, J).;false;false
1;false,false,false;companyalsoknownas(A, L).;false;false
2;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
2;true;acquired(A, D).;true;false
2;true,true;economicsectorcompany(B, D).;false;false
2;false;acquired(A, E), economicsectorcompany(B, E).;true;true
2;false,true;companyceo(A, F).;false;false
2;false,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;true;true
2;false,false,true;acquired(A, I), acquired(G, J).;false;false
2;false,false,false;acquired(K, A), countryhascompanyoffice(L, A).;false;false
3;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
3;true;acquired(A, D).;false;false
3;false;countryhascompanyoffice(E, A).;true;true
3;false,true;acquired(A, F), economicsectorcompany(B, F).;false;true
3;false,true,false;companyalsoknownas(A, G), countryhascompanyoffice(H, G).;false;false
3;false,false;cityhascompanyoffice(I, A), acquired(A, J).;true;true
3;false,false,true;acquired(K, A), economicsectorcompany(B, K).;false;false
3;false,false,false;companyceo(A, L).;false;false
4;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
4;true;acquired(A, D).;false;false
4;false;companyalsoknownas(A, E).;true;true
4;false,true;acquired(E, F), economicsectorcompany(B, F).;false;true
4;false,true,false;countryhascompanyoffice(G, E), countryhascompanyoffice(H, A).;false;false
4;false,false;acquired(I, A).;true;true
4;false,false,true;economicsectorcompany(B, I).;false;false
4;false,false,false;acquired(A, J), companyceo(A, K).;false;false
5;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;true;true
5;true;acquired(A, D), economicsectorcompany(B, D).;false;false
5;false;cityhascompanyoffice(E, A).;true;true
5;false,true;cityhascompanyoffice(E, F), economicsectorcompany(B, F).;true;false
5;false,true,true;acquired(G, A), companyceo(F, H).;false;false
5;false,false;companyalsoknownas(A, I), cityhascompanyoffice(J, I).;true;true
5;false,false,true;acquired(K, A).;false;false
5;false,false,false;acquired(L, A), acquired(M, L).;false;false
6;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), acquired(D, C).;true;true
6;true;companyceo(A, E), countryhascompanyoffice(F, D).;false;true
6;true,false;economicsectorcompany(B, C).;true;false
6;true,false,true;companyalsoknownas(D, G).;false;false
6;false;acquired(H, A), economicsectorcompany(B, H).;false;true
6;false,false;companyalsoknownas(A, I), companyceo(A, J).;true;true
6;false,false,true;acquired(A, K), companyceo(K, L).;false;false
6;false,false,false;acquired(M, A), companyceo(M, N).;false;false
7;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
7;false;acquired(D, A), economicsectorcompany(B, D).;true;true
7;false,true;companyceo(A, E).;true;true
7;false,true,true;companyceo(D, F), bankchiefexecutiveceo(G, F).;false;false
7;false,true,false;cityhascompanyoffice(H, A).;false;false
7;false,false;acquired(I, A).;true;true
7;false,false,true;cityhascompanyoffice(J, A), cityhascompanyoffice(K, I).;false;false
7;false,false,false;companyalsoknownas(A, L).;false;false
8;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), bankchiefexecutiveceo(A, D).;true;true
8;true;companyceo(E, D), economicsectorcompany(B, E).;false;true
8;true,false;cityhascompanyoffice(C, F), economicsectorcompany(B, F).;false;false
8;false;cityhascompanyoffice(G, A).;true;true
8;false,true;cityhascompanyoffice(G, H), economicsectorcompany(B, H).;false;false
8;false,false;companyalsoknownas(A, I).;true;true
8;false,false,true;acquired(J, A), companyceo(J, K).;false;false
8;false,false,false;acquired(A, L).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true;economicsectorcompany(B, C).;false;true
9;true,false;cityhascompanyoffice(D, C), cityhascompanyoffice(D, A).;false;true
9;true,false,false;acquired(C, E), bankchiefexecutiveceo(A, F).;false;false
9;false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
9;false,true;economicsectorcompany(B, H).;false;false
9;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
9;false,false,false;companyceo(A, J), companyalsoknownas(A, K).;false;false


Model training time 1.4875032901763916
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( teamplaysinleague(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(E, A) )
%   | | then if ( teamplaysagainstteam(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( teamplaysinleague(B, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41370449065506787;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(F, G) )
%   | | then return 0.485526336749876;  // std dev = 0.435, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(F, G) )
%   | | then return 0.3900483978971045;  // std dev = 0.431, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.10159632948783627;  // std dev = 1.32e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(F, A) )
%   | | | then return 0.5165630201799668;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1805309812331821;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(E, F), athleteplayssport(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22733664484008628;  // std dev = 1.558, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(B, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17251254059339255;  // std dev = 0.417, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then return 0.19135260960912268;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( teamplaysinleague(B, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.038147746176820534;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.0801077803864255;  // std dev = 0.024, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1115702184746873;  // std dev = 0.414, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(C, D), teamplaysinleague(B, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(B, E) )
%   | | then return -0.08082205770221808;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.14265270224801876;  // std dev = 1.138, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( teamplaysinleague(B, F) )
%   | then return -0.06799088302300607;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplaysforteam(G, H) )
%   | | then return -0.054625437427729406;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.0694152723516474;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0.1126779500041862;  // std dev = 1.142, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else if ( teamplaysagainstteam(E, A), athleteplaysforteam(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(B, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.041095067536680685;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
Inference time using transfer learning 40.77508783340454
Parameter learned model CLL:-0.382293 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(D, B)', 'false,false': 'athleteplaysforteam(E, A)', 'false,false,true': 'teamplaysagainstteam(E, A)', 'false,false,false': 'teamplaysinleague(B, F)'}, {'true': [0.0, 6, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 5], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.491, 4, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'athleteplaysforteam(D, A)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplaysforteam(F, G)'}, {'true,true': [0.0, 2, 0], 'true,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.435, 4, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)', 'false,false': 'athleteplayssport(F, G)'}, {'true,true': [0.0, 6, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.431, 4, 10], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'athleteplayssport(D, A)', 'false,false': 'teamplaysinleague(B, E)', 'false,false,false': 'athleteplaysforteam(F, A)'}, {'true': [1.32e-09, 6, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 5], 'false,false,false,false': [1.491, 4, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)', 'false,false': 'athleteplayssport(E, F), athleteplayssport(G, A)', 'false,false,false': 'teamplaysinleague(B, H)'}, {'true': [0.0, 6, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.558, 4, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'true': 'teamplaysinleague(B, D)', 'false': 'teamplaysinleague(B, E)'}, {'true,true': [2.63e-09, 6, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.417, 4, 10]}]
['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplayssport(D, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'teamplaysinleague(B, G)', 'false,false,false': 'athleteplaysforteam(H, A)'}, {'true': [0.452, 2, 5], 'false,true': [0.0, 4, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.491, 4, 5]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysinleague(B, D)'}, {'true': [0.024, 6, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.414, 4, 10]}]
['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'athleteplaysforteam(C, D), teamplaysinleague(B, D)', 'true,false': 'teamplaysinleague(B, E)', 'false': 'teamplaysinleague(B, F)', 'false,false': 'athleteplaysforteam(G, H)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.016, 3, 0], 'true,false,false': [1.138, 2, 8], 'false,true': [0.0, 3, 0], 'false,false,true': [1.0, 2, 2], 'false,false,false': [0.0, 0, 0]}]
['teamplayssport(A, B)', {'': 'teamplaysinleague(B, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(E, A), athleteplaysforteam(E, F)', 'false,false,false': 'teamplaysinleague(B, G)'}, {'true': [0.02, 6, 0], 'false,true': [1.142, 2, 8], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.0, 2, 2]}]
{'': [-6.938893903907228e-18, 0.20408163265306115], 'false': [nan, 0.20408163265306115], 'false,false': [0.0, 0.2469135802469134], 'false,false,false': [nan, 0.2469135802469134], 'false,false,true': [nan, 0.0]}
{'': [-2.3129646346357427e-18, 0.1891363999061541], 'false': [nan, 0.1891363999061541], 'false,false': [0.1891363999061541, nan], 'true': [0.0, 0.0]}
{'': [0.0, 0.18613323686335032], 'false': [nan, 0.18613323686335032], 'false,false': [0.18613323686335032, nan], 'true': [0.0, nan]}
{'': [0.0, 0.18465510211762298], 'false': [nan, 0.18465510211762298], 'false,false': [nan, 0.18465510211762298], 'false,false,false': [0.0, 0.24691358024691348]}
{'': [1.1564823173178713e-18, 0.17330223265705533], 'false': [nan, 0.17330223265705533], 'false,false': [nan, 0.17330223265705533], 'false,false,false': [nan, 0.17330223265705533]}
{'': [1.1564823173178713e-18, 0.1737233400054299], 'false': [nan, 0.1737233400054299], 'true': [1.1564823173178713e-18, nan]}
{'': [0.02918794939153934, 0.17385240881503672], 'false': [0.0, 0.2469135802469136], 'false,false': [nan, 0.2469135802469136], 'false,false,false': [nan, 0.2469135802469136]}
{'': [9.416186369125164e-05, 0.17111254891185032], 'false': [nan, 0.17111254891185032]}
{'': [0.10847120858601354, 0.14290089023737804], 'false': [-5.782411586589357e-19, 0.25], 'false,false': [0.25, nan], 'true': [nan, 0.10847120858601354], 'true,false': [8.231952182422471e-05, 0.1294630364587743]}
{'': [6.73268438881296e-05, 0.16943061865890674], 'false': [0.13044682585857695, 0.25], 'false,false': [nan, 0.25], 'false,false,false': [nan, 0.25]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
0;false;athleteplaysforteam(E, A).;true;true
1;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
1;true;athleteplaysforteam(D, A).;true;true
2;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
3;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
3;false;athleteplaysforteam(F, A).;true;true
4;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
5;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteplayssport(D, E).;true;true
6;false;teamplaysinleague(B, F).;true;true
7;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
8;true;teamplaysinleague(B, E).;true;true
8;false;teamplaysinleague(B, F).;true;true
9;;teamplayssport(A, B) :- teamplaysinleague(B, C).;true;true


Refining candidate
***************************
Model training time 31.609323740005493
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteplaysforteam(D, A) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamplaysinleague(A, E) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(D, E) )
%   then if ( athleteledsportsteam(F, A), athleteplayssport(G, B) )
%   | then return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.01740140205678402;  // std dev = 0.236, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamplaysinleague(B, H) )
%   | then return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( athleteplayssport(I, B) )
%   | | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.07551377848824073;  // std dev = 0.008, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteplaysforteam(E, A) )
%   | | then return 0.18305476549197736;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.17709649774527736;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysinleague(B, D) )
%   | then return -0.07253511036537444;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysagainstteam(A, E), teamalsoknownas(E, F) )
%   | | then if ( athleteledsportsteam(G, A) )
%   | | | then return 0.15197437413892434;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.16131461110333453;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.005296634135088509;  // std dev = 0.181, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamplaysinleague(B, H) )
%   | then return -0.06828257469272618;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.04215844012473413;  // std dev = 0.221, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(B, C) )
%   then return -0.06593458906853132;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(D, B) )
%   | then if ( athleteledsportsteam(D, E), teamplaysagainstteam(A, E) )
%   | | then return 0.13332791857190446;  // std dev = 0.000349, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.14716570556734043;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.06996456390301038;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
